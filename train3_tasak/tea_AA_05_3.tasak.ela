kirjak	tea_AA_05_3.tasak.ela	TOIMETAJALT <arv>-<arv> Enterprise Unified Process ( EUP ) on Rational Unified Process i ( RUP ) edasiarendus . RUP on kahedimensiooniline tarkvaraarendusprotsesside karkass . RUPi ajalise dimensiooni ( RUPi dünaamilise struktuuri ) moodustavad neli faasi : algfaas ( Inception ) , viimistlusfaas ( Elaboration ) , kodeerimisfaas ( Construction ) ja siirdefaas ( Transition ) . RUPi teise dimensiooni ( RUPi staatiline struktuur ) moodustavad distsipliinid ( disciplin es ) , mis on sisuliselt kõrgtaseme töövood ( Business Modelling , Requirements Management , Analysis a nd Design , Implementation , Deployment , Test , Project Management , Change Management , Environment ) . <arv> RUPi puuduseks on tarkvara elutsüklist vaid arenduse ( väljatöötluse ) käsitlemine . Tarkvara elutsükli olulisi faase : - tootmisfaasi ja lõpetamisfaasi - pole üldse käsitletud . Samal ajal sõltub tarkvaratoote arendus toote järgnevatest elutsükli faasidest ( näiteks : kes ja kuidas täiendavad toodet ) . RUPi enda arendamisega oli Rationalil piisavalt tegemist ja nii polnud mahti tarkvara elutsükli teisi faaside käsitleda . Aastal <arv> versiooniga <arv>.<arv> RUP stabiliseerus , nüüd oli võimalik asuda tegelema RUPi laiendamise/täiendamisega . Lühidalt EUP tekkeloost . <arv> : Objectory v<arv>.<arv> , määratlenud Ivar Jacobsoni firma Objectory AB . Objectory protsess määratleb tuuma , mille edasiarendusteks on RUP ja EUP . <arv> : RUPi versioon <arv>.<arv> , mis tähistab RUPi väljakujunemist . <arv> : RUP <arv> versioon - oluline on äriprotsesside tehnikate ( Business Engineering Techniques ) lisamine . <arv> : IBM ostab Rational Corporation i . Jaanuar <arv> : EUP v<arv> väljalase . On määratletud uus faas : toote lõpetamisfaas ( Retirement Phase ) , esialgset infrastruktuuri haldamise distsipliini ( Infrastructure Management Discipline ) asendab seitse detailset distsipliini . Kevad <arv> : RUP v<arv> väljalase . Põhiline täiendus : lisatud on PriceWaterhouseCoopersi projektijuhtimise praktikad ( PWC's Summit Project Management Practices ) . EUP laiendab RUPi kahe uue faasiga : tootmisfaas ( Production ) ja lõpetamisfaas ( Retirement ) . EUP lisab RUPile : operatsioonide ja toe distsipliini ( Operations and Support discipline ) ja seitse ettevõtte haldamise distsipliini : ettevõtte ärimodelleerimine ( Enterprise Business Modeling ) ; portfelli haldus ( Portfolio Management ) ; ettevõtte arhitektuur ( Enterprise Architecture ) ; strateegiline taaskastus ( Strategic Reuse ) ; inimvara haldus ( People Management ) ; ettevõtte administreerimine ( Enterprise Administration ) ; tarkvaraprotsesside parendamine ( Software Process Improvement ) . EUP on “ üsna värske ” RUPi laiendus , edaspidistes numbrites püüame anda EUPst põhjalikuma ülevaate .  <arv> Vt . P. Leis . Agiilmetoodikad , A &amp; A <arv> , <arv> ja T. Robal . Veebirakenduste loomine karkassmetoodika Rational Unified Process abil , A &amp; A <arv> , <arv>. Vello Kukk  Vello Kukk - sündinud <arv>. mail <arv> Tallinnas . Lõpetanud <arv> elektriinsenerina Tallinna Polütehnilise Instituudi ja <arv> Tartu Riikliku Ülikooli matemaatikuna , <arv>. aastast tehnikakandidaat ( ENSV Teaduste Akedeemia ) . Töö Tallin- na Polütehnilises Instituudis ja Tallinna Tehnikaülikoolis alates aastast <arv> - assistendi , vanemõpetaja , dotsendi ja professorina . Täiendanud Bratislavas ( <arv>-<arv> ) , Helsingis ( <arv> ) , Budapestis ( <arv> ) , Lyngbys ( <arv> ) , Kaiserslauternis ( <arv> ) , Darmstadtis ( <arv> ) . On avaldanud publikatsioone , esinenud konverentsidel ja osalenud programmikomiteedes . Aastatel <arv>-<arv> IEEE Chapter ( Estonia ) esimees . Hariduses on tuuline , see on selge . Eestis räägitava-kirjutatava põhjal võib arvata , et tuulisem on põhi- ja keskhariduses ning kõrghariduses on tuuline kõrgel , seal kuskil rektorite tasemel . Tegelikult on tuuline terves haridussüsteemis ja paraku mitte ainult Eestis , puhub terves maailmas ja suurim oht , mis meidki valitseb , tuleb sellest , et koolitusturg avaneb . Kõrghariduses , mis on niigi oluliselt rahvusvaheline olnud , käib intensiivne turgude vallutamine ja see on saanud võimalikuks tänu infotehnoloogia arengule . Seda toetab juba aastaid teada olnud mittevastavus koolis õpe- tatava ja elus vajaliku vahel , mis on üks haridussüsteemi jäikuse ja konservatiivsuse tagajärgi . Kuna ülikool ei suuda piisavalt kiiresti reageerida muutustele ühiskonnas ja eriti tehnoloogias , kipub suur osa traditsiooniliselt nende pärusmaaks olnust ülikoolid maha jätma . Rahvusvahelistel konverentsidel on delegaate näitustel oluliselt rohkem kui klassikalistel sessioonidel ; koolitus , eriti täiendõpe , on juba valdavalt libisenud firmade kätte ; praktikul on raske saada ülikoolilt talle vajalikku teavet ; ülikool pole ka tööpakkujana eriti konkurentsivõimeline : sealsed infotehnoloogilised lahendused sobivad pigem eelmisse sajandisse . Et allakirjutanu on viimastel aastatel olnud tihedalt seotud e-õppe arendusega , siis järgnevas püüan välja tuua need aspektid , mis ilmnenud just seoses selle tegevusega . Tunnistan , et mitmed probleemid on tänu e-õppele palju teravamalt esile tulnud , aga samal ajal on hakanud paistma ka mõeldavad lahendused , kuigi viimased ei pruugi ülikooli traditsioonilise töökorral- duse jaoks küll meeldivad olla . Ruumi kokkuhoiu eesmärgil ei püüa ma pikki seletusi tuua ning pigem kasutan teravaid väljendeid . Paradigma muutus . Meie põlvkond on ilmselt harjunud õppimises pikka aega valitsenud arusaamisega , et kõigepealt omandatakse teooria ja siis tehakse laboris katseid teooria kinnitamiseks . See lähenemine on vaid pool sajandit vana - ka niisuguse puhtteoreetilise aine nagu matemaatika klassikalise õpiku peatükid algasid vanasti ikka mingi praktilise probleemi kirjeldusega ja mitte lausega : “ olgu meil maatriks ” . Juba eelmise sajandi lõpul hakati eelkõige USA ülikoolides ehitama suuri integreeritud laboreid , kuhu värsked tudengid saadeti tegelema täiesti kaasaegsete seadmetega ( ilma mingi teoreetilise ettevalmistuseta ) ja need sammud on ennast õigustanud . Seetõttu on esmane praktiline kogemus ( labor ) ja teooria peab seletama , miks tegelikkus selline on . Siit ka erinevate distsipliinide integreerumine , millest nii palju viimastel aastakümnetel räägitud , kuid seni vähe saavutatud . Tõsi , labor on palju kallim kui kriit ja tahvel , aga teist teed ei ole . Aeg ja koht . Õppimine auditooriumis loenguid kuulates ei ole eriti efektiivne , vaid pigem oludest tingitud paratamatus - sobivate kommunikatsioonivahendite puudumisel polnud lihtsalt muud võimalust , kui õppurid kokku tuua samasse ruumi . Olles küll efektiivne õppejõu seisukohast , pole selline lähemisviis seda õppija seisukohast - olla kindlas kohas ja kindlal ajal on kulukas . Käesoleval sajandil pole selleks mingit vajadust - kommunikatsioonivahendid on tasemel , et õppur ei pea praktiliselt kodust ( või kodulähedasest õpperuumist ) lahkuma , selleks , et traditsioonilises õppes osaleda . Ka ajafaktor pole enam oluline - info salvestamistehnika on niivõrd arenenud , et õppimiseks on mugavam kasutada nt loengu ( või muu sarnase esituse ) videosalvestust . Andes õppurile aja- ja kohavabaduse , kaovad ka kitsendused , mis on seotud näiteks tudengi töötamisega ( viimasel ajal on see lausa massiliseks muutunud ) . Aktiivne õ ppimine . Tänu Internetile on praegu tudengil võimalik mitte ainult kasutada passiivseid materjale ( tekstid , pildid , videod jne ) , vaid tegeleda ülesannete ning probleemide lahendamisega suvalisel ajal , teha seda ka rühmas , treenida ja testida iseennast , tegelikult teha just seda , mida konstruktivistid soovitavad - luua iseenda jaoks teadmisi . Ja teha seda sealjuures mitte iga hinna eest samas tempos mingi formaalselt moodustatud rühmaga , vaid just omaenda individuaalseid iseärasusi , ettevalmistust ja käitumisviise kasutades . Tudengil on võimalus suhelda nii õppejõu kui kaasõppuritega enneolematult paindlikul viisil . Ja mis eriti oluline - see keskkond arendab ennast ise , sest kõik tekkinud küsimused-vastused on salvestatavad , mis võimaldab automaatseid vastuseid ning andmepanga pidevat täienemist . Kindlad rü hmad . Õppurite koondamine mingitesse kindlatesse õpperühmadesse ( klassidesse ) on samuti ratsionaalne vaid kommunikatsioonivaeses keskkonnas . Hädad , mis sellega kaasnevad , on aga äärmiselt tõsised - see peaks olema tuttav igale õpetajale . Ei ole võimalik leida tegevust , mis sobiks ühtviisi kõigile rühmaliikmetele . Enamgi , allkirjutanu on läbi aastate kogenud seda , et näiteks kõike rahuldavat tegevust harjutustunnis ei ole üldse võimalik leida - ikka on see osale liiga raske , osale liiga kerge . Et rühmade moodustamisega kipub kaasnema ka kindla raamistiku ja ajakava pruukimine , siis osutub selline õppimisviis tegelikult äärmiselt ebaefektiivseks . Tunniplaan . Tegevuste jaoks pikemat aega kehtiva tunniplaani koostamine on sünkroniseerimise mõttes kindlasti otstarbekas . Aga kui sellega seotakse rangelt õppetegevus , mistõttu kõik õppurid peavad jälle ühte sammu marssima , siis on see pehmelt öeldes ebaotstarbekas . Õppurite omadused on niivõrd erinevad - autori kogemuste põhjal erineb sama aine läbimiseks vajalik aeg kuni <arv> korda ( teatud juhtudel kindlasti rohkemgi ) . Seega on kõigi surumine samadesse raamidesse mitte ainult ebaefektiivne , vaid isegi kahjulik - tähtaegadesse mittemahtumine või kaaslastest mahajäämine viib õppimise katkestamiseni . Kahjulik on see ka neile , kes suudavad aine kiiremini läbida - nad ei saa vaba aega mõistlikult kasutada . Miks siis kasutatakse nii kindlaid ajavahemikke ( nt semestreid , veerandeid ) ? Ainuke põhjus on ikka tehnoloogiliste vahendite piiratus - aga mitte enam . Paraku on sissetöötatud mehhanismide muutmine valuline . Õ ppevahendid . Üsna levinud on arvamus , et e-õpe tähendab materjalide ( loengutekstide , slaidide , skeemide ... ) publitseerimist Internetis . Kindlasti on see kasulik tegevus , aga need on ju mingil viisil ( nt raamatutena ) niigi olemas , kuigi Internet lisab võimaluse neile kergemini ligi pääseda . Tegelik tulu , mida Internet õppurile annab , on võimalus aktiivselt õppida . Klassikaline ( paberkandjal ) suhtlus annab nii õppurile kui ka õpetajale üsna vähemahuka suhtluskanali . Pealegi on enamikule inimestele tunduvalt meeldivam midagi teha , kui lihtsalt pealt vaadata , lugeda , pähe õppida . Tänapäevane infotehnoloogia võimaldab konstrueerida paindlikke , adaptiivseid , atraktiivseid ja automatiseeritud õpikeskkondi . Üllatav on sealjuures see , et negatiivne reaktsioon hingetu Interneti poolt ei mõju õppijale kaugeltki nii halvasti kui õpetaja poolt . Autor on isegi imestanud , kui rahulikuks jääb õpilane näiteks vigaseid lahendusi üle vaadates . Tundub , et saavutatakse just see soovitav situatsioon , kus nii õpilane kui õpetaja oleks justkui ühel pool ja teisel pool on teadmised ning oskused , millest tuleb jagu saada . Ilmselt ei ole interaktiivsete vahendite loomine nii lihtne , kui lihtsalt dokumentide Interneti seadmine . Aga saadav efekt on vaeva väärt - lisaks kõigele muule koguneb äärmiselt väärtuslik andmepagas , mida saab kasutada eksimuste põhjuste väljaselgitamiseks ning seeläbi vahendite pidevaks arendamiseks . Seepärast vist peakski uue aine e-õppesse viimine algama just interaktiivsetest vahenditest mõtlemise ja ettevalmistamisega , mitte niivõrd Interneti-õpiku koostamisega . Ranged tä htajad . Õppeülesannete täitmiseks rangete tähtaegade kehtestamine on läbi aegade olnud üks tavalisemaid võtteid õppuri distsiplineerimiseks . Siiski , kõigile õppejõududele on tuttav nähtus , et märgatav osa õppureid ei esita oma tööd ( aruannet ) tähtajaks . Tegemist on ilmselt inimese ürgse omadusega , millesse vähemalt õppimise puhul ei peaks suhtuma nii , nagu mõnes teises valdkonnas . Et kaasajal esitatakse enamik töid ( arvatavasti ) elektroooniliselt , siis on tähtajast kinnipidamine väga täpselt fikseeritav . Ainuke võte , mida kogu maailmas kasutatakse õppuri praakimise pehmendamiseks ( ja seda on vaja ! ) , on trahvidega seotud multitähtajad . Paraku ei aita seegi vältida kiirustades tehtud töid ning tuua maksimaalset kasu õppurile . Eriti kriitiliseks on kõrgema taseme tähtajad ( nt semester , õppeaasta ) , millega kaasnevad rängad sanktsioonid . Siingi võiks uurida pehmemate variantide kasutamist , mis kaasaegse infotehnoloogia kasutamisel tehnilisi probleeme ei tekita . Veelgi olulisem oleks soodustada kiiremat õppimist - eelkõige õigust alustada ainega suvalisel ajal ning saada tulemus fikseeritud hetkel , kui vajalikud sooritused tehtud . Individuaalne dünaamiline õppekava ei ole tehniline probleem . Avatud turg . Koolitusturg on kiiresti avanemas ja seda pole võimalik pidurdada . Avanemisega kaasneb ka konkurents , mida saab küll mõnda aega takistada administratiivsete vahenditega , kuid ainult ajutiselt . Konkurents toob kaasa paralleelsete kursuste hääbumise , mis on seda tõsisem probleem , mida on ülemaailmsemaks muutuv konkurents . Targem oleks juba praegu avada ka kohalik turg , kaotada põhjendamatud administratiivsed takistused ( kaitsetollid ! ) . Teiste sõnadega , teises koolis õpitud ainet võiks tunnustamast keelduda ainult nii , et tõestatakse selle mittevastavus eeldatule konkreetsete argumentidega . Võib arvata , et kritiseeritu on järgmisel korral pretensioonid juba arvesse võtnud ja tema tõrjumine osutub väga raskeks . Selge on ka see , et e-õppes toimivat on raske vaidlustada , sest seal on absoluutselt kõik dokumenteeritud . Hirm konkurentsi ees võib pigem tõhustada koostööd , et tugevama tiimina olla konkurentsi- võimelisem rahvusvahelisel turul . Keel . Rahvusvahelises koostöös ega konkurentsis ei saa osaleda eestikeelsete kursustega . Need ained , mis pole ingliskeelsed ( kas või paralleelvariandina ) , on varsti mängust väljas . Idee rahvuslikust ülikoolist võib olla küll hingeliigutav , kuid tegelikult on see tõeline kirstunael kõrgharidusele , nagu ka õppejõudude isekasvatamine ning vahetegemine sise- ja välisõppejõudude vahel . Numbrid . Tooksin lõpetuseks mõned arvud , mis aitavad ehk paremini mõista , millel eeltoodu vähemalt osaliselt põhineb . <arv>. <arv>%-reegel . Mitmeaastased vaatlused on kinnitanud , et registreeritud sooritustele ei ilmu <arv>% registreerunuist . See näib olevat universaalne reegel ( vähemasti Eestis , mujalt ei ole õnnestund admeid saada , kuid usun , et see on üldinimlik ) . <arv>. <arv>dB-reegel . Viimase <arv> tunni jooksul enne esitamistähtaega kasvab esitatud tööde arv kiirusega <arv>dB/päev , see on <arv> korda päevas . Tegelikult on see osa pikemat ajavahemikku haaravast sõltuvusest ( ” Kuke kõver ” ) , mis näib olevat universaalne nähtus . <arv>. Mitteedukate kontrolltööde osa jääb piiridesse <arv>-<arv>% . See kehtib eeldusel , et töö tuleb uuesti teha , kuni tulemus on positiivne . Ilmne on siin sõltuvus õppematerjalidest , nende pidev täiendamine võibki olla põhjuseks , miks see näitaja on aastate jooksul vähenenud . <arv>. Vajalik töömaht , mida saab määrata selliste tegevuste puhul , kus edukus sõltub töömahust ( see peaks nii olema kõigi protseduuride korral ) , erineb kuni <arv>,<arv> korda . Vastavalt erineb ka kursuse läbimiseks vajalik aeg . <arv>. Tudengid hindavad kõrgelt Interneti-keskkonna pakutavaid õppimisvõimalusi . Isegi pidevalt kasvanud vajaliku töö maht pole pannud neid arvama , et koormus oleks liialt suur ( küsitlustest ) . Samal ajal on näiteks piiranguteta Harjutusväljakut ( ilmselt Tallinna Tehnikaülikooli leiutis ) kasutatud massiliselt . Aastatel <arv>-<arv> lahendas suurima komponentide arvuga Harjutusväljakul ( aine ISC<arv> ) <arv> tudengit kokku <arv> <arv> ülesannet , mis teeb keskmiselt <arv> lahendust tudengi kohta . Sealjuures täiesti õiged vastused anti <arv>% juhtudest ja täiesti valed <arv>% ( jälle ! ) juhtudest . Vähim lahenduste arv on <arv> ja suurimad ulatuvad üle tuhande . Et Harjutusväljakut saab kasutada ka külaliskontoga , siis seda võimalust kasutati <arv> korda , kusjuures õigete ja valede vastuste jaotus on sama . Mõeldamatu on samade numbriteni jõuda paberi kasutamisega . Ei ole mingit põhjust arvata , et ka üldhariduskoolide õpilased oleksid olemuselt oluliselt erinevad tudengitest . Seetõttu julgen arvata , et selles vallas puhuvad tuuled tühjal kohal - torm on tulemas hoopis mujalt . Koolikoti raskus , millise kooli hingekirjas on õpilane , klassi suurusega seotud probleemid on pseudoprobleemid selle kõrval , mis kogu õppeprotsessis muutub ja veel kiiremini hakkab muutuma . Telekonverentsitehnika võimaldab teha kättesaadavaks parimad õppetunnid reaalajas suvalises kohas , rääkimata videosalvestistest . Maailmas leiab juba näiteid sellest , kui õpilased on koos erinevates kooslustes erinevates ainetes ( sõltuvalt nende edasijõudmisest ) ; kodukooli osa kasvab USAs märgatava kiirusega . Kui kool ei suuda kaasa minna ühiskonna tehnoloogilise arenguga , siis õpilaste respekt ja motivatsioon langevad edasi . Olgem valmis nende tormidega toime tulema , niikuinii ei õnnestu meil neid vältida . Taavi Viilukas , Aero Airlines AS , IT spetsialist SISSEJUHATUS Seoses andmemahtude pideva suurenemisega ning vajadusega tagada infotehnoloogia töökindlus esitatakse järjest suuremaid nõudmisi serveripargi riistvarale . Lisaks peavad arvutid lahendama aeganõudvaid andme- ja arvutusmahukaid ülesandeid ( klassikaline näide oleks siinkohal ilmaennustamine ) . Superarvutid , mis tagavad vägagi suure võimsuse ning käideldavuse , maksavad aga palju ja võivad nii mõnelegi asutusele üle jõu käivateks osutuda . Alternatiiv sellistele kallitele superarvutitele on ehitada ise oma vajadustele vastav klasterarvuti . MIS ON KLASTERARVUTI ? Klasterarvuti ( ingl cluster ) ehk kobararvuti on laialdaselt levinud termin , mis tähendab iseseisvate arvutite ühendamist ühtsesse süsteemi tarkavara ja arvutivõrgu kaudu . Kobararvuti on seega süsteem , kuhu on ühendatud kaks või enam arvutit . Neid kasutatakse kahel eesmärgil : kas süsteemi usaldusväärsuse suurendamiseks ( ingl high a vailability ) või selle arvutusliku jõudluse ( ingl high performance c omputing ) tõstmiseks . Usaldusväärsuse taotlemisel dubleerivad erinevad arvutid üksteist . Kõik arvutid kujutavad endast üksteise koopiaid ning tegelevad samade ülesannete lahendamisega . Kui sellises klastersüsteemis tekib ühes liikmesarvutis rike ning selle töö seiskub , ei mõjuta see kogu süsteemi tööd . Niisuguseid süsteeme kasutatakse kohtades , kus teenuse kättesaadavus peab olema garanteeritud . Suurema arvutusliku jõudluse taotlemisel jaotatakse lahendatav ülesanne klastrisse kuuluvate arvutite vahel ära ning iga arvuti tegeleb individuaalselt talle antud ülesandega . Selline arhitektuuriline lähenemine võimaldab paralleelandmetöötlust ning suurendab kogu süsteemi jõudlust . Jõudlusvõit , mis paralleelsusega saavutatakse , on piiratud Amdali seadusega , mis väidab et paralleelsusega saavutatav võit on piiratud kõige aeglasema järjestikuse mittejagatava osaga . Näiteks olgu väiksel toal , kuhu mahub vaid neli inimest , vaja värvida kõik neli seina . Ühe seina värvimiseks kulub üks tund . Seega , üks maaler värviks selle toa nelja tunniga , kaks maalrit kahe tunniga ning neli maalrit ühe tunniga . Samas teeksid viis maalrit sama töö ikka ära ühe tunniga , kusjuures ühel maalril poleks tööd . Lisaks jaotatakse kobararvutid riistvaraliselt kahte klassi . Esimese klassi kuuluvad arvutid , mis on ehitatud masstootmisel valmistatud riistvarast , kasutades standardseid tehnoloogilisi sidelahendusi - SCSI , IDE , Ethernet jne. Teise klassi moodustavad spetsiaalsest riist- ja tarkvarast valmistatud klastrid ehk superarvutid . Esimese klassi kobararvutid on reeglina palju odavamad kui teise klassi omad . BEOWULF-KOBARARVUTI Beowulf kuulub esimesse klastriklassi . Selle loojateks võib pidada Donald Beckerit ja Thomas Sterlingit , kes <arv>. aastal hakkasid visandama alternatiivset süsteemi hirmkallitele superarvutitele . <arv>. aastal käivituski projekt , mille ametlikuks nimeks sai germaani kangelaseepose järgi Beowulf . Loodav süsteem pidi koosnema tavalistest , kõigile kättesaadavatest arvutitest ja nende komponentidest , et hoida kogu süsteemi maksumus madal . Süsteemi hinda aitas all hoida ka avatud tarkvara kasutamine . Esimene Beowulf-klaster arendati välja NASA kosmoselendude keskuses . See koosnes kuueteistkümnest <arv> DX<arv> protsessorist , mis ühendati omavahel <arv>M-bit/s võrguga ning saavutas jõudluseks <arv> megaflopsi ehk <arv> miljonit ujukomaoperatsiooni sekundis . Tänu odavusele , lihtsusele ning superarvuti võimsusele muutus projekt kohe populaarseks . Projekti edu soodustas see , et avatud tarkvara oli just muutunud populaarseks , poodidest sai osta terviklikke allsüsteeme , mis üksteisega ühildusid , ning masstootmisel valmistatud riistvara oli muutunud arvestatavalt võimsaks ja odavaks .  Esimene Beowulf Et Beowulf kuulub esimese klassi klastrisse , siis on ta ka kergesti skaleeritav ehk täiendatav . See tähendab , et süsteemi administraator või disainer saab hõlpsasti suurendada süsteemi jõudlust või usaldusväärsust , lisades kobararvutisse uusi arvuteid . Beowulf on leidnud kasutamist erinevates simulaatorites , biotehnoloogias , modelleerimisülesannetes , Interneti audio- ja mänguserverites - ikka seal , kus vajatakse suurt jõudlust või usaldusväärsust . Näiteks kasutavad Beowulf-kobararvutit Soome raadiovõrgu arendaja Telaketju , USA teaduslabor Ames , NASA Goddardi kosmoselendude keskus ja paljud muud . Antud klastrid on olnud esindatud ka maailma võimsamate arvutite edetabelis Top<arv> ( <hyperlink> ) . ARHITEKTUUR Beowulf ei ole tarkvarapakett , mida saab seadistada endale arvutisse . See on kobararvuti arhitektuuriline lahend . Millist avatud tarkvara seal kasutatakse , jääb iga süsteemi ehitaja/arendaja enda otsustada . Valdavalt leiavad kasutamist Linux , MPI ( ingl Message Passing Interface ) , PVM ( ingl Parallel Virtual Machine ) , MPICH , DIPC ( ingl Distributed Inter-Process Communication ) ja paljud muud tarkvarapaketid . PVM , MPICH , DIPC ja MPI on sõnumite edastamise programmid , mis võimaldavad klastrisse kuuluvatel arvutitel omavahel suhelda ja tööd koordineerida . Kuna klastrisse kuuluvad iseseisvad arvutid oma lokaalsete mäludega , on sõnumite edastamise tarkvara ülesandeks tagada programmide porditavus . Kõige populaarsemad sõnumite edastuse programmid on MPI ja PVM . Kobararvutit loetakse Beowulfiks , kui on täidetud järgmised tingimused : kõik sõlmed ( arvutid ) teenindavad vaid klastrit ja ei midagi muud ; sõlmed on masstootmisel valmistatud arvutid ; igal klastril on üks teistest sõlmedest erinev arvuti , mida nimetatakse juhtsõlmeks ; võrk , milles sõlmed asuvad , teenindab klastrit ja ei midagi muud ; võrk koosneb masstootmisel valmistatud võrguseadmetest ; kõikides sõlmedes on avatud tarkvara ; igas sõlmes lahendatakse korraga vaid ühte ülesannet . Juhtsõlmeks on arvuti , mis kontrollib teiste sõlmede tööd , haldab protsesse , on failiserveriks . Seega võib juhtsõlme vaadelda justkui serverina ning soovitatavalt peaks juhtsõlm olema võimsam kui sõlmedeks olevad arvutid . Juhtsõlm võib olla ühendatud ka välisvõrguga , mille kaudu kontrollitakse klastri tööd ning edastatakse andmeid . Sellisel juhul peab juhtsõlmel olema rakendatud kõiki turvanõudeid . Sõlmed on arvutid , mis tegelevad arvutuslike ülesannete lahendamisega . Sõlmed saavad lähteandmed juhtsõlmest ja paigutavad sinna oma tulemused . Kasutaja sõlmedesse ei sisene . Soovitatav on ehitada kõik sõlmed ühesugustest arvutitest ( protsessoritest ) . Kui kasutada väga erineva kiirusega arvuteid , peab pöörama tähelepanu ka võimalikule pudelikaelaefektile . See tähendab , et kiiremad arvutid hakkavad ootama aeglasemate arvutite järele ega tee midagi . Sel juhul ei saa lahendatavat ülesannet jagada sõlmede vahel võrdseteks osadeks , vaid juhtsõlm peab hakkama kiirematele arvutitele saatma rohkem andmeid . Joonisel on kujutatud Beowulfi arhitektuur . Beowulf koosneb juhtsõlmest , sõlmedest ning neid ühendavast võrgust . KUIDAS EHITADA BEOWULFI ? Enamik klastritest on realiseeritud x<arv>-protsessoritel , sest need on kõige odavamad . Vaidlused , kas Beowulf-kobararvutis on paremad IDE või SCSI kõvakettad , pole veel lõppenud . Spetsialistid väidavad , et kui klastris kasutatav tarkvara ei ole väga suur ega nõua palju kirjutamist , siis SCSI- ketaste puhul saavutatakse küll väike võit kiiruses , kuid samas on IDE-kettad palju odavamad .  Beowulfi arhitektuur Enne klastri ehitamist tuleks üle vaadata ruum , et see sobiks kobararvuti jaoks . Kui tahetakse ehitada suurt klastersüsteemi , mis koosneb juba paarikümnest arvutist , peab kindlasti kontrollima , et ruumi jahutussüsteem ning toide oleksid piisavad . Suuremate klastrite puhul peaks kaaluma alajaamast eraldi toitekaabli toomist . Klastri ehitamisel peab ka otsustama , millist võrgutehnoloogiat soovitakse . Kas ehitatav süsteem hakkab vahetama palju väikesi pakette , kus oluliseks muutub võrgu viiteaeg , või hakatakse vahetama suuri ja andmemahukaid pakette , kus oluline on võrgu läbilaskevõime ? Levinud on kaks võrgutehnoloogiat - standardne Ethernet või spetsiaalselt klastritele mõeldud Myrinet . Etherneti eelisteks on odavus ja kättesaadavus . Kui ruum on sobivaks tunnistatud ning võrgutehnoloogia teada , hakatakse esimesena seadistama juhtsõlme arvutit . Juhtsõlm on ka ainuke arvuti , kuhu kasutaja siseneb . Seepärast paigaldatakse juhtsõlme mõnikord ka graafilisi kasutajaliideseid , nagu X Window System . Lisaks võib sinna installeerida erinevaid tarkvara arendamise vahendeid , kuigi need pole kobararvuti enda tööks vajalikud . Linuxi distributsiooni valimisel on soovitatav kasutada Slackware'i ( <hyperlink> ) , millele Beowulf algselt loodigi . Et juhtarvutit mitte liigselt koormata , tuleks mittevajalikud teenused eemaldada ning jätta vaid klastri enda tööks vajalikud - SSH , NFS , rexec ja rlogin . SSH on vaja tööle seada nii , et juhtsõlme ja sõlmede vahel toimuks autentimine salvestatud võtmete alusel , mitte parooli küsides . Lisaks on vaja luua kasutajanimi koos kasutajagrupiga , milles klaster tööle hakkab , ning jagada võrku välja kataloog või ketas , kust sõlmed saavad ja kuhu nad panevad andmeid . Viimasena peab muidugi installeerima ja seadistama sõnumite edastamise programmi , olgu see siis MPI , PVM , MPICH või mõni muu . Kui sõlmedeks on valitud kõik ühesuguse riistvaraga arvutid , võib seadistada ainult esimese sõlme ning ülejäänute puhul kasutada kloonimist . Erineva riistvaraga arvutite puhul tasub kindlasti ära märkida aeglasemad arvutid , et hiljem need esimesena välja vahetada . Et kasutaja ei sisene sõlmedesse , puuduvad neil ka klaviatuurid ning monitorid . Klaviatuuri puudumisel peab BIOSest ära määrama , et klaviatuuri vea leidmisel jätkatakse tööd , ning soovitatav on lisada ka alglaadimise viit umbes üks kuni kaks minutit . See tagab , et pärast kogu süsteemi taaskäivitamist ( restarti ) on juhtsõlm esimene arvuti , mis käivitab operatsioonisüsteemi ning jagab võrku välja kataloogid . Nüüd saavad sõlmed kohe alglaadimisel juhtsõlme poolt jagatud võrguketta endale külge liita . Linuxis tuleks eemaldada mittevajalikud teenused ning jätta vaid klastri enda tööks vajalikud - NFS , SSF , rexec , rlogin . NFS tuleb seadistada nii , et arvuti käivitusel liidetakse automaatselt juhtsõlme jagatud ketas . SSH on vaja ka sõlmes tööle panna selliselt , et juhtsõlme sisenedes ei küsitaks parooli . Lisaks on vaja luua juhtsõlmega samanimeline kasutajanimi koos grupiga , milles klaster tööle hakkab . Viimasena peab ka siin installeerima ja seadistama sõnumite edastamise programmi . Järgmisena tuleb kindlaks teha , kas klaster hakkas korralikult tööle . Selleks peab kontrollima , kas juhtsõlmest saab igasse sõlme saata võrgukontrolli pakette ( ping ) ja vastupidi . Kui SSHga minna juhtsõlmest sõlme , kas küsitakse parooli ? Kui sõlme siseneda läbi SSH , kas juhtsõlmes väljajagatud kataloog liidetakse automaatselt ? Tavaliste järjestikprogrammide kasutamine klastris ei pruugi anda veel jõudlust juurde . Kiiruses võitmiseks peab programmi lähtekoodi muutma paralleeltöötluseks sobivaks ning seejärel selle uuesti kompileerima . Järjestikuse programmi muutmine paralleeltöötlust toetavaks on aga juba palju keerulisem kui riistvara ühendamine ja selle tööle panemine . Paralleelprogrammide kirjutamine nõuab oskust ja kogemust . Vajaminevate oskuste puudumisel saab alati kasutada kompilaatoreid , mis kompileerimise käigus muudavad ise järjestikkoodi paralleelseks . Paraku ei saa sellised kompilaatorid muuta koodi võimalikult efektiivseks , mille tulemusena võib programmi töökiirus jääda tunduvalt alla käsitsi kirjutatud koodi omale . Pikemat ja täpsemat juhist Beowulfi ülesseadmisest saab vaadata Interneti-leheküljelt <hyperlink>  Avalon-klaster koosneb <arv> sõlmest ning saavutab jõudluse kuni <arv>,<arv> Gflopsi KOKKUVÕTE Beowulf-kobararvuti eeliseks teiste klastrite ees võib pidada lihtsust ja kättesaadavust , sest ta ei vaja spetsiaalset riist- ja tarkvara . Beowulf-klastri võib ehitada nii vanematest toanurka kogunenud kui ka tänapäeva suhteliselt kiiretest arvutitest . Samuti on see ka lihtsalt skaleeritav . Kobararvuti ülesseadmiseks piisab täiesti Linuxi tundmisest ning kirjandust ( raamatuid , artikleid ) selle kohta leiab nii raamatupoest kui ka Internetist . Raskemaks võib osutuda programmi jooksutamine kobar- arvutis , et tekiks võimalikult suur võit , mida kogu süsteem võimaldaks .  Arvo Toomsalu , TTÜ arvutitehnika instituut Klassikalise von Neumanni- ehk CISC-arhitektuuriga arvutite iseloomulikuks jooneks on jadamisi töödeldavad käsu- ja andmevood . Hoolimata arhitektuuri sisseprogrammeeritud jõudlus- piiranguist on von Neumanni arhitektuuriga arvutid seni suutnud edukalt vastu seista konkureerivaile arvutiarhitektuuridele . Kindlasti pole seejuures mitte vähetähtis asjaolu , et valdav osa praegu kasutuses olevaist kõrgkeeltest on orienteeritud informatsiooni jadatöötlusele . Von Neumanni arhitektuuriga arvutite väljatöötamisel lähtutakse ühtsest eesmärgist - luua võimalikult minimaalse riistvara mahu ja keerukuse juures piisavalt universaalne süsteem . Sellisel ülesandepüstitusel on objektiivsed kaugeleulatuvate juurtega ajaloolised põhjused . Ajal , kui töötati välja klassikalise arvuti arhitektuuri põhimõtted ning ehitati esimesed salvestatava programmiga elektronarvutid , oli arvutite elementbaas väga algeline , aeglane ja madala töökindlusega , mistõttu püüti neis igati minimeerida loogikalülituste arvu . Kuid sedamööda , kuidas kasvasid vajadused arvutite arvutusliku jõudluse suhtes , arenes pidevalt ka nende elementbaas . Üha suuremal määral püüti infotöötlust läbi viia enam mitte suhteliselt aeglasel tarkvaralisel , vaid kiiremal riistvaralisel tasemel.Arvutite riistvara arenguga pole aga mitte alati kaasnenud samaväärne tarkvara täiustumine . Suur osa praegu kasutatavaist kõrgkeeltest on üles ehitatud põhimõttel , et infotöötlus arvutis toimub klassikalise neumanliku paradigma kohaselt , s.t jadamisi . Arvutitehnikas välja kujunenud traditsioonide lõhkumisel sai otsustavaks mikroprotsessorlülituste ilmumine möödunud sajandi seitsmekümnendatel aastatel . Kiire areng sajandi lõpukümnendil päädis superskalaarsete mikroprotsessorite loomisega . Need olid võimelised informatsiooni töötlema juba märksa kõrgemal rööpsuse tasemel kui senikasutatud mikroprotsessorid . Just informatsiooni jadamisi töötlemise viis on kõige olulisem kitsaskoht , mis ei luba von Neumanni arhitektuuriga arvuteis saavutada lati soovitud jõudlust . Samas on aga mikroprotsessorlülituste valmistajad alati püüdnud luua selliseid protsessorarhitektuure<arv>, kus oleks tagatud võimalikult kõrge jõudlus , töökindlus ning universaalsus ja seda minimaalse energiatarbe juures . Tänapäevane kõrgjõudlusega mikroprotsessorlülitus tugineb üldjuhul mitte CISC-arhitektuurile , vaid RISC-arhitektuurile . Enamasti on tegemist superskalaarsete monokiip-mikroprotsessoritega , mille käsukonveieris saab igal protsessoritaktil töödelda rohkem kui üht käsku ja vastavalt saada ka rohkem kui ühe käsutöötluse tulemi . Järgnevalt on vaadeldud aga mõningaid perspektiivseid alternatiivseid monoprotsessor-arhitektuure , mis võivad juba lähitulevikus asendada valitsevaid RISC- ja VLIW-arhitektuuriga mikroprotsessorlülitusi . Protsessorarhitektuuride spetsiifiliste küsimustega ei tule mikroprotsessor- lülituste tavakasutajatel mitte just eriti sageli tegeleda , seepärast leiavad mõned neist ka veidi laiemat käsitlemist . Neid antud temaatikaga seonduvaid probleeme , mida on juba varemalt käsitletud [ <arv> , <arv> , <arv> , <arv> ] , ei ole otstarbekas kordama hakata . INFORMATSIOONI RÖÖPTÖÖTLUS MIKROPROTSESSORSÜSTEEMIS Võrreldes <arv>. aastaga , kui valmisid esimesed Inteli mikroprotsessorid , on nüüdseks mikroprotsessorlülituste jõudlus kasvanud üle <arv> <arv> korra . Näiteks ainuüksi ühel protsessoritaktil töödeldavate käskude arv on selle aja jooksul tõusnud üle kümne korra . Kõige olulisemaks reserviks informatsiooni jadatöötlusele orienteeritud protsessorite jõudluse tõstmisel on uute protsessorarhitektuuride loomine , neis toetutaks laialdaselt informatsiooni rööptöötluse võtetele . Kui analüüsida protsessorarhitektuure nende ajaloolises arengus , siis pole raske märgata , et arenguprotsess on toimunud just nimetatud suunas . Protsessorarhitektuuride evolutsioonis võib eristada , arvestades protsessoris käskude töötlusesse suunamise viisi ja selles rööpselt töödeldavate käskude arvu , kolme põhilist etappi ( vt tabel ) : klassikalise , skalaarse ja superskalaarse arhitektuuri etapp . Moodsates mikroprotsessorlülitustes püütakse informatsiooni rööptöötlust korraldada nii riist- kui ka tarkvaralisel tasemel . Informatsiooni rööptöötluse korraldamisel jaotatakse töödeldavad tegumid sõltumatuteks alamtegumiteks , mida siis samaaegselt töödeldakse kas paljudes protsessorites või ühe protsessori paljudes protsessorelementides . Sellise töötlusviisi rakendamise tulemusena kiireneb informatsiooni töötlemine , s.t tõuseb süsteemi jõudlus . Üheks näitajaks , mis iseloomustab protsessoris paralleeltöötluse võimalusi , on nn rööpsuse ( parallelismi ) aste , s.o maksimaalselt sõltumatute alamtegumite arv , mida tegumis saab sellel antud töötlusetapil moodustada . Tegumite rööptöötluseks ettevalmistamisel jälgitakse , et töödeldav informatsioon jaotataks ( tükeldataks ) sellisteks väiksemateks osadeks , mida saaks suhteliselt sõltumatult töödelda . Tükeldus ( inglise keeles vastavalt granularity ) ei ole muud kui koodiüksuste jaotatus teatavas kontekstis . Seda terminit kasutatakse selleks , et täpsemalt iseloomustada , millise detailsusega koodi ( programmiteksti ) vaadeldakse . Protsessori seisukohalt on oluliseks näitajaks aga tükeldusaste ( rööpsusaste ) . Tükeldusaste on arv , mis näitab , mitut operatsiooni protsessoris sooritatakse või võidakse sooritada samaaegselt . Infotöötlusel rakendatav rööpsus võib olla saavutatud erinevatel tasemetel , nii eristatakse peenekoelist ( fine-grain ) , keskmist ja jämedakoelist ( coarse-grain ) rööpsust ehk parallelismi ( parallelism ) . Peenekoelise rööpsuse korral on tegemist koodi väiksemate ja lühema töötlusajaga osadega , seda seostatakse eeskätt käskude tasemega , s.t käsutasemelise ehk ILP-rööpsusega ( ILP-Instruction Level Parallelism ) . Näiteks tavaprogrammides küünib käsutasemeline tükeldusaste keskmiselt <arv>-<arv>ni , kuid teadusülesannete korral võib see olla palju kõrgem . Jämedakoeline rööpsus on peenekoelise rööpsuse vastand . Jämedakoeline rööpsus võib esineda kahel kujul - kas sümmeetrilise või asümmeetrilise jämedakoelise rööpsusena . Mikroprotsessorsüsteemides , kus rakendatakse jämedakoelist rööpsust , on palju ühesuguseid protsessorlülitusi ning kus kõik protsessorid töötlevad üht tegumit koordineeritult . Asümmeetrilist jämedakoelist rööpsust rakendavais süsteemides on samuti palju mikroprotsessoreid , kuid igaüks neist on ette nähtud vaid teatavate fikseeritud ülesannete täitmiseks . Kui peenekoelist rööpsust rakendati käskude tasemel , siis keskmise tasemega rööpsusega on tegemist juhul , kui informatsiooni rööptöötluse korraldamine toimub protsesside või programmijälgede ( trace ) tasemel . Juhul kui informatsiooni rööptöötlust viiakse läbi programmide tasemel , on tegemist jämedateralise rööpsusega . Keskmise ja peenekoelise rööpsuse korral ei ole rööpselt täidetavad operatsioonid protsessoris mitte alati selgesti eristatavad , seetõttu ei tegele nende selekteerimise ja töötluse korraldamisega mitte programmeerija , vaid seda teeb kas kompilaator või töötluse käigus protsessor ise . Jämedakoelise rööpsuse puhul langevad need ülesanded aga tavaliselt programmeerija õlule . Tabel Protsessorarhitektuuride arenguetapid  See , millist rööpsuse taset ühes või teises mikroprotsessorsüsteemis saab kasutada , sõltub põhiliselt süsteemi arhitektuurist , s.t kas on tegemist SIMD- , SISD- , MISD- või MIMD- arhitektuuriga<arv>. Suur osa tänapäevastest mikroprotsessorsüsteemidest tugineb endiselt von Neumanni arhitektuurile , s.t SISD-arhitektuurile . Isegi siis , kui taolises protsessoris toimub informatsiooni töötlemine käsukonveieris , saab selles ära kasutada vaid ühe käsuvoo piires esinevat ajalist rööpsust . Seevastu aga näiteks SIMD-arhitektuuriga vektortöötlust sooritavais mikroprotsessorsüsteemides tuginetakse ruumilisele rööpsusele . Moodsad kõrgjõudlusega mikroprotsessorsüsteemid nagu superskalaar- , mitmikvootöötlusega ja multiprotsessorarvutid esindavad MIMD-arhitektuuri klassi . Et klassikalistes von Neumanni arhitektuuriga protsessorites on käsutasemelise rööpsuse rakendamise võimalused võrdlemisi piiratud , siis püütakse neis informatsiooni rööptöötlust toimetada käskude tasemest kõrgemal . Selleks ei piirduta protsessoris mitte üheainsa käsulõime töötlemisega , vaid püütakse üle minna mitme käsulõime samaaegsele töötlemisele . Informatsiooni rööptöötluse üleviimine kõrgematele tasemetele on kasulik sellegi poolest , et hoolimata mitme käsulõime paralleelsest töötlemisest , võivad protsessori infotöötlust läbiviivad funktsionaalsed üksused olla lihtsamad ning neid saab paremini koormata . Kui protsessoris tahetakse läbi viia mitme käsulõime rööpset töötlemist ehk hargtöötlust ( multithreading ) , siis käsukonveieri normaalse talitluse tagamiseks tuleb protsessor varustada lülitustega , mis suudaksid sooritada kiirelt kontekstivahetusi . Tüüpiliselt on sellised protsessorid varustatud mitme käsuloenduri ja sõltumatute registrikogumitega . Praeguseks on välja kujunenud isegi spetsiifilise arhitektuuriga protsessorite klass SMT ( Simultaneous Multithreading ) ehk rööphargtöötluse protsessorid . Superskalaarsetes SMT-protsessoreis suunatakse erinevaisse käsulõimedesse kuuluvaid käske protsessori töötlusüksustesse rööpselt . Kui taolise protsessori mikroarhitektuuris on selgesti eristatavad mitu käsuloendurit , siis räägitakse ilmutatud hargtöötlusest ( explicit multithreading ) . Kõrvuti ilmutatud hargtöötlusega leiab kasutamist ka ilmutamata hargtöötluse ( implied multithreading ) meetod . Viimane ei ole protsessori mikroarhitektuuri tasemel nii kergesti tuvastatav , vajalik on protsessori talitluse ja struktuuri detailsem analüüs . Ilmutamata hargtöötlus leiab rakendamist näiteks voo- ja multiskalaarsetes protsessorites . Informatsiooni rööptöötlus on tihedalt seotud informatsiooni spekulatiivtöötlusega ( speculative processing ) . Informatsiooni spekulatiivtöötlus on infotöötluse korralduse viis , mille eesmärgiks on tõsta rööptöötlussüsteemide jõudlust seeläbi , et neis töödeldavaid tegumeid käivitatakse ennetavalt , s.t teadmata , kas konkreetset tegumit on tulevikus üldsegi vaja töödelda . Spekulatiivselt töödeldava tegumi töötlus lõpetatakse aga kohe , kui selgub töötluse mittevajalikkus . PROTSESSORARHITEKTUURIDE EVOLUTSIOONI PROBLEEME Kaasaegsed superskalaarsed mikroprotsessorid suudavad igal protsessoritaktil töödelda teoreetiliselt nelja kuni kuut erinevat käsku . Praktikas jääb nende protsessorite jõudlus sageli madalamaks , piirdudes mõnikord isegi vaid ühe või kahe käsuga . Olukord on tõsiselt murettekitav , sest kui tulevikus peaks jätkuma protsessoreis rööpselt töödeldavate käskude arvu suurendamine praeguses tempos , siis suhe superskalaarprotsessorite teoreetilise ja tegeliku jõudluse vahel halveneb veelgi . Klassikaliste superskalaarse arhitektuuriga protsessorite objektiivsed jõudluspiirangud sunnivad otsima uusi paradigmasid , mis tagaksid mikroprotsessorite ja -süsteemide jõudluse jätkuva tõusu ka tulevikus . Tekkinud raskuste ületamiseks on välja pakutud erinevaid lahendusi . Mõned neist on juba leidnud praktilise väljundi uutes protsessorkiipides , teiste elluviimiseks on vaja teha veel põhjalikke uuringuid . Kui piirduda neist vahest kõige olulisematega , siis esmajoones tuleks nimetada järgmisi . <arv>. Mikroarhitektuursel tasemel kasutatakse protsessoreis järjest rohkem kiireid programmeeritava struktuuriga sisesiine . Suurt tähelepanu pööratakse meetmetele , mis aitavad suurendada informatsiooni läbilaset protsessor- ja mäluallsüsteemides . Pidevalt on tõstetud mälulülituste toimekiirust , arendades paralleelselt edasi mälusüsteemide hierarhilisi struktuure . Tavapäraseks on muutunud suuremahulised ja kiired vähemälusüsteemid , võimsad polüfunktsionaalsed mälukontrollerid ja hajapöörduspõhimõttel talitlevad mitmiksegmentstruktuuriga mälulülitused . <arv>. Üha enam karmistuvad nõuded mikroprotsessorsüsteemides kasutatavate kõrge integratsioonitasemega keerukate lausintegraallülituste ( protsessorid , mälulülitused , mitme- suguseid kontroller- ja tugifunktsioone täitvad lülitused ) töökindlusele . Mikrolülitustesse integreeritakse erivahendeid , mille abil saab usaldusväärselt ja operatiivselt tuvastada lülituste tehnilist seisundit , nad varustatakse emulatsiooni- , autotestimise ja diagnostikalülitustega . Mikrolülituste valmistamisel kasutatavad tehnoloogiad võimaldavad formeerida topoloogilisi elemente , mille suurus on juba alla <arv> nanomeetri , perspektiivis on kavas üle minna <arv>-nanomeetrilisele CMOS-tehnoloogiale . See tähendab , et mikroelektroonika on asendumas nanoelektroo- nikaga , see omakorda toob kaasa aga uusi keerukaid tehnilis-tehnoloogilisi probleeme . Kuidas näiteks tagada nanotehnoloogilistes lülitustes informatsiooni säilivust nn soft error - häiringute korral ? Antud juhul on tegemist häiringutega , kus kiipides säilitatav informatsioon hävib või moonutub kas kosmilise päritoluga ã-kiirguse või kiibikorpuste materjalist kiiratava á-kiirguse toimel . <arv>. Lausintegraallülituste integratsioonitaseme tõusuga on kaasnenud lülituste poolt tarbitava elektrienergia hulga kiire kasv . Nagu teada , jääb suurem osa tarbitud elektrienergiast lülitustes kasutamata , põhjustades pooljuhtmaterjali ülemäärast ja ohtlikku kuumenemist . Uute nanolülituste projekteerimisel ja valmistamisel rakendatavate tehnoloogiate väljatöötamisel keskendutakse sellele , kuidas luua võimalikult väikese energiatarbe , aga kõrge integratsiooni- taseme ja jõudlusega lausintegraallülitusi . <arv>. Järjest enam probleeme tekib mikroprotsessorkiipide ja n-ö välise maailma omavahelise sidestamisega . Millised peavad olema väga kõrgetel taktsagedustel talitlevate , suure arvu sisend-väljundviikude ja kõrge energiatarbega lausintegraallülituste kiibikorpused ? Milline peaks olema ühendusviikude kuju ja asetuse topoloogia ? Need on vaid tühine osa vastust nõudvatest küsimustest . <arv>. Kiipide sisetopoloogia probleemide lahendamisel kasutatakse üha laialdasemalt moodulprintsiipi . Mikroarhitektuuri tasemel avaldub see funktsionaalselt hästi eristatavate kompaktsete standardfunktsioone täitvate üksuste - moodulite kasutamises . Kombineerides sobivalt erinevaid unifitseeritud mooduleid , saab kiiresti ja väheste kulutustega luua väga mitmesuguseid ning optimaalseid rakendusorienteeritud kiipsüsteeme . Kui analüüsida mikroprotsessorarhitektuuride arendamise eesmärgil läbiviidavate uuringute praegust temaatikat , siis võib esile tõsta nelja põhilist uurimissuunda . <arv>. Kuidas protsessoris , kus üldjoontes säilib informatsiooni jadatöötlus , maksimaalselt rakendada informatsiooni rööptöötluse võtteid ? Sisuliselt tähendab see seda , et on vaja leida uusi efektiivsemaid võtteid , kuidas täielikumalt ära kasutada käsutasemelises rööpsuses peituvaid võimalusi . Et käsutasemelise rööpsuse puhul piirab rööptöötluse rakendusvõimalusi opereerimine järjestikuste käsulõimedega , siis tupikseisu vältimiseks võetakse appi nn spekulatiivne rööpsus . Ehk teisiti öeldes - rakendatakse käskude spekulatiivtöötlust . Protsessorarhitektuuride seda arengusuunda esindavad superspekulatiivsed , multiskalaarsed ja jäljeprotsessorid . <arv>. Teist uurimissuunda iseloomustab uute protsessorarhitektuuride juba märksa julgem eemaldumine von Neumanni protsessori arhitektuurist , kuigi neiski protsessorites kasutatavad programmid koostatakse kõrgkeeltes , mis oma olemuselt on orienteeritud informatsiooni jadatöötlusele . Tüüpilisteks selle suuna esindajateks on pika ja ülipika käsusõnaga ehk LIW- ja VLIW-arhitektuuriga protsessorid . <arv>. Mõnes perspektiivses protsessoris püütakse jõudlust tõsta seeläbi , et informatsiooni töödeldakse neis multiprogrammeerimise režiimis ( s.t mitut programmilõime töödeldakse rööpselt ) , kuigi seesmiselt , iga programmilõime ulatuses toimub neiski informatsiooni töötlemine endiselt jadamisi . Sellist arhitektuurset lahendust esindavad näiteks monokiip-multiprotsessorid . <arv>. Kõige radikaalsemat suunda esindavad protsessorarhitektuurid , mis täielikult hülgavad von Neumanni arhitektuurikontseptsiooni . Kasutades uusi rööptöötlusele sobivaid programmeerimiskeeli , saavutatakse protsessoreis jõudluse märkimisväärne suurenemine . Antud suuna tuntuimad esindajad on nn “ protsessor mälus ” ehk PIM-arhitektuuriga protsessorid . Üldistest uurimissuundadest tulenevalt ning võttes arvesse juba ka reaalselt saavutatud tulemusi , peetakse praegu kõige perspektiivikamaiks järgmisi protsessorarhitektuure . <arv>. Täiustatud superskalaarprotsessorid ( advanced superscalar processors ) , kus igal protsessoritaktil suunatakse rööpselt töötlusesse kuni <arv> käsku . <arv>. Superspekulatiivsed protsessorid ( superspeculative processors ) , mis kuuluvad kõrge rööpsuseastmega superskalaarprotsessorite klassi . Protsessorite arhitektuuri iseloomulikuks jooneks on käsutöötlusel rakendatavad agressiivsed spekulatiivtöötluse võtted . <arv>. Multiskalaarsed protsessorid ( multiscalar processors ) , kus töödeldav programm jaotatakse üksikute tegumite kogumiks , mida töödeldakse hajusal protsessorelementide kogumil . Protsessorelementide kogumi talitlust koordineeritakse tsentraalsest riistvaralisest juhtüksusest . <arv>. Jäljeprotsessorid ( trace processors ) , kus analoogiliselt multiskalaarsetele protsessoritele kasutatakse suurearvulist protsessorelementide kogumit , töödeldav programm tükeldatakse aga mitmeks käsujäljeks . Iga käsujälje töötlus toimub antud jäljele eraldatud protsessorelementides . <arv>. Andmeskalaarsed protsessorid ( datascalar processors ) , kus jadaprogrammi töötlemine toimub mitmes protsessorelemendis . Laade-salvestusoperatsioone sooritatakse lokaalselt ja vaid nendes protsessorelementides<arv>, kus vahetult toimub vastavate andmete töötlus . Tänu aga leviedastuse põhimõtte rakendamisele on lokaalselt laetud andmed juurdepääsetavad ka teistele protsessorelementidele . Nii multiskalaarse , jälje- kui ka andmeskalaarsete protsessorite talitlus tugineb üldjoontes ilmutatud hargtöötluse põhimõtetele . Kuivõrd keerukaks ja raskesti mõistetavaks on muutunud moodsate mikroprotsessorite mikroarhitektuursed lahendused ning varjatumaks nende talitlus , selle üle võib otsustada kas või järgnevate protsessorarhitektuuride näidete varal . Tegemist pole seejuures mitte mingite multiprotsessorlülituste , vaid monoprotsessoritega , kus informatsiooni töötlemine toimub suhteliselt lihtsalt , s.t valdavalt jadamisi . TÄIUSTATUD SUPERSKALAARPROTSESSORI ARHITEKTUUR Ammutuntud klassikaliseks võtteks , mis oluliselt aitab tõsta protsessori jõudlust , on see , kui protsessoris järjest suurendada rööpselt võetavate ja töödeldavate käskude arvu . Muidugi ei piisa kõrge jõudluse saavutamiseks üksnes vaid võimsast ( suure läbilaskevõimega ) käsuvõtuüksusest . Vähem oluline pole seegi , et käsud , mis kuuluvad vääralt prognoositud programmilõime , saaksid protsessori käsukonveierist või -konveiereist võimalikult kiiresti ( mõne taktiga ) kõrvaldatud ja asendatud õigetega . Jõudluse aspektist on väga oluline , et protsessori töötlusüksused oleksid pidevalt optimaalselt koormatud . Peab olema tagatud , et kõik protsessoris rööpselt töödeldavad käsud oleksid õigeaegselt varustatud neile vajalike ressurssidega - nii töödeldavate andmetega kui ka töötluseks sobivate vabade töötlusüksustega . Et igal protsessoritaktil saaks rööpselt töödelda kümneid käske , on täiustatud arhitektuuriga superskalaarsete protsessorite mikroarhitektuuris , võrreldes superskalaarsete protsessoritega , rakendatud mitmeid põhimõttelisi uuendusi . Täiendavate ülesannete täitmiseks on protsessori struktuuri vaja lisada uusi keerukaid loogikalülitusi , mis omakorda põhjustab protsessorkiibis transistoride arvu kiire kasvu . Eksperthinnangutes on pakutud , et täiustatud arhitektuuriga superskalaarsete protsessorkiipide transistoride koguarv võib ulatuda isegi kuni miljardini . Täiustatud arhitektuuriga superskalaarsete mikroprotsessorite töökorraldus erineb mitmeti skalaarsete omast . Näiteks möödalasu korral käsuvahemälus ei hakata neis vahemälu sisu kohe korrigeerima , vaid võimaluse korral püütakse tööd jätkata . Selleks alustatakse käskude järjekorravälist käsuvõttu , s.t minnakse üle käskude järjekorravälisele töötlusele . Nende protsessorite mikroarhitektuuris on iseloomulik suuremahuliste mitmetasemeliste käsujälje vahemälude ( jäljevahemälude ) rakendamine . Et paremini korraldada programsete hargnemiste töötlust , lülitatakse protsessorite mikroarhitektuuri multihübriidseid prognoosiüksusi , mis võrreldes tavaliste prognoosiüksustega , suudavad erinevat liiki hargnemisi töödelda efektiivsemalt ja kiirendavad kontekstide vahetamisi . Täiustatud arhitektuuriga superskalaarprotsessorite kõrgest jõudlusest annab tunnistust kas või seegi , et igal protsessoritaktil võidakse töötlusesse rööpselt suunata <arv> kuni <arv> käsku . Sellise arvu käskude töötlemiseks on protsessorites <arv> kuni <arv> sõltumatult talitlevat töötlusüksust . Protsessorid on varustatud arvukalt registritega , üksnes ootepuhvrite ( ootejaamade ) infomahutavusest piisab kuni <arv> käsu töötlemiseks . Kiirendamaks informatsiooni edastust nii töötlusüksuste sees kui ka nende vahel , kasutatakse laialdaselt erilülitusi - otseedastusteid . Kuigi protsessorkiipide transistoride arv on aukartustäratav , ei ole enamik transistore vajalikud mitte infomatsiooni otseseks töötlemiseks , vaid nad kuuluvad erinevate mälulülituste , eeskätt primaarsete ja sekundaarsete andme- ja käsuvahemälude koosseisu . Täiustatud arhitektuuriga superskalaarprotsessori põhilised funktsionaalsed üksused on näidatud protsessori mudelil ( joonis <arv> ) . Vaatleme nende üksuste otstarvet ja talitlust veidi lähemalt . KÄSUVÕTU KORRALDUS PROTSESSORIS Halvasti korraldatud käsuvõtt piirab oluliselt protsessori jõudlust . Käskude töötluskiirus sõltub paljuski just nende võtukiirusest . Protsessorite käsuvõtuüksuste arengus on liigutud igal protsessoritaktil ühe käsu võtult ( klassikalised CISC-arhitektuuriga protsessorid ) käsuploki võtule ja seejärel juba käsujälje võtuni . Iga uue ja võimsama käsuvõtuüksuse struktuur on muutunud järjest keerukamaks ja kallimaks . Superskalaarsetes protsessorites tuleb funktsionaalsete üksuste optimaalseks koormamiseks kasutada selliseid käsuvõtuüksusi , mis tagavad mitme käsu samaaegse võtu . Käsuvõtuga tegelevate üksuste läbilaskevõimet ei saa suurendada aga pelgalt nende põhisõlmede mehhaanilise dubleerimise läbi . Moodsates , isegi suhteliselt lihtsates käsuvõtu-üksustes võib kohata käsuvahemälu ja programsete hargnemiste prognoosiga tegelevaid erilülitusi , nagu hargnemiste siirdeaadresside puhvrit ehk BTB ( BranchTarget Buffer ) ning hargnemiste ( hargnemissuundade ) ennustit ( branch predictor ) . BTBs säilitatava informatsiooni abil toimub ennustilülituses järgmisena võetava käsuploki aadressi arvutamine . Üleminekul skalaarseilt protsessoreilt superskalaarseile on pööratud erilist tähelepanu hargnemiste prognoosiga tegelevate lülituste efektiivsuse tõstmisele . Tavaliselt moodustavad hargnemiste prognoosilülitused käsuvõtuüksuse autonoomselt talitleva allüksuse , mille ülesandeks on käsuplokkide aadresside formeerimine ning vastavate käsuvõtujadade ehk FTQde ( Fetch Target Queue ) moodustamine . Käsuvõtujadas sisalduvate aadresside alusel toimubki töötlusesse suunatavate käskude võtt käsuvahemälust . Üheks lisalülituseks , mis samuti kuulub käsuvõtuüksuse koosseisu , on käsuvõtupuhver ehk FTB ( Fetch Target Buffer ) . FTBsse salvestatakse käsuvahemälust loetud käsuplokid . Enamasti lõpevad sellised käsuplokid hästi prognoositava suunaga siirdekäsuga .  Joonis <arv>. Täiustatud arhitektuuriga superskalaarprotessori mudel Veelgi täiuslikuma mikroarhitektuuriga superskalaarprotsessoreis ei toimu mitte käsuplokkide võtt , vaid käsujälgede võtt . Käsujälgi säilitatakse spetsiaalses jäljevahemälus . Kui pikki käsujälgi kasutada , see võib sõltuda erinevatest asjaoludest : käskude lubatavast arvust käsujäljes , lubatavate hargnemiste arvust jäljes , lubatavate kaudsete hargnemiste arvust jäljes jne. Enamasti piiravad käsujälje pikkust siiski jäljevahemälu enda tehnilised võimalused . Kuigi jäljevahemälu lisamine käsuvõtuüksusesse aitab märgatavalt parandada protsessori jõudlust , peab siiski olema ettevaatlik , sest selle struktuuri ülemäärane keerukustamine võib hakata piirama käsuvõtuüksuse läbilaskevõimet . Eriti selgesti avaldub see olukordades , kui pöördustel jäljevahemällu tekivad möödalasud . Joonisel <arv> on kujutatud tüüpilise jäljevahemäluga käsuvõtuüksuse põhilised lülitused ning lülitustevahelised informatiivsed sidemed . Hargnemiste siirdeaadresside puhvris ( BTB ) sisalduva informatsiooni abil toimub käsujälgede aadresside moodustamine neil juhtudel juhul , kui pöördusel jäljevahemällu esineb möödalask või kui tingimuslike siirete hargnemissuundade prognoosimisel ei õnnestu käsujälge prognoosida .  Joonis <arv>. Jäljevahemäluga käsuvõtuüksuse mudel KÄSKUDE JÄRJEKORRAVÄLINE VÕTT Tõsist probleemi käskude rööptöötluse korraldamisel kujutavad käsuvahemälus esinevad möödalasud . Möödalaskudest tingitud jõudluse vähenemist püütakse protsessoreis korvata käskude järjekorravälise käsuvõtuga . Protsessoris , kus käske täidetakse sellises järjestuse , nagu nad paiknevad programmis , tuleb käsuvahemälus esineva möödalasu korral oodata seni , kuni vajalik käsk või käsujada on edastatud protsessorisse . Alles seejärel tohib programmis üle minna järgnevate käskude ( käsujadade ) töötlemisele . Käskude töötlust saab protsessoris korraldada palju efektiivsemalt , kui rakendada käskude järjekorravälist käsuvõttu . Sellisel juhul lihtsalt eiratakse ajutiselt seda käsujada , mille võtul tekkis möödalask , s.t sisuliselt peatatakse antud käsujada töötlus . Alles pärast peatatud käsujada täiendamist puuduvate käskudega alustatakse taas selle töötlemist . Et protsessor suudaks erinevaid ( segi paisatavaid ) käsujadasid korrektselt töödelda , ei lubata käsujada töötlemist alustada mitte suvalisest kohast , vaid käsujadadesse viiakse sisse spetsiaalsed koostepunktid ( merge point ) , alates millest tohib alustada käskude töötlemist . Samas käskudest , mille võtt on küll toimunud , kuid mis jäävad näiteks madala usaldatavusega hargnemise ja koostepunkti vahele , hüpatakse lihtsalt üle . ( Jätkub järgmises numbris ) <arv> Siinkohal oleks otstarbekas teha mõned selgitavad märkused . Et artiklis käsitletakse üksnes mikroprotsessorite arhitektuuri küsimusi , siis termini “ mikroprotsessor ” lühema vastena on kasutatusel ka “ protsessor ” . Harilikult ei loeta mõisteid mikroprotsessor ja protsessor mitte identseteks , vaid subordinaarseteks . Kui vaatluse all on mikroprotsessorite ( protsessorite ) arhitektuur , siis eeskätt mõistetakse nende all protsessorite käsustike ülesehitust . Käsustikud kujutavad endast ühenduslüli protsessorite riistvara ja neis töödeldavate programmide vahel . Kui räägitakse aga mikroprotsessorite mikroarhitektuurist , siis on uurimisobjektiks protsessorkiipide sisemine struktuurne korraldus , neis rakendatavad käsu- ja/või andmekonveierid , kiibisisesed vahemälud , registrikogumid jms. <arv> Olenevalt informatsiooni ( käsu- ja andmevoogude ) töötluse korraldusest arvutis ( mikroprotsessorsüsteemis ) , eristatakse Flynni taksonoomias nelja arhitektuuriklassi : SISD ( Single Instruction stream , Single Data stream ) , SIMD ( Single Instruction stream , Multiple Data streams ) , MISD ( Multiple Instruction streams , Single Data stream ) ja MIMD ( Multiple Instruction streams , Multiple Data stream s ) . <arv> Andmeskalaarse arhitektuuriga protsessoreist on tuntumad IRAM ( Intelligent RAM ) ja kiipmultiprotsessorid ehkCMPd ( chip multiprocessor ) Samasse arhitektuuriklassi võiks lugeda samuti laineskalaarse arhitektuuri ( w ave scalar ) . Laineskalaarne arhitektuur on m õeldud skaleeritavate , suhteliselt madala keerukusastme , kuid kõrge jõudlusega mikroprotsessorlülituste loomiseks . Arhitektuuris eeldatakse aruka mälusüsteemi olemasolu . Keskset ülesannet täidab laineskalaarses protsessoris lainevahemälu ( wave cache ) , kus põhiliselt toimubki informatsiooni töötlemine [ <arv> ] . Andre Veski , TTÜ informaatikainstituudi bakalaureus ; Leo Võhandu , TTÜ emeriitprofessor Lugeja ette toodav lugu on seotud Eesti tingimustes üpris olulise probleemiga . Nimelt on kõigis paikkondades maaomanike krundid sageli tükeldatud . Valdaja ise elab ühel maatükil oma majas , aga riigikorra vahetumisega tekkinud maade tagastamisprotsess pluss veel suguvõsalise pärimise keerdkäigud on põhjustanud kruntide killustumise . See ei ole loomulikult eriti efektiivne eeldus edukaks majandamiseks . Kui asja lähemalt uurida , siis selgub , et mitme naabri omandeid koos vaadates tekib sidus maavaldus . Matemaatiku-informaatiku ette kerkib nüüd üsna loomulik ülesanne kõigi asjahuviliste vahel see maavaldus nii ümber planeerida , et tekiksid kenad konsolideeritud ( s.o ühes tükis olevad ) osavaldused . Ja mis kõige tähtsam - kõik osalised peaksid selle ümberjaotatud tulemusega igati rahul olema . Kõik peavad tunnetama , et tekkinud jaotus on õiglane , võrdsustav ja mis enamiku jaotuste puhul ikka ülioluline on - keegi ei tohi kellegi peale kade olla . Eestlastele on ju nii omane tuttav väljend , et ma kohe ei või vaadata , kuidas teisel hästi läheb , närib hinge nagu kreissaega Kuidas siis toimida ? Mõne aasta eest kirjutas seeniorautor A &amp; A-sse ülevaate sellest , kuidas ta juba igiammu , <arv>. aastal Eesti juristide ajakirjas päranduse jagamise ja abielulahutuse puhul tehtavat varanduse jagamist objektiviseerida püüdis ( Võhandu , <arv> ) . Peamine moraal tollases ammuses loos oli see , et lihtsa näite varal õnnestus klassikalise Steinhaus-Knasteri jaotusmeetodi puhul viidata oma sisemise subjektiivse hinnangu järgi õiglase tegutsemise vajadusele . Niipea kui jaotamises osaleja hakkas trikitsema ning lootis konkurentide mõtteviisi ette näha ja selle arvel kasu saada , sattus ta silmapilkselt ohtu hoopis rohkem kaotada , kui ta lisavõiduks saada lootis . Eelmises A &amp; A artiklis sai antud ülevaade ka üpris vastsest ( <arv> ) jaotamismetoodikast , mille autoriteks olid USA teadlased S. Brams ja A. Taylor . Selle meetodi plussiks oli õiglane ja kadedusvaba jaotamine . Järgnevas loos püüame anda ülevaate viimase paari aasta jooksul õiglase jaotamise meetodite alal saadud tulemustest ja ühtlasi täiesti konkreetselt näidata , kuidas tuleb toimida , et konsolideerimise tulemused sobilikud oleksid . SISSEJUHATUS Niikaua kui on eksisteerinud maade eraomand , on inimesed maa pärast tülitsenud . Enamik sõdugi on toimunud territooriumi pärast . Väiksemad , kuid sagedasemad tülid maa pärast toimuvad nt pärijate või piirinaabrite vahel . Igasuguse jagamise puhul tundub kellelegi , et tema suhtes on ebaõiglane oldud . Kui jagatav maa-ala koosneb mitmest tükist , mis kõik on erineva kvaliteediga , oleks võrdsuse huvides õiglane jagada iga tükk osalejate vahel pindvõrdselt . Lahendus , kus tundub , nagu kõik saaksid võrdselt kasu , on petlik . Killustatuse seisukohalt oleks mõistlikum , kui iga osaleja saaks võimalikult suure pinna vähima lahustükkide arvuga . Et säärane jaotusviis võrdne võiks olla , pole esmapilgul märgatav . Samas kui arvestada osanike hinnanguid jaotatavatele kruntidele , võib leida lahenduse , kuidas iga osaleja soovid oleksid täidetud ning ootused ületatud . Õiglase jaotuse saavutamiseks tuleb opereerida osaliste subjektiivsete väärtushinnangutega . Peaaegu alati on arvamused inimeste seas erinevad , mis võimaldabki vahel saavutada kõiki osapooli rahuldava jaotuse . Praegu on maa ümberkruntimiseks kasutusel algoritmiliselt keerukad süsteemid , mille sisendiks on andmed maa seisukorra ning kasutuse kohta . Süsteemide suurimaks puuduseks on see , et ei arvestata piisavalt omanike soovidega . Tulemuseks saavutatakse ekspertarvamuse järgi õiglane jaotus , kuid sellega ei pruugi rahul olla kõik maaomanikud . Põhjuseks on erinevad arusaamad ja subjektiivsed hinnangud territooriumi väärtusele . Käesoleva artikli peamine eesmärk ongi pakkuda lahendust territooriumi jaotamisest tulenevatele vaidlustele . Samas võib siin kirjeldatud meetodeid rakendada ka laiemalt maa ümberjagamisest ehk konsolideerimisest tulenevate probleemide lahendamiseks . Definitsioon <arv> : Objektide jaotus on efektiivne , kui ei esine teist jaotust , mis oleks kõigile või mõnele osalejale parem ning samas ei oleks mõnele halvem [ Brams ja Taylor , <arv> ] . Definitsioon <arv> : Objektide jaotus on kadedusvaba , kui iga osaline saab oma arvates vähemalt nii palju kui teine suvaline osaleja [ Brams ja Taylor , <arv> ] . Definitsioon <arv> : Borda kriteerium on selline objektide valik , kus neile antud hinnangute summa oleks suurim võimalik . <arv>. OLEMASOLEVA MAA JAGAMISE MEETODID Seni on praktikas enamasti kasutusel ekspertarvamusel põhinevad hinnangud ja võrdsed jaotused . Eksperdi arvamus põhineb sõltumatutel väärtustel , nagu pinnase tüüp , ligipääs teedele vms riiklikest registritest ning andmekogudest saadavatel andmetel . Üldjuhul küsitakse ka omanike arvamust ja ootusi konsolideerimise tulemusele . Viimane jääb tihti arvestamata ning see tingib maaomanike rahulolematuse . Hetkel on välja töötatud maa konsolideerimise töövahend COPA ( Concentración P a rcelaria , hisp k ) [ Touriño , Rivera , Alvarez , <arv> ] ( joonis <arv> ) . Rakendus saab andmeid mitmest riiklikust registrist : esialgne katastriüksuste jaotus ; pinnase tüüpide jaotus . Olemas on geograafilised andmed teede , jõgede jm alade kohta , mida omanike vahel ei jagata , ning takistused : elektriliinide , kraavide vms näol . Omanikelt küsitakse ka , millise kujuga nad parima meelega tulevasi maaüksuseid näeks . Kogutud andmete põhjal luuakse iteratiivselt uued üksused . Protseduuri täpsem kirjeldus on järgmine . <arv>. Territoorium jagatakse teedega , jõgedega vm looduslike piiridega piiratud aladeks , mille piires korraga töötatakse . <arv>. Igale omanikule määratakse algpunkt , mille ümber hakatakse temale maad iteratiivselt “ ehitama ” ( joonis <arv> ) .  Joonis <arv>. COPA koostisosad [ Touriño , Rivera , Alvarez , <arv> ]  Joonis <arv>. Uute maatükkide leidmine <arv>. Laiendamine toimub elementide kaupa ( element - väiksem ala , mille võrra laiendus toimub ) . Igas laiendamise iteratsioonis arvestatakse funktsioone , mille tulemusena valitakse loodavale maaüksusele välja järgmine element . Funktsioonid mõjutavad järgmise punkti ( elemendi ) valikut . a. Kui tekib olukord , kus maaüksust enam laiendada ei ole võimalik , sest ümberringi on kõik elemendid juba hõivatud , määratakse esialgse alguspunkti omanikule uus lähtepunkt , mille ümber algab uus laiendamine . <arv>. Kui on tekkinud lahustükid ( joonis <arv> , a ) , kus maa-alad <arv> ning <arv> kuuluvad ühele omanikule , siis tõstetakse tekkinud tükid ümber nii , et ühe omaniku üksused oleksid omavahel naabrid ( joonis <arv> ) . <arv>. Viimasena tehakse piiride silumine , et lõpptulemus oleks võimalikult lähedane ristkülikule ( joonis <arv> ) . Kirjeldatud meetod arvestab ümberkrunditava maa olusid ja samas ka omanike ootusi , kuid siiski ei ole selle abil võimalik leida kõiki maaomanikke rahuldavat tulemust . Ümberjagamise tulemusena võib juhtuda , et mõned osalised on halvemas seisus kui enne ning teised jälle paremas . Ümberkruntimise atraktiivsemaks muutmiseks tuleks protsessi modifitseerida sedasi , et iga tulemus oleks kõigile sobiv .  Joonis <arv>. Eraldatud maaüksuste ühendamine  Joonis <arv>. Piiride silumine Eestis on võimalik ümberkruntimist teha vastavalt maakorraldusseaduses sätestatule ( RT I <arv> , <arv> , <arv> ) . Seaduse järgi algatab ümberkruntimise kohalik omavalitsus , kuid ettepaneku toimingu algatamiseks võivad teha kõik asjast huvitatud . Seni on Eestis territooriume ümber jagatud väga vähe . Võib arvata , et see on põhjustatud maaomanike huvi puudumisest . Sellest tulenevalt ei ole teadaolevalt Eestis vastavat metoodikat välja töötatud . <arv>. TERRITOORIUMI ÕIGLANE JAOTUS Millest alustada territooriumi jagamist ? Alustuseks tuleb valida ala , mida hakatakse jaotama . Mitmed meetodid soovitavad valida teedega , jõgedega vm looduslike piiridega eraldatud piirkond [ Steinhaus ja Knaster , <arv> ; Touriño , <arv> ] . Selline valik seab teatud piirangud . Näiteks on mõni maaomanik , kes ei olegi valitud regioonis maa omamisest huvitatud . Tema hindab rohkem kuskil kaugemal asuvat maatükki . Jagatava ala valimisel ei saa ka lõpmatuseni minna ja valida ümberkruntimiseks tervet maakera , tuleb leida mingisugune optimaalne suurus . Soovitatavalt võiks see olla haldusüksus , millel on oma maakorraldaja ( ei tohiks valida suuremat ) . Samas tuleks jälgida ka seda , et maa jagamine oleks hallatav . Osalejate arv tuleb hoida minimaalne . Soovitatavalt - kolm kuni kuus omanikku . Olenevalt meetodist võib neid olla ka rohkem . Rohkemaarvuliste osalejatega kaotavad meetodid oma läbipaistvuse ja raske on hinnata , kas jaotus oli tasakaalus . <arv>.<arv>. TERRITOORIUMI JAOTUS LÕIKAMISMEETODIL Territooriumi jagamine lõikamisega tundub esmasel vaatlusel kõige sobivam . Edasisel kasutamisel selgub , et keeruliseks osutub n-ö paranduste jaotamine . Steinhausi ( <arv> ) meetodi järgi võib viimaseid nimetada nt hinnangute erinevuseks . Edaspidi kasutame mõlemat sünonüümidena . Siinkohal esitame mõned probleemid , miks Steinhausi ( <arv> ) meetodiga ei ole võimalik jagada maad suvaliselt , vaid kõikidel osalistel tuleb piirijooned märkida paralleelselt . Jagamise protseduur võiks olla järgmine : <arv>. Kõik ( n ) osalised jagavad maa nende arvates võrdseks osaks . <arv>. Järgmisena leida selline jaotus , mille puhul maa väärtus oleks maksimaalne ehk leida maatükk , mida igaüks väärtustab kõige enam . Selleks kasutatakse mängija hinnangut ning sama maaosa pindala suhet . Nende numbrite vahekorrast tuleb välja , millist osa <arv> m<arv>-st keegi kõige enam hindab . a. Et osa maatükke kattub , tuleb proovida läbi kõik kombinatsioonid ning valida selline variant , mille puhul pindalade summa oleks kõige väiksem . Sellist jaotust ei pruugi leiduda . i . Kas esineb selline kombinatsioon , milles ükski tükk teisega ei kattu ? ii . Mida teha siis , kui sellist ei leidugi ? <arv>. Edasi on kaks võimalust : a. Kogu maa jaotub osalejate vahel , mis saab esineda vaid siis , kui kõik osalejad hindavad territooriumi võrdselt . b . Kõik omanikud on oma arvates saanud maast täpselt <arv>/n ning osa maast on veel jaotamata . Seda ei saa enam kõikide vahel jagada , sest kasulikum on niisuguseid tükke hoida tervikuga koos , mitte eraldi . Jaotus tuleks teha vaid nende vahel , kes on selle tükiga naabrid . Samas on oluline jälgida ka maaüksuste kuju , mis osutub keeruliseks ning vajab intelligentset süsteemi . Lisaks muudab viimane väide ettevõtmise ka töömahukaks . Meetodi kasutamiseks ei tohi osalejate tehtud piirid omavahel ristuda . Ristumiste tulemusena jagamata maad on keeruline jagada . Näide <arv>. Kahe osalise vaheline jagamine Kahe osalise vahel on vaja jagada maatükk . Mõlemad on esitanud ettekujutuse , kuidas seda võiks teha ( joonis <arv> ) .  Joonis <arv>. Kahe osalise jaotused Võttes need hinnangud kokku , saame kahe osalise vahel jagamiseks neli piirkonda ( joonis <arv> ) .  Joonis <arv>. Piirkonnad Jooniselt ei ole üheselt selge , millist maa-ala kumbki osaline rohkem hindab . Steinhausi ( <arv> ) meetodi järgi ei ole võimalik ülesannet lahendada . Steinhaus ( <arv> ) ise ka ütleb , et selline piirang eksisteerib . Tuleb leida omanike hinnangud kõikidele eri osadele . Seda võib näiteks teha , jagades osaliste hinnangud nende poolituskohal kaheks ning siis omakorda vastavalt pindalale . Sarnast protseduuri kirjeldame järgmises punktis . <arv>.<arv>. TERRITOORIUMI JAOTAMINE EKSPERTHINNANGUGA Eelmisest punktist oli näha , et maa-ala jaotamine on keeruline . Tuleb arvestada tõsiseid piiranguid . Lahenduseks võib ekspert võimalikud piirid eelnevalt määrata . Spetsialistidel on olemas regiooni pinnastiku tüüpide andmed ja ligipääs katastri andmetele , mille põhjal on võimalik konstrueerida omanikest sõltumatu maajaotus , mille eesmärk on suurendada võimalikult palju ühelt maaühikult saadavat tulu ning kasutada loodusressursside potentsiaali maksimaalselt . Arvestades võimalust , et iga osaleja ei saa oma tahtmisele vastavat osa , võib eksperdi seatud piire muuta , selleks et kõik osapooled oleksid rahul . Säilitamaks siiski mõistlikku loodusressursside kasutamist , peaks spetsialist seadma nivoo koostatud üksuste piiride muutmiseks . Omanike nõusolekul ja võimalusel võivad abiks olla ka rahalised kõrvalmaksed . Teistest rohkem saanud maaomanik maksab temast vähem saanud osanikele erinevuse rahaliselt kinni nii , et lõpuks oleks kõikide tulemus võrdne . <arv>.<arv>.<arv>. Õiglane jaotus lõikamisteta Ekspert jagab maa oma parema äranägemise järgi osadeks . Osade arv ei pruugi võrduda jagamises osalejate arvuga . Antud meetodis eeldame siiski , et maa on jagatud vähemalt n ( jagajate arv ) osaks . Vastasel juhul peaksid teised omanikud kompenseerima maata jäänud osalejatele nende osa . Esimeses näites on osanikeks valitud pärijad , sest nende vahel esineb tihti vaidlusi , kuidas jagada territoorium omavahel võrdselt . Iga pärija saab vähemalt ühe osa jagatavast valdusest . Teine näide rõhutab erinevusi maa jagamise ja ümberkruntimise vahel . Viimase puhul peab iga talunik saama vähemalt nii palju maad , kui tal hinnanguliselt enne oli . Näide <arv>. Pärandi jagamine Pärijate vahel on jagamisel maatükk ( joonis <arv> ) , mille eksperdid on antud juhul jaganud neljaks .  Joonis <arv>. Ekspertide jaotus Pärijaid on kaks ning mõlemad hindavad maatükke erinevalt ( tabel <arv> ) . Tabel <arv> Pärijate hinnangud  Sellise territooriumi jagamiseks kahe pärija vahel on <arv>= <arv> võimalust ( tabel <arv> ) . Tabelis on märgitud head valikud kaldkirjas ning halvad näitajad ( kadedus ) rasvaselt . Parima efektiivsuse saavutamiseks tuleb leida maksimaalne pärijate võitude summa . Samas peab leiduma ka jaotus , mis samaaegselt oleks nii efektiivne kui ka kadedusvaba . Võrdsus tuleb saavutada hiljem kompensatsioonidega . Tabel <arv> Jagamise permutatsioonid  Haake , Raith ja Su ( <arv> ) meetodi järgi tuleks valida maksimaalse hinnangute summaga jaotus . Nagu näha tabelist <arv> , on see <arv>. Kokkuvõttes saavad pärijad <arv>% - <arv>% + <arv>% - <arv>% = <arv>% rohkem oma esialgsest ootu- sest . Nagu näha , ei ole kõige suurema summaga ( <arv> ) jaotus võrdne . Pärija <arv> võit : ( tulemus - soov ) /soov = ( <arv> - <arv> ) /<arv> <arv>% Pärija <arv> võit : ( tulemus - soov ) /soov = ( <arv> - <arv> ) /<arv> <arv>% Pärija_<arv> ( Efektiivsus_<arv> ) võit on enam kui viis korda suurem Pärija_<arv> ( Efektiivsus_<arv> ) omast . Samas on näha , et kadedust pärijate vahel ei ole . Sellega võiks leppida , aga juhul , kui mõlemad osapooled teavad teise hinnangut , ei pruugi nad tulemusega rahulduda . Tuleb leida mõlema jaoks võimalikult võrdne variant . Summaarselt on pärijate võidud suuremad <arv>% - <arv>% + <arv>% - <arv>% = <arv>% , kui valida kombinatsioon hinnangute summaga <arv>. Selles kadedust teineteise suhtes ei eksisteeri , mõlemad saavad oma arvates parima lahenduse . Siiski jääb nende vahele ebavõrdsus <arv>% , millega nad võiksid leppida , sest enam paremini neil jagada ei õnnestu . Ometi ei pruugi vähem võitu saanud pärija nõus olla ning vahed tuleb kompenseerida teistest vahenditest , nt rahaga . <arv>.<arv>.<arv>. Õiglane jaotus rahaliste lisamaksetega Eelmises peatükis nägime , et osaliste vahele võib siiski jääda mõningane ebavõrdsus . Selle suurus oleneb palju hinnangutest ja nende erinevusest . Õiglane jagamine peab olema : efektiivne - kõik saavad vähemalt oodatud osa ; kadedusvaba - keegi ei eelista teise osalise tulemust enda omale ; võrdne - kõikide tulemus võrreldes esialgse ootusega on võrdne . Bramsi ja Taylori ( <arv> ) järgi peabki leiduma kahe osalise vahel selline jaotus , mis rahuldab samaaegselt kõiki neid kolme kriteeriumit . Meie näite ( näide <arv> ) puhul on esimesed kaks tingimust täidetud . Saavutamaks võrdset päranduse jaotust , tuleb Pärijal_<arv>-l maksta Pärija_<arv>-le kompensatsiooni . Valime kõige väiksema ebavõrdsusega variandi . Samas jaotuses on ka mõlemal osalisel kõige suurem võit - <arv>% . Võrdleme mõlema pärija tulemusi ( tabel <arv> ) . Tabel <arv> Võrdseim jaotus  Kompenseerime nii , et võit oleks mõlema arvates võrdne . Kokku on mõlemad pärijad saanud <arv> ühikut üle oma ootuste , kuid see ei jagunenud nende vahel võrdselt . Pärijate võidud peaksid olema järgmised ( Võhandu , <arv> ) : Pärija_<arv> : ( <arv> * <arv> ) / <arv> = <arv>,<arv> Pärija_<arv> : ( <arv> * <arv> ) / <arv> = <arv>,<arv> Leidsime , et pärijad peaksid saama vastavalt <arv>,<arv> ja <arv>,<arv> ühikut rohkem oma soovist , et suhteline võit oleks võrdne . Leitud tulemuse saavutamiseks tuleb Pärija_<arv>-l maksta <arv> - <arv>,<arv> = <arv>,<arv> ühikut Pärija_<arv>-le ( tabel <arv> ) . Tabel <arv> Tasakaalustamise tulemus  Mõlema pärija võidud on võrdsed - <arv>% rohkem oma esialgsest ootusest . Samas on toimunud teatud efektiivsuse langus . Maksja kaotas suhteliselt rohkem , kui teine võitis . Valikuks võib kasutada Borda kriteeriumit ( definitsioon <arv> ) . See ütleb , et parima tulemuse saavutamiseks tuleb valida kombinatsioon , milles hinnangute summa on suurim . Meie näites on see <arv> ( tabel <arv> ) . Nimetame sellist jaotust Borda jaotuseks . Tabel <arv> Borda jaotus  Kasutades sama tasakaalustamismeetodit , saame : Pärija_<arv> : ( <arv> * <arv> ) / <arv> = <arv> Pärija_<arv> : ( <arv> * <arv> ) / <arv> = <arv> Tabel <arv> Borda kriteeriumi valikuga võrdsustamine  Saavutatud lahendus ( tabel <arv> ) on tõepoolest efektiivne , kadedusvaba ning võrdne . Samas on märkimisväärne , et võrdsustamise tulemusena saavutatud tulemus on suurema efektiivsusega kui esialgu valitud variant ( tabel <arv> ) . Järelikult viib Borda kriteeriumi järgi otsustamine parima lahenduseni . <arv>.<arv>.<arv>. Õiglane jaotus lisatükeldamisega Alati ei pruugi pärijatel olla vabu rahalisi vahendeid või ei ole selle kasutamiseks soovi . Üks võimalus on olemasolevaid maatükke poolitada ning jagada osad nii , et tulemuseks oleks võrdne jaotus . Käesolev territoorium on jagatud ekspertide poolt neljaks ning nende arvates on selline tükeldus parim . Lõigates ühest jagatavast maa-alast väikese osa , ei pruugi selle ala pärijal olla sellise tühise tükiga midagi teha . Selle ületamiseks tuleks iga maatüki juurde spetsialistil lisada minimaalne osa , millest võiks teenida tulu . Eelmistes punktides esitatud nelja maatükiga territooriumi jaoks on eksperdi poolt kehtestatud protsendid esitatud tabelis ( tabel <arv> ) . Tabel <arv> Väikseim kasumlik ala  Eestis on maakorraldusseadusele vastavalt ( RT I <arv> , <arv> , <arv> ) üks maakorralduse eesmärke suurendada maa kasutamise efektiivsust , tekitades võimalikult vähe lahustükke . Tuleb hoida ühe omaniku valdused omavahel ühendatuna - ühe maaüksusena . Seetõttu tuleb võimalusel anda kompensatsiooniks osa naabertükist . Sarnaselt saab rakendada ka põhimõtet : “ Mina ei ole sinu naaber , kuid mul on naaber , kes on ka sinu naaber ” , mille abil saaks tasakaalustamist korraldada , nagu on kirjeldatud <arv>. peatüki punktis <arv>. Antud näites on tegemist vaid kahe pärijaga , neil on alati omavahel piir olemas . Järelikult ei ole antud juhul seda printsiipi tarvis kasutada . Küll läheb seda vaja kolme ja enama osalise vahelistes jagamistes . Valime siin jagamiseks samuti variandi Borda kriteeriumi alusel ( tabel <arv> ) . Tabel <arv> Borda jaotus  Valikus on Pärija_<arv> tulemus esimesest parem . Järelikult peab kompensatsioon toimuma tema arvelt . Pärija_<arv>-le kuulub kolm maatükki , järelikult on kompenseerimise variante kolm . Oletame , et tasakaalustamine toimub esimese tüki arvelt . Täidetud peab olema järgmine võrdus :  ehk  Võrdus peab kehtima , et mõlemal pärijal oleks lõpuks tunne , nagu nad oleksid saanud teisega võrdselt võidu . Edaspidi tähistavad argumentide indeksid valemites tabeli ( tabel <arv> ) veergude pealkirju . Ühelt pärijalt teisele siirdatava territooriumi osa arvutame järgmise valemiga : Valem <arv> , kus i on maatükk , mida kahe pärija vahel jagatakse Pärija_K loovutaja pärija ; Pärija_L saaja pärija ; Pärija_LKPärija_L hinnang Pärija_K osale ilma jagatava maatükita . Meie andmete puhul tabelist ( tabel <arv> ) on tulemus järgmine :  Arvestades , et meil on piirang lõigata tükist <arv> ära vähemalt <arv>% , näeme , et <arv>% isegi ületab seda . Järelikult <arv>. maatükki võib võrdsustamiseks kasutada . Realiseerime ala jagamise vastavalt leitud protsendile ( tabel <arv> ) . Tabel <arv> Maa jaotus tüki nr <arv> jagamisel  Kadedus ja võrdsus saavutavad mõlemad tasakaalu ( tabel <arv> ) . Võrreldes saadud tulemust ( tabel <arv> ) ja rahaga tasakaalustamist ( tabel <arv> ) , võiks puht matemaatikast lähtudes öelda , et raha on maast hinnalisem . Summaarselt ja individuaalselt on rahaga kompenseerimise võidud suuremad . Antud juhul on see vaid <arv>% , kuid hinnangute muutumisel võib see muutuda . Uurime , kas teise või neljanda tüki jagamisel saavutatakse parem tulemus või mitte . Kasutades valemit <arv> , saame :  Kolmandast tükist tuleb <arv>,<arv>% Pärija_<arv>-l loovutada Pärija_<arv>-le , mis täidab napilt alapunkti alguses esitatud nõuet . Tulemuseks saame samuti kadedusvaba ning võrdse jaotuse ( tabel <arv> ) . Tabel <arv> Maa jaotus tüki nr <arv> jagamisel  Põhjus , miks <arv>. tüki jagamisel toimus efektiivsuse langus , peitub pärijate hinnangutes . Nimelt kolmanda ala hinnangute erinevused on palju suuremad kui esimesel . Järelikult on õiglase tulemuse kriteeriumide täitmiseks vaja valida võrdsustamiseks alad , mille suhteline erinevus on minimaalseim . Praegu on see <arv>. tükil : ( <arv> - <arv> ) / <arv> = <arv>% ; <arv>. tükil : ( <arv> - <arv> ) / = <arv>% . Valiku tegemiseks on nr <arv> maatüki jagamine pärijate vahel igas näitajas parem . Kokkuvõttes võidavad siis mõlemad <arv>% rohkem , võrreldes <arv>. maatüki jagamisega . Samuti on maakasutuse seisukohalt tüki jagamine efektiivsem , sest ei teki väiksed lahustükke . <arv>.<arv>.<arv>. Õiglane jaotus võrdsete skaaladega Kasutades eelmise näite hinnanguid , vaatame , milliseid muutusi esineb tulemustes , kui kasutame mõlema pärija puhul sama skaalat ( näide <arv> ) . Näide <arv>. Fikseeritud koguväärtusega jagamine Ümberarvutatud ning ühisele skaalale kohandatud pärijate hinnangud ( tabel <arv> ) . Tabel <arv> Fikseeritud summaga hinnangud  Leiame tabelis <arv> esitatud hinnangutega sarnaselt eelmise näitega kõik kombinatsioonid ning efektiivseima , kadedusvabama ning võrdseima jaotuse ( tabel <arv> ) . Võrreldes kõige efektiivsemat ning kadedusvabamat varianti eelmises lahenduses ( näide <arv> ) saaduga , on näha , et valik langeb sama variandi peale . Kasutades ka Borda kriteeriumit , osutub käsitletavas näites valituks sama kombinatsioon . Järelikult võib skaalade võrdsustamise tulemusena muutuda parima jaotuse valimine lihtsamaks . Teine positiivne külg skaalade ühtlustamise juures on kompensatsiooni ning lõikeprotsentide valemite lihtsustatud kujud . Mitmed väärtused on mõlemal pärijal võrdsed ( pärijate soovid ja hinnangute summa ) , mistõttu need taanduvad välja . Et võrdus oleks täidetud , tuleb kompenseerimise protsent leida valemi <arv> abil . Tabel <arv> Jagamise permutatsioonid  Realiseerime kompenseerimise kõigepealt <arv>. maatükiga ( tabel <arv> ) ja siis <arv>. tükiga ( tabel <arv> ) . Tabel <arv> Fikseeritud summadega nr <arv> kompenseerimine  Tabel <arv> Fikseeritud summadega nr <arv> kompenseerimine  Võrdleme omavahel mõlema lähenemisviisiga saadud tulemusi ( tabel <arv> ) . Tabel <arv> Skaalade võrdlus  Antud juhul avaldas hinnangute skaalade ühtlustamine mõju ka lõpptulemusele . Ebaühtlaste hinnangute puhul osutus Borda kriteeriumi järgi valituks erinev maa-alade kombinatsioon kui ühiste skaalade puhul . Kumb neist on õige , on raske otsustada , sest tundub , et õigsus sõltub samuti hinnangutest . Lõpptulemuses on oluline , et oleks tagatud kadedusvabadus , võrdsus ning valitud jaotus oleks efektiivne . <arv>.<arv>. ÜMBERKRUNTIMINE EKSPERTHINNANGUGA Tuleb silmas pidada , et maa ümberkruntimine on vaid osa maapiirkondade arengust . Ainult territooriumi ümberjagamist rakendades on muutused väikesed ja tihti ei anna soovitud efekti ( FAO , <arv> ) . Suuremas plaanis on eesmärk saavutada parem ühiskondlik heaolu ning tootlikkuse kasv põllumajanduses . Ümberpaigutusega saavutatakse loodusressursside efektiivsem kasutus ja läbipaistvam haldamine . Pikemas perspektiivis tagab see talude elusuutlikkuse . Samas paraneb ka transpordi , kommunikatsiooni ja niisutussüsteemide investeeringute tasuvus ning kuluefektiivsus . Maa konsolideerimine kitsamas tähenduses on efektiivsema maajaotuse leidmine või olemasolevate üksuste ümberjaotamine . Talunike põllud muutuvad ühtlasemaks , sisaldades endas vähem eraldatud maatükke . Paraneb maa kuluefektiivsus ning seeläbi põllumeeste konku- rentsivõime . Üldine põhimõte on , et maa ümberkruntimise tulemusena ei oleks ükski omanik halvemas seisus kui enne seda . Vastasel juhul võib kasutada rahalist kompensatsiooni . Tegelikkuses on võrdsust keeruline rakendada . Jagatava maa seisukord ja võimalused on erinevad . Neid probleeme lahendatakse tavaliselt ekspertide komiteega või kohalikest maaomanikest koosneva komisjoniga . Ümberkruntimisel õiglase jaotuse saavutamiseks võib kasutada sama meetodit , mida territooriumi jagamisel . Erinevuseks on omanike ootused . Mis senimaani olid võrdsed , võivad nüüd erineda . Näide <arv>. Õiglane ümberkruntimine Oletame , et enne konsolideerimist on maa jagatud järgmiselt ( joonis <arv> ) .  Joonis <arv>. Esialgne maajaotus Number <arv>-ga tähistatud alad kuuluvad Omanik_<arv>-le ja <arv>-ga tähistatud alad Omanik_<arv>-le . Eksperdid teostavad sama jaotuse nagu eelmiseski punktis ( joonis <arv> ) . Omanike hinnangud maatükkidele on samad , mis enne pärijatel . Et üks ala on jagatud pooleks , siis on nende osade hinnangud tabelis <arv> sulgudes . Rasvases kirjas on tähistatud nende alade hinnangud , mis kuuluvad enne ümberjagamist vastavale omanikule . Harilikus kirjas on tähistatud hinnang eksperdi koostatud aladele . Tabel <arv> Esialgsed omandid  Leiame parima võimaluse , kuidas territooriumi ümber jagada ( tabel <arv> ) . Tabel <arv> Jagamise permutatsioonid  Teeme valiku Borda kriteeriumi järgi . Valituks osutub variant summaga <arv>. Tabelis <arv> on esitatud valitud kombinatsiooni mõlema omaniku hinnangud , kusjuures rasvases kirjas on hetkel vastava omaniku omandis olevad maa-alad . Tabel <arv> Valitud kombinatsioon  Kõige väiksem erinevus omanike hinnangute vahel on esimese maatüki puhul . Otsides osa , mille Omanik_<arv> peaks andma Omanik_<arv>-le leiame , et see on üle <arv>. Järelikult tuleb kompenseerida veel mõne teise ala arvelt . Parimaks osutub neljas tükk . Leiame loovutamisele mineva maatüki osa . Vastavalt eespool esitatud valem <arv>-le , saame :  Järelikult <arv>% läheb neljandast maatükist Omanik_<arv>-lt Omanik_<arv>-le . Realiseerime võrdsustamise ( tabel <arv> ) . Tabel <arv> Võrdsustamine  Kogu territoorium jaguneb pärast ümberkruntimist vastavalt tabelis <arv> esitatud arvutustele , nagu on joonisel <arv>.  Joonis <arv>. Maaomandid pärast ümberkruntimist Võrreldes jooniseid <arv> ja <arv> , on näha , et ümberkruntimine antud meetodiga ei andnud loodetud tulemust , kus mõlemal maaomanikul oleks vaid üks maa-ala . Maaolukord siiski paranes , sest esialgse nelja maaüksuse asemel on nüüd kolm . Põhjuseks , miks parimat tulemust ei saavutatud , on omanike kõrgemad hinnangud esialgu omatud maa-aladele . Järelikult saab suurima kasu territooriumi ümberkruntimisest siis , kui omanikud selle ise algatavad . Millal nad seda teevad ? Ümberjagamise huvi tekib omanikel , kui neil endil on sellest mingit tulu , s.t nad saaksid oma valdusesse maatükid , mida hindavad kõrgemalt . <arv>. KOKKUVÕTE Õiglase jaotuse iseloomustamiseks võib kasutada kolme kriteeriumit : kadedus , võrdsus ning efektiivsus . Kõik kolm on teatud viisil omavahel seotud . Kadedus näitab , kui palju ühe osaleja arvates teised osalejad temast rohkem said . Efektiivsus iseloomustab iga osaleja tulemust - kui hea on tulemus , võrreldes esialgse ootusega . Jaotus on efektiivne , kui igaüks saab vähemalt nii palju , kui esialgu lootis . Võrdsus näitab tulemuste omavahelist tasakaalu - kõikide efektiivsuse näitajad peavad olema võrdsed . Õiglane jaotus on kadedusvaba , efektiivne ja võrdne . Esialgu võib tunduda , et õiglane jagamine ei ole saavutatav , sest kõigil osise saajatel on jagatavatest asjadest oma arvamus . Kuid just erinevad hinnangud võimaldavadki realiseerida kõiki rahuldava ning õiglase jaotuse . Kahjuks enamik maailmast tihti ei usalda oma isiklikku hinnanguid ja lähtub spetsialisti arvamusest . Rakendades Bramsi ja Taylori õiglase jagamise meetodeid territooriumi jaotamisele , on võimalik leida kõiki osalisi rahuldav lahendus ning samas täita ka maakorralduse peamisi eesmärke . Selleks tuleb kombineerida maakorraldajate nägemus maade jaotusest ning omanike territoriaalsed soovid . Olenevalt jagamises osaliste arvust , tuleb siiski teha mõnel pool järeleandmisi . Saavutamaks kõikide vahel õiglast jaotust , tuleb mõningaid mööndusi teha maakorralduse seisukohast ja ka vastupidi . Samas võib maakorraldajate ja maaomanike vaheliste vaidluste lahendamiseks kasutada sama meetodit ning saavutada mõlemat osapoolt rahuldav tulemus . Kolme ja enama osaleja arvuga jagamise juures ei leidu alati täiesti õiglast jaotust , kuid alati õnnestub täita vähemalt kaks õiglase jagamise tingimust . Põllumajanduses on maa efektiivne kasutamine põhiprioriteet ning selle saavutamiseks on tarvis aegade jooksul killustunud maa ümber kruntida . Kasutades just seda , võime teha õiglase jagamise meetodit koos eksperthinnanguga . Arvestades põllumeeste hinnanguid maatükkidele , saab iga talunik endale ( oma hinnangutes ) kõige väärtuslikuma maa-ala ning on selle harimiseks rohkem motiveeritud . Veel parema tulemuse saavutamiseks tasub edasi uurida , kuidas talunikud hindavad maa-alade kombinatsiooni omamist . Eri tüüpi maade omamine võib olla talunikule kriitilise tähtsusega . Näiteks harides kahte erineva mullastikuga põldu , on ühe ikaldumisel tal teiselt saak siiski võtta . Sedasi garanteerib ta oma jätkusuutlikkuse . Territooriumi võib õiglaselt jagada ka n-ö lõike meetodil , kuid see seab jaotusviisile teatud piirangud . Lastes kõigil osalistel märkida üles tema arvates õiglased jagamise piirid , võib hiljem neid omavahel võrreldes osutuda keeruliseks leida ühest head lahendust . Üheselt ei ole võimalik otsustada , millised maa-alad peaksid kellelegi kuuluma . Protseduur ise eeldab , et kõik jagamise piirid tuleb märkida paralleelselt . Kahjuks ei ole maade jagamisel seda võimalik teha . Sellisel viisil maa jagamine ei täida maakorralduse eesmärke ega ka maaomanike huve , sest raske on sundida loodust nende järgi käituma . Siiski on võimalik meetodit modifitseerides seda ka kasutada . Arvestades iga osalise soovi leida parimad maaüksused , kehtestame kogu jagatavale maa-alale ühtse väärtuse - nt <arv>. Seejärel jagame selle väärtuse võrdselt ühe osalise maatükkide vahel ära . Kui on jagamine nelja osalisega , siis igaüks jagab territooriumi neljaks . Järelikult on igaühe jaoks nende joonistatud maatükk väärt <arv>. Edasi jagame need maatükkidele antud hinnangud territooriumi pindalaga , nii saame osaliste hinnangud igale ruutmeetrile . Järgnevalt toimub maa lõplik jagamine . Igaühele määratakse kõigepealt maa-alad nii , et leitud hinnangute summa oleks suurim võimalik . Kui hinnangud on erinevad , tuleb jagada ülejäägid . Seda võib teha antud töös esitatud meetoditel , kuid lisaks võib veel arvestada saadud maa-ala ning jääktüki vahelist kaugust . Artiklis käsitletud meetodite ja uurimuste kohaselt on võimalik kõiki osapooli rahuldades territooriumit jagada . Edasi tuleks teha katsetused reaalses situatsioonis ning kontrollida , kas esitatud mudel kehtib . Suurimat kasu esitatud protseduuridest võiksid saada tõenäoliselt aktiivsemad maaomanikud , kes hindavad naaberkrunti rohkem kui naaber ise . Hetkel ümberkruntimise suhtes skeptilistele inimestele on võimalik suurema vaevata näidata , kuidas maakorraldus neile kasulik on .  Uudised kogus Uuno Vallner , Majandus- ja Kommunikatsiooniministeeriumi IT arhitektuuri talituse juhataja BALTI TIIKIDE DIGITAALSED KAARDID NAVTEQILT USA digitaalkaartide ja geoinfosüsteemide arendaja Navteq on saanud valmis ja andnud müüki Balti riikide digitaalsed kaardid . Digikaardid näitavad <arv> kilomeetrit Baltimaade teid , samuti näitavad kaardid suuremaid hotelle , tanklaid ja söögikohti . Leedu kaartidel on informatsioon Vilniuse , Kaunase , Klaipeda , Šiauliai ja Panevežise tänavate ja <arv> kilomeetri peamiste maanteede kohta . Läti kaardid kajastavad suuremate linnade tänavate asetust ning <arv> kilomeetrit maanteid . Eesti digikaardid näitavad Tallinna , Tartu , Narva ja Pärnu tänavaid ning <arv> kilomeetrit maanteedevõrgustikku . Navteq on kaartidel andnud ka informatsiooni põhiliste laevateede kohta , mis lähtuvad Baltimaade sadamaist . Navteq on asutatud <arv>. aastal peakorteriga Chicagos . Firmal on <arv> töötajat ning esindused <arv> riigis . TARTU LOOB LINNA KOOLIDELE üHISE INTERNETIKESKKONNA Tsentraalne keskkond võimaldab linnavalitsuse teatel ühtlustada kõikide õpetajate ja õpilaste e-posti aadressid , mis omakorda lihtsustab nendevahelist suhtlust . Uus teenus võimaldab õpetajatel lihtsalt ja mugavalt koostada , hoida ning jagada kolleegidega õppematerjale ja muid dokumente . Tekib juurdepääs dokumentidele ja kirjavahetusele väljaspool kooliarvutit . Loodav keskkond võimaldab kasutada e-kooli registreid . ADOBE ACROBAT <arv> Esimest korda <arv>. aastal avalikkusele tutvustatud PDF-vorminguga ( Portable Document Format ) lootis Adobe hõivata keskse koha dokumendihalduses . Ent kuna parasjagu tegi oma võikukäiku ka Microsoft Office , jäi PDF-vormingu pealetung kontoritesse seisma . Alates <arv>. aastast tasuta jagatud Acrobat Reader ( nüüdne Adobe Reader ) ning integratsioon veebibrausritesse ( <arv> Netscape , <arv> IE ) tegi vormingu kiirelt tuntuks ning varsti ka graafikarohkete lehekülgede veebis avaldamise standardiks . Olulised uuendused : Adobe Reader <arv>. Programmi käivitamisel jäetakse laadimata mõnedki pisimoodulid ; need käivitatakse alles siis , kui seda tegelikult vaja läheb ( enamasti ju ei lähegi ) . Reader kuvab kõiki PDF-faile , seega ka seitsmenda põlvkonnaga lisandunud <arv>D-jooniseid ja objekte , mida saab pöörata , suuremaks ja väiksemaks suumida jms. Lisatud on PDF-failides kommenteerimisvõimalus , mida seni võimaldas vaid Acrobati tasuline versioon . Meilid . Täienenud on Acrobati integratsioon MS Outlookiga ning seda eelkõige turva- funktsioonide osas . Organisaator . Et Adobe'i nägemuses võiksid meie arvutid suuremalt jaolt ainult PDF-failidest koosneda , siis on pööratud tähelepanu ka nende haldamisele . Acrobat sisaldab sarnaselt Photoshop CS ja CS<arv> versiooniga eraldi failihaldusmoodulit . Designer <arv>. Adobe Form Designeri on nüüd pooleldi integreeritud Adobe Acrobat <arv>.<arv> Professionali ning uue nimega . Trükitööstus . Uus versioon pole ära unustanud ka PDF-maailma seniseid põhikasutajaid - disainereid , kujundajaid ja trükitööstureid . Acrobat <arv>.<arv> Professional sisaldab PDF-failide kontrollimise vahendeid , mille tarbeks tuli varem kasutada eraldi programme või pistik- programme . FIREFOX ON EDUKAS Ainuüksi kolme esimese kuuga pärast FireFoxi väljalaskmist <arv>. novembril <arv> laaditi seda alla üle <arv> miljoni eksemplari . Firefox ( FF ) on tõusnud üheks “ kuumemaks ” brausriks . Hinnatakse Firefoxi turvalisust veebisirvijana - on see ju tunduvalt viiruse- ja nuhkvarakindlam kui üldlevinud Internet Explorer . Teine oluline moment on “ tulirebase ” väledus Internetirägastikus navigeerimisel . Vähetähtsad pole ka brausri kasutusmugavus ja välimus . Samas annab “ tulirebase ” nobedust , välimust ja seadistusi kasutaja soove ja vajadusi silmas pidades kohandada . EUROOPA LIIDU ARVATES KURITARVITAB MICROSOFT OMA MONOPOOLSET SEISUNDIT Euroopa Komisjon ähvardab tarkvaratootjat Microsofti uute sanktsioonidega , kui ettevõte ei lõpeta kohe Windowsi monopoolse seisundi kuritarvitamist Euroopa tarkvaraturul . Komisjon nõuab , et Microsoft peab Windowsi Euroopas turustataval versioonil kõrvaldama multi- meediaprogrammi Media Player . Media Player tõkestab praegu analoogiliste programmide turulepääsu . Samuti peab Microsoft jagama oma programmide lähtekoode konkurentidega . Eelmisel aastal määras Euroopa Komisjon Microsoftile rekordilise <arv> miljoni euro suuruse trahvi turuseisundi kuritarvitamise eest . EESTIKEELNE NAVISION Microsoft pakub nüüd oma tuntuima ärilahenduse uut eestindatud versiooni Navision <arv>.<arv> , mis on suunatud keskmise suurusega ettevõtetele ning hõlmab finants- , tootmis- , jaotus- , kliendihaldus- , tarne- , analüüsi- ja e-ärilahendusi . LONGHORN TULEB MÜÜKI <arv>. AASTAL Longhorniks kutsutud Windowsi uus versioon pakub Microsofti hinnangul suuremat turvalisust , paremat graafikat ja lihtsamat failihaldust ning arvutis säilitatava informatsiooni otsingut . Maailma suurima tarkvaravalmistaja kahe operatsioonisüsteemi väljalaske vahe on venimas viie aasta pikkuseks - Windows XP debüteeris <arv>. aasta lõpus ning Longhorn tuleb müüki <arv>. aastal . Küll on lubatud , et Longhorni esialgne ehk beetaversioon lastakse välja sel suvel . Microsoft peab olulisteks uuendusteks järgnevat : poolläbipaistvad aknad võimaldavad kasutajal näha ekraanil paiknevate programmide all käivitunud objekte ning otsingutulemused kuvatakse reaalajas ; järgmisel kuul toob Microsoft müüki Windowsi praeguse versiooni täienduse “ Windows XP Professional x<arv> Edition ” , mis suudab senise <arv> biti asemel korraga töödelda <arv> bitti andmeid andmemahukate programmidega töötamine muutub kiiremaks . On arvamusi , et suurettevõtted ilmselt kalduvad arvutipargi väljavahetamist edasi lükkama . Kodukasutajad võivad Longhorni ootamisest tüdinenuna konkurendi Apple poole pöörduda . Apple'i uus operatsioonisüsteem “ Mac Os X Tiger ” võimaldab kasutada mitmeid uuendusi , mida Longhorniga seoses reklaamitud on . <arv> PROTSENTI TULUDEKLARATSIOONIDEST ESITATI E-MAKSUAMETI KAUDU e-maksuameti kaudu esitati esialgsetel andmetel ligi <arv> protsenti tuludeklaratsioonidest . Teistest maksudeklaratsioonidest esitati I kvartalis läbi e-maksuameti <arv> protsenti tulu- ja sotsiaalmaksu deklaratsioonidest ja <arv> protsenti käibemaksudeklaratsioonidest . Elektroonilise tollideklarat- siooni e-tollimise kanalit kasutas I kvartalis ligi <arv> protsenti tolliklientidest . RAHVASTIKUREGISTRI SEADUST MUUDETI Muudatusega täpsustati isiku kohustust hoolitseda rahvastikuregistris olevate elukohaandmete õigsuse eest . Ebakorrektsed elukohaandmed põhjustavad probleeme kohalike eelarvete kujundamisel ning erinevate avaliku sektori korraldatavate teenuste osutamisel . Samuti mõjutavad ebakorrektsed andmed rahvastikurände statistika tegemist . Elukoha aadressi- andmetel on õiguslik tähendus Riigikogu , Euroopa Parlamendi ja kohaliku omavalitsuse volikogu valimistel , rahvahääletusel ja rahvaküsitlusel ning kohaliku omavalitsuse eelarvesse laekuvate maksude tasumisel maksuseadustes sätestatud alustel . Rahvastikuregistrisse kantud elukohaandmed ei anna õigusi omandi käsutamiseks või kasutamiseks . Elukohaandmete kandmine rahvastikuregistrisse toimub elukohateate alusel . Elukohateade esitatakse valla- või linnavalitsuse ( Tallinnas linnaosa valitsuse ) elanike arvestusega tegelevale allüksusele või ametnikule ( registripidajale ) isiku poolt seoses elama asumisega või elukoha muutumisega Eestis , elama asumisega välismaale või välismaalt Eestisse elama asumisega . Oma elukohaandmete õigsuse kontrollimiseks tuleb veebilehel <hyperlink> valida “ kodanikuportaali sisenemine ” ja tuvastada isik ID-kaardi või Internetipanga paroolidega . ADOBE VõTAB üLE MACROMEDIA Adobe'i tuntuimaks tooteks on Acrobati programmid , Macromedial aga Flash-tehnoloogia multimeediaobjektide käsitlemiseks Internetis . Adobe ja Macromedia on aastaid tegutsenud võrguarendustarkvara turul . Macromedia Dreamweaver on laialt levinud Internetikülgede kujundamise programm , Adobe'i Photoshop aga on juba aastaid turuliider graafikatarkvarade seas . Tekkiv firma ja selle produktid on tugevaks alternatiiviks Microsoftile . Mõlemal firmal on nn priivaratooted : Adobe jagab tasuta oma pdf-failide lugejat , Macromedia aga Flash-mängijat . Need on installeeritud enamikusse Internetiga ühendatud lauaarvutitesse . Leonardo da Vinci programmi projekti LOUPE tulemused Tallinna Tehnikaülikoolis KROONIKA <arv>-<arv> Leonardo da Vinci programmi pilootprojektis LOUPE No <arv>-NL/<arv>/B/F/PP/<arv> “ Search tool and method for useful cases in problem oriented learning in engineering curricula ” osalevad Itaalia , Rootsi , Eesti , Hispaania ja Hollandi ülikoolid ning firmad . Eestit esindab Tallinna Tehnikaülikool ja Eesti Energia AS . Projekti kestus : <arv>.<arv>.<arv>-<arv>.<arv>.<arv>. Projekti kontraktoriks on VHTO Hollandist . <arv>. mail <arv> toimus Amsterdamis projekti LOUPE lõpetamiskonverents , millest võtsid osa TTÜst Madli Krispin , Viivi Jokk ja Tiit Metusala ( fotol ) . Projekti LOUPE veebipõhise valikuvahendi ( Search Tool ) on välja töötanud VHTO , TTÜ on loonud veebilehe <hyperlink> ning realiseerinud LOUPE Search Tool CD , mida asjast huvitatud võivad saada TTÜ välissuhete osakonnast . Järgnevalt tutvustatakse projekti sisu üksikasjalikumalt .  LOUPE on Euroopa projekt , mis on suunatud põhiliselt insener-tehnilisele kõrgharidusele ning selle seostele vastava tööturuga . Euroopa ülikoolide ees on kaks probleemi . Esiteks väheneb sisseastujate arv , sest enamik tüdrukuid ja poisse ei ole huvitatud inseneriharidusest , ning teiseks - firmad nendivad , et inseneriharidus on arengus maha jäänud . Tehnilises kõrghariduses on oluline osa elus esinenud juhtumite ( C ases ) ja praktiliste näidete integreerimisel õppetöösse . Rootsi ja Taani õppesüsteemis on kindel koht projektipõhisel või probleemorienteeritud õppel . Paljude Euroopa riikide kogemused insenerihariduses näitavad , et sellised aktiivsed õppimismeetodid viivad paremate tulemusteni mõlemast soost üliõpilaste puhul . Projekti käigus on kirja pandud erinevaid juhtumeid erinevatelt insener-tehnilistelt erialadelt , mis on tekkinud erinevate riikide ülikoolide koostöös erinevate firmadega . Aktiivsed õppimismeetodid parandavad ja arendavad üliõpilaste iseseisvust ning aktiivsust koostööle suunatud ülesannete lahendamisel . Kaasaegse insenerihariduse kontseptsioonis ei ole enam põhitegevuseks teadmiste edastamine õpetajalt õpilasele . Üliõpilaste õppimise protsess on haridusreformide põhilise huvi objekt . Reformide põhjustajaks on olnud ettevõtete ja tööstuse signaalid selle kohta , et neil on palju kõrgemad nõudmised ning vajatakse selliseid spetsialiste , kes oskaksid probleeme lahendada ja neid lahendusi pakkudes iseseisvalt tegutseda , kellel on hea suhtlus- ning interdistsiplinaarse meeskonnatöö oskus . Need oskused ilmselt täiendavad traditsioonilist inseneriharidust . Aktiivsete õppimismeetodite juurutamine valmistab üliõpilasi paremini ette praktiliste tööülesannete täitmiseks . EUROOPA JA EESTI Tehnika- ja tehnoloogiahariduse , täienduskoolituse , tasemeõppe ja üldse õpikeskkonna rahvusvaheliseks muutumise ja selle kaudu professionaalsuse tõstmise vajadus on väga tõsine ning nõuab kiireid lahendusi kogu Eesti riigi arengu seisukohalt . Hariduse perspektiivide käsitlemisel Bologna deklaratsiooni vaimus on ülikoolide koostöö prioriteetne valdkond ja kindlasti on vaja saada uusi teadmisi hariduse arengu , üliõpilaste vastuvõtu , õppetegevuse eeskirjade , õpitulemuste ja töökogemuste arvestamisel ning õppekavade akrediteerimisel koostöös teiste Euroopa juhtivate tehnikaülikoolidega . TEADMISTE VAHETAMINE Euroopa ülikoolidel on oma nõrgad ja tugevad küljed . Euroopa Ühenduse strateegiliselt tähtsate teemade arenduses annavad erinevad ülikoolid oma panuse Euroopa ühise haridusalase koostöö arengusse . Õppimine üksteiselt ja jõudude ühendamine on olnud üheks projekti strateegiliseks eesmärgiks . Praegusel arengutasemel nõuab see erinevate ülikoolide personali osalemist nimetatud koostöös . Tallinna Tehnikaülikooli puhul eeldab see vähemalt ühe kontaktisiku osalemist igast tehnikateaduskonnast või uurimisinstituudist lisaks erinevate administratiivlülide esindajate osalemisele ja ühtlasi ka nendevahelist koostööd . KOMPETENTSUSVÕRGUSTIKE TEKKIMINE Eelmainitud projekti liikmete osalemine erinevates rahvusvahelistes gruppides ja erinevate teemade käsitlemisel moodustaksid edaspidises koostöös pikaajalised “ kanalid ” infovahetuseks , projektitulemuste evitamiseks ja hindamiseks ning kasutamiseks . JUHTUMITEL BASEERUV ÕPPIMINE The Harvard case method <arv> Juhtumi esitamine selleks , et stimuleerida diskussiooni auditooriumis Õppejõud selgitab , kuidas seda on analüüsinud ja lahendanud erinevad autorid Selle ülesande kaudu õpivad üliõpilased , milliseid lahendusi saab probleemile leida ja milliseid neist lahendustest saaks praktikas kasutada . Juhtumitel baseeruvas koolituses saab kasutada mitmeid erinevaid formaate . Projektipõhine : üliõpilased töötavad gruppides reaalse elu projektidega ja leiavad neile reaalselt toimivaid lahendusi . Probleemorienteeritud : õppimise aluseks on probleem ; koostöö on suunatud eesmärkide määratlemisele . Aktiivõpe : üliõpilasi stimuleeritakse võtma ise vastutust oma õppimise eest - õppimine õppimiseks . Seoses aktiivõppega muutub ka õppejõu roll . Kui üliõpilased ise defineerivad oma õppe-eesmärgid ja juhivad ise õppimist , siis ei vajata õppejõudu enam kui otsest informatsiooniallikat ja õppeprotsessi juhtijat . Õppejõu osaks jääb õppeprotsessi käivitamine , planeerimine ja disainimine ning juhtumite kirjutamine Igas valdkonnas saab leida erinevaid juhtumeid . Palju räägitakse igapäevaelus näiteks juhtumitest meditsiinis või juriidilistest juhtumitest . Hea juhtumi ( C ase ) kriteeriumid oleksid järgmised : juhtum on eluline ja oluline , suunatud praktikale , selgelt , kuid mitte liiga üksikasjalikult kirjeldatud , starter uute teadmiste hankimiseks , annab motiveerituse , väljakutse õppimiseks , efektiivne tee õppimise sisu vormimiseks . Ülesanne või juhtum vajab omandatud teadmiste otsest rakendamist reaalses situatsioonis , mis on seotud üliõpilaste praeguste kohustuste või tulevikus valitavate tegevustega . LOUPE SEARCH TOOL LOUPE Search Tool on vahend , mis aitab testida juhtumit või projekti või reaalelust võetud näidissituatsiooni , mille eeltingimusteks on sobivus ning innovaatilisus . Arvestatakse ka soolisi iseärasusi . Selleks et eri soost üliõpilastes ( nii poistes kui tüdrukutes ) insenerihariduse vastu huvi äratada , on nimetatud eeltingimused väga olulised . Paljude riikide kogemused insenerihariduses näitavad , et aktiivsed õpimeetodid , näiteks probleemile või projekti situatsioonile orienteeritud õppimine , viivad paremate tulemusteni mõlemast soost üliõpilaste puhul . Insenerihariduse reformid , mis on keskendunud õpetamisega seotud probleemidele , on viinud aktiivsete õpimeetodite juurutamiseni ning praktilist laadi materjali otsingutele ( reaalelu ülesanded , projektid , probleemid ) ning muude praktilist laadi õppevormide rakendamisele insenerihariduses . Aktiivsete õpimeetodite näideteks on samuti juhtumid elust , ekskursioonid ja praktika . Üliõpilastele antakse lahendamiseks praktilist laadi situatsioonid , mis kirjeldavad tegelikke probleeme . Üliõpilastel tuleb need lahendada , kasutades omandatud teadmisi ja oskusi reaalses olukorras . Teiseks näiteks on ekskursioon , kus üliõpilased külastavad ettevõtet . Eesmärgiks on orienteerumine valitud erialal ja informatsiooni kogumine . Praktikal saab üliõpilane praktilist laadi kogemusi ja arendab professionaalset suhtumist . Sel juhul on võimalik määrata kompetentsuse astet ja arengutaset . Projektis väljatöötatud veebipõhine valikuvahend ( Search T ool ) aitab ülikoolide ja ettevõtete koostöös määratleda innovaatilisi ja soolisi iseärasusi arvestavaid juhtumeid/projekte , mis loodetavasti suurendavad nii tüdrukute kui ka poiste huvi insenerihariduse vastu . TEADMISTE OMANDAMISE PROTSESS JA LAIEMAD EESMÄRGID Määravaks iseärasuseks aktiivse õppeprotsessi meetodite osas nii probleemile kui projektile orienteeritud õppimises on tõsiasi , et see puudutab õppeprotsessi kui tervikut . Teadmiste omandamine aktiviseerib eelnevad teadmised ning suurendab omandatud teadmiste pagasit , integreerib professionaalsed probleemid subjektidega , suuremas plaanis aga arendab õppimisoskust , isikuomadusi ja probleemide lahendamise võimet . Lõpptulemuseks on innovaatilisuse ja õppimise kooslus . LOUPE SEARCH TOOL'i KASUTAMINE Töö selle vahendiga võimaldab korrastada ülikoolide ja ettevõtete koostööd aktiivsete õppemeetodite kasutamiseks ning võtta arvesse soolisi iseärasusi ja kvaliteedinõudeid insenerihariduses . LOUPE Search Tool'i saab kasutada CDlt või veebilehelt <hyperlink> Madli Krispin TTÜ rahvusvaheliste suhete osakond Viivi Jokk TTÜ infotehnoloogia teaduskond  <arv> Erik de Graaff'i ettekanne LOUPE lõpetamise konverentsil <arv>. mail <arv> Amsterdamis . Kaido Kikkas , TLÜ haridustehnoloogiakeskus ALUSTUSEKS Kujutame korraks ette , et homsest kaotatakse ära autojuhiload . Iga naga , kel piisavalt pappi taskus , võib jalutada autoärisse , teha seal rahaga “ sulle-mulle ” ning põrutada minema uusima Ferrariga . Kadunud on tülikad nähtuse , nagu autokoolid , liikluseksamid , esmaabikursused ja arstitõendid . Politsei ei püüa enam roolijoodikuid ja kiirusepiirangud jäävad minevikku . Sel päeval oleks meil piltlikult öeldes “ Internet maa peal ” . Personaalarvutist on saanud miljonite inimeste igapäevane tööriist . Kiired Interneti-ühendused võimaldavad suurte infohulkade liigutamist , olemas on ka üks väga laia levikuga ning lihtsalt kasutatav operatsioonisüsteem - kas infoühiskond on viimaks saabunud ? Vist mitte . Selle asemel on meil tohutud ( ja kasvavad ) kogused rämpsposti , ohtlikke viirusi ja Interneti-ründeid . Kahjuks on ahela kõige nõrgem lüli alati inimene - ka kogu sodileviku taga on ju needsamad kahejalgsed . Ja eriti hulluks läheb asi siis , kui inimene kas teadmatusest , laiskusest või ükskõiksusest rebase kombel omaenese pesa reostab - Internetis toimuv “ läbustamine ” mõjutab tänapäeval kõiki selle kasutajaid . <arv> MINUTIT JA KUTU : KARM REAALSUS Tegelikkus on paraku üsna jahmatav . SecurityFocuse <arv>. aasta sügise uuringust ( sellest kirjutas ka The Register : <hyperlink> ) nähtub , et vaikimisi paigaldatud MS Windows XPga võrku ühendatud arvuti eluiga on keskeltläbi <arv> minutit , enne kui kräkkerid selle hõivavad . Asja “ ilu ” on selles , et <arv> minutiga ei jõua ka hoolas arvutiomanik enamasti kõiki turvapaikasid alla laadida ja paigaldada ... Nii soovitabki raport paigaldada võrku mõeldud arvutitele Windowsi turvalises keskkonnas ( turvatud sisevõrgus või üldse ilma ühendamata ) laadida turvaparandused samuti alla turvalist kanalit pidi , paigaldada ka need ning alles seejärel arvuti võrku ühendada . Paraku ei pruugi isegi see aidata . Enne Windows XP teist parandustepakki ( SP<arv> ) ei olnud selles süsteemis isegi tulemüür vaikimisi sisse lülitatud - ju loeti seda asjatuks ebamugavuseks . Ja kui siis tuli SP<arv> , põhjustas see oma suurenenud turvanõudmistega nii palju konflikte , et väga paljud kasutajad loobusid selle paigaldamisest ( üht selle probleemi uuringut käsitlevat lugu <arv>. aasta aprillist võib lugeda Tom's Hardware'i portaalist : <hyperlink> - <arv>% vastanutest ehk pea iga neljas ei olnud SP<arv>te paigaldanud ) . On üsna imekspandav , et kõigi nende viiruserohkete aastate jooksul pole MS kuni viimase ajani suutnud luua omaenese antiviirust ( kes veel peaks paremini tundma oma koodi nõrku kohti kui autorid ? ) ja jätnud selle kolmandate tegijate hooleks . Isegi rämpspostifiltrit reklaamitakse kui suurt uudsust . Vähemalt Anti-Spyware saadi siiski valmis ja kuuldavasti on tulekul ka Microsofti antiviirus ( ehkki ka see olevat järjekordne kolmanda osapoole produkt , mis on endale ostetud ) . EIKELLEGI LAPS - TAVALINE KODUKASUTAJA Üheks probleemi põhilätteks tuleks pidada asjaolu , et kuigi kodukasutajad moodustavad väga suure osa arvutitootjate ja -müüjate , tarkvaratootjate ja võrguteenusepakkujate klientuurist , ei vaevu keegi neist oma kliente elementaarsel määral harima . Tundub , et manuaalist ( mis sageli on kas väga üldsõnaline või vastupidi , ülitehniline ) ja telefonitoetusest ( mis on andnud alust lugematutele võrguanekdootidele ) peaks neile piisama . Ega ikka ei piisa küll - tulemuseks on see , et arvutihuviline vähemus närib end ilmselt omal jõul probleemidest läbi , otsides abi erinevatelt häkkerikogukondadelt võrgus ( trotsides teinekord ka üsnagi üleolevat suhtumist algajatesse ) ning jõudes viimaks adekvaatsete teadmisteni , et suuta oma arvutite eest piisavalt hästi hoolt kanda . Valdav enamik aga jääbki õndsasse teadmatusse . Tutvume konkreetse näitena Juhaniga , kes on elukutselt automüüja . Juhanil on plaanis osta koju uus arvuti - ta uurib eri poodide reklaame ja viimaks valib pakkumise , mis lubab talle kauba peale ka printeri ja skanneri . Arvutis on valmispaigaldatud operatsioonisüsteem ning firma tegi talle väikese kauplemise tulemusel välja ka MS Worksi kontoritöö tarvis . Juhan külastab ka suure Internetifirma kontorit ja sõlmib lepingu soodsa hinnaga , kuid piisavalt kiire püsiühenduse saamiseks - järgmisel päeval tuleb talle firmast koju “ patsiga poiss ” ja paneb kõik paika . Juhan saab nüüd netis surfata ja e-kirju saata ning ta on üsna rahul . Kuid ei arvutimüüja , Interneti-firma klienditeenindaja ega võrgutehnik ei rääkinud talle sõnagi oma tuttuue arvuti hooldamise kohta . Mõne päeva pärast hakkab Juhani arvuti tegema imelikke asju . Rämpsposti hulk kasvab hüppeliselt , arvuti muutub kummaliselt aeglaseks ja kettale ilmuvad uued tundmatud failid . Tema masin on kräkitud - keegi kusagilt Internetist on sinna sisse pääsenud ja saanud selle enda kontrolli alla . Juhan pole kaugeltki ainus , sama saatust jagavad väga paljud inimesed üle maailma . Võib ju küsida - kellele pidi ette jääma mingi automüüja arvuti ? Et rünnatakse suuri servereid , FBId ja Pentagoni , seda võib mõista . Aga automüüja ... ? Vastuseks võib meenutada mõnd madinafilmi , kus palgamõrvar lausub enne ohvrile kuuli pähe kihutamist : “ Ära võta isiklikult ! ” . Ka siin polnud asi Juhani isikus , vaid lihtsalt selles , et tema arvuti oli ilma igasuguse kaitseta . ÄRASPIDI AATOMIK EHK “ OLEN ISE VäIKE , KUID MU JõUD ON SUUR ” Kunagi Interneti algusaegadel võis kräkkimine olla omamoodi mäng ( ehkki juba tollal ebaseaduslik ) või jõukatsumine kahe arvutiässa - kaitsja ja sissetungija vahel . Tänaseks on see möödanik . Suurema osa tänastest võrgupättidest moodustavad tegelased , kelle ingliskeelne nimetus on script kiddie , maakeeles “ skriptijuntsu ” ( vihasemad häkkerid kasutavad ka sõna “ skriptitatt ” ) . Kräkkimisvahendid on arenenud lihtsateks näita-ja-kliki-programmideks , mille loomise ja levitamise taga seisavad päriskräkkerid ehk siis andekam kuritahtlik vähemus . Enamik kräkkimisprogramme aga ei vaja erilist ajumahtu ( ja ega skriptijuntsudel seda enamasti ole ka ) - mõne aja eest levis võrgus uudis , kuidas üks šimpans sai hakkama programmikräkkimisega , kasutades üht seda laadi lihtsat vahendit . Õnneks on vist enamiku pärdikute eetikatase natuke kõrgem kui skriptijuntsudel ... Eespool öeldu tõttu on suurem osa rünnakuid sihtimata - juntsu tõmbab võrgust kellegi tehtud turvaauguskanneri , võtab ette portsu võrku ja kammib selle läbi , otsides mingit spetsiifilist turvaauku ( üks omadus , mis skriptijuntsud ohtlikuks muudab , on nende suured ajaressursid - sageli ei oska selline tegelane oma eluga midagi mõistlikku peale hakata ) ning leitud haavatavaid masinaid rünnatakse . Vallutatud masinatesse paigaldatakse sageli rootkit ehk tarkvara , mis peidab sissetungija jäljed ( näiteks näitab kasutajale vaba kettaruumi nii , et sinna paigaldatud pahavara mahtu arvesse ei võeta ) . LOLL SAAB INTERNETIS KA PEKSA ... Kaugelt liiga sageli kohtab arvutiomanike hulgas ignorantset suhtumist stiilis “ Ja mis siis ? Tuli mingi tüüp sisse , mida ta ikka teeb ? Mul pole siit nagunii midagi võtta ! ” . Vahel võivad ka väikesed detailid viia suure pahanduseni . Selleks võib piisata mõnest olulisest telefoninumbrist meie aadressiraamatus . Või unustame , et tegime paari päeva eest kodus firma raamatupidamist ning kogu info on ikka veel meie CD-lugejas istuva plaadi peal . Aga äkki tõesti pole midagi huvitavat . Sel juhul võib tulevik tuua kaasa mõne järgmistest põnevatest arengutest . Sinu võrguühendus muutub paganama aeglaseks , kuna üha enam külalisi voorib vaatama toda uut pornoarhiivi sinu kõvakettal . Misasja - sa ütled , et ei tea asjast midagi ? Sul vedas : tegemist on kõigest “ tavalise ” pornoga . Oleks seal olnud lasteporno , siis oleksid olnud päästmatult ja kõrvust saadik paha asja sees . Sulle tuleb telefonikõne ( või ka elus külalised koos politseiga , sõltuvalt olukorrast ) sõbralikust organisatsioonist nimega BSA . Sinu ehmatuseks leitakse su kettalt kõik viimased Adobe Photoshopi , AutoCADi ja MS Office'i versioonid . Vabandused , et keegi kaak Internetist “ laenas ” su kõvaketast oma kraami hoidmiseks , kõlavad üsna õõnsalt . Pead selgitama kohtus , et see polnud üldsegi sina ( Jälle ! Keda sa üritad t...st tõmmata ... ? ) , kes haldas selles arvutis IRC kanalit , kus viimase paari kuu jooksul kaubeldi aktiivselt varastatud krediitkaartidega . Tuleb kohtukutse suurfirmalt , kelle IT-osakonna “ patsiga poisid ” nuhkisid viimaks välja koha , kust neile tulev rämpspostiuputus pärit on . Üllatus , üllatus - see oli sinu arvuti . Uksel tervitavad sind paar mustas ülikonnas “ kappi ” ja kena paar käeraudu . Sinu masinast rünnati nimelt Kaitsepolitsei serverit . Mis , üritad ikka hämada ? Lähed Internetipanka ja leiad oma konto tühjana . Interneti-pangad on tehtud üsna turvalistena , kuid kasutaja enese lolluse eest ei suuda ükski pank teda kaitsta . Paar nädalat tagasi paigaldas keegi sinu arvutisse keyloggeri ehk klahvivajutuste püüdja , mis saatis kõik paroolid “ sinna , kuhu vaja ” . Kui sellest veel väheks jääb , lisame uut sorti uudised , mis hakkasid ilmuma meedias <arv>. aasta paiku ( üks näide The Registerist : <hyperlink> ) . Mitmed Lääne-Euroopa ettevõtted , kelle äriedu sõltus otseselt nende võrgusolekust ( kirjastused , muusikaärid jms , kes otseselt aga ITga seotud pole ja seepärast ei oma ka suurt selle valdkonna erialapersonali ) , hakkasid saama kirju , kus nõuti teatava rahasumma tasumist ning maksmata jätmisel ähvardasid Interneti-ühendusest ilmajätmisega . Põhiline moment seda laadi väljapressimise juures on asjaolu , et kui nõutav summa tundub “ mõistlik ” , tekib ettevõttel kiusatus see ära maksta , et vältida ehk kümneid kordi suuremat kahju , mis tekiks nädalase võrgust eemaloleku tulemusel . Aga nagu igasuguse väljapressimise juures , järgneb esimesele nõudele teine . Võib ju küsida , mismoodi on tavakasutaja sellega seotud ? Väga lihtsalt - rünnak , millega eespool kirjeldatud ettevõtjat ähvardati , oli tulnud sadadest kaaperdatud arvutitest üle Interneti , mille omanikeks on Juhani-sarnased õndsas teadmatuses lihtinimesed . Juhan oleks enda teadmata saanud võimaluse osaleda organiseeritud kuritegevuses . Kurb , aga tõsi - see on Interneti tänapäev . LIHTNE , ODAV , TURVALINE . VALI NEIST KAKS ? Miks ikkagi kasutatakse ebaturvalisi asju ? Muidugi on esimene seletus , et probleemist ei olda teadlikud . Aga kui hoiatusi ja selgitusi on jalaga segada ? Esmalt on kahjuks olemas rühm inimesi , kes iial ei õpi . Neile öeldakse : “ Ära ava võõrastelt tulnud e-kirjade manusfaile ! ” . Nemad avavad ja lasevad arvutid viirusi täis . Neile öeldakse : “ Ära kliki reklaamidele ! “ . Nemad klikivad ja saavad pärast tonnide viisi rämpsposti . Nad juba on kord sellised . Kui ülbevõitu häkkeriterminile “ dumbuser ” ( eestikeelset head terminit veel vist polegi - kasutatakse näiteks “ dambjuuserit ” ja “ tumbajumbat ” ) õigustust otsida , siis nende tegelaste osas on selle kasutamine enim õigustatud . Aga ülejäänud ? Miks kasutavad miljonid inimesed tänini Internet Explorerit ja Outlooki , kuigi nende pidevad turvahädad on hästi teada ? Sest nad tunnevad neid programme , on nende eest operatsioonisüsteemi ostes maksnud ( sest paljud arvavad tänini , et igaüks saab vaid seda , mille eest maksab ) ega viitsi juurde õppida . Ehk muutuks nende arvamus , kui neile kohale jõuaks , et nende tegevusetus kahjustab tegelikult väga paljusid teisi ... ? Windows on lihtne ja odav . Mac on lihtne ja turvaline . Linux ja teised Unix-lased on odavad ja turvalised ... Kõike head korraga ei saa ? Kuid kas see on ikkagi päris nii ? Windowsi odavus on ka Eesti mastaabis üsna küsitav , kuid keskmisele lääneriikide inimesele on ta taskukohane küll . Maci oma mitte nii suure , kuid see-eest pühendunud kasutajaskonnaga ning rea hästi sissetöötatud kasutusvaldkondadega ( kirjastamine , muusika , multimeedia ) on küll arvestatav tegija , kuid tal puudub PCde massifaktor ( seega ka lihtsus ; kui ta näeb teistsugune välja , ei ole see alati piisav , võitmaks suurel arvul uusi kasutajaid ) . Maci operatsioonisüsteem on seotud kindla riistvaraga , mis traditsiooniliselt on üsna kallis ( alles hiljuti ilmunud Mac Mini tõi selle arvutitüübi keskmise eestlase rahakotiulatusse ) . Uued Unixi põhjaga MacOS X süsteemid on küllalt turvalised , kuid ometi on mõnikümmend viirust ka selles süsteemis olemas . Ja viimaks Linux - laiatarbemeedia kultiveerib tänini Linuxi imagot “ häkkerisüsteemina ” , millest “ tavaline inimene ” mitte midagi aru ei saa . Turvalisust enamasti ei vaidlustata , odavust ka mitte ( ehkki Linuxit võib ka müüa ) . Aga lihtsus ? Tegelikult muidugi võivad nii mõnedki pika staažiga Windowsi-kasutajad olla üpris üllatunud , nähes , kui sarnane Windowsile võib mõnigi tänapäevane Linuxi distro olla . Üldiselt võib üsna julgelt väita , et mitmed tänapäevased Linuxi variandid ( näiteks Mandriva või SUSE ) on Windowsiga võrreldes niisama lihtsad kasutada ning ( vaieldavalt ) ka lihtsamad paigaldada . Linuxi puhul on esialgu küll endiselt kohatiseks probleemiks mõnede de facto standardi staatusega rakenduste ( Dreamweaver , Photoshop ) puudumine ning mõnede tehnoloogiate toetuse puudumine . Arvestades Linuxi arengukiirust , võiks aga märksa rohkem selles suunas vaadata . Kindlasti tuleks meeles pidada , et ükski oma olemuselt turvaline süsteem ei kaitse kasutajat , kes omapoolse tegevuse unarusse jätab . Uuendamata ja “ pärani ustega ” Linuxi süsteem pole oluliselt turvalisem kui Windows . Teisalt on professionaalselt hallatud Windowsi võimalik muuta lihtsamate rünnakute vastu küllaltki turvaliseks . Kuid ka siin võib tuua analoogia - uusima ralliauto rooli pandud algaja autojuht jääb võidusõidus selgelt alla vana Ladaga sõitvale Markko Märtinile . Kui aga juhid on võrdväärsed , määrab paremuse tehnika . MIDA SIIS IKKAGI ETTE VõTTA ? “ ELEMENTAARNE , WATSON .. ” Alustame väga lihtsatest asjadest , mis ei sõltu kasutatavast süsteemist . Kas kõigil meie arvuti kasutajatel on oma kasutajakonto ? Kas kõigil on parool ? Kas parooliks on “ a ” , “ asdf ” “ , ” kala ” või on paroolid korralikud ( vähemalt <arv> märki , sisaldavad suur- ja väiketähti ning numbreid , miks mitte ka kirjavahemärke ) ? Üks kõige lihtsam skriptijuntsude kasutatav paroolijahtimisviis on “ Mõista , mõista ” ... Tänapäevane arvuti võib lühikese ajaga proovida paroolidena läbi terve sõnaraamatutäie sõnu ning kui siis sobiv leitakse , on kuri karjas . Seega on rusikareegel järgmine - kui leiad oma parooli sõnaraamatust või entsüklopeediast , vaheta see ära . Paroolide puudulikkus kipub seni olema Windowsi-kasutajate probleem , ent sedamööda kui Maci ja Linuxi kasutajaskond laieneb , levib see ka mujale . Linuxi kasutajaskonnaks on seni olnud suhteliselt rohkem arvutihuvilised ja -teadlikud kodanikud , kuid süsteemi levides see eelis ilmselt kaob . Siiski on Linuxil Unixi-tüüpi süsteemina üks eelis - tal on alati olnud korralik paroolimehhanism . Windowsil ( ja tema eelkäijal DOSil ) seevastu on ajaloost ette näidata pikk paroolide alahindamise periood - Windowsile ilmusid sisselogimisaknad küll juba Windows <arv>.<arv> töögrupivariandis ning NT-seeria paroolisüsteem oli vähemalt teoreetiliselt algusest peale mõeldud iga kasutaja eraldi identifitseerimiseks ja erinevate õiguste andmiseks eri kasutajatele , kuid Windowsi “ massiversioonid ” <arv>.<arv> , <arv> ja <arv> soosisid pigem “ paroolivabadust ” . Windows <arv> ( hiljem <arv> ja ME ) tõi küll ekraanile kasutajanime- ja paroolilahtriga akna , kuid see kaitses vaid kasutaja töölauakujundust - Esc-klahvi vajutusega sai kogu kremplist lihtsalt mööda minna . Nii kasvas üles põlvkond , kelle jaoks parool oli mitte vajalik kaitseabinõu , vaid ebamugav nuhtlus . Ehkki NT-seeriast aretatud <arv> ja XP on taas mängu toonud n-ö pärisparoolid , on mõttemalli muutmine ülimalt raske . Teine üsna Windowsi-spetsiifiline probleem on arvuti pidev kasutamine administraatorina . Probleemi juuri võib ehk näha just üleminekul <arv>/<arv>/ME seerialt <arv>/XPle - needsamad “ piiramatu vabadusega ” harjunud kasutajad tundsid end ahistatuna , kui uus Windows hakkas andma tavakasutajale teateid stiilis “ Sul ei ole õigust tarkvara paigaldada ” . Leitigi lihtne lahendus - arvutit hakati pidevalt kasutama administraatori õigustes , kellele mingeid “ tobedaid küsimusi ” ei esitatud ( võrdluseks võib tuua jällegi Linuxi ja muud Unixid - seal on root-kasutaja omamoodi püha lehm , mida ilmaasjata ei torgita ) . Kui see praktika aga kombineerus varasemast ajast pärineva paroolide alahindamisega ning jõudis Interneti püsiühenduste ajastusse , oligi käes üsna plahvatusohtlik kokteil , mille süüks võib panna üpris suure osa praeguse Interneti turvaprobleemidest . Nendelt , kes nüüd torisevad “ Miks mina pean neid asju teadma ? ” , küsiks nii - kas te teate , milline bensiin teie autole sobib ? Loomulikult - ilma selle teadmiseta te kaugele ei sõidaks . Inimesi , kes ei tea , millist tarkvara kasutab nende arvuti , on paraku häbematult palju . Internetiajastul võib aga sedasorti tegelasi võrrelda ( väikese äärmusesse viimisega ) inimesega , kes valab maja ees parklas oma auto paaki nitroglütseriini ( ” kama-kaks , mida sinna panna ! ” ) ning laseb selle tulemusena lisaks endale õhku ka terve korterelamu . SÜSTEEMIST Iga süsteemi tuleb üritada muuta nii turvaliseks kui võimalik . Mõne puhul on see lihtsam , mõne puhul raskem - kuid ka Windowsi puhul saab paljusid probleeme ennetada väga lihtsate võtetega . Siia kuuluvad pidev uuendamine ( automaatne uuendamine on reeglina mõistlik ) , korraliku tulemüüri ja antiviiruse paigaldamine ( XP puhul tulemüüri sisselülitamine ) , pidev ülevaade kõvakettal paiknevast ning teadlikkus kõigist meie arvutis olema pidavatest programmidest , suvaliste asjade allalaadimisest ja e-postiga saabunud “ lahedate asjade “ avamisest hoidumine ... Need sammud on tegelikult iga mõistliku arvutikasutaja jaoks täiesti igapäevased - kahjuks on aga väga palju inimesi , kes neist mitte midagi kuulnud pole . Järgmine samm oleks vahetada rakendustarkvara osas välja kõige levinumad ründeobjektid natuke kindlamate alternatiivide vastu . Käesoleval ajal tähendaks see järgmist : Windowsiga kaasatulev veebilehitseja Internet Explorer asendada Mozilla , Firefoxi või Operaga ; Microsoft Outlook või Outlook Express asendada Thunderbirdi , Mozilla Maili või mõne muuga ; Microsoft Office asendada OpenOffice.org'iga - see on turvalisuse seisukohast ehk vähemtähtis vahetus , kuid tal on omad eelised ( kuigi see võib olenevalt olukorrast ka probleeme tekitada ) . Märkus : kõik eespool mainitud alternatiivid on võrgust vabalt saadaval ning mis peamine - nad ei ole seotud ühe kindla operatsioonisüsteemiga . Tüüpiline kontoritöötaja ei vajagi tihti midagi peale kontoripaketi ja veebilehitseja - see aga võimaldab ettevõtte IT-personalile palju suuremat vabadust süsteemi valikul ( näiteks saab luua firma võrgu , kus eri arvutites on Windows , Linux ja BSD Unix , mis aga kõik käitavad ühtesid ja samu rakendusi ) . Lisaks mainitud alternatiividele oleks ka kodukasutajal mõistlik teha endale selgeks tulemüüri lihtsamad funktsioonid ning hüpikakende blokeerimise , nuhkvara eemaldamise jms võimalused . Kasutades kirjutise alguses toodud metafoori liiklusest - see olekski tavakasutaja autokool , mille edukas lõpetamine aitab enam-vähem tagada , et ta ei kujuta endast lausohtu kaaskodanikele . PINGVIINIVARIANT Mida aga öelda Linuxi kohta ? <arv>. aastal on see väga sobiv lahendus arvutihuvilisemale kodukasutajale , kuid ka mis tahes kontoritöötajale , kelle selja taga on IT-inimesed ( kes süsteemi paigaldavad ja vajadusel nõu annavad ) . Võrgus on palju lugusid “ itimeeste “ vanaemadest ja -isadest , kellele lapselapsed on arvutisse Linuxi pannud ning kes tulemusega üliväga rahul on - enamasti on aga lapselaps vajaduse korral käepärast ( või on arvutisse paigaldatud kaughaldusmehhanism ) . Nullist alustamine Linuxi kui esimese operatsioonisüsteemiga on täiesti võimalik , kuid üksnes piiratud Windowsi-kogemusega ja tehniliste huvideta tavakasutaja võib joosta probleemide otsa . Üheks suurimaks küsimärgiks võib kujuneda nähtus , mis profi jaoks on Linuxi suurimaid plusse - eri variantide rohkus ja kohandatavus . Kujutame ette , mida võib Võrumaalt Tallinna tulnud , väikese külapoega harjunud vanamammi tunda Stockmanni kaubamajas ... Kui Windowsi kasutaja on läbi aegade ostnud lihtsalt kõige uuema versiooni ( kuigi viimasel ajal on ka Windowsil tekkinud erinevad variandid ) , siis Linuxi variante ehk distributsioone on Distrowatch.com'i andmetel üle <arv>. Mõned mahuvad disketile , mõned täidavad DVD ; mõned maksavad raha , enamik ei maksa ; mõned sobivad algajale , teised profile . Tark valik on siin esmatähtis . Siit jõuame prii tarkvara ühe põhiprintsiibi juurde - tähtis pole mitte hind , vaid kasutaja valikuvabadus . Prii tarkvara seab kasutaja valiku ette - kas ta eelistab õppida võimalikke variante ise tundma ( mis enamasti nõuab aega ) või usaldab valiku tegemise kellelegi targemale ( mis enamasti nõuab raha ) . Asja põhisisu on selles , et kommertstarkvara pakub kasutajale suuresti vaid viimast varianti - prii tarkvara võimaldab aga valida ka erinevate teenusepakkujate vahel ( nii tekib normaalne vaba turukonkurents ) - sisuliselt võib prii tarkvara tugiteenuseid pakkuda iga vastavate oskustega inimene või firma ning tulemuseks on kunstlikest piirangutest ( monopol ) vaba turg . Linuxil ( ja teistel Unixitel ) on palju eeliseid - praktiliselt olematu viiruseprobleem ( Windowsi viirused ei toimi - , kuid tuleb olla ettevaatlik , et neid näiteks nakatunud e-kirjaga mitte ise edasi saata ) , väga hea sisseehitatud ( ja vaikimisi aktiveeritud ) tulemüür , parem üldine turvamudel , palju suurem kontroll kogu süsteemi üle . Peamised probleemid on <arv>. aasta seisuga seotud eeskätt failide ühildumatusega - mitmel levinud Windowsi rakendusprogrammil puuduvad esialgu alternatiivid või Linuxi versioonid . Microsofti soovimatus avaldada oma dokumendiformaatide spetsifikatsioone põhjustab vahel veel probleeme OpenOffice.org'i kasutajatele . OO.o toetus MS Office'i formaatidele on saavutatud suuresti katse-eksituse- meetodil ning on seda arvesse võttes ülimalt hea , kuid mõnda aega võivad ühilduvusprobleemid veel esineda . OO.o ei toeta ka Visual Basic'u makrokeelt ( saab aga kasutada nii teist sarnast Basic'u varianti kui mitmeid muid keeli ) - põhjuseks on selle tihe läbipõimumine Windowsi süsteemiarhitektuuriga , kuid ka pidevad turvaprobleemid . Veebidisainerid tunnevad esialgu puudust Dreamweaverist ja graafikud Photoshopist - alternatiive on , kuid need pole veel samal tasemel ( ent võib oletada , et kasvav konkurents sunnib Adobe'i looma peagi nendest programmidest ka Linuxi versioonid ) . Mängurite osas on see protsess juba käivitunud - suur osa uusi suuri kommertsmänge on saadaval ka Linuxi versioonis ( Doom <arv> , Neverwinter Nights jt ) , lisaks on olemas mitmeid vähetuntud , kuid üsna tasemel priitarkvaralisi mänguprojekte ( mõned viited leiab FSF/UNESCO vaba tarkvara kataloogist ) . Nii et esialgu on mängurite põhiplatvormiks veel Windows , kuid olukord võib hakata muutuma . Kui aga eespool toodud puudused olulist rolli ei mängi , tuleks Linuxi platvormi kasutamist tõsiselt kaaluda . KÕRGE MÄNG Kuid mis süsteemi me iganes valime , on lõppjäreldus üks - tänane arvutikasutaja peab arvutist teadma märksa rohkem , kui see oli vajalik kaheksakümnendatel . Mäng käib lihtsalt kõrgemal tasemel - ühe inimese laiskus või lollus lööb valusasti kümneid ja isegi sadu teisi ning seda ei tohiks lubada . Kõik asjaga seotud osapooled peaksid tegema märksa rohkem arvutikasutajate põhimassi harimisel . Koolid peaksid pakkuma informaatikakursuse raames elementaarseid teadmisi arvuti haldamisest , arvutitootjad ja -müüjad peaksid läbi vaatama oma käsiraamatud ja juhendid ning lisama sinna puuduvad osad , tarkvaramüüjad peaksid olema kohustatud teavitama ostjaid kaubaga seotud riskidest ja nende maandamisest ( liiga paljud Windowsi kasutajad ei teagi , et seda tuleks aeg-ajalt uuendada ! ) . Interneti püsiühenduse pakkujad peaksid juhendama kasutajaid tulemüüride teemal ( üsna hea mõte oleks kehtestada tulemüüri rakendamine püsiühendusteenuse kasutamise kohustusliku eeldusena ) . Kui aga neid samme ei astuta , võib praeguse hetke probleemolukord areneda edasi täismõõtmeliseks kaoseks , kus Interneti ohud ja riskid hakkavad eeliseid ületama . Kogu senise jutu kokkuvõtte võiks esitada ühel traditsioonilisel moel : KÜMME KÄSKU <arv>. Sina pead oma arvutisüsteemi uuendama , sest viirused , pahavara ja kurjad inimesed ei jäta lohakat mitte karistamata . <arv>. Sina ei pea mitte võtma enesele ilmaasjata administraatoriõigusi . <arv>. Sina pead valima oma paroolid korralikult , eriti administraatori oma , ja sinu paroolidel ei pea mitte olema mõistlikku tähendust üheski sinule teadaolevas keeles . <arv>. Sina pead tegema igale oma arvuti kasutajale tema enese konto . <arv>. Sina pead panema oma arvutisse antiviiruse ja nuhkvaratõrjuja ning neid tihedasti kasutama , kui sina soovid jääda Windowsi juurde . <arv>. Sina ei pea mitte puutuma tundmatuid manuseid oma e-kirjades ega lubama seda teha kellelgi , kes sinu kojas elab . <arv>. Sina pead kasutama rämpspostifiltrit . <arv>. Sina pead teadma , mis tarkvara sinu arvutis on . <arv>. Sina teed hästi , kui sina kasutad OpenOffice.org'i , Mozilla Thunderbirdi ja Firefoxi MS Office'i , MS Outlooki ja Internet Exploreri asemel . <arv>. Sina pead usinasti taotlema tarkust ja otsima tarku inimesi enesele abiks . Tark inimene teeb ühe korra valesti , rumal teeb seda aina uuesti . ( Aamen ! ) LÕPPSÕNAD Hiinlastel on vana sajatus : “ Elagu sa huvitaval ajal ! ” . Kahjuks meie puhul see nii on - olgu siis tegu reisilennukite kasutamisega tiibrakettidena või organiseeritud kuritegevuse tungimisega kommunikatsioonimaailma . Nagu kõikjal mujal , on ka siin turvalisus eelkõige protsess - keegi ei suuda saavutada lõplikku turvalisust , seda saab vaid suurendada . Mida rohkem valmis me oleme , seda vähemate reaalsete ohtudega peame silmitsi seisma . Rebase sündroom aga viib tõsiste tagajärgedeni , mida me ilmselt näha ei soovi .