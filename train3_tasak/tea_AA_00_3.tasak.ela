kirjak	tea_AA_00_3.tasak.ela	Paul Leis Identrus : Usaldus internetis Internet on juba praegu eelistatud tehingukanal . B<arv>B ( Business to Business , firmalt firmale ) e-kau- bandus peaks praeguselt <arv> miljardilt dollarit aastas järgneva <arv> aastaga kasvama <arv> triljoni dollarini aastas . B<arv>B e-kaubandus vajab aga tehinguosaliste vastastikust usaldust . Usaldus on vajalik kõigis tehingu etappides : partneri leidmine , tehingu tingimuste kooskõlastamine , kaupade toimetamine/saamine ( logistika ) , raha maksmine/saamine . Traditsiooniliselt on firmadevahelise usalduse taganud finantsinstitutsioonid : minu pank tagab minu usaldatavuse ja sinu pank tagab sinu usaldatavuse - sellele tuginedes võimegi tehingu teha . On olemas tehnoloogiate kompleks Public Key Infrastructure ( PKI ) , mis võimaldab usaldusorganisatsioone luua . PKI võimaldab kasutajaid identifitseerida , teateid allkirjastada ja sõnumeid krüpteerida - mida äriprotsess parajasti nõuab . Kuid ainult tehnoloogia(te)st ei piisa usaldusstruktuuri loomiseks : vajalikud on ka üldtunnustatud / üldkehtivad seadused ning poliitikad . Ja mis kõige olulisem : keda ja mil määral võib usalduse tagajana usaldada ? Panga X kliendid võivad panka X usalduse tagajana usaldada . Kui Eesti tingimustes võivad näiteks Ühispank ja Hansapank kokku leppida oma klientide vastastikuse usaldatavuse tagamises , siis on ilmne , et niisugune pankade erikokkulepetele tuginev usaldussüsteem skaleerub äärmiselt halvasti . Vaja on mingit globaalset organisatsiooni , mis kindlustaks oma liikmetele usaldusteenused . Identrus LLC ongi niisugune globaalne organisatsioon . Pisut ajalugu . November <arv> - <arv> finantsorganisatsiooni alustavad uurimis/selgitustööga Oktoober <arv> - ametlik teade luua “ Global Trust Enterprise ” Aprill <arv> - loodi firma Identrus ( Identity and Trust ) , asutajaliikmed : ABN AMRO , Bank of America , Barclays PLC , Chase Manhattan , Citigroup , Deutsche Bank ja Hypo Vereinsbank . Identrusi president on Guy Tallent . August <arv> - lõpetati katseprojekti testid kaheksas asutajaliikmes-pangas Oktoober <arv> - katseprojekt tarbijatega Aprill <arv> - järjekordselt ühinevad uued liikmed , seekord : Australia and New Zealand Banking Group Limited ( ANZ ) , Banco Santander Central Hispano ( BSCH , Hispaania ) , BNP Paribas ( Prantsusmaa ) , Caisse Nationale de Crédit Agricole ( Prantsusmaa ) , Kommerzbank ( Saksamaa ) , Dresdner Bank ( Saksamaa ) , Scotiabank ( Kanada ) , Société Générale ( Prantsusmaa ) , Wells Fargo &amp; Company ( USA ) . Identrusi teesid : tegutsemine globaalses ( =riikidevahelises ) ruumis ainult avatud tehnoloogiate kasutamine juriidilise ühildatavuse ja riskijuhtimise tagamine sealjuures ( peamine ) nõue : keep it simple Identrusi usaldusstruktuur on hierarhiline : Identrus sertifitseerib finantsinstitutsioonid ( mille äriprotseduurid + riskijuhtimine + ... vastavad standardeile = finantsinstitutsioon on usaldatav ) finantsinstitutsioonid sertifitseerivad oma kliente-firmasid , kelle tehinguid nad tagavad firmad sertifitseerivad oma volitatud töötajaid , kellel on õigus firma nimel Internetis opereerida volitatud töötajad ( sertifikaadi hoidja : kiipkaart ) teevad äritegevuseks vajalikke operatsioone internetis On ilmne , et niisugune finantskääbus nagu Eesti ( kogu Baltikum on finantsväärtuselt samaväärne Rootsi ülikoolilinna Uppsala finantsväärtusega ) usaldusteeninduse valdkonnas midagi isepäist ei tohiks ette võtta . Ajalugu meenutades : isegi suur Venemaa “ astus ämbrisse ” raudtee oma rööpalaiuse kehtestamisega - praegu maksab piirijaamades rongikeste kergitamine juba miljardeid igasuguses vääringus . Aga - <arv>. detsembrist <arv> hakkab Eestis kehtima digitaalallkirja seadus . Selle seadusega oleme me muu maailma kaugele selja taha jätnud ja ainsana maailmas ( ! ) kehtestanud kohustusliku ajatempli nõude . Seadusest : § <arv> Digitaalallkiri ( <arv> ) Digitaalallkiri koos selle kasutamise süsteemiga peab : <arv> ) võimaldama kindlaks teha allkirja andmise aja ; Pole kahtlust , et ajatempel usaldusteenindusse varem või hiljem tuleb , kuid : mitte kõik allkirjavajadused pole seotud ajatempliga tehnoloogiad-tooted pole veel küpsed Seetõttu polegi teised riigid ajatempli kohustuslikkusega kiirustanud . Meie digitaalallkiri aga läheb ajatembeldamisega esiteks tunduvalt kallimaks ja pealegi tekivad probleemid teiste riikide seaduslike allkirjade tunnistamise/mittetunnistamisega . Kui me teiste riikide ajatemplita allkirju tunnistama peame ( nondiscrimination on aga rahvuvaheliste , sealhulgas ka Euroopa Liidu digitaalallkirju puudutavate kokkulepete lähteseisukoht ) - miks me siis ise ajatempliga rabeleme ? Nagu iseenesest tekib küsimus : kellele võiks see kasulik olla ? “ Eelista eestimaist ” võib olla hea loosung piima , liha ja laudade-toolide puhul , kuid see ei kehti globaalusalduse valdkonnas . Seetõttu peaksid Eesti finantsinstitutsioonid kasutama ainult Identrusi poolt aktsepteeritavaid tooteid ( praegu on Identrusi partnerid-tehnoloogiafirmad Entrust Technologies Inc. , CertCo Inc. , Control Data Systems Inc. , VeriSign , nCipher Inc. , Baltimore - loomulikult see nimistu täieneb pidevalt ) . Mingite muude , nt odavamate kodukootud toodete kasutamisel võivad hilisemad kulutused oma “ usaldusväärsuse tõestamiseks ” kaugelt ületada esialgse kokkuhoiu . Pole kahtlust , et o davat usaldust pole olemas ! Jaan Pillesaar Haridus ettevõtja portfellis Kümme aastat tagasi eksisteerisid head raamatud tudengi jaoks vaid raamatukogus , kust paremad olid tavaliselt alatiseks välja laenatud . Tänapäeval seda muret enam pole , nüüd on vastupidi . On internet , amazon.com , knowledge economy ja inimesel on infot võtta rohkem kui ta iial omandada jõuab . Ülikoolist on igaühe jaoks saanud eluaegse õppetöö esimene semester , ja teabetöötaja üsna igapäevane põhiküsimus on , mida õppida , mida mitte . Sest aeg on piiratud . Järgnevas üritan arutada iseendagi jaoks väga olulisi küsimusi , kuidas õppimist enda jaoks tähtsustada ja õigeid teadmisi ning oskusi omandada . Kui mina TTÜs õppisin , siis tehnoloogiaüliõpilase murede klassika oli - enamik õpitavast on ajalooraamatutes tuhnimine , ainete õpetamise tempo on liiga kõrge , üldainete osakaal liiga suur . Tagasi vaadates arvan teistmoodi . Ajalugu oli vaja selleks , et õppida vältima kellegi poolt juba läbikäidud ämbreid . Teiseks , eelkäijate saavutustega tutvumine on ainuvõimalik viis , kuidas õppida lugema trende ja vältida ise ajalooks muutumist . Eesti tehnoloogiaharidusega on täiesti võimalik teenida kolmekümneaastaselt sada tuhat dollarit aastas ja enam , kuid eeldus selleks on inseneri mõtlemis- ja keeleoskuse omandamine . Teoreetiline haridus loob keele ja mõtlemisstruktuuri , mida mõistavad ühtemoodi inimesed nii MIT-ist kui TTÜ-st . Teooria õppimine on muidugi tavapärane viis treenida mälu ja loogikat , ning kiire tempo on treeningul vältimatu , sest ega jooksma ei õpi käies . Aga just pidev jooksmine annab edu <arv>. sajandi majanduses , olukorras , kus üle poole arenenud riikide töötajatest on pidevalt õppivad valgekraed ja kätega tööd tegevate inimeste osakaal on juba praegu langenud alla viiendiku . Oskus loogiliselt mõelda on arvatavasti suurim insenerihariduse lisaväärtus . Näiteks minu igapäevatööst <arv> % on mõtlemine , inimestega suhtlemine ja investeerimisotsuste langetamine , millel pole pealtnäha midagi ühist elektronahelate või Fourier' analüüsiga . Siiski leian palju abi loogilistes meetodites , mida olen omandanud tehnoloogiahariduse käigus ja mida ei ole suutnud õpetada mitte ükski ärijuhtimise aine . E-inimeste artiklitest jääb arvatavasti mulje , et ainuvõimalik tee edule on tegeleda neliteist ja rohkem tundi ööpäevas (kooli)tööga ning unustada nädalavahetused . Olen minagi sellega nõus , edu valem Edisoni järgi sisaldab kindlasti <arv> % tööd ja <arv>% seda muud . Päris kindlasti aga Edison ei tahtnud öelda , et kogu olemasolev aeg tuleks sisustada kogu õppekava omandamisega kõrgeimale hindele . Liiga palju olen näinud cum laude lõpetajaid , kes oma haridusega mitte kuhugi elus edasi ei jõua . Milles asi ? Tuleb aru saada , milliseid teadmisi teadmiste turg “ ostab ” ja kas sellel turul on võimalik enda jaoks reaalsete kuludega läbi lüüa . Turule mittevajalikud teadmised on majanduslikust aspektist niisama mõttetud nagu kodune sokikudumisoskus . See võib kudujale olla meelelahutuslik tegevus , aga kudumismasinate vastu ei saa ja tippdisaineritega nii ei võistle . Kudumise õppimisele pühendatud aja elamisrahad on seega majanduslikus mõttes rumal kulu , mitte investeering . Mida siis tulevane Jeff Bezos või Tarvi Martens ( Tarvi , ära pane pahaks ! ) kohaliku tehnikaülikooli seinte vahelt praegu ei leia , ja peaks ise juurde ammutama ? Maailmas ei ole puudus ideedest või rahast , maailmas on puudus inimestest , kes ideid teostavad , nagu teab iga riskikapitalist Silicon Valley 's ja mujal . Sellelt ettevõtlikult inimeselt , kes ideid ellu viib , oodatakse võrdlemisi ühtemoodi teadmisi olenemata sellest , kas ta on lõpetanud Stanfordi Ülikooli või TTÜ . Need teadmised on a ) konkurentsivõimelised teadmised tehnoloogiavaldkonnast , millest ideed pärineb , b ) konkurentsivõimelised teadmised ärivaldkonnast ehk üldine arusaamine sellest , kuidas raha ühiskonnas liigub ja kuidas majandus toimib . Iga kõrgkool PEAKS õieti alati pakkuma võimalust ( a + b ) , aga Eestis see ei toimu põhjusel , et traditsioonilise tehnoloogiaülikooli kultuuri äriülikooli omaga ühildada on keeruline . Parim lahendus tudengi jaoks on seega valida õppeaineid mitmest kõrgkoolist ja luua oma võimalikult mitmekesine suhtlusringkond . Veel parem lahendus on valida endale tark erialane firma , kus töökogemusi omandada . Elu on näidanud , et need inimesed , kes suudavad paralleelselt õppida ja töötada , õpivad kaks korda tulemuslikumalt ja küpsevad kiiremini . Kooli lõpetades on nad juba tihti arvestatavad “ tegijad ” , samal ajal kui kooli kõrvalt ainult tudengielu elanud inimesed ei ole tööks ettevalmistuse osas sisseastumiskirjandist palju kaugemale jõudnud . Konsultatsiooniäris - ka “ Helmeses ” - on kasutusel termin “ teadmiste profiil ” . Teadmiste profiil on tulpdiagramm , mis horisontaaltelge mööda on jaotatud eri valdkondade teadmisteks ja oskusteks , ja vertikaalteljel on antud hinnang nende teadmiste-oskuste sügavusele . Tulpade summaarne pikkus on piiratud inimese füüsilise õppimis- ja meelespidamisvõimega . Keegi ei ole võimeline paralleelselt õppima heaks arstiks , juristiks , inseneriks ja investoriks ühekorraga . Kuid igaühe täielik vabadus on ise kujundada oma erinevate tulpade kõrgusi sobivas proportsioonis , arendada oma teadmiste profiili ise , vastavalt oma eeldustele ja turu nõudmistele . Ja <arv>. sajandi teabeühiskonnas tulebki seda igaühel endal aktiivselt teha , ehitades ja kujundades oma teadmisi ja oskusi kui “ toodet ” . Oma toote arendamisega seondub üks üliväga oluline asi , mille iga inimene enda jaoks peab ise avastama . See on viis , kuidas ta kõige efektiivsemalt õpib . Näiteks on pigem reegel kui erand , et erakordselt väljapaistvad inimesed elus olid koolis võrdlemisi keskpärased , alustades Einsteinist ja lõpetades Gatesiga . Miks ? Juhtimispsühholoogid väidavad , et eelkõige sõltub õppimise tulemus viisist , kuidas iga inimene kõige efektiivsemalt õpib . Teadmata endale sobivat meetodit ja valides pimesi kooli poolt soovitatud meetodi , inimene ebaõnnestub . Osa inimesi õpib kõige paremini vaid lugedes , osa vaid kuulates , osa üles kirjutades , osa siis , kui nad saavad teemast kellegagi rääkida . Seega tuleb pidevalt tegelda iseenda avastamisega : püüa leida neid tegevusi , mis Sul silmapaistvalt hästi õnnestuvad , võrreldes kõigi nende edukate kaaslastega , kellega Sa end loodetavasti võrdled . Juhtimispraktikast on palju näiteid , kus inimene on tõelise “ oma töö ” leidnud alles neljakümne aasta vanuselt . Kui need “ oma tööd ” on leitud , tuleb neid oskusi ja teadmisi kultiveerida ja arendada . Kogu jõuga . Lõpumärkusena . Eestis õppida ja elada on veel mõnda aega häbematult odav , seega kohalik ülikool pluss töö ja “ ise omast ajast juurde ammutamine ” on kahtlemata kõige taskukohasem lahendus . Loomulikult on õppimisinvesteeringu tasuvuselt maailma pingerea tipp Harvard , Stanford , UC Berkeley , MIT jne. ja kõigile parimatele , kel võimalik , neid ka soovitan . Aga investeering on rahas suur , alternatiivkulu kohalike suhete nõrgenemises kõrge , ja eksisteerib veel sada muudki põhjust , miks ka Eestis on kasulik ja meeldiv õppida . Eriti tänasel ajajärgul , mil internet edukalt kaugusi lähendab . Loodetavasti sai paar olulist prioriteeti välja öeldud . Ilmselt ei olnud palju uut , aga peeglisse vaadates tundub , et kui keegi <arv>. aasta sügisel oleks mulle sellised sõnad peale lugenud ja neid korrata viitsinud , oleks edasine tegevus kindlasti kiiremalt ja mõnusamalt kulgenud . Tänu lugemast ja edu õpingutes . Kalle Tammemäe , tehnikadoktor , TTÜ arvutitehnika instituut Transmeta protsessorite nish Teadupärast tegi Transmeta Inc. <arv>. jaanuaril k.a. eduka avalöögi , demonstreerides oma kaht energiasäästlikku , kuid samas tootlikku protsessorit . Kuigi Crusoe-protsessorid polnud siis veel masstootmises , ei jätnud toimunu ükskõikseks ka PC-protsessorite liidrit Intelit , kes langetas toimunu järelkajana oma mobiilturule orienteeritud protsessorite hinda . Vastandina PC-protsessorite turu teisele liidrile AMD-le ( Advance MicroDevices ) , kes jõudis arvestatavasse positsiooni Inteli toodangu meisterliku kloonimise läbi , riskis Transmeta märksa enamaga . Käesolevas artiklis analüüsitaksegi seda , mis Transmeta disaineritele oli juba ammu teada . Siiski , teades printsiipi “ tasuta lõunaid pole olemas ” , vaatleme seda peent balansseerimist kompromisside piiril , mis lõppkokkuvõttes on teinud Crusoe-protsessorist fenomeni . Crusoe-protsessorite põhiomadustest oli juttu juba möödunud aasta A &amp; A-s [ <arv> ] . Käesolev artikkel on pühendatud protsessori tähelepanuväärsele riist- ja tarkvaraliidesele , millele möödunud aastal oskasin ainult vihjata , sest nagu öeldud , on ¾ Crusoe protsessorist tarkvara ja ainult ¼ riistvara . TAGASI KONSTRUKTORILAUALE Ajal , millal protsessorite projekteerimises annavad firmad üksteise järel loobumisvõite ( Cyrix , WinCPU jt. ) , kinnistab hulk kiibiprojekteerijaid ja programmeerijaid end riskikapitali kasutades aastateks töölaudade taha , sest neil on teadmine , mille teostamine võib kallutada turgu ning pöörata väljaminekud pikaajaliseks tuluvooluks . Tõenäoliselt on selle taga Transmeta preagune juht David Ditzel , kes koos oma kunagise kolleegi David Pattersoniga kirjutas artikli RISC-protsessorite ( RISC - Reduced Instruction Set Computer ) juhtumi kohta . Nende väitel minetas RISC , mis kontseptuaalselt tähendas lihtsamat käsustikku ja seetõttu ka lihtsamat ehitust , ajapikku keerustudes oma eelised CISCi ( Complex Instruction Set Computer ) ees . Tegelikult toimus see sedapidi , et CISC-protsessoritesse integreeriti RISC , ja sellega oligi vahe tasa . Ditzeli tsitaat : “ Tänapäeva RISC tähendab suuri projekteerimismeeskondi ja pikki projekteerimistsükleid . Samuti on vähem selge tootlikkuse lugu . Kristall pole enam väike . Sellel kõigel ei näi enam eriti mõtet olevat . Tulemuseks ongi praegused keerukad RISC-arhitektuurid . Superskalaarsus ja käskude väljaspool järjekorda lahendamine on suurimad probleemsed alad , mis on takistanud tootlikkuse hüppeid . RISC-protsessorid nagu MIPS R<arv>'<arv> ja HP PA-<arv> on märksa keerukamad kui standardne CISC-arhitektuur Pentium II esinduses . Niisiis , kus on RISCi eelised , kui kiibid pole enam lihtsad ? ” Mida rohkem transistore , seda suurem kiip ja seda suurem energiavajadus . Suurem energiavajadus tähendab ka suuremat energiaeraldumist , kõrgemat töötemperatuuri , paremat jahutust jne. Kohtades , kus kiirus on absoluutne nõue ( serverid ) , võib lubada pannkoogiküpsetamiseks kõlblikku kiibi temperatuuri . Mobiilseadised vajavad aga hoopis vastupidist projekteerimiskultuuri , kus esikohal on kaal ja autonoomne tööiga ehk sõltumatus . See oligi koht , kus Transmeta disainerid pead kokku panid ja vastupidiselt Inteli/AMD kiiruse absolutiseerimisele küsisid , kui efektiivse protsessori võime me teha , jooksutades samas rahuldavalt x<arv> rakendusi ? Tulemuseks oli evolutsiooniline segu riistvara-tarkvaralahendustest , mis lausa sunnib kaasa mõtlema - mobiilseadiste nishi ilmus selleks kõrgelt kohastunud indiviid . KLASSIKALINE VAHEMÄLU Protsessori töötluskiiruse ja välismälu pöörduskiiruste vahel on alati olnud lõhe , mille leevendamise põhivõtted on välja töötatud elektronarvutite algusaastatel . Vastavaks meetodiks on olnud vahemälude hierarhia ehitamine töötlusseadme ja aeglase , kuid mahuka välismälu vahele . Sama printsiipi võidakse rakendada kõikjal , kus erinevate plokkide andmekiiruste vahe ähvardaks süsteemi kui terviku töötlusvõimet takistada . Iga vahendaja protsessori ja mälu vahele tundub esimesel pilgul nagu viies ratas vankri all ja nii see ka oleks , kui protsessori andmesuhtlus määrduks üle kogu aadressruumi nagu valge müra . Isegi see võib väga pika vaatlusaja jooksul tõsi olla , kuid siin on üks neist kohtadest , kus sobiva vaatenurga valikuga võib leida palju tähelepanuväärset . Mälupöördustes esineb alati mingit reeglipära , millest eristatakse kolme [ <arv> ] : ruumiline lokaalsus - mälupöörduste sagedusjaotus aadressruumis on väga ebaühtlane ajaline lokaalsus - ajas lähedased mälupöördused kipuvad olema korduvad järjestuse lokaalsus - mälupöördustes esineb teatud regulaarne järjestus Klassikaline vahemälu suudab aidata kõigi kolme variandi korral . Siiski võib järjestuse lokaalsus olla üldjuhul väga keerukas ning selle tuvastamine võib nõuda mahukat lisatöötlust . Sõltuvalt integratsiooniastmest võivad erineva taseme vahemälud olla integreeritud protsessoriga samale kristallile , selle vahetusse lähedusse samas korpuses olevale eraldi kristallile , protsessori tütarplaadile või emaplaadile . Põhimõte on lihtne : kui andmed protsessorile lähemal tasandil puuduvad , otsitakse neid järgmisest tasandist kuni põhimäluni ( üldjuhul kõiki ressursse siduva virtuaalmäluni ) välja . Vahemälude struktuuri teostus on keeruline ja valikurohke , lahendus on kompromiss operatsioonisüsteemi ja rakenduste iseloomu , vajaliku kiiruse ja lubatava hinna vahel . Et programm ja andmed on mälus tavaliselt erinevalt organiseeritud , siis on osutunud otstarbekaks vahemälud mingist tasandist alates spetsialiseerida . Esimese tasandi vahemälu võib töötada protsessori enda töösagedusega ja mida kaugemale , seda rohkem aega ( takte ) andmete kättesaamine nõuab . Alati tuleb meeles pidada tõsiasja , et füüsikat lollitada ei saa - kui andmeid/käske vahemälus pole , läheb nende toomine põhi- või virtuaalmälust väga kalliks maksma . See tähendab , et alati saab teha jõudlustesti , mis vahemälu kasutuna laseb paista ja uhke süsteemi pilvedest põrmu toob . Ja vastupidi - mingi test , mis mahub koos oma andmetega vahemällu , toimib petvalt kiiresti . Seepärast aktsepteeritakse reeglina vaid standardseid jõudlusteste . Arvuti mälustruktuuriga on seotud veel riistvaraline aadressitabel ( TLB - translation lookaside buffer ) mille ülesandeks on kiirelt teada anda otsitavate andmelehekülje asukohast põhi- või välismälus . Jooniselt on näha , et võrreldes klassikalise mäluhierarhiaga on Transmeta L<arv> vahemälu eraldatud L<arv> vahemälust ja põhimälust . Eraldus on tingitud dünaamilisest käsuvormimisest , millest on põhjalikumalt juttu järgmises peatükis . KOODIVORMIMINE Crusoe-protsessorite tuumaks on Transmeta poolt välja töötatud lihtne VLIW ( Very Long Instruction Word ) arhitektuur . Selles pole tegelikult veel midagi uudset , sest lihtsustatud tuuma omavad ka Inteli ja AMD-protsessorid - superskalaarsust ning pikki konveiereid on liialt raske realiseerida keerukal , muutuva pikkusega käsustikul . Siiski , nende puhul räägitakse RISC-tuumast , mille paralleelsus peaks olema väiksem . See vahe on praktiliselt olematu - Crusoe VLIW käsusõna pikkus on <arv> bitti , funktsionaalselt on selle taga kaks <arv>-astmelist täisarvuaritmeetika konveierit ja üks <arv>-astmeline ujukomaaritmeetika konveier . AMD-protsessorite tuum võtab ühes taktis vastu kuni neli riistvaraliselt teisendatud x<arv> käsku ( nn RISC<arv> Ops ) , mida võib ka vaadelda eriti pika käsusõnana . Sellise kogumi töötlemiseks on AMD K<arv> <arv>D protsessoris valmis <arv> spetsialiseeritud funktsionaalset plokki ( laadimine , salvestamine , kaks registriüksust , ujukomaüksus ja hargnemise lahendusüksus ) [ <arv> ] . AMD K<arv> ja Pentium III on veelgi võimekamad , järelikult selles osas Crusoe uudsusest või suuremast töötlusvõimest tegelikult rääkida ei saa . Crusoe kasutab sisemiselt pikki , <arv>-bitiseid käsusõnu , nn molekule , milles olevad käsud , nn aatomid , on konfliktivabad ja paralleelselt täidetavad . Erinevalt RISC-protsessorist , kus käsukimbud kuuluvad veel omaette plaanimisele , ka tuleb eraldi lahendada veel registrite ümbernimetamine , lahendatud käskude taasjärjestamine , hargnemiste ennustamine jms , pole Crusoe riistvaral nende lisaoperatsioonidega vaja tegeleda . Miks ? Põhimõtteline erinevus on koodi transleerimises . Inteli/AMD-arhitektuuris tehakse seda riistvaraliselt , Transmeta lahenduses tarkvaraliselt , kasutades selleks samu protsessori ressursse . Vastavat spetsiifilist tegevust nimetatakse koodivormindamiseks ( Code Morphing ) . Nagu jooniselt näha , ei ole koodivormindamine ei rakenduste ega operatsioonisüsteemi jaoks nähtav ja seepärast on Crusoe-protsessorite kasutusvaldkond ülekattuv Inteli/AMD-protsessorite omaga . Kui juba tarkvaraliselt kodeerida , siis tehakse sealhulgas ära ka muud ülalnimetatud operatsioonid , mis riistvaras arutult transistore sööksid . Et kõik käib üle koodivormindamise tarkvara , siis on see ka esimene , mis arvuti käivitamisel mällu laaditakse . Alles seejärel tuleb x<arv> BIOSi kord ning seejärel käivitatakse operatsioonisüsteemi laadur . Tõeline efekt saavutatakse sellega , et korra vormindatud , s.o. VLIW-käsustikku teisendatud kood viiakse läbi vahemälude ( vt. joonis <arv> ) välispuhvrisse ning taaskasutatakse . Ideaaljuhumil , kui programm täidab jätkuvalt mingit lühikest tsüklit , on kogu vajaminev kood vahemälus , koodivormindamisele aega ei kulutata ning Crusoe-protsessor võib lüüa sama taktisagedusega töötavaid CISC-protsessoreid . Veel enam , korduvat koodilõiku püütakse töö käigus täiendavalt optimeerida , s.t Crusoe jookseb iga ringiga aina kiiremini . Näiteks saab tarkvaraliselt tunduvalt enam ressursse kulutada hargnemiste jälgimisele ja käituda sarnastes olukordades paindlikumalt ning õigemini kui riistvara [ <arv> ] . Ning vastupidi , “ halb ” kood nõuab üha uut vormindamist , protsessori tööd katkestatakse pidevalt ning üldine kasulik tootlus langeb märgatavalt . Tarkvaralise vahekihi eelised ja puudused on toodud kokkuvõtlikult järgmises tabelis . Tabel <arv> Koodivormindamise eelised ja puudused  Nagu näha , on nii eeliseid kui ka puudusi ja hinnata tuleb Transmeta disainerite/programmeerijate riskivalmidust esmapilgul sedavõrd vaieldavas mänguruumis turukõlbliku lahenduse leidmisel . Antud juhul ei kustuta plussid-miinused päriselt üksteist , vaid järele jääb kogum , mis sobib suurepäraselt tänapäeva kuuma kasutusvaldkonda , milleks on energiasäästlikud mobiilseadised . Säilitades ühilduvuse x<arv> koodiga ning kogu olemasoleva masstarkvaraga , on pisikesed Crusoe-protsessorid võimelised toime tulema kaasaegsete multimeediarakendustega , nagu DVD ja MP<arv> dekodeerimine , tarbides ligi <arv> korda vähem võimsust kui parimad Inteli ja AMD mobiilprotsessorid . Transmeta disainerid ei ole jäänud peatuma ainult transistoride vähemast arvust saavutatavale energiasäästule , vaid lisanud terve hulga spetsiaalseid säästurezhiime ja dünaamiliselt reguleeritava taktisageduse ning toitepinge , mis muutuvad vastavalt protsessori koormusele ( nn LongRun-energiamajandus ) . Üks hea tingib kohe teise - unustage suured radiaatorid ja undavad ventilaatorid , kogu seadmestik kaalub vähem ja mahub koos kuvapaneeliga sentimeeti paksusesse kesta . Personaalse pihuarvuti või mobiiltelefoni energiatarve ja lauaarvutile lähedane funktsionaalsus - see on juba turuküps idee . Tabel <arv> TM<arv> energiatarve  JÕUDLUSTESTIMINE Sel ajal kui teised protsessoritootjad on väga ettevaatlikud oma spetsiifiliste jõudlustestide tulemuste lehvitamisel , teatab Transmeta rõõmsalt , et üldtunnustatud testid nende puhul üldse ei sobi ja jõudemonstratsioon toimub ainult omadel vahenditel , mis neid loomulikult kõige paremas valguses näitavad . Teiste suhtes alatu võte , aga võitjatele võib lubada erireegleid , kui need teenivad raskesti defineeritavat progressi . Antud juhtumil on võtmesõnaks tõeline mobiilsus . Transmeta kasutab nn Mobile Platform Benchmark' i jõudlusteste , mis hindavad tootlikkust kombineerituna energiatarbega , aku energiasisalduse mõju tootlikkusele , kuid samuti hinnatakse tipptootlust . Sealhulgas laidetakse maha patarei kestustestid , mis ei kasuta reaalseid rakendusi ja eeldavad stabiilset <arv> % jõudeolekut . Kasutatavad meetrikad on järgmised : <arv>. Koormuse sooritamise määr ( WCR - Workload Completion Rate ) , ühikuks koormusühikuid kulutatud aja kohta : WCR = mobiilsed koormusühikud / kulutatud aeg <arv>. Koormuse sooritamise efektiivus ehk energiaefektiivsus ( WCE - Workload Completion Efficiency ) , ühikuks koormusühikuid vatt-tunni kohta : WCE = mobiilsed koormusühikud / tarbitud energia <arv>. Koormuse sooritamise määra efektiivsus ( WCRE - Workload Completion Rate Efficiency ) , mis kombineerib kahte eelmist : WCRW = WCR / tarbitud energia Koormusühikuteks mobiilsele MicroSoft Windowsi seadmele on Word , Excel , PowerPoint , Outlook , ja Internet Explorer . Teistest rakendustest Adobe , Quake , MP<arv> , tarkvaraline DVD ja Windowsi operatsioonisüsteemi ( OS ) funktsioonid . Nagu arvata , ei ole WCR-meetrikas protsessoritel suurt vahet , pigem jääb Crusoe osades rakendustes Pentiumile alla . Vahe on ilmekas kahe viimase näitaja korral . Jõudlustestide tulemuste täieliku spektri saab Transmeta kodulehelt [ <arv> ] , siin on toodud vaid tulpdiagramm WCE-näitajatest . Mobile Pentiumi töösagedus on <arv> MHz , Crusoe <arv>-l <arv>-<arv> MHz Long Run- energitarberežiimis . KOKKUVÕTE Praegu ümbritseb Transmetat peaaegu samalaadne vaikus nagu enne <arv>. jaanuari edukat avalööki . Arvatavasti on see firma kavadega kooskõlas , sest maailmale on end teadvustatud , kuid teha on veel väga palju . Igatahes on paljud firmad kinnitanud oma valmisolekut Transmeta protsessoreid kasutada ning seadmete väljatöötlus käib täie hooga . Uute lahenduste turuküpseks saamine ja vastava hõivestrateegia väljatöötamine võtavad paratamatult aega , kuid kõigi eelduste kohaselt on murdepunkt väheste kuude kauguses ning Crusoe-protsessoriga seadised hakkavad laiendama mobiilseadiste funktsionaalsust ning nende kasutajate ringi . Koodivormindamine avab ju täiesti ootamatuid nishe - Crusoe ja selle järglased võivad olla edukad mitte ainult Inteli virtuaalse kloonimisega , vaid ehk veelgi edukamalt ette võtta Power PC- või Alpha-protsessorid . Internetti tungiv mobiilmaailm nõuab mobiiltelefonidelt enam arukust kui nende <arv>- ja <arv>-bitised kontrollerid võimaldavad . Ainuke loogiline järeldus näib olevat üleminek protsessoritele , mis suudavad kasutada olemasolevat tarkvara , ja siin ei ole Crusoele alternatiivi . Hoidke silma Transmeta kodulehel ! Viiteid John L. Hennessy , David A. Patterson . “ Computer Organization and Design . The Hardware/Software Interface ” . Morgan Kaufmann Publishers , <arv> Bruce Shiver , Bennett Smith . “ The Anatomy of a High-Performance Microprocessor . A Systems Perspective ” . IEEE Computer Society Press , <arv> <hyperlink> K. Tammemäe . “ Pingviiniprotsessor ” . // A &amp; A ( <arv> ) <arv> <hyperlink> Rein Kuusik , TTÜ informaatikainstituut Infosüsteemi isearendamise toimimismudel infoühiskonnas TAUST IT tormiline areng on vallandanud üha tiheneva konkurentsi firmade vahel , mille tulemusena firmad peavad järjest tõsisemalt arvestama pidevalt muutuvat toimimiskeskkonda ning sellest sugenevat vajadust muuta juhtimist ja töökorraldust . Seetõttu on saanud väga oluliseks kiire ja kvaliteetne infosüsteemi ( edaspidi IS ) arendamine , nii et oleks tagatud ka arenduse järjepidevus . Meie ( TTÜ spin-off-firma AS Comptuur ) mitmeaastastest kontaktidest firmade ja asutuste IT-juhtide ja tarkvarafirmade esindajatega on selgunud , et IS-i arendamisel on valdav tarkvara- keskne lähenemine , kus alahinnatakse analüüsi osa ( kood ja tehnika on kõik ! ) , eriti aga strateegilise arenduse rolli , teadmata/teadvustamata endale selle kohta IS-i arendamisel . See väide puudutab võrdselt nii arendajaid ( tarkvarafirmad ) kui ka arendatavaid - meie hinnangul toimub nii rohkem kui <arv> % juhtudel . Samas on Eesti IS-i arendus selle poolest õnnelikus olukorras , et enamik süsteeme on loodud <arv>-ndatel aastatel . Hetkel oleme aga jõudmas seisu , kus hakatakse tajuma , et arenduse osas on midagi viltu , sest on tekkinud tõsiseid probleeme olemasoleva IS-i arendamisega/parendamisega . Meie väitel - kui jätta kõrvale arenduse projektijuhtimuslik külg - on kujunenud olukord tingitud alljärgnevast : IS-i eri osised on ostetud eri aegadel , arvestamata , kuidas neid ühtsesse tervikusse integreerida IS-i on hakatud lihtsalt mingist otsast ehitama , omamata ettekujutust , milline see tervikuna välja peaks nägema tugevalt tarkvaraline lähenemine arendamisele , s. o konkreetse süsteemi analüüsil piirdutakse eelkaardistuse/eeluuringuga ja asutakse kohe koodi kirjutama IS-i aluseks võetakse olemasolev ametkondlik-administratiivne organisatsioon ( osakond <arv> , osakond <arv> , ... ) , arvestamata , et tegelikul infotöö organisatsioonil võib olla hoopis teistsugune struktuur . Kõik eespool loetletud põhjused on koondatavad ühe nimetaja alla , milleks on alljärgnev väide - puudub IS-i strateegiline lahendus , s. o <arv> ) puudub IS-i kui infotöö organisatsiooni üldistatud tervikstruktuur , ei teadvustata , millistest osistest ( funktsionaalsetest allsüsteemidest , põhiobjektidest ) tervik koosneb ja kuidas need on liidestatud ( osistevahelised liidesed ) , seega puudub IS kui integreeritud tervik <arv> ) puudub arendusstrateegia - s.o ei teata , mida peab tegema terviksüsteemini jõudmiseks . Alljärgnevalt esitame eespool nimetatud olukorra üldistatud käsitluse ja pakume ühe võimaliku ( lähi ) tuleviku stsenaariumi IS-i arenduse toimimisest infoühiskonnas . INFOÜHISKONNA TOIMIMISE ALUSED Infoühiskonna ( edaspidi IÜ ) käsitlustest on teada , et selle põhiobjektiks on informatsioon , põhiprotsessiks - informatsiooni tootmine : loomine , edastamine , kogumine ja töötlemine . Et info on teadmiste ja otsustuste aluseks , siis eesmärgiks on võimalikult kiire infoedastus ja -töötlus . Info levib kommunikatsiooni kaudu . Seega on IÜ tehniliseks põhialuseks võrk , millel baseerub kaasaegne kommunikatsioon . Et infol oleks väärtus , peab leiduma teine pool , s.o vastuvõtja , kes seda kasutab . Samas , kui info jõuab vastuvõtjani ja too seda kasutada ei oska , muutub info kasutuks . Seega on teiseks aluseks , millest sõltub IÜ toimimise efektiivsus , haritud inimene kui spetsialist ( paluks spetsialisti mitte segi ajada inimese kui ühiskonnaliikmega , kelle huvides / teenimiseks IÜ toimib ) . Samas need kaks alust ei ole piisavad , et IÜ saaks edukalt toimida . IÜ eripäraks on tohutud infovood . On mõeldamatu , et inimene kui füüsiline olend selle kõigega ilma kõrvalise abita hakkama saaks . Vajalik on info kogumine ja töötlemine , s.o selekteerimine , infootsing , üldistamine , teisendamine jms , et osapool saaks just seda infot , mis temale vajalik on . Seega on tarvilikud tohutud mäluressursid info talletamiseks , ülikiired protsessorid ja spetsiaaltarkvara selle töötlemiseks . Siit jõuame arvuti ja algoritmikat realiseeriva tarkvara mõisteni kui IÜ toimimise kolmanda aluseni . Ka siin on oluline roll haritud spetsialistil , kes seda kõike luua ja kasutada oskab . Kuid ka see pole veel IÜ toimimiseks piisav . Kas me saame rääkida efektiivselt toimivast IÜ-st , kui võrk , arvutid ja inimene oma tegevust ei sünkroniseeri , kui nad toimivad isetahtsi , seda nii IÜ kui terviku ja ka IÜ üksikute osiste suhtes ? Siit jõuame infojuhtimiseni ( juhtimine tähendab ka vastutust , kontrolli , järelevalvet ) ja seda toetava IÜ ühe olulisema keskkonnani , milleks on infosüsteem . Viimane seob kõik eespool nimetatud alused ( võrk - inimene - arvuti ) ühtseks tervikuks , olles IÜ efektiivse toimimise aluseks/tagatiseks . INFOÜHISKOND , VIRTUAALNE ORGANISATSIOON JA INFOSÜSTEEM Alljärgnev arutelu puudutab eelkõige organisatsioone , kelle tooted / teenused on valdavalt informatsioonikesksed või kelle toimimine vajab ka informatsiooni kogumist / töötlemist . Tekib küsimus , kuivõrd muudab IÜ senist ( mehaanikaajastule omast ) töökorraldust , s.o toimimist põhimõttel 'hammasratas vastu hammasratast' , mis tingis kõike kõige juures e lähestikku paiknemist / kokku koondamist , teisisõnu , kas see muudab ka organisatsioonide toimimise põhimõtteid ? Muutuste aluseks on siin informatsiooni kui objekti kaalutus , selle omadus säilida ka tavatul kujul materialiseerituna . See omadus võimaldab teda transportida ülikiiresti reaalajas suvalisse punkti maailmas ja samuti otsida/hankida seda üle maailma , kasutades vastavaid kommunikatsioonivõrke . Nimetatud omadus ja sellest lähtuvad võimalused purustavad mehaanilise maailma paradigma - kõige aluseks on lähikontakt kui vastastikuse toimimise / mõjutamise eeldus . Samal ajal , tänu info kiirele kättesaadavusele / ligipääsule , toimub ka otsustuse delegeerimine juhtimise madalamatele tasemetele e juhtimise detsentraliseerimine . Seega avanevad täiesti uued võimalused organisatsiooni toimimise kujundamiseks ( muidugi eeldusel , et on täidetud muud vajalikud tingimused ) , kusjuures peamisteks muutusteks / võimalusteks on paiknemise hajutatus kuni üksikute töökohtadeni välja toimimise avatus / avalikustatus ( muidugi ulatuses , nagu seda nõutakse / vajalikuks peetakse ) juhtimise tasandil koostoimimise lihtsustumine e toimivate üksuste suhteline iseseisvus Ülejäänud omadused ( ka probleemid ) on tuletatavad valdavalt nendest kolmest ( nt kontroll / järelevalve , vabadus planeerida oma tööaega , motiveeritus jne ) . Toimimise seisukohalt tähendab see ka tootmise detsentraliseerimist e väikeettevõtetele suuremaid tegutsemisvõimalusi , sest need on toimimise , juhtimise ja tootmise ümberkorraldamise mõttes paindlikumad ja odavamad . Seega IÜ organisatsioon on eelkõige virtuaalne organisatsioon ( edaspidi VO ) , s.o hajus koostoimiv avatud organisatsioon . See aga tingib vajaduse senisest suurema vastutuse ja efektiivsema ( ka operatiivsema ) juhtimise järele , sest organisatsioon peab täitma oma toimimise eesmärke . Juhtimine ( omadused : ratsionaalsus , täpsus , operatiivsus , paljuvaatelisus jne ) on hajusa koostoimimise tingimustes aga mõeldamatu ilma seda toetava tegusa infosüsteemita . Seega VO toimimise üheks põhialuseks on tegus infosüsteem . Et ka IÜ ise on toimiv organisatsioon ( virtuaalsete organisatsioonide koostoimimise keskkond / süsteem ) , siis ka see on virtuaalne ja selle juhtimise aluseks peab olema tegus infosüsteem ( pealisehitus e organisatsioonide organisatsioon e metasüsteem ) . VIRTUAALNE ORGANISATSIOON JA MUUTUMINE Eespool öeldust saime järeldada , et IÜ toimib virtuaalsete organisatsioonide kaudu ja et VO toimimise aluseks on tegus IS . Seejuures ei tohi me unustada , et majanduskeskkonnas toimivad VO-d konkurentsi tingimustes . Võib täheldada firmade turukonkurentsi teravnemist , sest IT tormilise arengu tulemusena avanevad täiesti uued võimalused toodete / teenuste loomiseks / arendamiseks , tootmiseks , turunduseks ( näiteks e-kommerts , interneti-reklaam , elektrooniline allkiri jne ) , seejuures on nii potentsiaalseks turuks kui ka konkurendiks praktiliselt terve maailm . Et püsima jääda , peavad firmad pidevalt oma töökorraldust ja juhtimist kaasajastama ning optimeerima . Järelikult on VO pidevas muutumises , mistõttu on pidevas muutumises ka teda toetav IS . Järelikult IÜ-s toimub pidev IS-de arendamine . Et IÜ toimimise aluseks on IS , saame ka väita , et IÜ üheks põhitegevuseks on pidev IS-de tootmine / taastootmine . INFOSÜSTEEM JA ISEARENDAMINE IT kiire areng ja turukonkurents sunnivad pidevalt otsima uusi võimalusi . VO raames tuleb kogu aeg täiustada töökorraldust , leida uusi turunishe ( selleks sunnib firma eksisteerimise peaeesmärk - tuua omanikele majanduslikku tulu ) , mistõttu toimub pidev teda toetava IS-i arendamine ( avalik-õiguslike organisatsioonide korral on arengu tõukejõuks eelkõige avalikkuse surve ) . Seejuures muutub küsitavaks massiline välisarenduse ( outsourcing ) kasutamine , sest ei pruugi jätkuda ressursse ( arendamisega on kiire ( konkurents turul ! ) , muutmine toimub sagedasti ) firma ise teab kõige paremini , mille poole püüeldakse ( nõuded / vajadused / suundumused ) ning mida parendatakse või vastupidi , firma ise täpselt ei tea , mistõttu otsitakse / katsetatakse sobivat lahendust ( katsetamine välisarenduse korral nõuab rohkesti ressursse ) Seetõttu omandab firma poolt juhitav ja paindlikum IS-i arendamine üha suurema tähtsuse . Kerkib küsimus , kas VO on ikka suuteline ise oma IS-i arendama ? Kas see ei tähenda liiga suuri nõudmisi VO-töötajatele , näiteks äärmuslikku nõudmist , et kõik struktuuriüksuste juhatajad peavad olema ka IT-spetsialistid ? Seda kindlasti mitte . Hea on , kui nende seas selliseid inimesi leidub , aga niisugune nõue pole üldsegi tarvilik . Olukorra lahenduseks on IT-konsultatsioonifirmade ( edaspidi KF ) tugi . Nimetatud stsenaariumi järgi modelleerib VO KF-i juhendamisel oma äriprotsessid ise ja teeb vajadusel äriprotsesside re-engeneeringu . KF tagab sisulise ja vormilise kvaliteedi , teeb vajaliku üldistuse strateegia seisukohalt ja tagab mudelite vajaliku teisendamise IS-i genereerimiseks . Nemad tagavad vajadusel VO-töötajate koolituse ( seda ka meeskonna / koostoimimise osas ) . ( Eestis selline lähenemine kahjuks veel ei toimi . ) Seejuures on oluline , et firma säilitaks oma isearendamisvõime . Jällegi võib tõusta ressursside piiratuse küsimus , sest konsulteerimine / juhendamine maksab . Võrreldes aga välisarendusega on arenduskulude kokkuhoid ilmne ( analüüsi eeltöö teeb firma , süsteem genereeritakse , seega jääb realisatsioonietapi kui arenduse kõige aeganõudvama osa välisarendus ära ja samas on firmal võimalus säilitada isearendamisvõime ) . Selline käsitlus saab võimalikuks , sest tänu IT tormilisele arengule on kõigile kättesaadavad arendusmeetodid , mis toetavad pidevarenduse loogikat arendusmeetodeid toetavad vastuvõetava hinnaga lihtsalt käsitletavad arenduskeskkonnad e CASE-vahendid tarkvara- ja konsultatsioonifirmad , kes neid meetodeid ja arenduskeskkondi haldavad loomisel on Interneti-põhised arenduskeskkonnad ( kaugklient ) Seega tänu vajaliku toe kujunemisele on avanenud võimalus äriprotsesse ise modelleerida ja kaasajastada e valdavaks on muutumas IS-i isearendamine . Kuid seejuures tekib oluline küsimus : mis on lisaks tehnikale vajalik ehk mis peaks olema arendamise aluseks , et arendamine oleks efektiivne , tulemuslik ja saaks toimuda järjepidevalt ilma tõsisemate tagasilöökideta ? IS JA STRATEEGILINE ARENDAMINE Jättes kõrvale arenduse projektijuhtimisliku külje , arendusmeeskonna omadused ja igaühe rollid , arenduse meetodid ja keskkonnad , võime arutleda alljärgnevalt . Kas me saame arendada , teadmata , mis osistest arenduse objekt koosneb , kuidas ta tervikuna toimib ( kui osiste sünkroniseeritud koostoimimine ) ? Võib väita , et saab , kui see osis toimib sõltumatult teistest osistest . Samas aga , et kindlaks teha , kas osis on sõltumatu , peame tundma tervikut ! Arenduse probleemiks on siinjuures asjaolu , et vana tervik enam ei rahulda , seda on tarvis muuta , aga uut tervikut ei tunta veel piisava täpsusega , tervikut on vaja sünteesida . Seega terviku määratlemine / sünteesimine ongi lähtekoht , mis loob vundamendi arenduse tulemuslikkusele ja järjepidevusele . Eelöeldu on lähtekoht , mille alusel defineerime IS-i strateegilise arendamise ( SA ) eesmärgi : selleks on arendada IS-i kui tervikut või selle mingit osa kui tervikut ( süsteemi kui terviku kontekstis ) , s.o teadvustamine , <arv> ) millistest osistest tervik koosneb ja kuidas need osised koos toimivad ( koostoimimine tähendab süsteemi seisukohalt integreeritust , seega osiste liidestamist , vastastikust toimimisvajadust ) , s.o arendamise objekti analüüsimine ja tervikmudeli sünteesimine ( nn strateegiline arendamine e strateegiline analüüs ja disain ) <arv> ) mida teha , et sünteesitud tervikuni jõuda , s.o arendamise strateegia loomine ( millised projektid tuleks käivitada , nende prioriteedid , millise projektorganisatsiooniga , milline arendustsükkel ( faasid , etapid ) , tegevuskava , ressursivajadused , meeskond , rollid jne , jne ) Seejuures arendamine , eriti pikemas plaanis , on tulemuslikum , kui teame , kuidas mingi osise muutumisel muutuvad teised osised ( antud juhul on koostoimeks osiste seostatud muutumine ) . Järelikult strateegiline arendamine tähendab ka muutuste ( s.o arendamise enda ) haldamist/juhtimist . Seega IS-i SA on suunatud ka arendamise haldamisele / juhtimisele terviku seisukohalt . Siit näeme , et arendamise edukaks toimimiseks on tarvis kahte põhimudelit : <arv> ) süsteemi kui terviku ehk arendamise objekti toimimismudel , s.t millist IS-i tahame saavutada ja kuidas see toimib ( tuletatakse olemasolevast süsteemist ja nõuetest / vajadustest / võimalustest / piirangutest / suundumustest / visioonidest ) ; <arv> ) süsteemi muutumise ehk arenduse enda toimimismudel , s.t kuidas muutuvad teised osised ühe osise muutumise tulemusena ehk muutuste juhtimine [ süsteemi toimimise metamudel ; aluseks pidev lisamise-ühinemise-jagunemise suhe ( pädevusalade , funktsioonide , registrite / tabelite ) , metoodiliseks aluseks käsitlus , et iga objekti võime vajadusel käsitleda süsteemina ( objektist süsteemiks = jagunemine ) ja vastupidi ( süsteemist objektiks = ühinemine ) ] . Teiselt poolt , millised nõuded peaksid olema esitatud strateegilisele mudelile , et see toimiks ? Kindlasti peab terviksüsteem olema jaotatud väiksemateks osadeks ( dekomponeerimine ) , et me suudaksime tervikut hallata , sest teades osiste koostoimimist , on üksikute osiste arendamine palju lihtsam kui sellisteks osadeks jaotamata terviku arendamine ( analoogiliselt tarkvaraarenduse/programmeerimise praktikaga , kus suure ülesande jaotamine väiksemateks tagab realisatsiooni lihtsustumise ja seega ka tulemuse parema kvaliteedi , s.o ülesande üldine keerukus väheneb ) . Kerkib küsimus , kuidas otsustada , kas saavutatud tükeldus on ikka optimaalne ja millisel üldistuse tasemel ( seda ka arendusriskide ennetamise / leevendamise seisukohalt ) ? Milliseid peamisi tingimusi peab IS-i õige tükeldamine strateegilisel analüüsil rahuldama ?  Mis juhtub , kui tükeldus puudub või on väär ? Vead võivad ilmneda alles süsteemi toimimise käigus nii , et süsteem pole enam arendatav , sest tänu vigadele strateegilises tervikmudelis ( muidugi selle olemasolul ! ) ei saa liiga suure keerukuse või ressursinõudlikkuse tõttu integreerida uusi osiseid , sisse viia muutusi jne , s.t lisamise-ühinemise-jagunemise suhe ei toimi . ISEARENDAMINE JA ARENDUSSTRATEEGIA Isearendamise korral saavutatakse arendusstrateegia valdavalt koostöös konsultatsioonifirmaga . Arendusstrateegia peab tagama , et ei tekiks vastuolusid IS-i kui terviku toimimisel . Siinjuures peame rõhutama , et selles kontekstis mõistame kaasaegse IS-i all tegusalt toimivat IS-i , mis tagab tema eri osiste ja osalejate ( klientide ) tõrgeteta , ratsionaalse ja sünkroniseeritud koostoimimise . Seetõttu on tema arendamine ja arenduse haldamine mõeldav ainult IS-i tervikvaate olemasolul ning selle järgimisel . See võimaldab uute osiste tõrgeteta integreerimist tervikusse , sest on fikseeritud nõuded integreerimiseks vajalikule liidesele . Seejuures pole oluline , kas integreeritav osis luuakse ise või ostetakse valmiskujul ( mudelina ) . Kõige selle juures ei käsitleta tervikvaadet staatilisena , vaid on fikseeritud ka tema muutmise organisatsioon ja korraldus . Arenduse seisukohalt on oluline just strateegiline üldistus - sünteesitud tervikmudel kui strateegilise disaini tulemus - , mis leiab üldistusele vastava disainimustri ehk osise valmislahenduse tervikmudeli tasemel , mida saab sobitada ( integreerida ) konkreetsesse keskkonda ( IS-i ) ja seda mitte tarkvarakomponentide , vaid just mudelite tasemel . Selles kontekstis koosneb süsteemi strateegiline tervikmudel liidestatud disainimustritest . Äriprotsesside pideva kaasajastamise tulemusena toimub ka pidev mudelite muutmine . Seega ei saa me sellesse siduda jäiku lahendusi , mida tarkvarakomponent kui IS-i mingi kodeeritud ( koodi kujul kirjutatud ) mudel kindlasti on . Kui me integreeriksime tarkvarakomponendi , siis kuidas seda muuta mudeli muutumisel , s.t teha koodist re-engeneering mudelisse . Seega jõuame mudeli tasemele , mille alusel genereerime uue süsteemi ( tarkvarakomponendi ) , mistõttu tarkvarakomponente nagu polekski vaja . Tegelikult nii see pole , need komponendid on eelkõige vajalikud realiseerimise , mitte pidevarenduse aspektist . Kui stabiilseks seisundiks saab muutumine , siis tarkvarakomponentide olemus peab muutuma , nad muutuvad oluliseks süsteemi genereerimise seisukohalt . Kui me kasutame disainimustreid ( DM ) ja generaatorit , siis tervikmudel on muudetav ja konkreetne tarkvara on genereeritav . Selle nägemuse järgi muutuvad arenduse seisukohalt oluliseks disainimustrid e valmislahendused üldistatud mudelitena . Kui vajalik DM on olemas , on toimiv süsteem tagatud , kui pole , tuleb vastav DM luua , aga seejuures saavutatud lahendus ( DM ) muutub tooteks , mida saab pakkuda teistele ! Et süsteem sellisena toimiks , peavad firma toimimismudelid olema kogu aeg aktiivsed , alati käepärast ja muudetavad . Seejuures pole oluline , kas vajalike mudeliteni jõutakse isearenduse kaudu või teiste abiga või hoopiski neid sisse ostes nendelt , kel nad vajaliku üldistuse tasemel olemas on . Seega mudelid ( mudel kui DM ) muutuvad tooteks / kaubaks ja tormiliselt hakkab arenema mudelite turg . Tarkvarakomponentide turg hakkab suunduma IS-i tarkvara genereerimisele kui üle disainimustrite üldistatud tarkvarakomponentide loomisele , mis võimaldavad suvalisi disainimustreid realiseerida . ISEARENDAMISEST TULENEVAD NÕUDED Alajaotuses “ Infosüsteem ja isearendamine ” käsitlesime tingimusi , mis toetavad IS-i isearendamist . Samal ajal esitab isearendamine toimimiseks terve rea nõudmisi nii arendajatele , arenduse toetajatele / juhtijatele , arenduskeskkondadele kui ka arendusmeetoditele . Tingimuste arenemine loob uued võimalused , nende realiseerimine aga omakorda uued vajadused , mis kutsub jälle esile uute võimaluste kujunemise . A - UUED VÕIMALUSED ARENDAJALE Et VO korral on pearõhk isearendamisel , kus eeltöö KF-i tehtavale üldistusele teeb ära VO ise , siis peab selle töötaja-arendaja soovitavalt oskama / teadma järgmist : tal peab olema analüüsioskus , meie mõistes “ kolmkeskne ” mõtlemine ( andmed , protsessid , sündmused ja nende kooskõlastamine ) ta peab olema süsteemne ta peab oskama meeskonnatööd / koostoimimist Lisaks eelnevatele peab ta veel firma tasemel tundma arendust toetavat töökorraldust saavutama juhendajaga vastastikuse mõistmise olema projektikeskse lähenemisega B - UUED VÕIMALUSED ARENDUSE TOETAJALE/JUHENDAJALE Isearendaja toetamiseks peab toetaja / juhendaja tundma arendusmeetodeid tundma äriprotsesside modelleerimist ja re-engeneeringut evima analüüsioskust / kogemust / teadmist suutma lahendusi sünteesida ( disainioskus ) omama / tundma CASE-keskkondi tundma süsteemitöö põhimõtteid / tehnikaid soovitavalt evima vajalikke koolitusprogramme oskama hinnata arendaja valmisolekut arendamiseks omama meeskonnatöö kogemusi omama projektikeskset lähenemist C -UUED VÕIMALUSED ARENDUSKESKKONNALE Isearendamine esitab arenduskeskkonnale alljärgnevad nõuded : on kasutatav ka mittespetsialistidele selle aluseks olev arendusmeetod toetab isearendamist ja tagab oodatud tulemuse võimaldab süsteemi ( klienti , serverit , liidest ) genereerida ja rekursiivselt arendada Esimene nõue seab tingimuseks kasutuse ja käsitluse lihtsuse . Kasutuse lihtsus sõltub paljuski klienditöökoha disainist , käsitluse lihtsus aga eelkõige arenduskeskkonna aluseks olevast meetodist ja arenduse läbiviimise metoodikast . Rõhutame siinjuures juba eelmises alajaotuses käsitletud väidet / järeldust , et arenduse üheks eesmärgiks on konkreetse lahenduse üldistamine DM-ks ( õigem oleks öelda - üheks olulisimaks nõudeks , sest KF-i möödalaskmised siin tähendavad IS-i saavutamise olulist kallinemist ( valmislahendus ( =DM ) versus lahenduse ( DM ) loomine ) . ( Siin peitub oluline erinevus tarkvara arendamise meetoditest , mille järgi analüüsi üheks eesmärgiks ( disaineri mõttes ) on lahenduse taandamine olemasolevatele tarkvarakomponentidele , mis on peaaegu alati konkreetse lahenduse kesksed ( nt laenu allsüsteem kui tarkvarakomponent , kliendisuhete allsüsteem kui tarkvarakomponent jne ) . Eesmärgiks on süsteem nagu klotsidest kokku laduda . Koodi erinevuse probleemi võimaldab lahendada nt CORBA , ka on kirjeldatav vajalik liides . Samas aga on komponent jäik tema aluseks oleva mudeli re-engeneeringu suhtes , kus valdavaks on ühinemise-jagunemise suhted ( tarkvarakomponendi jaoks tähendab muutus ümberkodeerimist ) . Seega peab komponendile vastav mudel rahuldama kas väga konkreetset või vastupidi , väga laia ( seinast seina ) lahendust ( viimane võib terviku seisukohast tähendada eri komponentide funktsionaalsuste kattumist e dubleerimist ) . Re-engeneeringu seisukohast jõuame jälle tõdemuseni , et kõige aluseks on ikkagi mudel , sest sellest saab vajaliku koodi genereerida ( jätame siinjuures tähelepanuta väite , et genereeritud kood ei pruugi töötada kõige efektiivsemalt ja on ressursialdis ( mälumahud ) , liides ei pruugi olla eriti kasutajasõbralik jne ) . Teine nõue eeldab arendusmeetodilt alljärgnevaid omadusi : subjektikesksust metoodilist lihtsust arendustsükli tehnologiseeritust iseõppimise võimet navigeerimise lihtsust ... Kolmas nõue on isearendamise seisukohalt loomulik , sest genereerimine toimub kiiresti , tagab koodi õigsuse ( tohutu ajavõit ) , võimaldab mudelite õigsust kontrollida ( kas on saavutatud vajalik funktsionaalsus ja tulemuste õigsus ) , võimaldab testida erinevaid lahendusi , süsteemi pidevalt muuta / täiendada / parendada , lisades uusi funktsionaalsusi ( oluline arenduse tsüklilisuse seisukohast ) jne. Neljanda nõude vajalikkus tuleneb eelkõige iteratiivse arenduse seisukohalt . Kui mudelile vastav IS on genereeritud ja ta rahuldab vajadusi , siis võib järgneda süsteemi optimeerimine või kasutajasõbralikumaks muutmine . Tulemusena võidakse teatud osa süsteemist ümber kodeerida generaatorit kasutamata või muuta genereeritud koodi . Samas võivad parendused tähendada ka täiendusi / parendusi mudelisse ( esialgu on nad tehtud koodi tasemel ) . Tekib probleem , kuidas neid muutusi mudelites kajastada . Rekursiivne arendamine seda võimaldabki . D -UUED VÕIMALUSED ARENDUSMEETODILE Arendusmeetod peab olema subjektikeskne paindlik faaside / etappide käsitlemisel iteratiivne sellel peab olema projektijuhtimislik tugi jne KOKKUVÕTTEKS Käesolevas artiklis käsitlesime infoühiskonda ja infosüsteemide isearendamist selles . Jõudsime tõdemuseni , et infoühiskond on virtuaalsete organisatsioonide toimimiskeskkond ja et infosüsteem on infoühiskonna toimimise aluseks koostoimimise ja juhtimise seisukohalt . Ka jõudsime tõdemuseni , et turukonkurentsi ja IT tormilise arengu tingimustes on IS pidevas muutumises / arendamises , mistõttu infoühiskonna üheks põhitegevuseks on infosüsteemide tootmine . Seejuures muutub valdavaks infosüsteemi isearendamine virtuaalse organisatsiooni poolt arenduskeskkondi kasutades konsultatsioonifirmade toel / juhendamisel . Ka jõudsime konstateeringuni , et oluliseks muutub strateegiline arendamine , mis tagab arenduse toimimise virtuaalse organisatsiooni kui terviku seisukohalt ja vähendab arendusriske . Seejuures strateegia seisukohalt muutub oluliseks disainimuster kui mingi allsüsteemi üldistatud mudel . See võimaldas järeldada , et valdavaks on muutumas mudelite turg ning et infosüsteemid valdavalt genereeritakse . Tarkvarakomponendid praegusel kujul kui infosüsteemi ehitusklotsid muudavad oma olemust , muutudes infosüsteemi genereerimise seisukohalt suvalisi disainimustreid realiseerida võimaldavateks üldistatud komponentideks . Lõpetuseks esitame infosüsteemide tootmise üldistatud toimimismudeli infoühiskonnas . Järgnevalt loetletud viis protsessi toimuvad paralleelselt , tihedalt läbi põimudes ja üksteist täiendades , tekitades sünergiaefekti , mis materialiseerub infosüsteemides ja arenduskeskkondades , vallandades mudelite turu : arenduskeskkondade tootmine / arendamine ( elluviijateks tarkvarafirmad ) IS-i isearendamine : äriprotsesside modelleerimine , IS-i genereerimine ja rakendamine ( firmad ) IS-i isearenduse toetamine : konsulteerimine / juhendamine / analüüs / disain ( konsultatsioonifirmad , tarkvarafirmad , koolitusfirmad ) mudelite ( disainimustrite ) tootmine ( tarkvarafirmad , konsultatsioonifirmad , firmad ) tarkvarakomponentide kui suvalisi disainimustreid realiseerivate komponentide tootmine ( tarkvarafirmad ) Tõlkinud Vello Hanson I.Hannula , R.Linturi / SADA NÄHTUST <arv> - <arv> / Virtuaal-Helsingi ja kübermutt <arv> Roti aasta Islami aasta <arv> Internet - maailma suurim majanduspiirkond Tuberkuloosi sureb <arv> miljonit inimest Olümpiamängud Suured ujutused muuhulgas Hollandis ja Poolas Videomobiilid tõstavad Nokia aktsiate hinda Tuhatpalgega veenvus igas olukorras Kirurgiline õmblusmasin - operatsioonisaalide teostunud unistus ÜRO ähvardab infovõrkude järelevalveta maid blokaadiga Maailmavallutaja NetFin sullegi koju Pole sellist hetke , mil masina areng oleks ohuks . Raudmeisel on parem kui kivimeisel ja terasmeisel on parem kui raudmeisel . Kas saaks kujutleda hetke , mil meisli lõhestusvõime muutuks nii suurepäraseks , et see muutuks ohuks ? Ilmselt mitte . Henry Ford . Edasi - kõigest hoolimata . <arv>. SatWeb - <arv>.<arv>.<arv> VIDEOMOBIILID TõSTAVAD NOKIA AKTSIATE HINDA Nokia aktsiate hinnad kerkisid tugevalt , kui täna pärastlõunal avaldati firma esimese poolaasta käibe andmed . Tõusu põhjus on selles , et Nokia uusimal videoühendusega varustatud lairiba-mobiiltelefonil on müügimenu kogu maailmas . Enne seda oli Nokia üsnagi jäänud jalgu satelliitmobiilidele . Nokia uurimiskeskuse juhataja Ilkka Tuomi sõnul on inimeste käitumisviisides toimunud viimastel aastatel märkimisväärne muutus . “ Telefoni teel asjaajamist ilma pildita ei peeta usaldusväärseks . Paljud kauplused ei nõustu kliendi nägu nägemata enam tellimusi vastu võtma ega lepinguid sõlmima . ” Paljudesse telefonisüsteemidesse on praegu paigutatud tuvastid , mis automaatselt kõrvaldavad virtuaalnäo ja hoiatavad pilditöötlusprogrammiga võltsitud näo eest . Samasuguse hoiatuse väljastavad tavalisemad satelliittelefonis kasutatavad meetodid , millega rekonstrueeritakse näopilt . Sel juhul ei või satelliittelefonis enam usaldada näoilmete siirust . Tuomi sõnutsi on Nokia tehnika praegu ainus , mis kvaliteedilt vastab kaabelvõrgu normaalkujulisele videokõnele . Nokia on pööranud tähelepanu ka sellele , et videokõnede kvaliteet on muutunud staatusesümboliks . Kõne vastuvõtja märkab alati , kui helistajal on halvem süsteem kui tal endal . “ Kõik me tahame esineda võimalikult soodsas valguses , ” kinnitas pikaajaline ilu asjatundja Lenita Airisto , kui saime ta Nokia teabepäeval videotelefonile . Avatars Inc. - <arv>.<arv>.<arv> TUHATPALGEGA VEENVUS IGAS OLUKORRAS Kallis sõber ! Kas sulle tundub , et sind ei võeta tõsiselt ? Või oled ehk mõnikord soovinud esineda tundmatuna ? Tuhatpalge abil saad oma videokõnedesse telediktori veenvust või vürsti elegantsi . Otsusta oma stiil ise , ülejäänu eest hoolitseb Tuhatpale . Ta annab su käsutusse tehnika , mida seni on kasutanud ainult maailma juhtivad filmistuudiod ja virtuaalteatrid . Redigeeri ise oma virtuaalnägu . Meie programm Tuhatpale teeb sinust su videokõnedes uue , iga ülesande jaoks kõige paremini sobiva isiku . Võta meie virtuaalnägudest ükskõik milline ja redigeeri seda nii , kuidas soovid . Virtuaalnägu aitab sul kõigis su videotelefonikõnedes esineda enda jaoks kõige kasulikumal viisil . Eritellimusel võime sulle välja töötada ka sind ennast meenutava virtuaalnäo nendeks olukordadeks , kus tahad esineda iseendana . Võid väljendada kõiki tundeid , mida soovid , ja need edastatakse kõnepartnerile täpselt õigete ilmete ja žestidena , teadusliku täpsusega ! Tuhatpale on testitud tehnika . Tuhatpalge tehnika toimib , seda on juba testitud sadade miljonite vaatajate ees . Sa tead ju väga hästi , et tänapäeval suudab keskpäranegi näitleja Tuhatpalge abil matkida endiste aegade kuulsusi . Miks ei peaks siis sinagi parandama oma etteasteid , kui tehnika annab selleks võimaluse ? Tuhatpalet on kerge kasutada , ta sobib igaühele . Ta juhtimine toimub oma näole asetatava nanoõhukese tuvastuskilega , mida pole üldse tunda ja mis ei tee vähimatki kahju . Kile registreerib ja edastab näolihaste liigutused ja need suunatakse su videotelefoni protsessorisse . Ka su hääl läheb töötlemisele protsessorisse . Peale selle võid veel Tuhatpalge juhtnuppudega tugevdada või modifitseerida oma tundeid . Võid ka valida tehisisiksuste hulgast näiteks ägeda , vaoshoitud , joviaalse või kurva põhilaadi . Tuhatpalge võimalused on piiritud ! Tule vaatama näiteid meie kodulehel ( sat.web.TU-<arv>-<arv>-HAT ) . Sealt saad ka tellida omale Tuhatpalge . See maksab <arv> eurot , iga valmisisiksus aga <arv> eurot . Su enda isiksuse digiteerimine maksab <arv> eurot ja seda on võimalik teha kõigis meie konsultatsioonifirmades . Vabasta end geenide ahelaist ! Kingi endale tuhat palet ! Internet Now - <arv>.<arv>.<arv> ÜRO äHVARDAB INFOVõRKUDE JäRELEVALVETA MAID BLOKAADIGA ÜRO Julgeolekunõukogu otsustas täna üksmeelselt toetada EL-i ja USA juhitava infovõrkude järelevalvekomisjoni tööd . Järelevalvekomisjon on saanud põhiosa maailma maadest liituma järelevalveleppega . Väljapoole neid maid jääb ainult umbes kümnendik maailma Interneti-ühendustest . Järelevalvelepe kohustab kõiki saatja asukohamaa territooriumil tegutsevaid operaatoreid säilitama kõiki Interneti-sõnumite saatjaandmeid kahe kuu jooksul . Lepe tagab head eeldused süsteemaatilisele arvutikelmuste valvele . Eelduseks on siiski see , et sõnumid ei kulge leppega hõlmamata maade kaudu . Tõrkujailt võetakse kirjavahetuse saladus Seetõttu otsustas julgeolekunõukogu soovitada , et kogu maailmas võetaks saladus kogu selliselt kirjavahetuselt , mis läheb leppevälistesse maadesse . Ühtlasi otsustas Julgeolekunõukogu , et kõik maailma maad liidetakse leppega ühepoolse deklaratsiooni alusel , mis jõustub kolme kuu pärast . Julgeolekunõukogu kuulutas ka sanktsioonide kohaldamist leppevälistele maadele . Deklaratsiooni toetasid EL , USA ja muud leppega liitunud maad . Sanktsioonid tähendavad seda , et maad , mis ei järgi lepet , ja kõik nende võrguaadressid pannakse blokeerimisloenditesse ning kõik neilt aadressidelt tulevad sõnumid hävitatakse automaatselt . Blokaad tõkestab ekspordi Nii karmid meetmed on osutunud möödapääsmatuiks , sest arvutikuritegevusel on õnnestunud jääda järelevalve alt välja ning kuritegude arv ja kaalukus on kasvanud ennenägematu ulatuseni . Kõige rohkem on levinud varavastased kuriteod , paljastuste ja häirimisega väljapressimine ning võrguraha ja ärisaladuste vargus , peale selle veel kaubitsemine sadistliku pornoga . Kuritegelikud struktuurid on tõhusalt organiseerunud ja vahetavad informatsiooni leppeväliste maade kaudu . Võrguspetsialistid ootavad võrgublokaadilt kahesugust toimet . Enamik leppeväliseid maid sõltub oma väliskaubanduses juba praegu infovõrkudest . Raha kantakse üle elektronkujul , nagu ka tellimused ja arved . Infovõrgu sulgemine tähendaks mõnelegi maale väliskaubanduse lõppu . Kõigi välismaaühenduste sulgemine muudaks mõnel maal avalikku arvamust , mida Internetis praegu manipuleerivad oma kasuks võrgukurjategijad . Blokaadi keskseim mõju oleks siiski selles , et kurjategijad ei saaks enam kasutada võrke , sest edastusmarsruudid oleksid jälitatavad ja hooletuse põhjustajad saaks välja selgitada . Asjatundjad ootavad neilt meetmeilt ka tugevat survet Interneti-operaatorite infoturbele üldse , sest tõenäoliselt otsivad kurjategijad blokaadi ajal võrkudest kaitsemehhanismide nõrkusi ja inimeste hooletust , mille abil nad saavad peita oma jäljed infovõrkudes . Katkend Sony tootesarja NetFin prospektist - <arv>.<arv>.<arv> MAAILMAVALLUTAJA NETFIN SULLEGI KOJU Sul on nüüd võimalus hankida kogu maailma vaimustanud digitaaldelfiini FinFin järglane . NetFin on ilmekas kõnelev delfiin , kes võlub su peret ja kogu tutvuskonda . Ta toimib tavalistes koduarvutites , Nokia ja Motorola videomobiilides ja Sony Walkman Pathfinderis . NetFin elab , mõnuleb ja õpib koos meiega . Ta suudab iga aastaga mõista sind ümbritsevast üha enamat . NetFini eriomadus on see , et ta suudab liikuda ja õppida . Ta kulgeb infovõrgus sujuvalt su tuttavate juurde - kui oled neid kõigepealt esitlenud - ja tutvub nendega , nende arvutitega ja nende vestluskommetega . NetFin annab sinult edasi ka su uudised ja tervitused sõpradele ja tuttavatele . Noorena ei taipa NetFin veel väga keerulisi asju . Ta võib neist vahel isegi valesti aru saada ja rääkida , nii on see lastega alati . Sa saad teda aga õpetada ja harjutada . Võib-olla osaleb su lemmik isegi NetFin-juunioride teadmis- ja oskusvõistlustel - rahalised auhinnad on praegu juba üsna kopsakad . Aga eelkõige on NetFin asendamatu vestluskaaslane ja teabe koguja . Algul saab NetFin aru umbes tuhandest kirjalikust ja sajast suulisest sõnast . Sõnad tuleb öelda algvormis , aga ta õpib kiiresti juurde , kui ainult vestlete temaga kannatlikult ja lasete tal jälgida oma vestlusi . Uusimates koduarvutites nõuab NetFin umbes gigabaidi põhimälu ja kahe protsessori võimsust . Õppimise käigus kasvab massmälu tarve . Nendes arvutites , mille kaudu NetFin külas käib , vajab ta külaskäikude ajaks ainult kümnemegast andmesideühendust , gigabaidi põhimälu ja ühe protsessori võimsust . NetFin tunneb end kõige paremini kõige kiiremates koduarvutites . Ta suudab jälgida paljusid üheaegseid suulisi või teksti kujul vestlusi . NetFinist saate isegi teha mingi eriala asjatundja , kui suunate ta infovõrgus sobivatesse jututubadesse ja lasete tal lugeda võrgust saadavaid erialaväljaandeid . Uusimates infosüsteemides tegutseb NetFin omaenda kasutajaidentifikaatoriga , niisiis ei pääse ta selliste andmete juurde , mis on teie arvates konfidentsiaalsed . NetFin oskab ka olla delikaatsem kui inimene . Võid talle loetleda rea teatud sõnu ja ta unustab kõik need vestlused , kus neid sõnu esineb . NetFin on võrgus saadaval otse Sony kodulehel . Ta maksab <arv> eurot . FinFini omanikud saavad pere suurenemise eest <arv>% hinnaalandust . Demoversiooni koos lisateabega võib sellelt lehelt kopeerida tasuta . NetFinide jaoks on ka lasteaedu ja koole . Küsi nende kohta eraldi prospekti . Too oma ellu ja perre soojust juurde , hangi NetFin juba täna ! Ja pea meeles : NetFinist on olemas ka õppiv ettevõtteversioon ! Erki Eessaar , TTÜ informaatika õppesuuna magistriõppe üliõpilane Veebirakenduste loomine - tarkvaraarenduse ja loomingulise disaini ühendamine SISSEJUHATUS Veebirakendused muutuvad üha populaarsemaks . See tuleneb tehnoloogiate ja arendusvahendite kiirest arengust ja veebirakenduste eelistest traditsiooniliste rakenduste ees . Veebirakendusi võib kasutada kõikjal , kus on olemas interneti-ühendus . Eeliseks on ka see , et kliendi arvutile esitatavad nõudmised ei ole väga suured . Kuigi veebirakenduste esimene põlvkond oli lihtne ja pakkus vaid vähest funktsionaalsust , oli ta ometi väga edukas . “ Iga päev saab üha selgemaks , et Võrk , nagu ka kõik teised pöördelised tehnoloogiad , võidab endale positsiooni , mis muudab fundamentaalselt maailma toimimist . “ ( Louis Gerstner , IBM ) [ <arv> ] . Viimastel aastatel ongi esile kerkinud tarkvara arenduse uus põlvkond . See on seotud selliste mõistetega nagu e-kaubandus ja e-äri . Need veebirakendused pakuvad klientidele palju uusi funktsionaalsusi ( online-transaktsioonid , isiku tuvastamine jne. ) Nendel süsteemidel on paindlik mitmekihiline arhitektuur , mis võimaldab toime tulla ennustamatult suure kasutajate arvuga . Päevas võidakse neid lehti kasutada kümneid või isegi sadu tuhandeid kordi . Taolist tarkvarasüsteemi võib nimetada veebilahenduseks . Kuni siiani disainiti ja rakendati veebirakendusi , pööramata sealjuures tähelepanu formaalse arendusprotsessi ja modelleerimistehnikate piirangutele . Nüüd on see muutunud . Veebirakendused ei ole enam lihtsad . Nad on muutunud keerukateks ja kriitilise tähtsusega kohtades kasutatavateks rakendusteks , millel võib olla tuhandeid kasutajaid . Neid tuleb ka vastavalt kohelda . Paljude võimalustega rakenduse loomiseks on vaja arendusmeeskonda ja kindlalt määratud arendusprotsessi . Standardi kasutamine on hädavajalik . UML ( Unified Modelling Language ) on aktsepteeritud kui de-facto-standard objektorienteeritud süsteemide modelleerimiseks . Veebirakenduste loomine on paljuski sarnane teiste tarkvararakenduste loomisega , kuid on ka olulisi erinevusi . Veebirakenduse näol on tegemist kliendi meediaga ( nagu näiteks film või video ) . Nagu iga kliendiprodukti puhul , on veebirakenduse väljanägemine ja kasutatavus ülitähtis . Veebirakenduse loomisel omandavad suure tähtsuse sellised rollid nagu marketingi spetsialist , kunstnik , kasutajaliidese disainer , kasutatavuse testija , psühholoog . Veebirakenduste looja ülesandeks ei ole seega ainult uute tehnoloogiate kasutamine , vaid ka paljude erinevate rollidega inimeste kokkutoomine ja efektiivse koostöö saavutamine . Modelleerimise juures on kõige olulisem otsustada , mida modelleerida ning millise detailsusega seda teha . Antud kirjutise peaeesmärk ongi rõhutada vajadust korraliku arendusmetoodika ja modelleerimise järele . PõHIMõISTETEST Et vältida hilisemaid arusaamatusi , on kasulik kohe alguses defineerida edasises arutelus kasutatavad põhimõisted . Veebi puudutavate märksõnade kirjeldamiseks on peamiselt kasutatud internetis paikneva arvutikasutaja sõnastiku [ <arv> ] abi . Brauser , lehitseja . Hüperteksti lugemise programm , nt ( Netscape Navigator , Internet Explorer ) . Hüpertekst . Informatsiooni haldamisele lähenemine sellisel viisil , et andmed on seatud sõlmede võrku , mis on omavahel ühendatud linkidega . Sõlmed võivad sisaldada teksti , graafikat , hääli , videot , samuti programmi koodi või teisi andmete edastamise viise [ <arv> ] . Veeb . Omavahel hüperlinkidega seotud dokumentide kogum . Sait . Kaugvõrguga ühendatud arvuti või arvutikogum . Veebisait . Veebilehti talletav sait Internetis . Veebirakendus . Veebirakendus on veebisait , kus kasutajate tegevus ( mööda saiti navigeerimine ja andmete sisestus ) mõjutab äri olekut [ <arv> ] . Veebiarendus . Veebidokumentide väljatöötamine ja kodeerimine . Veebileht . Veebi kuuluv dokument . UML ( Unified Modelling Language ) on visuaalne modelleerimiskeel . Visuaalne modelleerimine on lihtsaim ja selgeim süsteemi kirjeldamise viis . UML on suunatud ühise standardi , modelleerimise kontseptsiooni ja tähistuse loomiseks mitmete objektorienteeritud modelleerimise metoodikate põhjal . See põhineb Rumbaugh OMT-l ( Object Modelling Language ) ning sisaldab ka kasutusjuhtude ( use case ) ja äriprotsesside kirjeldamise meetodeid ( vt. joon . <arv> ) . UML-i standardit toetavad tuntumad CASE-vahendid on Rational Rose , Select Enterprise ja COOL . Rational Unified Process - Firma Rational poolt välja töötatud tarkvara arendusprotsess ( vt. joonis <arv> ) . Rational Unified Process jagab arendustsükli ajateljel neljaks eraldi faasiks . Visiooni loomise ( ingl. k. inception ) faasis otsustatakse see , mida kavatsetakse ehitada . Visiooni kinnitamise ( ingl. k. elaborate ) faasis otsustatakse , kuidas ehitada . Ehitamise ( ingl. k. construction ) faasis toimub tegelik ehitamine . Tulemuse üleandmine tellijale toimub ülemineku- ( ingl. k. transition ) faasis . Iga selline faas koosneb omakorda kordustest , mille tulemusena saadakse mingi testitud tulemus . Iga faas kestab tavaliselt <arv> nädalat kuni <arv> kuud . Igas faasis on mingi põhitegevus ja sellele lisaks palju alamtegevusi . [ <arv> ] LOOMINGULISE DISAINI JA TRADITSIOONILISE TARKVARA ARENDUSE INTEGREERIMINE Veebirakendused muutuvad üha populaarsemaks [ <arv> ] : <arv> päevaga installeerisid Cisco insenerid veebisaidi ja tarkvara , mis aitas registreerida , jälgida ja identifitseerida Kosovo põgenikke <arv> % Cisco müügist ja <arv> % Cisco kasutajate toest toimub veebi vahendusel Aastaks <arv> peaks <arv> % kõigist muusikapaladest müüdama veebi vahendusel Internetis levib üha laiemalt nn. rakendusteenuste ( ASP - Application Service Provider ) pakkumine . Rakendusteenuste pakkujate sihtgrupiks on praegu peamiselt väikese ja keskmise suurusega firmad , korporatsioonide osakonnad ning eraettevõtjad , kellele pakutakse Internetis võimalust oma ärioperatsioonide sooritamiseks ilma sellelaadilistele tavarakendustele omaste kõrgete kulutusteta . Kasutaja ei pea enam ostma ja installeerima kallist tarkvara . Sellele vaatamata saab ta vahetada informatsiooni , leida vajalikke faile ja saada ülevaadet enda ning teiste tegemistest . Veebipõhine arhitektuur muudab rakendusteenuse kasutajatele takistusteta kättesaadavaks . Tegemist on justkui virtuaalse kontoriga , mis annab kasutajale efektiivse võimaluse hallata informatsiooni , olenemata oma hetkeasukohast . Tuleb lihtsalt oma veebilehitseja kaudu vastavalt veebisaidilt süsteemi sisse logida ning võibki hakata toiminguid sooritama . Turu-uuringute firma “ Forrester Research ” ennustab rakendusteenuste turu kasvu <arv> miljardini USD-ni aastaks <arv>. [ <arv> ] Järgnev ülevaade käsitleb seda , kuidas firma “ Rational Software ” poolt välja töötatud nn. Rational Unified Process'i saab kasutada veebirakenduste loomiseks . See lahendus on valminud firmade “ Rational Software ” ja “ Context Integration ” ühistööna [ <arv> ] . Kunagi varem pole tarkvara kasutajaliidesele ja selle kasutusmugavusele pööratud niipalju tähelepanu kui praegu seoses veebirakendustega . Kuid see pole iialgi olnud ka nii oluline . Tasub vaid vaadata veebifirmade aktsiate hinnarallit New Yorgi börsil ! Kui varem olid inimesed ilma suurema sõnaõiguseta sunnitud vastu võtma kõik , mida uus tehnoloogia pakkus , siis nüüd on olukord muutunud . Veebirakenduste turul ei osta kliendid enam tarkvara ega installeeri seda oma arvutisse . Selle asemele seiklevad nad Internetis ja otsustavad esmamuljete alusel , kas kasutada mingit rakendust või mitte . Esmamulje on äärmiselt püsiv . Mõned psühholoogide uuringud on näidanud , et <arv>/<arv> esmamuljest jääb püsima . Negatiivne esmamulje pidurdab osapoolte hilisemat suhtlemist . Veebirakenduste puhul on väga olulised sellised omadused nagu kiirus , toimetulek kasutajate rohkusega ja kasutajate arvu ebaühtlase jaotusega ööpäevas , julgeolek , paindlikkus , võime pidevalt areneda . Väga olulised on ka rakenduse hea väljanägemine ja kasutatavus . Seega tuleb nn. loominguline disain integreerida üldisesse tarkvara arendusprotsessi ( vt. joon.<arv> ) . Veebirakenduste ( või mis tahes teise interaktiivse süsteemi ) kasutatavuse parandamiseks tuleb jälgida ainult ühte reeglit : mida sagedamini saab disainer informatsiooni kasutatavuse probleemide kohta ja mida rohkem kordusi disain sisaldab , seda parem on saadud rakenduse kasutatavus . Seega peab tellija ja disaineri vahel toimuma pidev ideede vahetus ja tagasiside . Prototüübid peaksid valmima päevaga . Tuleb kasutada joonistusvahenditega loodud kasutajaliidese pilte , nn. “ paberprototüüpe ” . KASUTUSJUHUD INTEGREERIVAD LOOMINGULIST DISAINI JA TRADITSIOONILIST TARKVARAARENDUST Veebirakendused laiendavad traditsioonilist tarkvaraarendust selliste valdkondadega nagu kunst ja loominguline disain . Veebirakenduse loomine hõlmab rohkem osapooli kui teiste tarkvararakenduste loomine . Osapoolte hulka kuuluvad tavaliselt organisatsiooni juhid , turundusega tegelejad , disainerid / kunstnikud , klienditoega tegelejad , programmeerijad , testijad jne. Toimub kultuuride kokkupõrge . Osapooltevahelise kommunikatsiooni saavutamine on protsessi seisukohalt kriitilise tähtsusega . Veebirakenduste oodatava käitumise ühistes terminites kirjeldamiseks sobivad nn. kasutusjuhud ( ingl. k. use case 'id ) . Kasutusjuhud on UML-i standardi üheks osaks . Kasutusjuhtude modelleerimistehnikat kasutatakse selleks , et näidata , mida uus süsteem peaks tegema või mida olemasolev süsteem juba teeb . Kasutusjuhu mudel ehitatakse iteratiivses protsessis , mille käigus toimub diskussioon süsteemi arendajate ja tellijate ( ja / või lõppkasutajate ) vahel . Veebirakenduste puhul võtavad diskussioonist osa näiteks kasutajad , juhid , kunstilise poolega tegelejad , arhitektid , programmeerijad . Kasutusjuhtude mudeli põhikomponentideks on kasutusjuhud , välissubjektid ning modelleeritav süsteem . Kasutusjuhtude modelleerimisel vaadeldakse süsteemi “ musta kastina ” , mis pakub tegutsejatele ( ingl. k. actor ) teenuseid ( kasutusjuht ) . Kuidas süsteem seda teeb , kuidas kasutusjuhud on realiseeritud ja kuidas nad sisemiselt töötavad , pole esialgu oluline . Seda ei pruugi teada veel isegi projekteerijad . Tegutseja on igasugune välisüksus , kes / mis soovib suhelda antud süsteemiga . See võib olla inimene või süsteem või riistvaraseade , mis peab suhtlema antud süsteemiga . Kasutusjuhtude modelleerimise tulemusena saadakse vajaduste spetsifikatsioon , millega on kõik osapooled nõus . See saadakse tellijate ( ja / või lõppkasutajate ) ja süsteemi projekteerijate ning ehitajate vahelise koostöö tulemusel . Kasutusjuhud annavad selge ja kooskõlalise kirjelduse sellest , mida süsteem peab tegema . Seda kirjeldust kasutavad läbi kogu arendusprotsessi süsteemi kõik osapooled , et üle anda soovitud tulemusi ning funktsionaalsusi . Kasutusjuhud annavad ka aluse süsteemi testimisele , et saaks kindlaks teha , kas üleantud süsteem täidab esialgselt soovitud funktsionaalsust . NõUETE ANALüüS Eduka veebirakenduse loomine algab visiooni loomisest . Visiooni kirjeldus tuleb luua veebirakenduse loomise osapooltel . See peab tagama ühise arusaamise projekti eesmärkidest . Visiooni eesmärgid on : Saavutada kokkulepe probleemide osas , mida uus projekt peab lahendama Defineerida süsteemi piirid Kirjeldada süsteemi kõige tähtsamaid omadusi Vead selles faasis võivad viia kogu projekti ebaõnnestumisele , vaatamata sellele kui palju andekaid programmeerijaid hiljem lahenduse loomise kallal töötab . Kui visiooni osas on kokku lepitud , siis jätkuvad osapooltevahelised kohtumised , et määrata kindlaks süsteemi kasutajad ( rollid ) . Kasutajad ja neile pakutavad teenused dokumenteeritakse , kasutades UML-i kasutusjuhtude kontseptsiooni . Oluline on vajalik , et uue süsteemi kasutaja aktiivne osalus kasutusjuhtude modelleerimisel , sest niiviisi saab mudelit täpselt kasutaja soovidega kohandada . Kliendi ja tellija vajadused juhivad kogu arendusprotsessi . Kasutusjuhud kirjeldatakse tellija ja kasutaja keeles ning mõistetes . Kasutusjuhud võimaldavad lõppkasutajal kergesti kirjeldada vajalikke teenuseid , arendusmeeskond aga saab hinnata , millised nõuded on täidetud . Kus iganes võimalik , tuleks uuesti kasutada varasemates veebirakenduse projektides defineeritud kasutusjuhte . Kujunevalt mudeliteturult võib samuti vajaliku lahenduse leida ja sisse osta . Luuakse ka nn. täiendav spetsifikatsioon , kuhu kogutakse informatsioon süsteemi mittefunktsionaalsete nõuete kohta :  Mittefunktsionaalsete nõuete näiteks on otsustus selle kohta , kes hakkavad rakendust kasutama . See määrab paljuski ära ka tehnoloogiad , mida süsteemi loomisel kasutatakse . Ühine terminoloogia dokumenteeritakse sõnastikus . Sõnastik peab tagama , et kõigil projekti liikmetel on ühine arusaamine põhimõistetest . [ <arv> ] ÜLDISED LOOMINGULISE DISAINI JUHISED Paralleelselt kasutusjuhtude ja tegutsejate määramisega luuakse üldised loomingulise disaini juhised ( ingl. k. Creative Design Brief ) . Tegemist on üldiste juhistega . Nad on osa kasutatavusest . Juhised defineerivad muuhulgas : Veebisaidi üldise väljanägemise ( näiteks : kas sait nõuab kasutaja identifitseerimist ? Kas sait on konservatiivne või provokatiivne ? ) Kuidas kasutajad saidile ligi pääsevad ( ühenduse kiirus ) Milliseid veebilehitsejaid kasutatakse Kas veebisaidis kasutatakse raame Kas on mingeid piiranguid värvide osas Millised on veebisaidi graafilisele küljele ( näiteks logode ja firmavärvide standardid ) esitatud nõuded Milliseid lisavõimalusi ja ilustusi ( “ kellad ja viled ” ) soovitakse [ <arv> ] NAVIGATSIOONIKAART Navigatsioonikaardi loomine eristab veebirakenduse loomist tavalise tarkvarasüsteemi loomisest . Navigatsiooni disain on veebirakenduste juures kriitilise tähtsusega . Ka väikesed rakendused võivad sisaldada keerukat navigatsioonisüsteemi , mis aga kasutatavuse huvides peaks olema võimalikult lihtne ja arusaadav . Navigatsioonikaart näitab , kuidas kasutajad saavad saidis navigeerida . See esitatakse hierarhilise ( “ puukujulise ” ) diagrammiga . Selliseid mudeleid nimetatakse kirjanduses ka “ saidikaartideks ” ( vt. joonis <arv> ) . Iga diagrammi tase näitab seda , kuimitu hiireklikki kulub selle leheküljeni jõudmiseks . Tüüpiliselt soovitakse , et veebisaidi kõige olulisemad piirkonnad oleksid avaleheküljest vaid ühe kliki kaugusel . Navigatsioonikaardi loomine projekti varases staadiumis tagab hea kommunikatsiooni projekti erinevate osapoolte vahel . Kasutajad saavad hästi aru , kuidas mööda veebirakendust navigeerida . Disainerid saavad samuti paremini aru vajalikust navigatsiooniskeemist . Seetõttu tuleks navigatsioonikaart luua kohe pärast esialgsete kasutusjuhtude defineerimist . Mõnikord võib esialgne navigatsioonikaart olla skitseeritud juba enne kasutusjuhtude mudeli loomist . Sel juhul pakub navigatsioonikaart kasuliku sisendi kasutusjuhtude loomise arutelule . See tagab , et sait realiseerib kõigi osapoolte soovitud käitumise . Rational Unified Process'i puhul on selle vasteks tegevus “ Modelleeri kasutajaliides ” . Navigatsioonikaardi loomine algab sellest , et määratakse põhilised leheküljed iga kasutusjuhu jaoks . Tüüpiliselt seatakse ühele kasutusjuhule vastavusse üks lehekülg . Selles staadiumis ei ole veel teada , kuidas mingi lehekülg hakkab välja nägema ja milline on lehekülgede lõplik hulk . Seega tuleb keskenduda varasteks kasutajaliidese kandidaatideks olevate “ loogiliste lehekülgede ” identifitseerimisele . Edasise analüüsi käigus võib nende hulk muutuda . Loogilised leheküljed esitatakse UML-i konstruktsiooniga “ boundary class ” . Kui loogilised leheküljed on loodud , näitab navigatsioonikaart seda , kuidas kasutajad navigeerivad ühelt loogiliselt leheküljelt teisele . Samuti esitab ta põhilisi omadusi , mida loogiline lehekülg pakub . Suuremate süsteemide jaoks tuleks teha üks navigatsioonikaart tegutseja kohta . Selleks et süveneda veelgi rohkem detailidesse , tehakse niisugune mudel ka iga kasutusjuhu kohta . Sellel identifitseeritakse lisaleheküljed , kuhu kasutaja kasutusjuhu täitmise käigus satub . Kui leheküljed on määratletud , siis kirjeldatakse ka informatsiooni , mida need sisaldavad . [ <arv> ] KASUTAJALIIDESE PILDID Kasutajaliidese väljanägemine on kasutaja peamine kontakt rakendusega . Visuaalsed struktuurid teevad orienteerumise ja informatsiooni otsimise lihtsamaks . Kasutajaliidese loomine on loominguline tegevus . Selles vaates esitatakse osapooltele mitmeid esialgseid veebirakenduse visuaalse väljanägemise võimalusi . Tavaliselt on tegemist mingi joonistusvahendi abil joonistatud piltidega ( ingl. k. Creative Design Comps ) . Paberil esitatud piltide suurus võiks olla <arv> % kasutajaliidese tegelikust suurusest . Pildid esitatakse nii , nagu paistaksid nad veebilehitseja aknast . Selliste piltide tegemise eesmärk on lükata tunduvalt kulukamate HTML-prototüüpide tegemine aega , kuni on jõutud selgusele saidi graafilises väljanägemises . Pildid aitavad vältida ka arusaamatusi , et veebirakenduse prototüüp on juba peaaegu valmis . Pildid võib joonistada ka käsitsi . Kui pilt näib suhteliselt “ toores ” , on kasutajatel suurem kalduvus teha sisulisi märkusi . Kui kasutada joonistusprogramme ja luua pilt , mis praktiliselt sarnaneb juba tegeliku kasutajaliidesega , siis keskenduvad kasutajad rohkem pisiasjadele . Teisest küljest , mida rohkem aega ja vaeva kulutab disainerite meeskond prototüübi loomisele , seda rohkem hoiavad nad sellest kinni ja seda raskem on neil kõike uuesti otsast alustada [ <arv> ] . Rippmenüüsid , hüpikmenüüsid ja muid selliseid kasutajaliidese elemente saab kujutada eraldi väikestel paberilehtedel . Neid saab vajadusel suurele kasutajaliidese pildile lisada või sealt ära võtta . Rational Unified Process kirjeldab tegevust “ Prototüübi kasutajaliides ” . Selle käigus kogutakse ka tagasisidet kasutajaliidese kohta . Veebirakenduste arenduse puhul on seda kasutajaliidese piltide koostamise arvelt laiendatud . Selleks et luua pilte , valitakse üks tähtsamaid kasutusjuhtusid ja luuakse vähemalt kümme erinevat kujundust . Nendest valitakse tellijatele esitamiseks välja kolm kõige paremana tunduvat . Kasutajaliidese pilte näidatakse tellijatele ja / või tulevastele kasutajatele . Alustatakse mingist kindlast leheküljest ja esitatakse selle kohta küsimusi . Küsitakse , kas pilt näeb välja selline , nagu kasutaja ootas , ja milline on tema esimene reaktsioon sellele . Seejärel palutakse kasutajal ette kujutada , et ta sõrm on kursor , ja osutada kohta , kus soovitakse klikkida . Esitatakse küsimus : “ Mis peaks siin klikkides teie arvates juhtuma ? ” . Kui võimalik , näidatakse kasutajale klikkimise tulemusel avanevat lehekülge ja kogu protseduur kordub [ <arv> ] . Tavaliselt peab toimuma kolm kordust ( väljanägemise kujundamine - kasutajatele esitamine - tagasisidega saadud paranduste / täienduste sisseviimine ) , et jõuda välimuse osas lõplikule otsusele . Kui lõpuks jõutakse kokkuleppele , saavad pildid aluseks funktsionaalse kasutajaliidese prototüübi loomisele . Pildid on seejuures mittefunktsionaalsed esimese põlvkonna prototüübid , mis on loodud saamaks tellijatelt tagasisidet . Paljud visuaalsed omadused on juba esitatud . [ <arv> ] VEEBI DISAINI ELEMENDID Veebi disaini elemendid on graafilised elemendid , mida kasutatakse veebisaiti moodustavate lehekülgede kujundamisel . Graafilised elemendid on näiteks navigatsioonivahendid ja lehekülje tagapõhjad . Kui kasutada kõrgekvaliteedilisi standardseid graafilisi elemente kogu saidi ulatuses , siis vähendab see rakenduse turule jõudmise aega ja arenduskulusid ning tõstab selle kvaliteeti . Kogu kasutajaliidese kooskõlalisus on eriti oluline kasutatavuse seisukohalt , seetõttu tuleb kogu saidis järjekindlalt rakendada standardseid graafilisi elemente , mis tehakse valmis juba projekti varases staadiumis . Paralleelselt koostatakse ka juhendid nende elementide kasutamiseks . Head graafilised elemendid on illustratiivsed , selged ja nägusad , jäävad meelde ega luba kaksipidi mõistmist . Neid kasutatakse erinevate programmide , tegevuste , protsesside ja asjaolude identifitseerimiseks . Rational Unified Process identifitseerib kasutusjuhtudest komponente punktis “ Töövoo detail : analüüsi käitumist ” . Neid komponente täiendatakse , rakendatakse ja testitakse punktis “ Töövoo detail : disaini komponendid ” . Veebi disaini elemendid luuakse paralleelselt esialgse veebirakenduse kasutajaliidese prototüübiga . Kasutajaliidese kohta koostatud pildid on kasutajaliidese prototüübi loomisprotsessis sisendandmeteks . Selleks ajaks , kui kasutajaliides lõplikult kooskõlastatakse , peavad ka veebi disaini elemendid olema lõpetatud ja kooskõlastatud . [ <arv> ] VEEBIRAKENDUSE KASUTAJALIIDESE ESIALGNE PROTOTüüP Prototüübi väljanägemine põhineb kooskõlastatud kasutajaliidese piltidel ja selle loomisel kasutatakse veebi disaini graafilisi elemente . Rational Unified Process'i puhul vastab sellele tegevus “ Prototüübi kasutajaliides ” . Esialgne kasutajaliidese prototüüp realiseerib tavaliselt kõige olulisematele kasutusjuhtudele vastava süsteemi osa . Kasutajaliidese esialgse prototüübi koostamine võimaldab kasutajatel ja disaineritel paremini suhelda nii süsteemi funktsionaalsuse kui ka väljanägemise küsimustes . Neil on , mille alusel rääkida ja mida arutada . Väga oluline on saada kasutajatelt tagasiside enne seda , kui on tehtud suuri investeeringuid kasutajaliidese funktsionaalsuse arendamisse . [ <arv> ] JUHENDID KASUTAJALIIDESE LOOMISEKS Pärast seda , kui on loodud kasutajaliidese esialgne prototüüp , on aeg luua detailsed kirjeldused kasutajaliidese loomiseks . Muu hulgas kirjeldatakse : millal ja kus kasutada veebi disaini elemente fonte värviskeeme kus paiknevad ja kuidas töötavad navigatsioonielemendid Rational Unified Process'i puhul vastab sellele tegevus “ Koosta juhised kasutajaliidese jaoks ” . [ <arv> ] VEEBIRAKENDUSE KASUTAJALIIDESE TÄIELIK PROTOTüüP Kasutajaliidese täielikus prototüübis realiseeritakse kõik kasutusjuhud . Prototüüp ei pea esitama täielikku navigatsiooni lehekülgede vahel ega lehekülje lõplikku väljanägemist . Järgneva iteratsioonilise ehitamise käigus täiendatakse prototüüpi pidevalt . Täieliku prototüübi eesmärgiks on jõuda osapoolte vahel kokkuleppele iga kasutajaliidese skoobi ja väljanägemise suhtes . Täielik kasutajaliides põhineb Rational Unified Process'i juhisel “ Use-Case Storyboard ” . [ <arv> ] TäIELIK NAVIGATSIOONIKAART Peale täieliku kasutajaliidese prototüübi tuleb luua ka täielik navigatsioonikaart . See põhineb esialgsel navigatsioonikaardil ja täielikult defineeritud kasutusjuhtudel . Täielik kaart peab sisaldama kõiki lehekülgi / ekraane , mis on esitatud kasutajaliidese prototüübis . [ <arv> ] üLDISED NõUANDED TARKVARA ARENDAMISEKS Järgnevalt esitatakse Rational Unified Process'i poolt pakutavad nõuanded tarkvara arendamiseks [ <arv> ] . Lisaks on kirjeldatud , kuidas neid kasutada veebirakenduste loomisel . Arenda iteratiivselt : iteratiivne ( korduv ) arendamine põhineb pideval uurimisel , avastamisel ja avastatu rakendamisel . See sunnib määratlema projekti riske juba varases arendustsüklis . Seega saab nende vastu õigel ajal rakendada õigeid meetmeid . Veebirakendused vajavad just võimalikult lühikesi väljaandmise tähtaegu , mida pakubki iteratiivne arendamine . Enne rakenduse käikuandmist tuleb seda põhjalikult testida . Testimist on vaja alustada juba enne rakenduse ehitamise lõppu . Iteratiivne arendusprotsess võimaldabki seda . Iga korduse käigus peab toimuma kvaliteedi kontroll , mis sisaldab nii testimist kui testimise käigus avastatud vigade parandamist . Juhi nõuded : nõuete analüüsi käigus tuuakse välja , organiseeritakse ja juhitakse muutuvaid nõudeid tarkvaraga seotud süsteemides ja rakendustes . Nõuded veebirakendustele muutuvad niisama sagedasti kui turu nõuded . Seega muutub nõuete jälgimine kogu arendustsükli jooksul veelgi tähtsamaks . Kasuta komponentarhitektuuri : arhitektuur kirjeldab rakenduste struktuuri komponentide kaudu . Ta kirjeldab seda , kuidas need komponendid on ühendatud ja kuidas nad omavahel suhtlevad . “ Komponentidel põhinev arendus tähendab rakenduste koostamist komponentidest : taaskasutatavatest , käivitatavatest tarkvarapakettidest , mis pakuvad oma teenuseid läbi hästi defineeritud liideste . ” [ <arv> ] Kui on võimalik , tuleks arhitektuurilahendus sisse osta . Sellised funktsioonid nagu isiku kindlakstegemine , julgeoleku tagamine jne. on juba ammu realiseeritud . Valmiskomponentide kasutamine kiirendab veebirakenduse valmimist ja edasiarendamist . Kiiresti muutuvas maailmas on see väga vajalik omadus . Komponentidel põhinev arendus on muutunud tavapäraseks . Gartner Grupi ennustuste kohaselt põhineb aastal <arv> vähemalt <arv> % kõigist uutest tarkvaraarendustest komponenttehnoloogia kasutamisel [ <arv> ] . Modelleeri visuaalsete vahenditega : mudelid aitavad mõista ja hinnata nii probleeme kui lahendusi . Mudel on reaalsuse lihtsustus . Visuaalne modelleerimine on lihtsaim ja selgeim viis süsteemi kirjeldamiseks . Hinda kvaliteeti : kvaliteedi hindamisel pööratakse tähelepanu nii tootele kui ka protsessile . Efektiivne ja kvaliteetne protsess viib ka kvaliteetse tooteni . Veebirakendust võivad päevas kasutada tuhanded inimesed . Vigadest tulenev kahju võib olla väga suur . Kui rakenduse töökiirus on väike või ta töötab valesti , ei pruugi kasutajad selle juurde enam kunagi tagasi pöörduda . Veebirakenduste puhul on eriti oluline varane ja võimalikult automaatne testimine . Muu hulgas peab veebirakendus vastama järgmistele nõuetele [ <arv> ] : Funktsionaalsus : Kasutajaliides peab kasutajatele meeldima ja rahuldama kõiki nende eesmärke . Usaldusväärsus : Rakendus peab taluma suurt kasutatavust . Serverid ei tohi rivist välja langeda , rikkuda kasutajate andmeid või esitada kasutajale vigaseid andmeid . Töökiirus : Rakendus peab olema võimeline kiiresti vastama kõigile kasutaja nõuetele . Kontrolli muutusi : Veebirakendused sisaldavad palju objekte ja komponente , mida võivad luua ja parandada paljud inimesed . Sageli toimuvad muudatused paralleelselt . On väga oluline jälgida ja talletada informatsioon kõigi muudatuste kohta . TööD HõLBUSTAVAD KOOSOLEKUD Veebirakenduste loomisel peavad koos töötama paljud erinevate elualade ja rollidega inimesed . On vaja korraldada koosolekute seeriaid . Rational Unified Process annab juhiseid , kuidas läbi viia : Nõuete analüüsi koosolek ( ingl. k. Requirements Workshop ) . Kasutusjuhtude koosolek ( ingl. k. Use-Case Workshop ) . Kasutusjuhtude analüüsi koosolek ( ingl. k. Use-Case Analysis Workshop ) . Loomingulise disaini puhul võib läbi viia vaid ühe koosolekute seeria - Veebi võimaluste koosolek ( ingl. k. Web Opportunity Workshop ) . Tegemist on koosolekute hulgaga , mis on suunatud veebirakenduste loomisele . [ <arv> ] KOKKUVõTTEKS Veebirakendused muutuvad üha populaarsemaks . Kuid need ei ole enam lihtsad . Nad on muutunud keerukateks ja kriitilise tähtsusega kohtades kasutatavateks rakendusteks ning neid tuleb ka vastavalt kohelda . Selliste rakenduste loomiseks on vaja arendusmeeskonda ja kindlalt määratud arendusprotsessi . UML ( Unified Modelling Language ) on sobilik selliste süsteemide modelleerimiseks . Veebirakenduste loomine on paljuski sarnane teiste tarkvararakenduste loomisega , kuid on ka olulisi erinevusi . Veebirakenduse näol on tegemist kliendimeediaga ( nagu näiteks film või video ) ning seetõttu on ülitähtis selle hea väljanägemine ja kasutatavus . Firmad Rational Software ja Context International on pakkunud välja veebirakenduste loomise arendusprotsessi , kus on integreeritud loominguline disain ja traditsiooniline tarkvara arendusprotsess ( Rational Unified Process ) . Kõigepealt luuakse visioon uues süsteemis . Väga tähtis on nõuete analüüs . Nõuete analüüsimiseks kasutatakse UML-i kasutusjuhtude modelleerimise tehnikat . Kasutusjuhtude määramine võimaldab teha algust kliendilehekülgede määratlemisega . Järgnevalt koostataksegi saidi navigatsioonikaart , mis kirjeldab veebilehekülgede omavahelist seotust ja seda , kuidas kasutajad saavad neil liikuda . Joonistusvahendeid kasutades koostatakse ka esialgsed kasutajaliidese prototüübid . Samal ajal täpsustatakse disaini elemente ja kasutajaliidesele esitatavaid nõudeid . Arendusprotsess on iteratiivne ja võimaldab iga tsükliga mudeleid parandada ja täpsustada . Pärast seda , kui tulevane kasutaja on kasutajaliidese välimusega nõustunud , algab töötava prototüübi loomine . See , et veebirakenduste loomisel pööratakse üha suuremat tähelepanu arendusmeeskonnale ja arendusprotsessile , aitab kindlasti kaasa antud valdkonna ülikiirele arengule . gap desc='references'&gt; Martti Allingu , Eesti Ühispank , IT valdkonna insener Ülevaade wap-protokollist SISSEJUHATUS Võrgutehnoloogias võib tähendada kahte tendentsi : toimub plahvatuslik interneti levik ning kiire mobiilside areng . On selge , et mõlema tehnoloogia kasvupotentsiaali arvestades peaks parima tulemuse andma nende kahe arengusuuna integratsioon , st. mobiilne internet . Huvi mobiilse infoedastuse vastu kasvab . Traadi vajalikkus infoedastuseks ( ka interneti kasutamiseks ) on aktiivsetele inimestele ja firmadele vägagi piiravaks teguriks . Aga enamik praegu kasutusel olevatest infoedastuse standarditest ja protokollidest nõuavad palju enam ressursse , kui seda tänapäeva mobiiltelefonid või teised mobiilseadmed suudavad pakkuda . Ka on nende protokollide realiseerimiseks vaja enam sidekanali ribalaiust kui tänapäeva mobiilsidevõrgud suudavad pakkuda . Seetõttu on mobiilsidefirmad viimastel aastatel loonud uusi andmeedastusprotokolle , mis on optimeeritud traadita sidevõrkude jaoks . Üheks niisuguseks protokolliks on “ Wireless Application Protocol ” ehk WAP-protokoll . WAP-FOORUM JA WAP-PROTOKOLL WAP-protokolli eelajalugu saab alguse <arv>. aastal , kui firmas Ericsson alustati projektiga , mille eesmärgiks oli välja töötada üldine protokoll ( või õigemini kontseptsioon ) hüvisteenuste kasutamiseks mobiilsidevõrgus . Protokolli nimeks sai “ Intelligent Terminal Transfer Protocol ” ( ITTP ) . Protokoll määratles side teenuspunkti ( kus vastav teenus töötab ) ja intelligentse mobiiltelefoni vahel . Aastatel <arv> ja <arv> alustasid mitmed firmad , nende hulgas ka Unwired Planet ( praeguse nimega Phone.com ) ja Nokia oma vastava kontseptsiooni väljatöötamist . <arv>. aasta märtsis esitles Nokia ametlikult intelligentsete sõnumite saatmise kontseptsiooni - tehnoloogiat , mis oli välja töötatud GSM-seadmete internetiühenduseks . Side mobiilikasutaja ja interneti serveri vahel toimub lühisõnumite saatmise süsteemi ( Short Message Service ( SMS ) ) ja märgistuskeele “ Tagged Text Markup Language ” ( TTML ) vahendusel . On ilmne , et suured tegijad ( Nokia ja Ericsson ) polnud huvitatud turu fragmenteerumisest , mille vältimiseks loodigi WAP-protokoll . <arv>. juunist <arv>. aastal hakkasid Ericsson , Motorola , Nokia ja Unwired Planet looma standardit mobiilside arendamiseks . <arv>. aasta detsembris loodi ametlikult WAP-Foorum , ning pärast WAP-protokolli <arv>.<arv> spetsifikatsioonide avaldamist <arv>. aasta aprillis , avati WAP-Foorum kõikidele soovijatele . <arv>. aasta <arv>. märtsiks oli WAP-Foorumil <arv> täisliiget ja <arv> assotsieerunud liiget . WAP-Foorumiga ühinenud firmade hulgas on palju maailma juhtivaid terminalide , infrastruktuuride ja tarkvara tootjaid ning operaator- ja võrguteenuseid pakkuvaid firmasid . WAP-Foorumi eesmärk on ühendada kõik traadita side arenguga seotud kompaniid traadita seadmete ja võrkude kiireks arenguks . WAPi arendamine jätkub : WAP-Foorumi poolt on heaks kiidetud WAP-protokolli spetsifikatsioonide versioon <arv>.<arv> ja WAP-Foorumi WWW leheküljel ( <hyperlink> ) on ära toodud ka ettepanekud WAP-protokolli versiooni <arv>.<arv> spetsifikatsioonid . Kuidas defineerida WAP-protokolli ? WAP-Foorum : WAP-protokoll on avatud standard , mis tagab mobiilseadmetele lihtsa ja vahetu juurdepääsu erinevatele teenustele ja informatsioonile . WAP-Foorumi WAP-protokolli loomise nõuded olid järgmised : Järgida olemasolevaid protokolle , kui võimalik . Määrata mitmekihiline protokollide süsteem ja laiendatav arhitektuur . Toetada nii palju erinevaid traadita võrgulahendusi kui võimalik . Arvestada nii olemasolevaid kui ka loodavaid mobiilside standardeid ( SMS , USSD , GRPS jne. ) . Optimeerida lahendused kõrge latentsuse ja sidekanali kitsa ribalaiusega info- kandjatele . Arvestada mobiilseadmete ressursside piiratusega ( vähe mälu , protsessori väike jõudlus , väike energiatarbivus , piiratud võimalustega sisendseadmed ja väikese ekraaniga kuvarid ) . Tagada rakenduste ja kommunikatsiooni turvalisus . Tagada liidese inimene-masin maksi- maalne paindlikkus ja turvalisus . Hõlbustada teenuste pakkumist , määrates nii spetsifikatsioonide fikseeritud kui ka valikulised komponendid . Luua telefoniteenuste programmeerimismudel WAP-protokoll põhineb Interneti ( WWW ) mudelil ( joonis <arv> ) , mis on optimeeritud traadita sidevõrkude jaoks . WAP-protokolli standard eeldab mobiilseadmes lihtsat minibrauserit , millele piisab mobiilseadme piiratud ressurssidest . HTML-keelele vastab WAP-protokollis WML-keel . WML-keele loomisel on arvestatud väikese ekraani ja nuditud sisendi ( ilma hiireta ja lihtsustatud klaviatuur ) piirangutega . WML-keel kasutab teenuste määramisel pakk/kaart metafoori . Kaardi moodustab üks või mitu interaktsiooni kliendiga , st. kas andmete kuvamine kasutajale või andmete küsimine kasutajalt ( näiteks tekstisisestusväli või valikmenüü ) . Kaartide kogumit nimetatakse pakiks. Pakk on oma omadustelt lähedane HTML-keele leheküljele . Pakk on nagu HTML-lehekülg URL-aadressiga adresseeritav sisu ( content ) ühik . WML-keeles kirjutatud tekst kodeeritakse WAP-lüüsis , mis ühendab traadita domeeni internetiga . WAP-lüüs toimib ka andmete ja protokollide konverterina Interneti ja WAP-protokolli toetavate klientide vahel . Kui teenused on loodud spetsiaalselt WAP-protokolli toetavate seadmete jaoks , võib WAP-lüüs ka puududa . WAP-protokoll toetab ka keerulisemaid operatsioone , mis on võrreldavad JavaScripti kasutamisega HTML-keeles . WAP-protokolli skriptikeel on WMLScript . Nii nagu WML-keeles kirjutatud teksti , saab ka WMLScriptis kirjutatud teksti kodeerida binaarsesse formaati , kasutades selleks WAP-lüüsi . Laiendatavuse ja paindlikkuse huvides on WAP-protokoll kihiline ( joonis <arv> ) . WAP-protokolli arhitektuur meenutab interneti arhitektuuri , on aga optimeeritud väikeste ning piiratud võimalustega mobiilterminalide kasutamiseks traadita sidevõrkudes . Joonisel <arv> all paremal toodud kandjad ei ole osa WAP-protokolli kihtstruktuurist , kuid näitavad , et WAP-protokoll toetab nii tänapäeva ( näiteks SMS ) kui ka tuleviku ( näiteks GPRS ) infokandjaid . Traadita võrgu rakenduskeskkond ( Wireless Application Environment ( WAE ) ) WAP-protokolli kõige ülemine kiht , ehk WAP-protokolli rakenduskeskkond koosneb järgmistest komponentidest : Adresseerimismudel ( Addressing model ) On ette nähtud serverite ressurside poole pöördumiseks . Traadita võrgu märgistuskeel ( Wireless Markup Language ) HTMLi dialekt , mis arvestab väikese ribalaiusega sidekanali võrkude ja mobiilseadmete iseärasustega . WMLScript Traadita võrkude skriptikeel . Traadita telefoni rakendused ( Wireless Telephony Application ( WTA , WTAI ) ) Raamistik ja programmeerimiskeskkond telefoniteenustele . WAP-protokollis eeldatakse , et traadita seadmel on kättesaadavad kaks kasutajaagenti . Kasutaja-agent on selles kontekstis seadmesisene rakendus , mis interpreteerib info sisu ja haldab vajaduse korral ka kasutaja ning seadme vahelist andmetevahetust . Traadiga võrkudes on kasutajaagent tavaliselt internetibrauser . WAP-protokolli kasutajaagendid on aga WML-kasutajaagent ja WTA-kasutaja- agent . WML-kasutajaagent ei interpreteeri mitte ainult WML-keelt , vaid ka WMLScripti jne. Erinevalt WTA-kasutajaagenile ei suuda WML-kasutajaagent töödelda telefoniteenuseid . WAP-PROTOKOLLI KIHID WAP-protokollil on klientide ja WAP-lüüsi vaheliseks suhtlemiseks neli edastusviisi : Ühenduseta edastus ( connectionless mode ) - edastatud paketid ei saa kinnitust ning kohalejõudmine pole tagatud , st. “ saada ja unusta mudel ” . Ühenduseta turvaline edastus ( connectionless mode with security ) - nagu eelmine , kuid lisandub WTLS-teenus ( täpsemalt allpool ) . Ühendusega edastus ( connection mode ) - WTP pakub usaldatavat ülekannet : paketi saatmist kinnitatakse ja paketi kadumamineku korral saadetakse see uuesti . Ühendusega turvaline edastus ( Connection mode with security ) - lisaks eelnevale kasutatakse ka WTLS-teenust . Traadita võrgu seansiprotokoll ( Wireless Session Protocol ( WSP ) ) WSP on liides WAE ja muude WAP-protokolli kihtide vahel . HTTP versioon <arv>.<arv> protokolli modifikatsioon WSP on binaarne . WSP-protokoll loob kliendi ja WAP-lüüsi vahelise seansi . Seanss võib olla suure kestusega ja seda saab ka ajutiselt katkestada , kui ühendust momendil ei vajata . Seanssi saab hiljem jätkata . Traadita võrgu transaktsiooniprotokoll ( Wireless Transaction Protocol ( WTP ) ) WTP-protokoll juhib sõnumite saatmist ja vastuvõtmist . WTP-protokoll teeb võimalikuks usaldatava võrguühenduse , mille puhul kõik sõnumid on unikaalselt identifitseeritud . Niiviisi tagatakse , et sõnumeid ei võeta vastu topelt ning sõnumi kaotsiminekul saadetakse see uuesti . Ühendus ei ole antud juhul katkematu , seda hoitakse “ elus ” ainult üksikute pakettide saatmise ajal. WTP töötab kolme järgmise sõnumiklassiga : Kinnitusteateta sõnumite saatmine Kui sõnum läheb kaduma , ei saadeta sõnumit uuesti . Kinnitusteatega sõnumite saatmine Vastuvõtja kinnitab saadetud sõnumi kättesaamist . Kui kinnitust ei tule , saadetakse sõnum uuesti . Topeltkinnitusega sõnumite saatmine Kui sõnum on saadetud ja vastuvõtjalt kinnitus saadud , kinnitatakse kinnituse saamine veel seansi algataja poolt . WTP-protokoll võimaldab sõnumeid segmenteerida ning segmente kokku ühendada . Seetõttu piisab sõnumi terviklikkuse tagamiseks kaotsiläinud segmentide uuesti saatmisest . Traadita võrgu transpordikihi turvalisus ( Wireless Transport Layer Security ( WTLS ) ) WTLS tagab WAP-protokolli kliendi ja WAP-lüüsi vahelise ühenduse turvalisuse transpordikihi tasemel . WTLS põhineb TLS-protokollil ( interneti Transport Layer Security protokoll ) , kuid on optimeeritud kitsa ribalaiusega sidekanalitele . WTLS tagab : sõnumite terviklikkuse konfidentsiaalsuse serveri ja kliendi autentimise ja salgamise vääramise ( digitaalsertifikaadid ja digitaalallkirjad ) . WTLS on optsioon ja seda võib kasutada WAP-protokollivirna nii ühendusega kui ka ühenduseta edastusmeetoditega . Traadita võrgu datagrammprotokoll ( Wireless Datagaram Protocol ( WDP ) ) WAP-protokollikihtide aluskihiks on WDP ehk Traadita Võrgu Datagrammprotokoll . Kui WAP-protokolli kasutatakse üle kandja , mis toetab UDP-protokolli , siis WDP-protokollikiht ei ole vajalik . Teiste kandjate puhul , nagu näiteks SMS , on datagrammi funktsionaalsus tagatud WDP-protokolli abil . Pole vahet , kas WAP-protokoll kasutab kasutaja datagrammprotokolli ( UDP ) või traadita datagrammprotokolli ( WDP ) . Mõlemal juhul on kasutusel datagrammteenus , mis peidab erinevate kandjate karakteristikud . Vajaduse korral saab WDP-protokolli laiendada omadusega , mis lubab kandja jaoks liiga suurte datagrammide segmenteerimise ja hiljem ühendamise . WAP-PROTOKOLLI TURVALISUSE TAGAMINE WAP-protokolli esimestes versioonid pole turvalisus täiel määral tagatud . Märgime , et ka WTLS-protokolli puhul andmed dekrüpteeritakse WAP-lüüsi serveris . Et kindlustada turvalist ühendust WWW serveriga ( näiteks panga server ) peab WAP-lüüsi server toetama traadiga võrgu turvalisi protokolle . Siit tulenevalt on WAP-lüüsi serveril juurdepääs krüpteerimata andmetele , mis edastati läbi TTLS-protokolli kasutades mobiilseadmelt või WWW serverilt traadiga võrgu turvalisuse protokolle kasutades ( joonis <arv> ) . Arvestades näiteks mobiilpanganduse vajadusi , peavad WAP-lüüside tootjad ja võrguoperaatorid tagama , et WAP-lüüs kunagi ei salvesta , edasta , kuva jne dekrüpteeritud informatsiooni ; WAP-lüüsis kasutatakse krüpteerimise / dekrüpteerimise protsesse , mis on turvalised ja kiired , nii et dekrüpteeritud informatsioon oleks WAP-lüüsi mälus võimalikult vähe aega ; WAP-lüüs asuks füüsiliselt niisuguses kohas , kuhu on juurdepääs ainult volitatud personalil ; WAP-lüüsile ei oleks kaugjuurdepääsu väljastpoolt kandja tulemüüri . Järgnevates WAP-protokolli versioonides üritatakse eespool toodud probleemid lahendada ning tagada otspunktkrüpteerimine , mis tagab informatsiooni edastamise krüpteeritult mobiilkliendist kuni serverini , kus asuvad andmed ja teenused . WAP-protokolli turvalisust saab tõsta kiipkaartide kasutamisega , mis võimaldavad hoida mobiiltelefonides kasutajaspetsiifilisi andmeid ( nt personaalsed sertifikaadid jmt. ) . WAP-protokolli versioon <arv>.<arv> sisaldabki endas “ Wireless Identity Module ” ( WIM ) spetsifikatsiooni , mis pakub kiipkaarte kasutades turvalisemat sidet , tagades salgamise vääramise ja autentimise digitaalallkirju kasutades . See lubab WAP-protokolli teenuste pakkujatel kasutusele võtta ka avaliku võtme infrastruktuuri ( PKI ) ( vt A &amp; A <arv>. a. nr.<arv> ; O. Sepp . “ Lahendus tulevikuks - PKI ” ) . WAP-protokolli spetsifikatsioonides <arv>.<arv> suurendatakse veelgi WAP-protokolli turvalisust . Selles versioonis ei kasutata WIM-moodulit , vaid hoitakse selle asemel kasutajate digitaalsed ID-d salasõnaga aktiveeritavates SIM-kaartides . See tähendab , et kasutajad ei pea enam ise hoolt kandma oma digitaalsertifikaatide eest , nagu seda nõuab WIM-moodul . Samuti peaksid WAP-protokolli spetsifikatsioonid <arv>.<arv> lubama kasutusele võtta mobiilse maksmisteenuse ( Electronic Mobile Payment Services ( EMTS ) ) . Selle teenuse jaoks kasutatakse kahe kiipkaardiga mobiiltelefone , kus teiseks kiipkaardiks on peale mobiiltelefoni SIM-kaardi deebet- , krediit- või mingi muu kiipkaart . Niisugune mobiiltelefon võimaldab näiteks maksta makse otse mobiiltelefonist . MIDA WAP-PROTOKOLL MEILE ANNAB ? Teenuste pakkujad saavad turule tuua terve hulga uusi , huvitavaid ja kasulikke teenuseid . WAP-protokoll annab teenuste pakkujatele võimaluse osutada teenuseid tänu ühtsele standardile ülemaailmselt ning kasutada erinevate tarnijate seadmeid . Pakkudes WAP-protokolli põhist lahendust , saavad mobiiltelefonide tootjad : Integreerida odavalt oma toodetesse mikrobrauseri , mis töötab kõigi WAP-protokolli toetavate serveritega ja sellega koos kõigis võrkudes , mis pakuvad WAP-protokolli põhiseid teenuseid . Suurendada oma mobiiltelefonide väärtust ja atraktiivsust kasutajate silmis . Mobiilsete rakenduste arendajad saavad suurima võimaliku kasutajaskonna , kui nad kirjutavad WML-keeles , sest see on tööstusharu standardiga . Lisaks sellele : WAP-protokoll võimaldab juurdepääsu täiesti uuele turule vaid oma praegusi internetiteenuseid modifitseerides . WML-keelsed rakendused töötavad kõikides võrkudes ja kõikides WAP-protokolliga ühilduvates seadmetes . WML-keel võimaldab optimaalselt ära kasutada kasutajaliidese . WML-keel võimaldab integreerida rakendusi võrgutelefoni ja muude võrguseadmetega . Kõik WML-keeles kirjutatud rakendused töötavad kõigil WAP-protokolliga ühilduvatel mobiilseadmetel ning rakendused on ka kohandatavad vastava seadme spetsiifikaga . WAP-protokolli on arendatud eelkõige just kasutajate vajadusi silmas pidades ning selle tõttu peaks ta kõige rohkem tulu tooma just neile . WAP-protokoll võimaldab kasutajatele : Mobiilterminaliga kiire ja efektiivse juurdepääsu erinevale graafilisele ja tekstipõhisele teabele . Hõlpsalt kasutatava kasutajaliidese . Laia seadmete valiku . Lisaks erinevate omadustega mobiiltelefonidele on kasutajatel võimalus valida veel WAP-protokolli toetavate piiparite ning erinevate pihuarvutite mudelite vahel . MÕNED WAP-PROTOKOLLI HUVIPAKKUVAMAD TEENUSED Pangandus . Pankade huvi mobiilse andmeedastuse vastu on suur . On selge , et mobiiltelefoni kasutamine pangatehinguteks tõstab panga ligipääsetavust . Kliendid võivad mobiiltelefoni vahendusel teha pangaoperatsioone suvalisel ajal suvalises kohas . WAP-protokoll teeb mobiiltelefonist personaalse , usaldatava ja turvalise terminali pangateenuste kasutamiseks . WAP-protokoll võimaldab pankadel taaskasutada internetipanka tehtud investeeringud . Eriti oluliseks võib WAP-protokoll kujuneda investeerimispanganduses , kus tehingud on suured ning mobiilside hinnad seetõttu rolli ei mängi . Suurt huvi WAP-protokolli ja mobiilpanganduse vastu tunnevad ka Eesti suuremad pangad . Eesti Ühispank käivitas esimese Eesti pangana WAP-protokolli põhise teenuse <arv>. aprillil <arv>. Teenus võimaldab klientidel saada panga üldinfot , valuutainfot Eesti Panga hetke valuutakursside kohta ning Ühispanga valuuta ostu-müügikursside kohta . Samuti saavad kliendid kasutada valuutakalkulaatorit , mis võimaldab hetkekursside alusel teha arvutusi valuutade konverteerimiseks . <arv>. juunist <arv> on klientidel võimalik teha tehinguid U-WAPis ( Ühispanga WAP-teenus ) . Reisimine . WAP-protokoll võib olla turismifirmadele suureks abiks oma teenuste pakkumisel . Kliendid saavad mobiiltelefoni abil reserveerida sõidupileteid ja hotellikohti . Kliente saab operatiivselt teavitada sõidu- plaanide ja reisikavade muutumisest . WAP-protokolli toetavatele mobiiltelefonidele võib tellida liiklusandmeid , ilmateateid , vaatamisväärsuste loetelu , valuutakursse ja ka muud reisimiseks ning reisimisel vajalikku informatsiooni . Meelelahutus . Meelelahutusäris liiguvad tänapäeval suured rahad ning arvata võib , et nendest saab osa ka mobiilne meelelahutus . See meelelahutuse tüüp peaks eriti sobima just noortele , kes võtsid kiiresti omaks ka lühisõnumiteenuse . WAP-protokolli kasutuselevõtt võib tuua mobiiltelefonidele hulgaliselt meelelahutusteenuseid , nagu loto , hasartmängud , lihtsamad võrgumängud , mobiilpostkaartide saatmine jmt. Kaubandus . Juba praegu on populaarsed internetikaubamajad . Interneti arengu prognoose jälgides võib arvata , et lähitulevikus internetikaubanduse turuosa kasvab . Kontor . WAP-protokoll võimaldab turvaliselt saata informatsiooni ja teateid kontorist mobiiltelefonile ning vastupidi . Meditsiin . WAP-protokoll võimaldab arstidel kiiresti ja mobiilselt saada teavet patsientide haigusloo ja seisundi kohta . Arst võib vajaliku teabe tellida kas või kiirabiautosse , olenemata kellaajast . Need on vaid mõned mobiilteenuste liigid , mille arengut WAP-protokoll peaks soodustama . KOKKUVÕTE Kuigi praegu on WAP-protokolli põhise teenuse kasutamine kallis , sobib see siiski paljude elutähtsate ja kiireloomuliste ülesannete lahendamiseks - näiteks meditsiinis ja investeerimispanganduses . Tõepoolest , kui on vaja <arv> krooni eest kiiresti aktsiaid omandada , pole mõnekümnekroonisel teenustasul mingit tähtsust . gap desc='references'&gt; Uudised valis ja pani kokku Uuno Vallner , Riigikantselei riigi infosüsteemide osakonna nõunik Uudised Välisminister tutvustas ÜRO-s Eesti virtuaalriiki Välisminister Toomas Hendrik Ilves tutvustas aprillis ÜRO kutsel New Yorki kogunenud arvutiekspertidele ja poliitilistele mõjutajatele seda , kuidas Eestis on kodaniku ja riigi suhtlemist interneti abil lihtsustatud ja kiirendatud . ÜRO-s arutati eelkõige riikide suhtumist ning riikliku sektori võimalusi interneti arendamisel ja kasutamisel . Enamikes riikides peetakse peamiseks takistuseks poliitilise juhtkonna ja ametnikkonna umbusku interneti suhtes . Osalejad avaldasid lootust , et mõne riigi nagu Eesti positiivne kogemus võiks seda kahtlemist hajutada . Räägiti ka interneti tehnilistest arenguvõimalustest , käsitledes nii e-kaubandust kui internetti suhtlusvahendina üldiselt . Asjatundjate hinnangul ähvardab praegust interneti protokolli ehk IP-d hädaoht , et paari aasta pärast on maailmas juba rohkem interneti-aadressi soovijaid kui võimalikke aadresse . Uus protokoll , mis võimaldab tohutult suuremat hulka aadresse , on olemas , kuid mitte väga laialt levinud . Rahvaraamatukogud saavad internetiseerimiseks <arv>,<arv> miljonit Valitsus otsustas <arv>. Mail eraldada valitsuse reservist rahvaraamatukogude internetiseerimise arendamiseks <arv>,<arv> miljonit krooni . Rahandusminister Siim Kallas ütles ajakirjanikele , et rahvaraamatukogude internetikasutuse laiendamiseks ja arendamiseks eraldati raha riigi infosüsteemide planeerimise reformiks mõeldud summadest projekti Küla Tee jätkuprojekti toetamiseks . <arv> protsenti firmajuhtidest kasutab internetti vähemalt kord nädalas <arv> protsenti Eesti firmajuhtidest kasutab internetti vähemalt kord nädalas , mis tõendab selle olulisust müügi- ja suhtluskanalina äriturgudel . Emori arvuti- , interneti- ja e-kaubanduse levikut kaardistavast uuringust selgus , et arvutit kasutas viimase kuue kuu jooksul <arv> protsenti Eesti juhtidest . Internetti või e-maili saatmise võimalust olid küsitletud juhtidest viimase kuue kuu jooksul kasutanud ligi kolm neljandikku ehk <arv> protsenti . Seega omavad firmades juhikohtadel töötavad inimesed Eesti keskmisest oluliselt paremat juurdepääsu uuele suhtluskeskkonnale . Eesti <arv>-<arv>-aastaste elanikega võrreldes on firmajuhtide seas arvutikasutajaid üle kahe korra enam . Enam kui pooltel juhtidest on personaalarvuti ka kodus . Seega on juhid ja otsustajad uue infokeskkonnaga olulises osas haaratud , mis võimaldab arvutivõrku viia firmadevahelise suhtluse , müügi- ja ostusoovide vahetamise . Riigiasutused saavad IBM-i tarkvara <arv> protsenti odavamalt Eesti Informaatikakeskuse direktor Imre Siil ja IBM-i Eesti tegevjuht Valdo Randpere allkirjastasid <arv>. mail lepingu , mille kohaselt kõik Eesti riigiasutused saavad osta IBM-i ja Lotuse tarkvara kuni <arv> protsenti odavamalt . Randpere teatel võimaldab sõlmitav leping ka väiksematel asutustel osta kvaliteetset arvutitarkvara soodushinnaga . Esialgsete arvutuste kohaselt võimaldab sõlmitav leping selleks aastaks planeeritud IBM-i poolt riigisektorile müüdava arvutitarkvara arvelt riigil kokku hoida kuni <arv> miljonit krooni . Samuti on IBM-i Lotuse tarkvara kaitstud hetkel ülemaailmselt populaarsete ja suurt laastamistööd teinud arvutiviiruste eest . IBM on sääraseid koostöölepinguid sõlminud paljude riikidega . Eestis on IBM-i suuremad kliendid riigisektoris sotsiaalministeerium , patendiamet , kodakondsus- ja migratsiooniamet , sotsiaalkindlustusamet , politseiamet , tolliamet ning mitmed maavalitsused . IBM on maailma suurim infotehnoloogiafirma , mille mullune käive oli <arv>,<arv> miljardit dollarit . Tarkvara käive oli <arv>,<arv> miljardit dollarit , mis on umbes <arv> miljonit Eesti krooni tunnis . EMT avas oma klientidele WAP-teenuse Eesti Mobiiltelefon ( EMT ) avas <arv>. aprillil oma lepingulistele klientidele WAP-teenuse kommertskasutuseks , WAP pakub internetiteenuseid mobiiltelefoni vahendusel . EMT teatel pakub EMT WAP erinevalt seni Eestis esitletud WAP-lahendustest palju rohkem võimalusi . Koostöös TEA kirjastusega töötab võõrsõnastik , mille abil edastatakse sõnaseletusi võõrsõnade kohta , saldoinfo abil saab klient ülevaate oma arve seisust . Lisaks sellele on EMT klientidel võimalus lugeda e-maile sõltumata internetiteenuse pakkujast ja kasutada otsingumootorit EMT eraisikutest klientide avalike telefoninumbrite leidmiseks . EMT WAP-kodulehekülje aadress on wap.emt.ee ja sissehelistamise number +<arv> <arv> <arv> <arv> , mida saab kasutada ka välismaal olles juhul , kui EMT rändluspartner võimaldab helistaja numbri edastamise Eestisse . <arv>. aprilli seisuga kasutas EMT teenuseid <arv> <arv> inimest . Neist <arv> <arv> on lepingulised kliendid ja <arv> <arv> kasutavad ettemakstud kõnekaarti Simpel . Mõni aeg tagasi avas WAP-teenuse oma klientidele ka Q-GSM . USA justiitsministeerium nõuab Microsofti tükeldamist USA justiitsministeerium kavatseb teha föderaalkohtule ettepaneku tarkvarahiiglase Microsoft jagamiseks kaheks , karistuseks Microsofti monopolistliku tegevuse eest . Ministeerium soovitab kohtul jagada Microsoft kaheks omavahel konkureerivaks ettevõtteks . Üks firmadest tegeleks operatsioonisüsteemi Windows arendamise ja turustamisega , teine keskenduks aga Microsofti teistele tarkvaratoodetele nagu Microsoft Office ja Internet Explorer . Maarja Kruusmaa , Chalmersi ülikooli doktorant , Halmstadi ülikooli teadur Kus ma olen ? Robotite navigatsioonist ja lokalisatsioonist ( <arv> ) TOPOLOOGILISED KAARDID KUI MARKOVI AHELAD Üks võimalus on käsitleda roboti liikumist topoloogilisel kaardil Markovi protsessina . Markovi protsessi puhul sõltub protsessi edaspidine kulgemine ainult käesolevast seisundist , aga mitte sellest , kuidas protsess sellesse seisundisse jõudis . Topoloogilist kaarti mööda ühest tipust teise liikudes moodustab robot Markovi ahela . Iga tipuga on siis seotud olek . Peale selle koosneb Markovi protsess vaatluste hulgast ning tõenäosusjaotusest , kus määrab tõenäosuse , et protsessi algolek on . Iga olekuga on seotud lõplik tegevuste hulk , mis määrab selles olekus võimalikud tegevused . Tegevus võib olla näiteks pöördumine täisnurga võrra , peatumine või edasiliikumine . Üleminekufunktsioon määrab tingimusliku tõenäosuse , et süsteem siirdub pärast täideviimist olekust olekusse . Vaatlusfunktsioon määrab tõenäosuse , et olekus tehakse vaatlus . Vaatlus tehakse anduritelt saadud informatsiooni põhjal . Viimasena on defineeritud hüvitusfunktsioon , mis näitab , milline on otsene kasu tegevusest olekus . Roboti töötamisel koosneb protsess nelikute jadast . Robot on selle protsessi juures jälgija ja otsustaja , kes määrab , milliseid tegevusi valida , nii et hüvitusfunktsioon oleks suurim . Kui robot teaks alati täpselt , millises olekus ta on , oleks tegemist täielikult jälgitava Markovi protsessiga . Kui aga ruumis liikumisel ei saa oma asukohas kindel olla , siis on tegemist osaliselt jälgitava Markovi protsessiga . Sel juhul teab jälgija ja otsustaja ( s. t robot ) küll , milliseid tegevusi ta on valinud ja milliseid vaatlusi teinud , kuid tal puudub kindlus , millisesse olekusse ta seetõttu jõudnud on . Kõik , mis ta oma asukoha kohta arvata oskab , on olekute tõenäosusjaotus üle olekute hulga . Algolekus on . Edaspidi , kui käesolev tõenäosusjaotus on , siis uus tõenäosusjaotus pärast tegevust on lihtsalt arvutatav Bayesi valemiga : , kus normaliseerib tulemuse nii , et . Pärast vaatlust on tõenäosusjaotuse ümberarvutamine veelgi lihtsam . Kui käesolev tõenäosusjaotus on , siis uus tõenäosusjaotus pärast tähelepanekut on . Osaliselt jälgitava Markovi protsessi eelis on see , et ta integreerib nii kaardi ebatäpsusest tingitud teadmatuse kui ka roboti ajamite juhtimisest , andurite vigadest ja tulemite valest interpreteerimisest tuleneva ebamäärasuse [ <arv> ] . Näiteks võib robot otsustada <arv> kraadi keerata , kuid tegelikult on rataste libisemise tõttu pöördenurk väiksem ja robot jõuab järgmise tipuni vaid tõenäosusega . Jaotusfunktsiooniga saab hästi väljendada Lasnamäe sündroomi : me võime pärast vaatlust ainult mingi tõenäosusega väita , et oleme jõudnud tänavanurgale . Et protsessi alguses on teada vaid tõenäosusfunktsioon , mitte aga algolek , siis võib Markovi otsustusprotsessi abil navigeerida ka “ röövitud robot ” ehk robot , mis alguses oma asukohta ei tea . Jaotusfunktsioonid ja ei tarvitse olla ette antud , vaid need on leitavad treenimisalgoritmi abil , mis leiab optimaalse ( või optimaalsele lähedase ) osaliselt jälgitava Markovi ahela . Üks selline õppimisalgoritm on näiteks Baumi-Welshi algoritm , mis muudab küll üleminekutõenäosusi , kuid mitte olekute arvu [ <arv> ] . Baumi-Welshi algoritmi edasiarendust on kasutatud ka diktomeetriliste , s. t geomeetriliste relatsioonidega topoloogiliste kaartide korral [ <arv> ] . Siis saab arvestada ka odomeetrilist informatsiooni ja sellega kõrvaldada mõned lokaalsed optimumid . Ühest küljest teab robot Markovi ahelaid ehitades väga harva , kus ta täpselt asub . Teisest küljest on tal aga alati mingisugune tõekspidamine oma asukoha kohta ja seetõttu pole ta kunagi täielikult eksinud . See tõekspidamine ei tarvitse aja jooksul mitte ainult hägustuda , vaid võib ka kindlamaks muutuda . Näiteks kui üsna ebamäärases seisus robot satub paika , mille ta absoluutselt kindlalt ära tunneb , siis . Seetõttu võib ka äraeksinud robot uuesti tee leida . Enamik meetodeid libiseb eksinud robotite probleemist vaikides üle või pakub eneselokalisatsiooniks kohmakaid protseduure , mis väga meenutavad anekdooti sellest , kuidas programmeerijad elevanti püüavad . Teadaolevalt on osaliselt jälgitavaid Markovi ahelaid kasutatud ainult juba valmisoleva kaardi järgi liikumiseks . Võib-olla on kaardi ehitamine sel viisil isegi võimatu , sest treenimisalgoritmid nõuavad , et ja peavad olema ette antud . Vähemalt pole leitud efektiivset on-line-algoritmi , mis samm-sammult graafile tippe juurde lisades üleminekutõenäosusi uuele olukorrale kohandaks [ <arv> ] . Seni on Baumi-Welshi algoritmi taolisi heuristikaid kasutatud ainult väikeste kaartide puhul . Sellest , kas ka mitmesaja või mitme tuhande tipuga kaardile saab mõistliku ajaga tõenäosusjaotused leida , vaikib üksmeelselt terve koolkond . GLOBAALSELT JÄRJEPIDEV TOPOLOOGILINE KAART Kujutame ette topoloogilist kaarti , mis moodustab kolme tipu ja kolme kaarega tsükli ( joonis <arv> ) . Iga tipp on määratud vektoriga , kus määrab roboti pöördenurga . Oletame , et iga kaare kohta on teada odomeetrilise näidu järgi määratud enam-vähem õige suhe . Kui me nüüd tahaksime selle kaardi siduda globaalse koordinaadistikuga , peaksime kaardilt kõrvaldama kõik vastuolud . Sellise lihtsa kolmetipulise tsükli puhul tähendaks see , et transformatsioon peab meid viima füüsiliselt samasse kohta kui . Arvestades seda , et odomeetriline näit pole täpne , annavad need kaks transformatsiooni ilmselt vastukäiva tulemuse . Loomulikult on võimalik siis lihtsalt ühte parameetrit , näiteks muuta nii , et ta oleks kooskõlas ülejäänutega . Küsimus on aga , millist parameetrit muuta , sest ilmselt sisaldavad kõik suurused mõõtmisviga . Kirjeldame ühte konkreetset teepikkuse mõõtu , kus on Gaussi jaotusega müra , mille keskväärtus on null ja kovariatsioon . Eesmärgiks on optimaalselt määrata -de asukohad , arvestades kõiki mõõtmistulemusi , ja mõõtmistulemuste kovariatsioonide alusel määrata -de endi kovariatsioonid [ <arv> ] . Et mitte liiga matemaatiliseks muutuda , võib siinkohal tuua järgmise analoogia . Oletame , et kõik tippudevahelised ühendused on pisikesed pastapliiatsivedrud . Iga vedru on normaalolekus siis , kui kahe tipu tegelik vahekaugus võrdub täpselt mõõdetud teepikkusega . Kui tippude tegelik vahekaugus ja mõõdetud vahekaugus erinevad , on vedru rohkem või vähem kokku surutud või välja venitatud ja tal on energia . Kui nüüd selline vedrupundar käest lahti lasta , siis nihkuvad vedrud ( ja sellega seoses graafi tippude koordinaadid ) niimoodi , et süsteemi koguenergia on minimaalne . Detailidesse laskumata võib kinnitada , et selline ülesanne pole mingi NP-täielik koletis , vaid kujutab endast lihtsalt muutujaga võrrandisüsteemi lahendamist . Ei saa muidugi pead anda , et tulemus vastaks täpselt tegelikkusele , kuid vähemalt ei ole mudel siis enam vastuoluline . Intuitiivselt tundub , et mida suurem ja sidusam on graaf , seda täpsemalt peaksid tipud oma õigetele kohtadele nihkuma . LOKALISATSIOON VORONOI DIAGRAMMIDEL Voronoi diagrammid või nende edasiarendused ei kaardista otseselt kogu keskkonda , vaid pigem vaba ruumi takistuste vahel . Voronoi diagramm moodustab sisuliselt graafi , mille servad ühtivad vaba ruumi telgjoonega . Seetõttu sarnaneb Voronoi diagramm pigem topoloogilise kaardiga . Objektide suurus ja täpne paiknemine ei oma suurt tähtsust , oluline on vaid , kuidas nende ümbert ringi sõita . Pealegi saab tee planeerimiseks kasutada tavalisi graafist otsimisalgoritme . Voronoi diagrammi on robotil suhteliselt lihtne ise koostada , ilma et oleks vaja rakendada mingeid keerulisi tehnikaid . Idee seisneb selles , et liikumisel mõõdab robot oma kaugust mõlemal pool asuvatest takistustes ( nt koridori seintest ) . Punktid , mis jäävad mõlemast takistusest ühekaugusele , moodustavad diagrammi serva . Üldistatud Voronoi diagrammi puhul pole vajalik , et niimoodi tekkivad tükeldused oleksid tingimata kumerad [ <arv> ] . Seega saab kaardistada ükskõik millise kujuga takistuste vahelist ruumi . Niimoodi tekkivaid kaarte nimetatakse ka teede kaartideks ( roadmaps , freeways ) . Odomeetrilist informatsiooni üldistatud Voronoi diagrammid tavaliselt ei sisalda . Robot saab end lokaliseerida servade lõikumispunktides ehk ristmikel . Kogu probleem taandub siin jällegi kujundituvastusele ja hädad on täpselt samad mis toploogilistel kaartidel . Kõige keerulisem on juhtum , kui robot sõidab ümber takistuse ringiratast , aga ei saa aru , et sellel ristmikul on ta juba olnud [ <arv> ] . Kaart muutub siis täiesti mitteadekvaatseks . Raskusi tekib ka dünaamilises keskkonnas ( kaardi kohandamisel . ) Kui näiteks objekt A joonisel <arv> ühel heal päeval ära kaob , tuleb kustutada üsna mitu kaart ja moodustada uus , mis mööduks võrdsetel kaugustel takistustest B , C ja D . Siiski on Voronoi diagrammidel ka omad eelised : neid on lihtne koostada isegi siis , kui robotil pole keskkonnast mingit a priori teavet , ja juhul , kui nad ei sisalda informatsiooni teepikkuste kohta , ei ole vaja arvestada odomeetrilisi vigu . PIIRJOONTE KAARDID ( FEATURE MAPS ) Piirjoonte kaardistamiseks kasutatakse midagi kõige lihtsamas mõttes kujundituvastuse sarnast : tuvastatakse keskkonnale iseloomulikud jooned ja märgitakse nad üksteise suhtes õigetes proportsioonides kaardile [ <arv> ] [ <arv> ] [ <arv> ] [ <arv> ] . Tuvastamiseks valitakse kõige lihtsamaid objektide kategooriaid , peamiselt sirgjooni , mõnikord ka nurkasid või ukseavasid . Kõrgemal sümboolsusetasemel kujundituvastus oleks tehisintellekti praegust arengutaset arvestades ilmselt lootusetu ülesanne . Isegi sirge seina äratundmisega on üksjagu tegemist . Et kõik andurid sisaldavad müra , ei ole kõik mõõdetavad punktid sugugi täpselt rivis . Mõned punktid võivad tänu neeldumistele ja peegeldustele üleüldse vahelt kaduma minna . Kui mõõtmised teha väga täpselt , näiteks laseritega , siis on häda jällegi selles , et seinad pole täpselt sirged . Et otsustada , kas mõõdetud punktid moodustavad tõesti sirgjoone , kasutatakse nn. line-fitting-algoritme ( joonis <arv> ) . Lokaliseerimiseks püütakse hiljem samad tuvastatud jooned uuesti ära tunda . Selleks tuleb eelnevalt mällu salvestatud piirjoon parasjagu mõõdetavaga uuesti klappima panna . Kui mõõdetav piirjoon ja salvestatud piirjoon on omavahel nihkes , saab selle abil korrigeerida odomeetrilist näitu . Kokkulangevate punktide leidmiseks kasutatakse näiteks ristkorrelatsioone [ <arv> ] või IDC-algoritmi [ <arv> ] . HÜBRIIDKAARDID Nagu eelnevalt mainitud , on topoloogilistel ja geomeetrilistel kaartidel vastandmärgilised eelised ja puudused . Geomeetrilised kaardid on täpsed , kuid nõuavad väga head lokaliseerimist . Topoloogilised kaardid seevastu on üldisemad , kuid vähem haavatavad odomeetriliste vigade suhtes . Esitades keskkonda nii topoloogiliste kui ka geomeetriliste elementidega , võib ära kasutada mõlema esitusviisi tugevaid külgi . Näiteks saab geomeetrilisest kaardist moodustada Voronoi diagrammi ja sellel siis reaalajas teid planeerida [ <arv> ] . Kõige rohkem on mõtet ära kasutada topoloogiliste kaartide omadust mitte esitada objekte globaalses koordinaadistikus . Kui tükeldada geomeetriline kaart väiksemateks osadeks , mille omavahelised suhted on määratud graafi kaartega , kaob ära vajadus globaalseks lokalisatsiooniks . Roboti asukoht määratakse siis lihtsalt lokaalses koordinaadistikus selle tükelduse suhtes , milles ta parajasti asub . Et lokaalsed kaardid on väikesed , ei jõua odomeetriline viga nende läbimisel eriti akumuleeruda ja järgmisele kaardile sisenedes nullitakse see uuesti . Kõige tähtsam on tunda ära hetk , millal sisenetakse järgmisele kaardile . Tavaliselt ei lähegi robot kaduma lokaalse kaardi sees , vaid eksib õige kaardi määramisel [ <arv> ] [ <arv> ] . SITUATSIOONIDE KAARDID Et robotid on nii oma intellektuaalsete võimete kui ka ülesehituse poolest meist väga erinevad , on raske ette kujutada , kuidas nad oma ümbrust tajuvad . Erinevat tüüpi andurid edastavad informatsiooni täiesti erineval põhimõttel . Osa füüsilise maailma omadustest jääb seetõttu kättesaamatuks või ebaselgeks . Ilmselgelt tekivad niimoodi hoopis teistsugused sarnasuse kategooriad . Paigad , mis roboti jaoks tunduvad sarnased , ei tarvitse seda inimese jaoks üldse olla . Või ka vastupidi . Kui nüüd veel arvestada , et ega meiegi maailma päris adekvaatselt ei taju , siis ei olegi mingit mõjuvat põhjust robotite kaarte inimesele meelepärasel kujul esitada . Situatsioonide kaardid lahterdavad maailma osadeks vastavalt roboti andurite eristusvõimele . Ühte ja samasse tükeldusse kuuluvad tajupildid on roboti seisukohalt sarnased . Selliseid tükeldusi nimetatakse situatsioonideks ( joonis <arv> ) . Situatsioonide kaardi ja geograafilise ruumi vahel võib olla üksühene vastavus , kuid see pole ilmtingimata vajalik . Ka ei tarvitse situatsioonide ruumis kõrvuti asetsevad punktid tingimata geograafilises ruumis naabrid olla . Osa rakendusi siiski kasutab seda , et situatsioonid saab moodustada geograafilise ruumi lokaalsetest alamruumidest [ <arv> ] . Kui keskkond pole väga ebaregulaarne ja peene struktuuriga , on kõrvuti asetsevates kohtades tehtud mõõtmised kindlasti sarnased . Sellised sarnased mõõtmistulemused moodustavad situatsiooni , mis vastab mingile füüsilisele alale . Situatsioonide kaarti saab esitada graafina , kujutades situatsioone graafi tippudena . Kui ühest situatsioonist saab füüsilises maailmas teise , on kahe tipu vahel kaar . Robot võib oma töökeskkonna situatsioonideks tükeldada kas inimese abiga või ilma . Iseseisvaks õppimiseks sobivad hästi vektorkvantisatsioonimeetodid , nagu näiteks Kohoneni võrgud või RCE klassifikaatorid . Situatsioone saab esitada ka lihtsalt look-up-tabelina , millest asukoha määramiseks leitakse käesolevale olukorrale kõige sarnasem situatsioon [ <arv> ] . Kui arvestada , et situatsioonid on väikese ulatusega , saab roboti asukohta päris täpselt määrata , sest odomeetriline viga situatsiooni sees on väike ja uude situatsiooni jõudmisel saab odomeetrilist näitu jälle kalibreerida . See kõik kehtib muidugi eeldusel , et robot ikka õige situatsiooni ära tunneb . Juhul kui keskkond muutub väga oluliselt või kui erinevatel situatsioonidel on sarnased karakteristikud , tekib loomulikult raskusi . Ekstreemne lahendus on geomeetrilist informatsiooni üldse mitte esitada . Lõppude lõpuks on robotil vaja teada mitte seda , kus ta on , vaid seda , mida ta peab tegema , näiteks koridori lõppu jõudes vasakule keerama või fuajeest otse läbi minema . Mis seal ikka pikalt mõtiskelda , milline see maailm on ja kuidas teda esitada . Tegutseda on vaja . Selline lähenemine on nn reflektoorne navigatsioon , kus igasuguste mudelite ehitamisest üleüldse hoidutakse . Robot , tema ümbrus ja suhtlemine selle ümbrusega esitatakse lihtsate tajude ja reaktsioonide paaridena . Näiteks kui robot tunneb ära tupiku , keerab ta reflektoorselt ümber ja sõidab tuldud teed mööda tagasi . Selliste käitumismudelite omandamiseks treenitakse roboteid , viies neid erinevatesse situatsioonidesse . Tupik pole mingisugune kõrgemal tasemel defineeritud olukord või ilmutatud kujul esitatud sümbol , vaid tekib kui kategooria iseorganiseeruvas süsteemis . Reflektoorse käitumise esitamiseks nn. tajukaartidena kasutatakse tavaliselt Kohoneni võrke [ <arv> ] . KUS MA SIIS IKKAGI OLEN ? Sellele küsimusele pole ikkagi veel ühest vastust hoolimata sellest , et siinses loos on pakutud kümneid erinevaid lokalisatsioonimeetodeid klassikalistest geomeetrilistest kaartidest kuni psühholoogia ja neurofüsioloogia piirimail olevate rakendusteni . Valdav on seisukoht , et polegi olemas igas olukorras ühteviisi hästi toimivat lokalisatsioonimeetodit . Pole võimalik ehitada robotit , mis kunagi ei eksiks . Alati saab konstrueerida olukorra , mis teeb narriks ka kõige intelligentsema roboti . Ja mitte ainult roboti - ka inimest on võimalik päris lihtsalt teelt eksitada , ehkki tema vaimsed võimed on igasugusest tehisintellektisüsteemist tunduvalt arenenumad . Isegi sellised navigeerimiskunstnikud nagu rändlinnud või vaalad , kes läbivad toidu otsingul kümneid tuhandeid kilomeetreid , eksivad mõnikord teelt . Rääkimata siis inimesest , kelle orienteerumismeel on tunduvalt tagasihoidlikumalt arenenud . Ja ammugi rääkimata robotitest , kes on siiski vaid sõnul seletamatult keerulise eluslooduse hale jäljendus . Liikuvate robotite võimalik kasutusvaldkond on väga lai . Kõige enam on tulevikku transpordirobotitel , mis tehastes ja vabrikutes tooteid ja detaile tootmisliinide ja lao vahel edasi toimetavad . Praegu kasutatakse selleks otstarbeks AGV-sid ( automated guided vehicles ) , mis järgivad põrandale monteeritud magnetriba . Et tänapäeva tööstuses on suund paindlikkusele ja kiirele kaasajastamisele , muutub kiiremini ka tööstuskeskkond . Varsti on AGV-d oma aja ära elanud . Läheb vaja intelligentsemaid transpordiroboteid , mis suudaksid takistuste ümbert ringi sõita , teekonda ümber planeerida , uut ümbrust ise avastada ja selle kõige juures mitte ära eksida . Peale selle ootab intelligentseid autonoomseid roboteid veel lõpmatu hulk erinevaid kasutusvaldkondi kosmoseuuringutest põllumajanduseni [ <arv> ] . Iga vähegi praktikas robotitega kokkupuutunud inimene märkab peagi , et peaaegu kõik probleemid saavad alguse ebatäpsest lokalisatsioonist . Ükskõik kas robot põrkab kuhugi vastu , valib vale tee või on muidu tüütu ja jääb kõigile jalgu , on täpsemalt uurides põhjus selles , et ta on oma asukohta valesti hinnanud . Isegi kui robotite navigatsioonis pole mingit hüppelist arengut lähiajal oodata , lähevad asjad siiski vaikselt paremuse poole . Paljuski on asi kinni tehnoloogilise taseme taga . Kui andurid muutuvad odavamaks , täpsemaks ja veakindlamaks , tekivad hoopis uued võimalused . Selline uus tehnoloogiline lahendus on näiteks GPS , mis sisuliselt on jätnud väljas liikuvate robotite lokalisatsiooniprobleemid ajalukku , või näiteks lasergüroskoobid , mis võimaldavad pöördenurka väga täpselt määrata ja mille hind ei võtagi enam silme eest mustaks . Raskeimaks probleemiks pole siiski andurite ebatäpsus . Pigem on küsimus selles , kuidas tõlgendada pilti , mida robot näeb , ehk siis tehisintellekti suurimas valulapses - kujundituvastuses . Kui robot suudaks reaalses , st muutuvas , ebatäpses ja mittedetermineeritud keskkonnas öelda “ siin ma olen juba olnud ! ” , oleks leitud vastus ka selle loo pealkirjas esitatud küsimusele .