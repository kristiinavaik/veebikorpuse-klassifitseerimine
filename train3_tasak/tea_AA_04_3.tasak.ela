kirjak	tea_AA_04_3.tasak.ela	TOIMETAJALT <arv>-<arv> IT on saanud äri osaks , IT protsessid on ärikriitilised , ärikriitilisi protsesse on firma huvides vaja auditeerida . Infosüsteemide ( IS ) auditeerimise temaatika aktuaalsus kasvab pidevalt - süsteemid lähevad üha keerukamaks , äri- ja ka muu tegevus sõltub nendest järjest enam . Alustame auditi mõistest . Audit on nõuetele vastavuse kontroll ja sõltumatu hinnangu andmine . Infosüsteemide audit on nõuetele vastavuse kontroll ja hinnangu andmine auditeeritava organisatsiooni infosüsteemile ( või selle osadele ) , kaasa arvatud selle seostele automatiseerimata protsessidega ja organisatsioonilise struktuuriga . IS audit hindab järgmisi aspekte ( auditi kontrolleesmärkideks on ) infovarade turvalisus ( käideldavus , terviklikkus , konfidentsiaalsus ) , kasutamise tulemuslikkus ja tõhusus , IT valdkonna töökultuur , IT investeeringute otstarbekus jmt. IS auditi põhiobjektid on : IS füüsiline keskkond - füüsiline turve , toiteallikad , konditsioneerid jm keskkonnategurid Tugisüsteemid - opsüsteemid , andmebaasisüsteemid , vahevarasüsteemid , seiresüsteemid jmt , nende administreerimise , seire ja haldamise protseduurid Rakendussüsteemid - nende administreerimise , seire ja haldamise protseduurid Välis- ja sisevõrk - pääsuõiguste haldamine , ründetuvastussüsteemid jmt IS talitluspidevus - süsteemide töökindlus , infovarade varundamine ja taaste , talitluspidevuse plaani seisund Eesti IS audiitoreid ühendab EISAÜ ( Eesti Infosüsteemide Audiitorite Ühing ) , mis asutati <arv>. aastal , ühingu esinaine on Monika Oit ( AS Cybernetica ) . IS valdkonna halduse , juhtimis- ja jälgimistegevuste korraldamise rahvusvaheliselt tunnustatud liider on aga <arv>. aastal loodud ISACA ( Information Systems Audit &amp; Control Association ) . ISACA on esindatud enam kui <arv> riigis oma haruühingutega ( chapter ) , haruühing nr. <arv> on Läti , nr. <arv>- Eesti ( <arv>. aastast ) ja nr. <arv> - Leedu . ISACA struktuuri kuulub IT Governance Institute ( ITGI ) , mis tegeleb auditeerimisvaldkonna tugitegevustega ( metoodikate , standardite , sertifitseerimisskeemide jms. väljatöötamine ) . ISACA sertifitseerib IS audiitoreid ( CISA - Certified Information System Auditor ) ja infoturbe juhte ( CISM - Certified Information Security Manager ) . Märgime , et CISA sertifitseerimiskeskus on ka Tallinna Tehnikaülikoolis . Toomas Rang Toomas Rang - sündinud <arv>. novembril <arv> Tallinnas . Lõpetanud <arv> Gustav Adolfi Gümnaasiumi matemaatika eriklassi ja <arv> Tallinna Tehnikaülikooli elektroonikainsenerina . Alustanud kraadiõpinguid <arv> Budapesti Tehnikaülikoolis ja kaitsnud <arv> PhD teaduskraadi Ungari Teaduste Akadeemia pooljuhtseadiste ja mikroelektroonika erialakomisjoni ees . Töötanud <arv>-<arv> Tallinna Tehnikaülikooli elektroonikainstituudis vaneminsenerina , <arv>-<arv> sealsamas vanemõpetajana , olnud <arv>-<arv> külalisteadlane Saarimaa ülikoolis Saksamaal , täitnud <arv>-<arv> automaatikateaduskonna dekaani kohuseid , töötanud <arv>-<arv> TTÜ elektroonikainstituudis dotsendina ning valitud <arv>. aastal elektroonikadisaini professoriks . Alates <arv>. aastast tegutsenud elektroonikainstituudi direktorina . Publitseerinud üle <arv> kirjutise , millest <arv> on teaduslikud artiklid . Austatud A &amp; A lugejad , järgnev VIP-lugu sündis töises juunikuus ning hea kolleegi Jüri Veeritsa palvel . Jüri soovitus oli hea ja lihtne : ” Kirjuta midagi infotehnoloogia probleemidest ! ” Kuhu see rõhk siiski asetada ? Otsustasin hoopis uitmõtete kasuks ja sellised nad siis on . Alustaksin kõige südamelähedasemast valdkonnast ja see on elektroonika . Algatuseks küsikski : ” Mis see elektroonika on ? ” Täna võiks juba ehk küsida , mis infotehnoloogia kui niisugune on . Paljud nooredki tahavad seda teada . Aastaid tagasi kinnitas üks tuntud prantsuse insener oma menukas populaarteaduslikus raamatusarjas , et elektroonika - see on imelihtne . Küllap kirjutaks ta täna raamatu pealkirjaga ” IKT - see on imelihtne ” . Kas ta on imelihtne täna ning Eesti Vabariigis , on omaette küsimus . Mulle tundub , et ei ole . Miks , võib tekkida küsimus . Ühest vastust ei ole . Peaksime vaatlema olukorda vähemalt kolmel tasandil : tööstus , teadus- ja arendustegevus ning õpetamine . Tegelikult tuntud kolmainsus . Äkki need tegevusalad võiksidki omaette olla , sest siis on hea omi möödalaskmisi naabri kaela veeretada . Ehk tuletades meelde klassikuid : ” Kui vaenlast ei ole , tuleb ta välja mõelda . ” Samuti ei tohi ära unustada , et harjumus on suur jõud ja harjumuste muutmine on üks ebameeldivamaid toiminguid . Uskuge mind , see on tõepoolest nii ! Harjumusi saab ehk kõige lihtsamalt muuta , kui valida sobivad stimulaatorid . Üheks selliseks ergutajaks on teadupoolest raha . Aasia Arengupanga president Tadao Chino ütles <arv>. aastal Aasia regionaalkonverentsil Tokyos : ” Vaesustsüklist väljapääsemise kõige otsustavamaks pidurdavaks teguriks on jätkuv piiratus informatsioonile ja teadmistele ligipääsus . ” Tema sõnum oli , et moodsast tehnoloogiast osasaamise üheks alustalaks on suurte eesmärkide nimel koostegutsemine nii riikide sees kui ka riikide vahel , kasutades selleks ära info- ja kommunikatsioonitehnoloogilisi lahendusi . Selle eesmärgi saavutamiseks tuleb nii era- kui riiklikud finantsvahendid otsustavalt koondada . Igatahes on sealse regiooni arengukava koos finantsplaaniga kokku pandud . Kuidas meie siin Maarjamaal elame ? Niisiis IKT kui valdkond . Lugeja ütleb kohe , et mis siin pikalt targutada : ” Võtame entsüklopeedia ja sealse definitsiooniga ongi asjad paigas . ” Jah , ka nii võib . Kui aga maailmas ringi vaadata , siis IKT tervikuna , eriti aga elektroonika kui tema alustala , on muutumas tänapäeval filosoofia kategooriaks . Selle abil on võimalik kirjeldada ning realiseerida tegevusi , kogemusi ja infrastruktuuri , vormides ja kujundades sealjuures uusi ning seninähtamatuid ja -tundmatuid virtuaalseid keskkondi . Ilma elektroonikata poleks ei bio- ega geenitehnoloogia , materjaliteaduste , nüüdisaegse füüsika , rääkimata kommunikatsioonitehnika saavutusi . Meil poleks Internetti ega infokiirteid ning sõjapidamine oleks oluliselt ebameeldivam tegevus , kui see täna tundub . Nii mulle igatahes näib ja sinna poole on arvamused liikunud juba päris pikka aega nii seal- kui siinpool Atlandi ookeani . Tänu elektroonikale hakkame jõudma ajastusse , millal kaob selge piir inimese ja masina vahel . IKT valdkonna teadlased on võimelised avastama ja elektroonikainsenerid suudavad avastatu põhjal luua peaaegu kõike , mille järele on ühiskonnas nõudlust . Kuidas on lood Eestis ? Arvan , et meie ei ole veel feodaalajast välja jõudnud . Ei räägita kategooriatest , mõjudest ja suundumustest , sest aur kulub enese upitamisele ja naabrile nuiaga pähe virutamisele , millega kaasneb sõjahüüd : ” Loll oled ja selle eest äigangi ” ning kõige tähtsamaks peetakse oma territooriumi märgistamist ( tuntud tegevus loomariigist , mis sest , et haiseb ! ) . Eespool nimetatud kolm valdkonda Eestimaal ei soovi ühtegi sammu üksteise poole astuda . See oma territooriumi viimse meheni kaitsmise soov ei ole meil veel mööda läinud ning kõik katsed midagigi muuta on siiamaani ühtedel või teistel põhjustel sumbunud . Võib õigustatult küsida : ” Kas on siis vaja muuta ? Siiamaani oleme ju hakkama saanud ? ” Jah , aga ühes oma hiljutises kirjatükis vihjasin organisatsioonide kohta kehtivale strateegilise planeerimise põhitõele : ” Kui organisatsioon ei suhtle keskkonnaga efektiivselt , toimib keskkond organisatsiooni suhtes üldjuhul lõhkuvalt ning hävitab organisatsiooni . ” Tegelikult peab see väide paika mis tahes valdkonna kohta tervikuna ja kui me siin Eestis maailmatendentsidest aru ei saa , siis häda meile . Me lihtsalt sureme dinosauruste kombel välja . Üks mu teine hea kolleeg on temale omase otsekohesusega öelnud , et me oleme kui Tagurpidi-Antsud , kui räägime suurest puhtast teadusest ja vajadusest kujundada kogu elu selle järgi . Tegelikkuses sünnib enamik probleeme pisikeses ja vahel ka räpases keskkonnas ning need probleemid vajavad lahendust , sest vastasel korral juhtub , et see pisike ja räpane keskkond osutub ümbruskonna jaoks liiga mürgiseks või isegi hävitavaks . Arvan , et tõde ( mis see veel on ? ) asub äärmuste vahepeal . Loodetavasti . Hiljuti , kui Helsingi lennujaamas ootasin edasilendu Brüsselisse , sattus mulle kätte klantspiltidega ajakiri , mille sihtgrupiks olid ilmselt rikkad ja pahurad . Teate ju küll selliseid kriitpaberil ja suhteliselt palju kaaluvaid ilusate piltidega ja mesimagusate jutukestega trükiseid . Selles ajakirjas hakkas mulle silma üks reklaam ( mida reklaamiti , ei mäleta ) . Pilt oli looduslikult meeldivas keskkonnas päikeseloojangusse kulgevast autoteest , mille ääres paistis omakorda mingi reklaamplakat . Sellel plakatil olev kiri hämmastas mind tõsiselt : ” Unusta prantsuse keel , õpeta oma laps lugema aktsiakursse ! ” Plakatil tekst veel jätkus , kuid see pole enam oluline . Arvan , et sõnum , mis selliselt reklaamilt saadakse , on väga negatiivne , sest ta halvustab haridust . Minu jaoks on haridus ikkagi arendav tegevus eesmärgiga omandada teadmisi . Hariduse , eriti ülikoolihariduse kõige olulisemaks väärtuseks on alusmüüri ladumine elukestvaks tegutsemiseks . Selles kontekstis pole prantsuse keele õppimine pelgalt tuupimine , vaid harituks ja kultuurseks saamise viis . Aktsiakursside lugemise oskus on küllaltki primitiivne . Selline ülitäpselt defineeritud oskus ei ole rakendatav väljaspool kitsast kasutusala ja suure tõenäosusega võib tehnoloogia arenguga muutuda ülearuseks . Arvan , et lõigu lõpetuseks sobib hästi Stanfordi ülikooli esimese presidendi David Starr Jordani mõte , et tegutsemine rakendusteaduste vallas peab toimuma käsikäes alus- ja humanitaarteadustega ning need peaksid olema võrdselt edendatud . Aga seda rääkis suure rikka osariigi kodanik ! Jätaks nüüd filosoofia rahule ning puudutaks natuke ühte teist , täna eriti kuuma teemat - nimelt e-õpet . Cisco Company president John Chambers väidab , et suurimad tapatalgud seisavad lähiaegadel ees haridusmaastikul . Eks ta ole , kui mõtleme sellele , mida meile näidati <arv>. juuni telepildis . See oli ju D-päevaga seonduv . Tehnoloogiline ja moraalne üleolek määras juba tol ajal üpris üheselt lõpptulemuse . Eks ta määra ka täna . Kas ei ole juba alanud D-päev e-õppe vallas ? Tahaksin e-õppega seoses puudutada probleemi , mille üle meil Eestis on suht vähe diskuteeritud . Tänapäeva üliõpilast võib õigusega pidada isikuks , kes teab oluliselt rohkem arvutitest , Internetist ja võib-olla isegi elektroonika mõnest tahust kui paljud tema õppejõud . Ei ole vale nimetada neid noori e-generatsiooni esindajateks . Elektroonsed lahendused on neid saatnud sündimisest saadik . Kahjuks käib e-generatsiooniga kaasas nähtus , mida nimetaksin videoklipi sündroomiks , mis väljendub sügavuti tungimise võimetuses ning tekitab ka suhtlemisraskusi . Suhtlemine e-generatsiooniga läbi Interneti on probleemiks kujunenud USA-s ning eks see mingil määral ja kujul jõuab varem või hiljem ka meile . Probleem tekib sellest , et tekstil , mida vahetavad õppejõud ja üliõpilane , puudub vahetu kontakti aura ehk teisiti öeldes - teksti ei saada sobiv miimika ja seda tõlgendatakse mõlemal poolel vastavalt hetkemeeleolule . Siinkohal tuleb mulle meelde ansambel Smilersi laul ” Jalgpall on parem kui seks ” . Igatahes on käibele tulnud suur hulk soovitusi , kuidas teha kommunikatsiooni mõlemale poolele meeldivaks . Tuntud on see akronüümi WRITE WAY all . Laskumata probleemikäsitluses sügavamale , olen sunnitud järjekordselt nentima , et õppejõu koormusbilansile e-õpe hästi ei môju . On tuntud tõsiasi , et üldjuhul suurendab e-õpe oluliselt ôppejõu igapäevast töökoormust . Kahjuks suurendab WRITE-protsessi rakendamine seda koormust veelgi . Positiivne asja juures on ehk see , et ebaadekvaatsete tõlgenduste arv loodetavasti väheneb . Akronüüm WRITE on muide kokku kirjutatud ingliskeelsetest sõnadest Warmth+ Responsive+ Inquisitiveness+ Tentativeness+ Empathy . Aga äkki külmalt kalkuleerivate e-generatsiooni eestlaste puhul see polegi probleem ? Tõmbaks otsad kokku naljakama looga keskmistatud statistikast . Lugu järgmine . Juhan läks pardijahile . Jõudis järve äärde ja puges kõrkjatesse . Natukese aja pärast näeb , et part lendab . Paneb püssi palge ja pauhh . Pagan , meetri jagu läks üle . Istub Juhan vaikselt edasi . Natukese aja pärast järgmine part õhus . Jälle püss palgesse ning pauhh . Pagan , meetri jagu läks alla . Ja nüüd võiks öelda , et statistiliselt keskmistatult sai Juhan pardile kahe lasuga pihta . Kuidas on lood aga pardipraega ? Näete , kuhu lugu lõpuks tüüris . Ilusat suve kõigile ! Arvo Toomsalu , TTÜ arvutitehnika instituut RAADIOVÕRGU PROTSESSORID Arvutivõrkude kiire areng avaldab otsest mõju mikroprotsessortehnika arengule . Kui kümme-viisteist aastat tagasi keskenduti mikroprotsessortehnikas põhiliselt võimsate universaalprotsessorite loomisele , siis mida aeg edasi seda rohkem on hakatud tegelema rakendusorienteeritud mikroprotsessorlülitustega . Arvutivõrkude vajaduste paremaks rahuldamiseks on loodud uus mikroprotsessorite klass - võrguprotsessorid ehk NPU-lülitused ( NPU - Network Processing Unit ) . Võrgu(mikro)protsessorid kujutavad programmeeritavaid protsessorlülitusi , mis täidavad arvutivõrkudes võrguohje- ja sidefunktsioone . Kuna võrguprotsessorid tegelevad peamiselt andmepakettide edastamise ja töötlemisega , siis erinevalt universaalprotsessoreist pööratakse nende arhitektuursetes lahendustes põhitähelepanu nimetatud ülesannete efektiivsele täitmisele . Viimastel aastatel on eriti aktuaalseks muutunud traadita ehk raadiovõrkude tarbeks sobivate võrguprotsessorstruktuuride loomine . Neilt protsessoreilt ei nõuta mitte ainult suurt infoläbilaskevõimet , vaid ka lühikest latentsiaega . Latentsiaeg on ajavahemik , mis kulub raadiovõrguprotsessoril iga edastatava andmepaketi analüüsile ja kontrollile . Vältimaks andmepakettide voos üksikute sõnumite kaotsiminekut , peab töötlusel kasutatav protsessor olema piisavalt kiiretoimeline . Enamasti on küllaldane , kui protsessor suudab tagada edastuskiiruseks kuni <arv> megabitti sekundis , ilma et saabuvate andmepakettide ajutiseks talletamiseks kasutataks suuremahulisi ja kalleid puhvermälusid . Samuti peavad nüüdisaegsed raadiovõrguprotsessid toetama erinevaid sideprotokolle ( <arv>.<arv>a , <arv>.<arv>b , <arv>.<arv>g ( Wi-FI ) , Bluetooth jt ) . Võrgusildades ja -lüüsides kasutatavad protsessorlülitused peavad toime tulema traatvõrkude protokollidega ( Ethernet , TCP/IP , Home Plug , USB , ADSL , PCI , PCcard ( PCMCIA ) , ISDN , GPRS ja teised ) . Siin ja edaspidi tekstis kasutatud akronüümide seletused on artikli lõpus . Protsessorlülitused peavad olema kergesti kohandatavad ka sideprotokollide uute versioonidega . Kui üritada võrguprotsessoreis toetada kõiki sideprotokolle ainult riistvaralisel tasemel , siis oleks tulemuseks protsessorkiipide kiire keerukustumine ja nende hinna järsk tõus . Seepärast püütaksegi protsessoreis , muidugi kui seeläbi ei halvene sidesüsteemi kvaliteet , asendada sideprotokollide riistvaralist juhtimist tarkvaralisega . Võrguprotsessori tarkvaraliselt ohjatav sisend-väljundsüsteem ( S/V-süsteem ) muudab seadme paindlikumaks , oluliselt lihtsam on kohanduda erinevate sideprotokollidega . Kui andmesidevõrgus rakendatav sideprotokoll peaks muutuma , siis piisab üksnes tarkvara asendamisest ( näiteks vajalikke programme arvutivõrgust alla laadides ) , selle asemel et ümber projekteerida kogu protsessori riist- ja tarkvara . Üheks firmaks , kus on saavutatud häid tulemusi programselt ohjatava sisend-väljundsüsteemiga raadiovõrguprotsessorite arendamisel , on Ubicom Inc. <arv> . Firmas on spetsiaalselt raadiovõrkude tarvis loodud omaette protsessoripere IP<arv> , mille esimeseks reaalajas talitlevaks võrguprotsessoriks sai IP <arv> . Selle protsessori projekteerimise käigus loodi CISC- ja RISC-arhitektuuride edasiarendamise tulemusena uudse arhitektuurse lahendusega nn MASI-arhitektuuriga ( MASI - Multithread Architecture for Software I/O ) raadiovõrguprotsessor . Eriti hästi sobivad uued MASI-arhitektuuriga protsessorlülitused meediumipöörduse juhtkontrollerite ehk MACde ( MAC - Media Access Control ) ülesannete täitmiseks . MASI-ARHITEKTUURI ISELOOMULIKKE JOONI <arv>. aastatel hakati universaalsete mikroprotsessorite käsustikesse lisama erikäske , mis võimaldasid personaalarvuteid kasutada erinevates multimeediumi- ja võrgurakendustes . Kui esialgu suutsid universaalprotsessorid ( või protsessortuumad ) kasutajate vajadusi rahuldada , siis arvutivõrkude arenedes ilmnes , et universaalprotsessorite arhitektuursed lahendused , mis on orienteeritud kasutamiseks mittevõrgustatud protsessorisüsteemides , ei sobi võrguülesannete täitmiseks . Rahuldamaks kasutajaskonna kasvavaid nõudmisi tuli välja töötada uusi spetsiaalseid protsessoristruktuure . Üht sellist perspektiivset võrguprotsessorite arhitektuuri esindabki MASI-arhitektuur . Esimeseks MASI-protsessoriks oli firmas Ubicom loodud mikroprotsessorkiip IP<arv> , mille täiustamise tulemusena sündis järgnevalt kirjeldatav võrgumikroprotsessor IP<arv> . Põhilisteks arhitektuurseteks tunnusteks , mille poolest protsessori MASI-arhitektuur erineb teistest tuntumatest mikroprotsessoriarhitektuuridest , võiks nimetada järgmisi : <arv>. Protsessori käsustik on väikesemahuline ja optimeeritud , lähtudes pakett-töötluse vajadustest . <arv>. Käsud on orienteeritud talitlemaks süsteemis “ mälust-mällu ” . <arv>. Protsessorkiibis sisalduvad küll eraldi andme- ja käsumälud ( lahendus , mis on iseloomulik Harvardi arhitektuurile ) , kuid neis puuduvad kaasaegsetele universaalsetele mikroprotsessoritele tüüpilised kiibisisesed käsu- ja andmevahemälud . <arv>. Protsessoris rakendatakse riistvaraliselt ohjatavat lõimtöötlust . <arv>. Protsessoris on erilist tähelepanu pööratud kontekstide kiirele ümberlülitamisele , konteksti vahetus on sooritatav <arv>-taktilise viivitusega . <arv>. Protsessor varustatakse mitme sõltumatu registrikogumiga . Mitme sõltumatu registrikogumi olemasolu lihtsustab ja kiirendab konteksti vahetamisel erinevais programmilõimedes kasutatud informatsiooni käitlemist . <arv>. Protsessorisse saabuvaid katkestusnõudlusi töödeldakse jadamisi , s.t katkestusi ohjatakse pollimise meetodil . <arv>. Tingimuslike siirdekäskude töötlemisel rakendatakse hargnemissuundade staatilist prognoosimist . Prognoosi viib läbi kompilaator , mis valmistab protsessoris töödeldavat programmi töötluseks ette . <arv>. Erinevalt enamikust teistest universaalsetest mikroprotsessoritest ei kasutata MASI-arhitektuuriga mikroprotsessoreis mäluohjurit ehk MMUd ( MMU - Memory Management Unit ) ega aadressivahemälu ehk TLBd ( TLB - Transfer Lookaside Buffer ) . <arv>. Protsessoris talitleb tarkvaraliselt ohjatav S/V-süsteem , s.t kõiki S/V-operatsioone ja S/V-protokolle realiseeritakse tarkvaras , protsessori riistvara toetab S/V-süsteemi vaid minimaalselt . MASI-arhitektuuriga protsessoreil on sarnaseid jooni klassikaliste RISC-protsessoritega . Mõlemal juhul tuginetakse Harvardi arhitektuurile , protsessoreis kasutatakse käsusõnade <arv>-bitist vormingut , infotöötlus toimub konveieriseeritult ning enamik käske suudetakse täita ühe protsessoritaktiga . Hoolimata aga sarnastest joontest , erineb MASI-arhitektuur RISC-arhitektuurist siiski põhimõtteliselt . MASI-arhitektuuriga protsessorite oluliseks erinevuseks register-register tüüpi andmeedastusele orienteeritud RISC-protsessoreist , on orienteeritus mälust-mällu tüüpi andmeedastusele . Nimelt tekib võrguprotsessoris talitluse käigus sageli vajadus täita käske , kus korduvalt pöördutakse mälu poole . Esmalt loetakse mälust protsessorisse operandide ( töödeldavate andmete ) väärtused ning seejärel salvestatakse töötluse tulem taas mällu . RISC-protsessoreis püütakse taolist töötlusviisi igati vältida , sest pöördused mälude poole on suhteliselt aeglased ning vähendavad lõpptulemusena kogu mikroprotsessorisüsteemi jõudlust . Andmevõrkudes edastatavate andmepakettide töötlusel on sagedased andmevahetused mäluga aga paratamatud . Seetõttu polegi RISC-protsessorid , hoolimata isegi nende kõrgest jõudlusest , neis kasutamiseks sobivad . Andmepakette töötlevas protsessoris tekib üldjuhul andmete mälust lugemise ja mällu tagasi salvestamise operatsioonide vahel harva vajadus sooritada andmepaketi üksikute osadega mitut erinevat operatsiooni . Ebaotstarbekas oleks kasutada eraldi käske andmete laadimiseks mälust protsessorisse , andmete töötlemiseks ja saadud tulemi(te) tagasisalvestamiseks mällu . Kuid RISC-protsessoreis see nii toimubki , s.t ühtse infoteisenduse sooritamiseks rakendatakse mitmest käsust koosnevat käsujada . Kui sooritada sama infoteisendus ühe keeruka kompaktse käsuga , siis saaks minimeerida töötlusprogrammi mahtu ja vastava riistvaralise toetuse korral lühendada kogu protsessi läbiviimiseks kuluvat aega . Et tagada mälust-mällu tüüpi käskude paindlikkust , rakendatakse neis erinevaid ( keerukaid ) adresseerimise viise , sh baseerimist koos indekseerimisega , baseerimist koos nihkeaadressiga , aadressi automaatset inkrementeerimist . Mälust-mällu arhitektuuriga mikroprotsessorisüsteem saab olla efektiivne vaid juhul , kui protsessoris talitleb sobiva struktuuriga käsukonveier , mida toetab küllaldase mahu ja kiirusega lokaalmälu . MASI-protsessoreis talitlevad käsukonveierid on võrdlemisi sarnased RISC-protsessorite käsukonveieritega , kus käsud läbivad konveieris tüüpiliselt järgmised astmed : <arv> ) käsuvõtt <arv> ) käsukoodi dekodeerimine <arv> ) käsu täitmine ( käsukoodiga määratud infoteisenduse sooritamine ) töötlusüksuses <arv> ) käsu tulemi salvestamine . MASI-protsessorite erinevus aga klassikalise RISC-arhitektuuriga protsessoreist on selles , et neis ei kasutata mitte tavalist , vaid superkäsukonveierit . Superkäsukonveieris peitubki MASI-protsessori suure jõudluse allikas . Teatavasti erineb superkäsukonveier tavalisest käsukonveierist selle poolest , et superkonveieris jaotatakse konveieri põhiastmed veel täiendavateks kiiretoimelisteks alamastmeteks . Sama võtet kasutati ka võrguprotsessori IP<arv> käsukonveieri struktuuri väljatöötamisel . Protsessori <arv>-astmelises sünkroonses superkäsukonveieris on käsuvõtu , operandivõtu ja tulemi salvestamise astmed jaotatud kaheks alamastmeks ( joonisel <arv> on need astmed tähistatud : IF<arv> ja IF<arv> , RD<arv> ja RD<arv> ning WB<arv> ja WB<arv> ) . Konveieris eelneb käsuvõtuastmele veel täiendav ( käsu ) lõimejärjestuse aste ( SCH ) . Käsukonveieris järgneb pärast käsukoodi dekodeerimist ( aste DC ) operandivõtt ( mälust lugemine ) , selleks on konveierisse lisatud kolm astet - operandi aadressi arvutamise aste ( ADR ) ja kaks astet operandide väärtuste lugemiseks mälust ( RD<arv> - esimese operandi võtt ; RD<arv> - teise operandi võtt ) . Pärast operandivõttu sooritatakse töötlusastmes ( EX ) andmetega vajalik infoteisendus ning saadud tulem salvestatakse mällu . Salvestuse viivad läbi konveieri kaks viimast astet ( WB<arv> ja WB<arv> ) . Käskude töötlemise kiirendamisel võib töötlusastme läbinud käsu tulemi edastada ka otse järgmisele käsule , s.t ootamata ära tulemi salvestamist mällu astmete WB<arv> ja WB<arv> poolt . Käsukonveieri struktuuri keerukustamisega saavutati seda , et igal konveieritaktil suudetakse lõpetada ühe käsu töötlemine . Samas on superkäsukonveieril nõrk külg , mis avaldub eriti selgelt hargnemiskäskude ( tingimuslike siirdekäskude ) spekulatiivsel töötlemisel . Selleks on pikk viiteaeg ehk nn karistusaeg , mis tekib juhul , kui siirdekäsu sihtaadress oli vääralt prognoositud , st käsu töötlemise käigus selgub , et tegelikult peab programmi edasine töötlemine jätkuma hoopiski teisest programmiharust . Sellisel juhul tuleb superkäsukonveier tühjendada ning hakata konveierit täitma käskudega õigest programmiharust . Kõik need toimingud tekitavad märgatavaid ajakadusid , mis vähendavad kogu süsteemi jõudlust . MASI-arhitektuuriga protsessoreis on hargnemiste väärprognoosidest tingitud ajakaod siiski väiksemad kui lihtsates superkäsukonveieritega protsessoreis , sest neis ei töödelda käske mitte ainult ühest programmilõimest , vaid igal protsessoritaktil teenindatakse eraldi lõimedesse kuuluvaid käske ( IP<arv> puhul on korraga töötluses kuni kaheksa erinevat programmilõime ) . Vääralt prognoositud hargnemise korral kõrvaldatakse käsukonveierist vaid need käsud , mis kuuluvad vääralt prognoositud hargnemissuunaga lõime . Teistesse lõimedesse kuuluvaid ( konveieris sisalduvaid ) käske konveieri tühjendamisel ei puudutata . MASI-arhitektuuri eeliseks on seegi , et programsete hargnemistega kaasnevad viitepilud ( tühitaktid ) ei vähenda üldjuhul konveieri jõudlust , kuna igal taktil võib konveieris töödelda käske mis tahes aktiivsest programmilõimest . Käsujadades tekkivaid viitepilusid lihtsalt eiratakse , need täidetakse käskudega teistest aktiivsetest lõimedest . Kuna MASI-protsessori superkäsukonveieri karistusajad on lühikesed , siis osutus siirdekäskude hargnemissuundade prognoosimisel otstarbekaks loobuda kallist , kuigi efektiivsemast dünaamilisest prognoosimeetodist ja piirduda kompilaatoripoolse staatilise prognoosiga . Et MASI-arhitektuuriga protsessorid varustatakse kiirete lokaalmäludega , siis pole neis erinevalt RISC-protsessoreist vajadust keerukate käsu- ja andmevahemälude järele . Vahemälude kasutamine põhjustab , eriti reaalajarakenduste korral , infoliikluse determineeritust , see pole aga alati soovitav . MASI-protsessoreis kasutatakse mahukat kiibisisest staatilist programmimälu ja viimasest sõltumatult talitlevat staatilist andmemälu . Andmevahetus mäludega toimub kiiresti - ühe taktiga . Üldjuhul suudavad MASI-protsessorid täita traadita võrkudes oma ülesandeid , ilma et vajaksid erinevalt paljudest teistest võrguprotsessoreist täiendavat välist mälulülitust . MASI-protsessorite kõrge töökiirus lubab loobuda ka traditsioonilistest , andmepakettide ajutiseks säilitamiseks ette nähtud FIFO-tüüpi puhvermäludest . MASI-protsessoreil on , võrreldes RISC-protsessoritega , tavapärasest mõneti erinev käsustik . RISC-arhitektuuris eeldatakse piiratud hulka andmetüüpe ja mäludes korrektselt joondatud andmete kasutamist . Andmesidevõrkude puhul oleks selliseid nõudeid raske täita . Olenevalt andmeedastuse protokollist võivad ülekantavad andmepaketid olla aga erineva suurusega , alates mõnest kuni mõne tuhande baidini . Varieeruva pikkusega andmepakettide salvestamisel mällu tekivad täiendavad probleemid andmete joondamisel . Võrguprotsessor ei tohi kulutada ülemäära aega andmete joondamisele , sest protsessori põhiülesanne on ikkagi tegeleda andmepakettide päiste , andmete analüüsi ja töötlusega . Lähtuvalt võrguprotsessorite poolt täidetavate ülesannete iseloomust pööratakse nende käsustike koostamisel erilist tähelepanu sellistele omadustele nagu <arv> ) võimalikult mitmekesine valik bitioperatsioone ; <arv> ) erinevate adresseerimisviiside rakendamine , mis hõlbustaksid opereerimist <arv>- , <arv>- ja <arv>-bitiste operandidega ; <arv> ) küllaltki võimsate aritmeetikakäskude olemasolu , näiteks spetsiaalsed korrutus-akumuleerimiskäsud <arv>-bitiste operandide töötlemiseks ; <arv> ) <arv>- ja <arv>-bitiste tingimuskoodide rakendamine hargnemiste korraldamisel ; <arv> ) programsete hargnemissuundade staatiline prognoosimine kompileerimisel ning hargnemiskäskude varustamine vastavate tunnustega ; <arv> ) käsustike koostamisel arvestatakse lõimtöötluse vajadusi . Kõik mälust-mällu tüüpi käsud on lõimede suhtes atomaarsed ehk mittejaotatavad käsud . Käskude atomaarsus seisneb selles , et keerukaid infoteisendusi sooritavate käskude talitlusse ei saa sekkuda käsud teistest programmilõimedest . Ühe käsuga toimub andmete lugemine mälust , nende modifitseerimine ja saadud tulemi mällu tagasisalvestus . Üheks oluliseks märksõnaks , mis iseloomustab MASI-arhitektuuri , on lõimtöötlus . MASI-protsessoreis rakendatakse riistvaraliselt ohjatavat käsutasemelist lõimtöötlust , mis samas ei nõua aga keerukat lõim- või multitegumtöötlust toetavat reaalaja operatsioonisüsteemi . Lõimtöötluse riistvaraline ohje loob eeldused katkestuste kiireks teenindamiseks ja lihtsustab protsessori tööd koordineeriva ( spetsiifilise ) operatsioonisüsteemi struktuuri ( nii näiteks kasutab võrguprotsessor IP<arv> firmapärast operatsioonisüsteemi ipOS ) . Enamikus teistes lõimtöötlust toetavates nüüdisaegsetes (mikro)protsessoreis kasutatakse tarkvaralist ohjet . Neis protsessoreis saab käsukonveieris samal ajal töödelda vaid ühe käsulõime konteksti . Kui tahetakse korraga töödelda mitut käsulõime , siis tuleb lõimede vahel teha ümberlülitusi ( konteksti vahetusi ) . Selleks tuleb aga käsukonveier peatada , päästa protsessoris nende registrite sisu , mida kasutati toiminud konteksti poolt , ja alustada käsuvõttu uuest kontekstist ( lõimest ) . Enamasti kaasneb konteksti ümberlülitamisega protsessori vahemälude tühjendamine ja täitmine uue informatsiooniga . Kõikidele konteksti vahetamisega seotud tegevustele kulutab protsessor sadu takte . Põhimõtteliselt teistmoodi on korraldatud lõimtöötlus MASI-protsessoreis . Näiteks protsessori IP<arv> superkäsukonveieris saab korraga töödelda informatsiooni kaheksast erinevast programmilõimest . Konveieri igas astmes võib olla käsk programmi erinevast harust , seega ei kulutata konteksti ümberlülitamiseks täiendavaid protsessoritakte . Üksikud käsulõimed võivad esindada protsesse , mis talitlevad kas sünkroonses ranges reaalajas või mitteranges reaalajas . Kaheksakanaliline lõimtöötlus ja viivitusteta kontekstivahetus tagatakse IP<arv>s seeläbi , et protsessoris on igale lõimele eraldatud individuaalne sõltumatu registrisegment ( registrikogum ) , kus säilitatakse vastavas lõimes töödeldavaid andmeid . Kuna käsukonveieri igas astmes toimub kindlasse lõime kuuluva käsu töötlus , siis konteksti ümberlülitamiseks piisab , kui lülituda ümber sellele registrisegmendile , kus säilitatakse lõime andmeid . Vajaduse korral saab kasutada ka neid andmeid , mida säilitatakse teistele lõimedele eraldatud registrisegmentides . Kõik registrisegmendid on identse struktuuriga , neis on teatav arv üldotstarbelisi registreid ( IP<arv> korral <arv> registrit ) , aadressiregistreid ( <arv> registrit ) ja eriregister ( kolmas allikregister ) kolmeoperandiliste käskude tarvis . Nii üld- , aadressi- kui ka eriregister on <arv>-bitised . Kõik registrisegmendid on varustatud täiendava <arv>-bitise akumulaatoriga , millest on eriti palju abi käskude “ korrutamine-akumuleerimisega ” ( MAC-tüüpi käsk , MAC- Multiply and Accumulate ) täitmisel . Lisaks on kõik registrisegmendid varustatud individuaalsete juhtregistritega , sh sõltumatu käsuloenduriga , mis ohjab vastava programmilõime töötlemist , ja katkestusmaski registriga . MASI-arhitektuuriga protsessoreis juhitakse sisend-väljundoperatsioone ranges reaalajas tarkvaraliselt . Ranges reaalajas talitlevad programmilõimed omavad , võrreldes mitteranges reaalajas talitlevate lõimedega , kõrgemat prioriteeti . Mitteranges reaalajas töötavate lõimede käske teenindatakse omakorda kas neile omistatud prioriteetide alusel või nn karusselli põhimõttel . Nende lõimede käsud saavad kasutada neid konveieri takte , kus puuduvad aktiivsed reaalajas talitlevate lõimede käsud . Olulist osa lõimtöötluse korraldamisel etendab MASI-protsessorite superkäsukonveieri esimene aste ( aste SCH ) , kus toimub töötlusele kuuluvate programmilõimede valik . Selles astmes määratakse üksikute lõimede töötlemise järjekord konveieris . SCH-astme lisamine käsukonveierisse muudab põhimõtteliselt käsukonveieri talitlust . Enamikus lihtsa käsukonveieriga mikroprotsessorites suunatakse käske käsukonveierisse jäigalt , s.t lähtudes protsessori käsuloenduri olekust , arvestamata lõime prioriteeti . Kui hiljem peaks aga selguma , et konveierisse sisestatud käsk ei kuulu kõrgema prioriteeditasemega lõime , siis tuleb konveier peatada ning läbi viia aeganõudev konteksti vahetamise protsess . MASI-protsessori käsukonveieri esimeses astmes ( SCH-astmes ) otsustakse , lähtudes registrisegmentide käsuloendurite olekuist ja erinevatele lõimedele omistatud prioriteetidest , milline käsk suunatakse antud taktil konveierisse . Kuid mitte igat lõime , isegi kõrgeima prioriteediga , ei töödelda konveieris pidevalt . Raadiovõrkudes toimuvad andmepakettide edastused puhanguliselt , s.t aeg-ajalt esinevad neis lühemad või pikemad vaikeperioodid . Et paremini kasutada protsessori ressursse , võib mõne lõime töötluse ajutiselt peatada , kuni protsessorisse saabub katkestusnõudlus , mis teavitab , et peatatud programmilõimele saabusid uued andmed ning töötlust võib taas jätkata . Protsessor reageerib sellistele katkestusnõudlustele väga kiiresti , ümberlülitumiseks uuele lõimele ei kulutata rohkem kui üks takt . Näiteks tavalistes universaalprotsessorites , kus kasutatakse reaalajas talitlevat operatsioonisüsteemi , kulub sama tegevuse sooritamiseks kuni <arv> protsessoritakti , mittereaalajas töötava operatsioonisüsteemi korral aga veelgi rohkem takte . VÕRGUPROTSESSORKIIP IP<arv> IP<arv> on spetsiaalne raadiovõrkude tarvis loodud MASI-arhitektuuriga protsessorkiip . <arv>-bitise sõnapikkusega mikroprotsessor arendab taktsagedusel <arv> MHz jõudlust kuni <arv> MIPS . Erinevalt paljudest teistest raadiovõrkudes kasutatavaist protsessorlülitustest toimub IP<arv>s S/V-operatsioonide ohje tarkvaraliselt . Sideprotokollides rakendatavate signaalijärgnevuste formeerimiseks genereeritakse tarkvaraliselt protsessorlülituse S/V-portide viikudele vastavad bitijadad . Kuna raadiovõrkude sideprotokollid on ette nähtud andmevahetuse ohjeks kiirete seadmete vahel , siis seab see protsessori töökiirusele ja selles kasutatavale tarkvarale kõrgendatud nõudeid<arv>. IP<arv> sisend-väljundsüsteemi korraldus tagab andmeedastuse kiirusele esitatavate nõuete täitmise , olles samas väga paindlik ja kergesti kohandatav erinevate võrkude sideprotokollidele . Mikroprotsessor toetab levinud standardeid ja liidestusvariante , sealhulgas <arv> ) Utopia , PCMCIA , IDE/API <arv> ) PCM Highway , UART , SPI , I<arv>C <arv> ) <arv>-bitist Interneti raadioliidest ( standard IEEE <arv>.<arv> a/g ) <arv> ) <arv>Base-T ( MAC/PHY ) , USB , GPSI <arv> ) Blue RF . Informatsiooni kiireks jadaedastuseks on protsessoris kaks SerDes-liidest . <arv>/<arv> PHY jaoks saab kasutada kuni nelja MII-porti , iga MII-port võib talitleda nii hosti kui ka PHY-reþiimis . Tarkvaraliselt ohjatavate sisend-väljundoperatsioonide kiirendamiseks on protsessorlülitusse lisatud täiendavaid riistvaralisi sõlmi , neist olulisemad on <arv> ) <arv>-bitine juhuarvude generaator <arv> ) <arv>-bitine protsessoritaktiga sünkroonselt talitlev taimer . Taimer on varustatud kaheksa võrdlusregistriga ( vastavalt rööpselt töödeldavate programmilõimede arvule ) <arv> ) <arv>-bitine reaalajas talitlev fikseeritud taktsagedusega loendur <arv> ) <arv>-bitine valvetaimer <arv> ) kaheksa katkestussisendit ( katkestussignaalid edastatakse protsessorisse läbi S/V-portide ) <arv> ) mikroprotsessori elektritoitesüsteemis esinevaid pingekõikumisi fikseeriv detektorlülitus , mis ei ole küll otseselt seotud S/V-operatsioonidega , kuid aitab kaasa mikrolülituse töökindluse tõstmisele . Millistest põhilistest funktsionaalsetest üksustest võrguprotsessor IP<arv> koosneb ja kuidas on korraldatud üksustevaheline infovahetus , see on näha jooniselt <arv>. Mikroprotsessoris on kiibisisene kaksport SRAM-tüüpi andmemälu ( struktuuriga <arv>K <arv> bitti ) ja SRAM-tüüpi programmimälu ( struktuuriga <arv>K <arv> bitti ) . Infovahetusele mäludega kulutab protsessor vaid kaks takti , sisemälude infoläbilaskevõime küünib kuni <arv> gigabaidini sekundis . Kui protsessori sisemälude infomahutavusest ei piisa , siis saab protsessorkiibiga ühendada välise <arv>-megabaidise ( struktuuriga <arv>M <arv>bitti ) kiire programmide välkmälu ja kuni <arv>-megabaidise ( struktuuriga <arv>M <arv> bitti ) sünkroonse dünaamilise andmemuutmälu ( SDRAM ) . Protsessoris saab läbi viia kuni <arv>-lõimelist hargtöötlust , kasutatavad on nii reaalajas kui ka mittereaalajas talitlevad programmilõimed . Käske töödeldakse eelnevalt kirjeldatud <arv>-astmelises superkäsukonveieris . Käskude valik erinevaist lõimedest toimub infotöötluse käigus reaalajas , seejuures arvestatakse lõimede prioriteete . Igal protsessoritaktil on võimalik ümber lülituda ühelt programmilõimelt teisele . Enamik käske täidetakse ühe taktiga , mõnevõrra aeglasemalt toimub nende käskude töötlemine , kus toimuvad mälupöördused . Lõimtöötluse korraldamisel on abiks <arv>-kanaliline tegumitabel . Igal protsessoritaktil täidetakse sellest tabelist üks käsk . Tegumitabel talitleb kui eri liiki vahemälu , kus säilitatakse informatsiooni <arv> täitmisele kuuluva käsu kohta . Erinevalt vahemälust ei teki tegumitabelis möödalaske , sest selles sisalduva informatsiooni töötlus on jäigalt determineeritud ehk teisiti öeldes - kõik selles sisalduvad käsud kuuluvad täitmisele kindlas järjekorras . Samas ei ole siiski kohustuslik , et tabeli kõik read oleksid täidetud käskudega . Töödeldavate tegumite ( lõimede ) vahel rakendatakse prioriteetide süsteemi , prioriteetsematele tegumitele eraldatakse tegumitabelis rohkem ridu . Kui mingil tegumil pole talle eraldatud protsessoritaktil midagi teha , näiteks tema poolt kasutatav andmepuhver ei sisalda uusi andmeid , siis tekivad protsessori käsukonveierisse tühitaktid . Kui puuduvad käsud , mida tegumitabelisse kanda , tekivad mitmes konveiertöötlusega mikroprotsessoris tühitaktid , mille jooksul tegumid järjestatakse ümber , kuid IP <arv> s seda ei toimu . Protsessoris eristatakse kahte liiki tegumeid - reaalajas talitlevaid ja mittereaalajas talitlevaid tegumeid . Tegumitabeli korraldamisel lähtutakse põhimõttest , et tingimuslikele siirdekäskudele järgnevad viitepilud ( tegumitabeli read ) täidetakse mittereaalajas töötavate tegumite käskudega . Kui sobivat mittereaalajas töötava tegumi käsku ei leidu , siis kantakse viitepilusse tühikäsk . Mittereaalajas töötavate tegumite arv pole piiratud , enamasti kujunebki protsessori talitlemisel olukord , kus protsessorile põhilise koormuse loovad käsud , mis kuuluvad mittereaalajas täidetavaisse tegumeisse . Võrguprotsessori IP<arv> käsustik sisaldab <arv> erinevat <arv>-bitist käsku , mida adresseeritakse lineaarses aadressiruumis . Mikroprotsessoril puudub spetsiaalne katkestuste süsteem , kuid see ei välista nende kasutamist . Katkestusnõudlusi edastatakse protsessorisse läbi vastava sisendpordi . Katkestusnõudluste avastamiseks võib kasutada mingit teist tegumit , mis pidevalt monitoorib sisendpordi katkestusnõudluse viiku ( viike ) . Katkestuse reaktsiooniaeg on määratud ajaintervalliga , mille möödudes vastava S/V-pordi katkestussisendi olekut tuvastatakse . IP<arv> kasutab spetsiaalset operatsioonisüsteemi ipOS . Mikrolülitusse sisseehitatud operatsioonisüsteem on orienteeritud eeskätt S/V-tarkvara ohjele . Operatsioonisüsteemi ipOS säilitamiseks protsessori programmimälus ei vajata üle <arv> kilobaidi ( minimaalselt <arv> kilobaiti ) mäluruumi . Rakendustarkvara tarbeks jääb programmimälus veel vähemalt <arv> kilobaiti vaba ruumi . Operatsioonisüsteemi tööd ohjatakse kahe mittereaalajas talitleva programmilõime abil . Juhul kui rakendustarkvara peaks vajama enam mäluruumi , siis võib protsessorkiibiga ühendada väliseid mälusid . Süsteemi alglaadimisel võib programme ja andmeid kopeerida välisest mälust protsessori sisemäludesse . Protsessori jõudlus on aga oluliselt kõrgem siis , kui töötlusel kasutatavad käsud ja andmed paiknevad sise- ja mitte välistes mäludes . Lisaks ipOSle on firmas Ubicom välja töötatud veel mitu draiverit - Etherneti ja standardi <arv>.<arv> meediumikontrollereile , USB , PCI , PCMCIA , IDE , ISA , UTOPIA , SPI , UART ja teiste liideste tarvis . Soovi korral saab mikroprotsessoris IP<arv> talitluse käigus tarkvara operatiivselt ümber programmeerida . Raadiovõrguprotsessoril IP<arv> on arenenud S/V-süsteem , mis arhitektuurselt lahenduselt sarnaneb pigem mikrokontrolleri omaga kui universaalse mikroprotsessoriga . <arv>-megahertsilisel taktsagedusel töötav võrguprotsessor suudab emuleerida enamikku praegu kasutatavaid rööp- ja jadaliideseid , aga samuti kiirusel <arv> Mbit/s töötavat Ethernetti , standardile <arv>.<arv>g vastavat WiFid , UTOPIAt ja Bluetoothi . Olenevalt emuleeritava liidese tüübist muutub protsessori koormus . Kui protsessoris emuleeritakse näiteks PCI-liidest , kasutades selleks <arv> masinakäsust koosnevat programmi , siis sellele tegevusele kulutatakse ligikaudu <arv>% protsessoriajast . Protsessori IP<arv> S/V-süsteemi kasutuses on kaheksa erineva konfiguratsiooniga porti ( joonis <arv> , pordid A kuni H ) . Kokku on portidel üldotstarbeliste S/V-viikude ( GPIO ) arv <arv>. Andmevoogude jadaedastuse korraldamist hõlbustavad kaks dupleksreþiimis töötavat SerDes-kanalit . Mõlemad SerDes-lülitused on varustatud individuaalsete FIFO-puhvritega , kus saab säilitada nelja andmebaiti . Protsessori S/V-süsteemi takteerimine toimub sõltumatult protsessortuumast . Tabelis <arv> on toodud näiteid , kuidas võiks erinevates rakendustes mikroprotsessori porte jaotada . Tabel <arv> Protsessori IP <arv> S/V-portide näidiskonfiguratsioone  Mikroprotsessorkiibi takteerimine toimub kiibiväliste <arv>- kuni <arv>-megahertsiste taktsignaalidega . Väliseid taktsignaale kasutatakse mitme kiibisisese loogikalülituse ohjel , sealhulgas ka reaalajataimeri takteerimisel . Kiibis on kaks täiendavat lülitust , mis formeerivad veel täiendava nn süsteemse taktsignaali ja taktsignaalid S/V-lülituste jaoks . Süsteemse taktsignaali maksimaalne sagedus võib olla kuni <arv> megahertsi . Mikroprotsessorlülitus IP<arv> on valmistatud <arv>,<arv> -mikronilises CMOS-tehnoloogias . Kiibi talitluspinge võib muutuda vahemikus <arv>,<arv> V kuni <arv>,<arv> V. Kuna võrguprotsessorit rakendatakse põhiliselt sardsüsteemides , kus seadmeid varustatakse elektrienergiaga autonoomseist energiaallikaist , siis kiibi väljatöötamisel pöörati erilist tähelepanu selle energiatarbe minimeerimisele . Mikroprotsessoris on ette nähtud erinevaid energiasäästu reþiime , vajaduse korral saab vähendada kiibisisest takteerimissagedust või isegi mõnda ( sisemiselt genereeritavat ) taktsignaali välja lülitada . Viimasel juhul jätkatakse mikrolülituste takteerimist üksnes välisest taktsignaalide allikast . Kui nimireþiimis ( toitepingel <arv>,<arv> V ) tarbib protsessorkiip võimsust ligikaudu <arv> vatt , siis suikereþiimis langeb kiibi energiatarve alla <arv> millivati . LÕPETUSEKS Ubicom Inc. MASI-arhitektuuriga raadiovõrguprotsessorid IP <arv> asendavad firma varasemaid , IP<arv>-sarja protsessoreid . Üleminek uutele võrguprotsessoritele aitab vähendada raadiovõrkudes kasutatavates kontrollerlülitustes kiipide arvu , lihtsustada nende projekteerimist , vähendada selleks kuluvat aega , aga samuti seadmete tootmiskulusid . Uusi võrguprotsessoreid on otstarbekas kasutada eeskätt neis süsteemides , kus seadmetelt nõutakse odavust ja vähest energiatarvet , s.t süsteemidest mille varustamine elektrienergiaga toimub autonoomseist energiaallikaist ( akudelt , patareidelt ) . Võrguprotsessori IP<arv> kõrge arvutuslik jõudlus lubab teda kasutada näiteks audiodekoodreis või muudes signaalitöötlusega seotud seadmeis . Nad tulevad edukalt toime raadiovõrkude sildade , lairibamodemite , lihtsate ruuterite ja paljude teiste raadio- ja tavavõrkudes vajatavate seadmete ülesannetega .  Eesti tarkvaraarendajate kogemused arendusmetoodikate kasutamisel TARKVARA <arv>-<arv> Märtsis <arv> viisin oma magistritöö [ PIHO<arv> ] raames läbi empiirilise uuringu eesti tarkvaraarendajate hulgas . Uuringu eesmärk oli saada ülevaade tarkvara arendamise metoodikate kasutamise olukorrast Eestis ning eesti arendajate ootustest ja hoiakutest tarkvara arendamise metoodikate suhtes . Alljärgnevalt kokkuvõte läbiviidud uurimusest ja selle tulemustest . AJALOOLISED ETAPID TARKVARA ARENDAMISES Ajalooliselt eristatakse tarkvara arendamises kolme etappi [ KARLSTRÖM<arv> ] .  <arv>. periood Kirjuta ja paranda <arv>. periood Struktuur- meetodid <arv>. periood Protsessi küpsus Täisküpsus ? Paindmetoodikad ~ <arv> ~<arv> ~<arv> Esimeses etapis ( kuni möödunud sajandi kuuekümnendate lõpp ) olid domineerivad väikesemahulised ja lihtsad rakendused . Suurem osa tänapäeval tuntud arendusprobleemidest olid tundmata . Kirjutati koodi ja parandati vigu . Teine etapp algas kuuekümnendate lõpul tekkinud kriisiga tarkvaraarenduses . Valdav oli struktuurprogrammeerimine . Tarkvara tootmine muutus tööstusharuks . Tekkisid esimesed tarkvaraarendamise mudelid ning tehnikad ( koskmudel , iteratsioonid ) . Kolmandat etappi ( üheksakümnendate algus ) seostatakse tarkvara arendusprotsesside täiustamisega ( SPI - Software Process Improvement ) . Loodi tarkvara küpsuse ja kvaliteedi tagamisemudeleid ( CMM - Capability Maturity Model ) ning standardeid ( ISO-standardid ) . Neljanda etapi tunnust on veel raske määrata . Ühelt poolt küpsusmudelite areng ( CMMI - Capability Maturity Model of Integration ) ning teiselt poolt paindmetoodikate<arv>teke . Täpsustuseks olgu siinkohal lisatud , et edaspidi mõistetakse antud artiklis CMM all dokumenti “ Capability Maturity Model for Software ” [ CMM ] ja CMMI all dokumenti “ CMMI for Software Engineering ” [ CMMI-SW ] . CMMI väljatöötamise eesmärk oli ühendada omavahel kolm erinevat dokumenti tervikuks [ CMMI-SW ] . Nendeks dokumentideks on Capability Maturity Model for Software ( SW-CMM ) v<arv>.<arv> draft C Electronic Industries Alliance Interim Standard ( EIA/IS ) <arv> Integrated Product Development Capability Maturity Model ( IPD-CMM ) v<arv>.<arv>. Asjaga mitte kokkupuutunud inimestel soovitaks enne dokumendi CMMI lugemist teha tutvust ja uurida dokumenti CMM . Suurepäraselt sobib selleks Kenneth M. Dymondi raamat A Guide to the CMM . Understanding th e Capability Maturity Model for Software . ( <arv>. Process Training International Inc. Annapolis , Maryland <arv> USA ) . CMM eestikeelse ülevaate leiad Paul Leisi artiklist “ Agiilmetoodikad ” ( A &amp; A , <arv>¼ ) . Sama autori artikkel “ CMM on suremas , elagu CMMI ” ( A &amp; A , <arv>/<arv> ) annab ülevaate CMMIst . TARKVARAFIRMA ARENGU ETAPID Tarkvaraarenduse üldisele arengule sarnaselt võib vaadelda ka tarkvarafirma arengut . Alguses kirjutatakse lihtsalt koodi . Arenduskogemuste tekkides ja firma laienedes hakatakse mõtlema arendusmetoodika juurutamise peale . Arendusmetoodika juurutamine firmas ei käi kiiresti . Seda ei saa teha hoogtööna . Ka ei ole mõtet ( ja vist pole ka võimalik ) juurutada arendusmetoodikat lihtsalt arendusmetoodika enese pärast . Kui firmas pole jõutud arusaamisele , et metoodika rakendamine arendustegevuses aitab lõppkokkuvõttes luua kiiremini odavamat ja kvaliteetsemat tarkvara , pole arendusmetoodika juurutamisele ja selle praktilisele kasutamisele tarkvaraarenduses mõtet ei aega ega vaeva kulutada . Hea aeg metoodika juurutamiseks on saabunud siis , kui nii arendajad , juhid kui ka firma omanikud on jõudnud arusaamisele , et ilma metoodikata enam hakkama ei saa . Sellele tõdemusele jõudmiseks ( mitte raamatutest loetu põhjal ) on aga vaja praktilisi ( ka negatiivseid ) arendustegevuse kogemusi . Kui arendusmetoodika vajalikkusest pole aru saanud arendajad ning ei hakka seda praktiliselt kasutama juhid ( omanikud , tegevjuhid ) ning ei varusta arendusprojekte arendusmetoodika korrektseks läbiviimiseks vajalike ressurssidega ( raha , aeg , arendajate koolitus ) , jääb kogu metoodika ainult firma reklaami stiilis “ Meie firma kasutab...arendusmetoodikat ” või “ Meie firma arendusmetoodika vastab...standarditele ” . Kahjuks pole sellistest reklaamlausetest kasu ei arendajatel ega ka tarkvara tellijatel . Arendusmetoodika juurutamisega ei lõpe , vaid alles algab lõputu töö arendustegevuse muutmiseks kvaliteetseks ning tulutoovaks . Pole midagi teha . Entroopia seadused on üldkehtivad ja kehtivad ka tarkvara arendusprotsesside juures : iga asi liigub korrapäratuse poole , kui ei tehta piisavaid jõupingutusi korra säilitamiseks , ehk teisiti - kui ei pingutata tarkvaraprotsessi küpsuse parandamiseks , muutuvad asjad halvemaks . EMPIIRILINE UURING Läbiviidud empiirilise uuringu kaks peamist küsimust . <arv>. Kas eesti tarkvaraarendajad peavad SW-CMM ( Capability Maturity Model for Software ) [ CMM ] teise taseme nõudeid tarkvaraarenduse seisukohalt oluliseks ja mil määral neid arendustegevuses järgitakse ? <arv>. Kas eesti tarkvaraarendajad peavad XP-metoodikas ( Extreme P rogramming ) ( [ BECK<arv> ] , [ XP ] ) kasutatavaid meetodeid tarkvaraarenduse seisukohalt oluliseks ja mil määral neid arendustegevuses järgitakse ? Nendele küsimustele vastuse saamiseks koostasin küsimustiku ( vt [ PIHO<arv> ] ) lähtuvalt SW-CMM teise taseme nõuetest ning XP-metoodikast kasutatavatest meetoditest . Teavet ankeedi olemasolu ja asukoha kohta koos palvega leida aega ning vastata minu küsimustele levitasinn <arv> ) tuttavate arendajate hulgas <arv> ) õpingukaaslaste hulgas <arv> ) uudistegruppides ee.prog ja ee.prog.delphi <arv> ) listis teadus.tcs. <email> <arv> ) listis eits-<email> <arv> ) personaalse e-kirjana aktiivsetele EITSi liikmetele . Kokku vastas minu koostatud küsimustele <arv> inimest . Siinkohal aitäh neile kõikidele . VASTANUTE TAUST Arendajaid ja juhte ( tipp- ning projektijuhte kokku ) oli vastanute hulgas enam-vähem võrdselt . Enamik hindas oma teadmisi metoodikatest kas heaks või keskmiseks .  Ligi kolmveerandil vastanutest oli kõrgharidus ja ligi pooltel IT-haridus ( kas kõrg- või eriharidus ) . Umbes pooltel oli arenduskogemust kuni viis aastat ja pooltel rohkem kui viis aastat . Ligi veerandil oli enam kui kümneaastane kogemus .  Kui võtta väikeste , keskmiste ja suurte firmade piirideks <arv> kuni <arv> arendajat , siis kolmandik vastanutest pärines väikefirmadest , kolmandik keskmise suurusega firmadest ja kolmandik suurfirmadest . ( See jaotus on kasutatav ilmselt ainult Eestis . Maailma mastaabis oleme tõenäoliselt kõik kui mitte väikefirmad , siis suurfirmad eka kindlasti mitte . ) Enamikule arendusprojektidest tundub XP-metoodika arendajate arvu vaadates sobivat . Üle <arv> arendajaga projekte on marginaalne osa ja rohkem kui pooltes arendusprojektides osaleb <arv> ... <arv> arendajat . Kahju , et ankeedi koostamisel ei torganud pähe küsida arendusprojektide keskmist ajalist kestust . Vähemalt üks CMMi korüfeedest Mark C. Paulk peab <arv> ... <arv> arendajaga ja kuni kuus kuud kestvat projekti väikeseks arendusprojektiks [ PAULK<arv> ] .  Kolmandik arendajaid töötab firmades , kus tarkvara arendatakse firmasiseseks kasutamiseks . <arv>/<arv> firmadest toodab tarkvara müügiks .  Kolmveerand vastanuid leidis ( joonisel tähistus “ Muu ” ) , et nende firmas ei kasutata ega kavatseta ka lähiajal juurutada mingit metoodikat . Metoodikatest valitseb RUP . Ka XP-metoodika on nähtaval ( sektordiagrammid on tehtud vastuste põhjal ) .  Mind natuke üllatab selline ühekülgsus ( metoodikate puudumine ) ja RUPi populaarsus . Pean RUPi liiga kalliks arendusmetoodikaks , aga jäägu see minu eriarvamuseks . KES KÜSIMUSTELE VASTASID ? Vastanute rühmitamine taustatunnuste järgi ( hierarhiline klasteranalüüs ) andis kaks suurt ja kaheksa marginaalset rühma . Esimeses ( tabel <arv> ) rühmas ( Juhid , <arv> vastanut ) on valdavalt IT-kõrgharidusega , suurte ( vähemalt <arv> aastat ) kogemustega , metoodikate tundmises kõrge enesehinnanguga ( teadmisi hinnatud kas “ heaks ” või “ suurepäraseks ” ) põhiliselt tipp- või projektijuhid . Teises ( Arendajad , kokku <arv> vastanut ) on valdavalt IT-kõrghariduseta , väiksemate ( kuni <arv> aastat ) kogemustega , metoodikate tundmises tagasihoidliku enesehinnanguga , põhiliselt arendajad . Kolmandasse rühma ( Teised ) panin kõik vastanud , kes esimesse kahte rühma ei sobinud . Tabel <arv> Rühmade iseloomustus  JUHID ARENDAJAD Amet <arv>% kõikidest vastanud juhtidest kuulub antud rühma ; juhtide osakaal rühmas on <arv>% <arv>% kõikidest vastanud arendajatest kuulub antud rühma ; arendajate osakaal <arv>% Teadmised metoodikast <arv>% kõikidest headest ja suurepärastest hinnangutest kuulub siia ; nende osakaal <arv>% <arv>% kõikidest vähestest ja keskmistest hinnangutest sattus siia ; nende osakaal rühmas on <arv>% Haridus <arv>% kõikidest IT kõrgharidust omavatest kuulub antud rühma ; IT ja kõrgema hariduse osakaal <arv>% <arv>% kõikidest IT-kõrgharidust omavatest kuulub siia rühma ; <arv>% kõikidest IT-eriharidust omavatest kuulub samuti siia rühma ; IT ja kõrgema hariduse osakaal <arv>% Kogemus <arv>% kõikidest kuus ja enam aastat arendusalast kogemust omavatest kuulub antud rühma ; nende osakaal rühmas <arv>% <arv>% kõikidest kuni viis aastat arendusalast kogemust omavatest kuulub antud rühma ; nende osakaal <arv>% See , et Juhid on valdavalt suuremate kogemustega kui Arendajad , tundub igati loogiline . Ka Juhtide valdavalt IT-kõrgharidus võrreldes Arendajatega on igati ootuspärane . Mis puutub metoodikate tundmisse ( enesehinnang ) , siis siin ei pruugi tegemist olla mitte niivõrd erinevustega arendusmetoodikaalastes teadmistes kui ehk erinevustega üldises enesehinnangus . Seega võib vastus tähendada ka seda , et Juhtide enesehinnang on võrreldes Arendajate enesehinnanguga kõrgem . ARENDUSPROTSESSIGA SEOTUD KÜSIMUSED Arendusprotsessiga seotud küsimuste koostamise aluseks oli CMM-SW teine tase . CMM teisel tasemel ( Repeatable- korratav ) töötavaid firmasid iseloomustab eelnevate kogemuste rakendamise oskus uutes tarkvaraprojektides . Sellel tasemel töötavad firmad suudavad juhtida ( kavandada , korraldada ja kontrollida ) järgmisi tarkvara arendustegevuse alamprotsesse [ CMM ] : Nõuete haldamine - suudetakse juhtida tarkvara lähteülesandest tulenevaid nõudmisi ja nõudmiste muudatusi Tarkvaraprojekti planeerimine - vastavalt lähteülesannetele suudetakse juhtida arendustegevuse planeerimist ning sellega kaasnevat Arendusprotsessi monitooring - suudetakse juhtida tehtud plaanide igapäevast täitmist Kvaliteedi tagamine - suudetakse juhtida loodava tarkvara kvaliteeti Versioonide haldamine - suudetakse juhtida tarkvara versioone Allhangete juhtimine - suudetakse juhtida teiste firmade poolt teostatavaid allhankeid . Seega iseloomustab SW-CMM teisel tasemel töötavaid firmasid juhtimise ja distsipliini sisseviimine arendusprotsessi . Selle tulemusena on edukad tarkvaraprojektid ( maksumuse , tähtaegade ja kliendi nõuete rahuldamise mõistes ) sellel tasemel töötavate firmade jaoks tavalised . Sellel tasemel saab töötada tarkvarafirma , kellel on piisavalt teadmisi tarkvaraprotsessi juhtimisest , piisavalt kogemusi projektide läbiviimisel ja ka piisavalt negatiivseid kogemusi selleks , et mitte laskuda tagasi esimesele tasemele . Kokku oli minu küsimustikus <arv> arendusprotsessi puudutavat seotud küsimust ( vt tabeli <arv> veergu Osatunnus ) . Nende küsimuste koostamise aluseks olid CMM teise taseme viie kohustusliku alamprotsessi ( nõuete haldamine , projekti planeerimine , projekti monitooring , kvaliteedi tagamine ja versioonide haldamine ) nõuded ( kokku <arv> ) . Kuuenda ( allhangete juhtimine ) jätsin teadlikult vaatluse alt välja kui mittekohustusliku firmadele , kes allhankeid ei kasuta . Arendusprotsessiga seotud küsimuste vastuste rühmitamisel ( hierarhiline klasteranalüüs ) rühmitasin omavahel tunnused , mida kohtab reaalsetes arendusprotsessides ühesuguse sagedusega . Uute tunnuste ( tabeli <arv> veerg Tunnuste grupp ) väärtuseks võtsin osatunnuste ( esitatud küsimused ) väärtuste keskmise . Tekkinud uued rühmad on ligilähedased küsimuste koostamisel aluseks olnud CMM-SW teise taseme alamprotsessidele . Tunnuse Nõuete haldamine ( tabel <arv> ) moodustasid küsimused , mis olid koostatud , lähtudes CMM teise taseme nõuete haldamise nõuetest . Erandiks oli nõuete juhi olemasolu ( kõikide SW-CMM osaprotsesside nõue ) ja arendajate osalemine aruteludes ( SW-CMM planeerimise osaprotsessi nõue ) sattumine sellesse rühma . Tunnus Projekti planeerimine ( tabel <arv> ) sisaldab SW-CMM projekti planeerimise osaprotsessiga seotud küsimusi . Lisaks veel protseduurireeglite ja ressursside olemasolu nõuded ning inimeste koolitamise nõue ( kuuluvad sisuliselt kõikide SW-CMM osaprotsesside koosseisu ) . Rühma Tulemuste jälgimine ( tabel <arv> ) paigutunud küsimused on seotud arendusprotsessi lõpptulemustega . Tuntakse huvi toodangu kvaliteedi , selle püstitatud nõuetele vastavuse ning rakenduse versioonide ja konfiguratsioonide vastu . SW-CMM järgi kuuluvad antud nõuded kvaliteedi tagamise ning versioonide haldamise osaprotsesside koosseisu . Tunnusterühma Projekti monitooring ( tabel <arv> ) paigutunud küsimused puudutavad arendusprojekti järgimist . Kas plaanidest peetakse kinni , kuhu on jõutud ? Sellesse tunnusterühma paigutunud küsimused olid koostatud vastavalt CMM projekti monitooringu osaprotsessi nõuetele . Rühma Tulemuste audit tunnuseks on sõna “ audit ” . CMMis kuuluvad antud küsimuste aluseks olnud nõuded kvaliteedi tagamise ja versioonide haldamise osaprotsesside koosseisu . Projektis kasutatava metoodika läbivaatamine ja selle muutmine vastavalt vajadustele ühegi teise tunnusega kokku ei sobinud . CMM teise taseme järgi kuulub see kvaliteedi tagamise osaprotsessi koosseisu . Tabel <arv> Uued tunnused üle arendusprotsessi puudutavate küsimuste  Tunnuste grupp Osatunnus Nõuete haldamine Projektil on juht Nõudeid hallatakse Nõudeid analüüsitakse Nõuete muudatusi arvestatakse Arendajad osalevad aruteludes Projekti planeerimine Protseduurireeglid ja ressursid on olemas Inimesed on koolitatud Hallatavad elutsüklid Plaan on dokument Plaanis kajastuvad vajadused Kõik on plaanidega nõus Tulemuste jälgimine Kvaliteedinõuded on olemas Kvaliteedi eest vastutajad on olemas Kvaliteedi eest vastutajad teevad tööd Versioonide plaanid on olemas Versioone ja konfiguratsioone hallatakse Projekti monitooring Mõõtmisi sooritatakse Reeglid plaanide täitmise hindamiseks on olemas Riske hallatakse Reeglid plaanide muutmiseks on olemas Korrigeerimisreeglid on olemas Tulemuste audit Kvaliteediaudit Versioonide ja konfiguratsioonide audit Metoodika läbivaatamine Metoodika läbivaatamine ARENDUSMETOODIKA KÜSIMUSTE RÜHMITAMINE Arendusmetoodikat puudutavate küsimuste koostamise aluseks olid XP-metoodikas ( Extreme programming ) ( [ BECK<arv> ] , [ XP ] ) kasutatavad meetodid . Kuigi suurem osa XP-meetoditest nagu minimaalsus , lihtsus , lühikesed tsüklid , kasutaja osalemine , kodeerimise standardid ning testimine on praktilised ja kasutusel ka teistes metoodikates [ PAULK<arv> ] , on XP-metoodika üks loojatest , Kent Beck , andnud nendele meetoditele teatud ekstremaalse tähenduse ja teinud sellega XPst ühe enam kõmu tekitanud ja tähelepanu köitnud paindmetoodika maailmas . XP-metoodikale omistatakse järgmisi põhilisi meetodeid [ PAULK<arv> ] : Planeerimise mäng - kombineerides äripoole vajadusi ( prioriteedid ja funktsionaalsed vajadused ) ja tehnilise poole võimalusi ( teostamisele kuluv aeg ) , lepitakse kokku järgmise rakenduse versiooni ( release ) piirides . Lühikesed arendusperioodid - lihtne ja kliendile esmavajalike võimalustega süsteem tehakse kiiresti valmis ( umbes <arv> kuud ) ning juurutatakse . Järgmised versioonid ( lühikesed ) laiendavad süsteemi kasutusvõimalusi . Metafoor - lühike ja kõikidele arusaadav lugu süsteemist ning selle tööst on süsteemi arendustegevust koos hoidvaks võtmeks . Lihtne disain - süsteemi disain hoitakse pidevalt nii lihtne kui võimalik . Testimine - XP-metoodikas on kasutusel testimisel tuginev arendustehnika [ BECK<arv> ] : testi kõike , testi alati , testi automaatselt ja alusta testidest . Ümberkirjutamine ( refactoring ) - süsteemi pidev restruktureerimine muutmaks kood lihtsamaks ja universaalsemaks . Paarisprogrammeerimine - koodi kirjutavad programmeerijate paarid , kes istuvad ühe ja sama arvuti taga ning kirjutavad ühel ja samal ajal ühte ja sama koodi . Koodi ühisomand - igal arendajal on õigus luba küsimata ja igal ajal muuta ükskõik millist osa koodist . Pidev integratsioon - niipea ( kas või mitu korda päevas ) kui mingi uus funktsioon on realiseeritud , integreeritakse see süsteemi . Testimisel tugineva arendustehnika kasutamine võimaldab sellist pidevat integratsiooni ning välistab võimalikud ebameeldivused . <arv>-tunnine töönädal - nädalas töötatakse mitte enam kui <arv> tundi . Kunagi ei tehta ületunde kaks nädalat järjest . Kasutaja osalemine - reaalne ja tegelik kasutaja on meeskonna liige . On pidevalt kohal , kirjutab kasutajalugusid ja testide stsenaariume , testib rakendust ja vastab arendajate küsimustele . Koodi standardid - kõik kasutajad järgivad koodi kirjutamisel ühtseid standardeid . Koodi lugedes ei ole võimalik arendajat identifitseerida . Kokku oli arendusmetoodika küsimusi <arv> ( vt tabeil <arv> veergu Osatunnus ) . XP-metoodika meetodeid kopeerivatele küsimustele oli lisatud küsimus pidevate kangelastegude sooritamise kohta ning pühendunud inimeste kohta . Ka arendusmetoodika küsimused rühmitusid kenasti ( hierarhiline klasteranalüüs ) . Püüdsin rühmitada omavahel neid tunnuseid , mida vastajate hinnangul kohtab reaalsetes arendusprotsessides ühesuguse sagedusega . Uute tunnuste ( tabel <arv> veerg Tunnuste grupp ) väärtuseks sai osatunnuste ( esitatud küsimused ) väärtuste keskmise . Rühma XP- meetodid ( tabel <arv> ) paigutusid küsimused meetodite kohta , mida võiks nimetada XP-metoodika tuumikmeetoditeks . Siia rühma sattusid soovilugudega , testimisega , pideva tervikuks integreerumisega , koodi ühisomandusega ja refaktoorimisega seotud küsimused . Rühma Tavalised meetodid ( tabel <arv> ) paigutusid sellised , mis on igas vähegi arvestatavas ja kogemustega tarkvara arendusfirmas ( kogemustega tarkvaraarendaja poolt ) kasutusel . Nendeks on lihtsus , lõpus optimeerimine , kliendi osavõtt , pühendunud inimesed ja lühikesed arendusperioodid . Tabel <arv> Uued tunnused üle arendusmeetoditega seotud küsimuste  Tunnuste grupp Osatunnus XP-meetodid Soovilugude kasutamine Ühiktestide kirjutamine Pidev tervikuks integreerimine Koodi ühisomand Pidev ümberkirjutamine ( refactoring ) Tavalised meetodid Lihtne disain Optimeerimine lõpus Kliendi osavõtt arendusest Pühendunud inimesed Lühikesed väljalasked ( release ) Häkkeri meetodid Pidevad kangelasteod Lihtsad arendusvahendid Arukad meetodid Ületundide vältimine Süsteemi metafoor Koodi standard Koodi standardi olemasolu Paarisprogrammeerimine Paarisprogrammeerimine Rühma Häkkeri meetodid nimetust ei tule võtta mingil juhul halvustavalt . Teatud perioodidel on kõik arendajad neid kasutanud . Siia kuuluvad lihtsate arendusvahendite kasutamine ja pidevate kangelastegude sooritamine . Arukaks nimetasin ületundide vältimise ja süsteemi metafooriga seotud meetodeid . Koodi standardite olemasolu ja paarisprogrammeerimine ühegi teise tunnusega kokku ei sobinud . SW-CMM NÕUDEID PEETAKSE EDU TAGAVATEKS Tabelis <arv> ( skaala : <arv> = oluline , <arv> = mitteoluline , -<arv> = pidurdav ) on kokkuvõte vastajate hinnangutest rühmade lõikes , lähtuvalt nõude olulisusest tarkvaraprojekti edu tagamisel . Tabel <arv> Hinnangud arendusprojekti edu tagavatele tegevustele  Kõik Juhid Arendajad Teised Nõuete haldamine <arv>,<arv> <arv>,<arv> <arv>,<arv> <arv>,<arv> Projekti planeerimine <arv>,<arv> <arv>,<arv> <arv>,<arv> <arv>,<arv> Tulemuste jälgimine <arv>,<arv> <arv>,<arv> <arv>,<arv> <arv>,<arv> Projekti monitooring <arv>,<arv> <arv>,<arv> <arv>,<arv> <arv>,<arv> Metoodika läbivaatamine <arv>.<arv> <arv>,<arv> <arv>,<arv> <arv> Tulemuste audit <arv>,<arv> <arv>,<arv> <arv>,<arv> <arv>,<arv> Võib järeldada , et eesti tarkvaraarendajad peavad SW-CMM teise taseme nõudeid arendusprojekti edu tagamiseks olulisteks . Selline arendajate hoiak annab minu arust hea aluse metoodikate juurutamise abil tarkvaraprojektide edukuse suurendamiseks ja arendusprojektide küpsusastme tõstmiseks vähemalt SW-CMM teise taseme nõuetele vastavaks . Natuke vähem peetakse lugu auditeerimise nõuetest . Tundub , et arendajad hindavad SW-CMM teise taseme nõudeid natuke kõrgemalt kui juhid . Eriti paistab see silma metoodika läbivaatamise ja tulemuste auditi juures . Kas selle taga on arendajate praktiline kogemus , et “ lihtsalt pingutamine ” ei aita , juhtide arendustegevusega seotud “ praktiliste küsimuste unustamine ” , arendajate madalamast enesehinnangust ja ebakindlusest tulenev soov “ millelegi toetuda ja ennast kaitsta ” või midagi muud , ei oska öelda . CMM TEINE TASE ON EESTI ARENDUSFIRMADELE PIISAVALT SUUR VÄLJAKUTSE Tabelis <arv> ( skaala : <arv> = tavaline , <arv> = harvaesinev , -<arv> = mittekasutatav ) on kokkuvõte tarkvaraprojektide reaalse olukorra kohta antud hinnangutest . Vastajate hinnangutele tuginedes on nõuete haldamise tegevused eesti tarkvarafirmades läbiviidavates tarkvaraprojektides pigem tavalised kui harvaesinevad . Ka projekti planeerimise tegevusi nähakse arendusprojektides suhteliselt tihti . Tabel <arv> Hinnangud arendusprojekti tegevustele  Kõik Juhid Arendajad Teised Nõuete haldamine <arv>,<arv> <arv>,<arv> <arv>,<arv> <arv>,<arv> Projekti planeerimine <arv>,<arv> <arv>,<arv> <arv>,<arv> <arv>,<arv> Metoodika läbivaatamine <arv>.<arv> <arv>,<arv> - <arv>,<arv> - <arv>,<arv> Tulemuste jälgimine <arv>,<arv> <arv>,<arv> - <arv>,<arv> <arv>,<arv> Projekti monitooring - <arv>,<arv> <arv>,<arv> - <arv>,<arv> - <arv>,<arv> Tulemuste audit - <arv>,<arv> - <arv>,<arv> - <arv>,<arv> - <arv>,<arv> Harva esineb projektides metoodika läbivaatamist ja kohandamist , tulemuste läbivaatamist ( kvaliteedialast tegevust ja konfiguratsioonide haldamist ) ning projekti monitooringut . Auditeerimine on aga tarkvaraprojektides vastajate hinnangutele tuginedes praktiliselt tundmatu . Arendajate rühm on andnud keskmiselt madalamaid hinnanguid , võrreldes Juhtide rühmaga . Kas selle taga on Juhtide soov näha tegelikkust paremas valguses või midagi muud , on antud uuringu põhjal võimatu ütelda . Kokkuvõtteks võib öelda , et SW-CMM teise taseme nõuete rahuldamine on enamikule eesti arendusfirmadele piisavalt suur väljakutse . PÕHIKÜSIMUS ON PLANEERIMINE Kuna selgus , et enamik Eestis läbiviidavatest arendusprojektidest SW-CMM teise taseme nõudeid ei rahulda , tuleks eesti arendusfirmade reaalseks klassifitseerimiseks vaadelda nõrgemaid nõudeid . Võrreldes moodustatud tunnuste omavahelist korreleerumist , selgus , et suhteliselt tugevalt ( Pearsoni korrelatsioonikordaja <arv>,<arv> ) korreleerusid omavahel projekti planeerimine ja tulemuste jälgimine . Nende mõlemaga korreleerub hästi ka projekti monitooring : Pearsoni korrelatsioonikordajad on <arv>,<arv> ( tulemuste jälgimine ) ning <arv>,<arv> ( projekti planeerimine ) . Omakorda lisanduvad nendele tulemuste audit : <arv>,<arv> ( tulemuste jälgimine ) , <arv>,<arv> ( projekti planeerimine ) ning <arv>,<arv> ( projekti monitooring ) . Nõuete haldamine korreleerub teistega kõige halvemini ( maksimaalne <arv>,<arv> ) . Siit võiks ehk järeldada , et kui peale nõuete haldamise tegeldakse projektis ka veel projekti planeerimisega , siis tõenäoliselt on selles projektis vähemalt osaliseltki kaetud ka projekti monitooringu ning tulemuste jälgimise ( kvaliteedi tagamise ja konfiguratsioonide haldamise ) tegevused . Julgen siinjuures antud empiirilisele uuringule tuginedes välja pakkuda järgmised hüpoteetilised eesti arendusprojektide küpsustasemed : SW-CMM-<arv>-nõuded - sellel tasemel töötavates projektides on olemas personaalse vastutusega isik , arendajad osalevad projekti aruteludes ning toimub tarkvarale esitatavate nõuete haldamine . Suurem osa eesti tarkvarafirmadest töötab antud uuringu tulemustele tuginedes sellel tasemel . SW-CMM-<arv>-plaanid - sellel tasemel töötavates projektides on ( lisaks küpsustaseme SW-CMM-<arv>-nõuded omadustele ) eraldatud projekti läbiviimiseks adekvaatsed ressursid , inimesed on koolitatud ning tegeletakse projekti planeerimisega . Ka sellel tasemel peaks töötama piisav hulk Eesti tarkvarafirmasid . SW-CMM-<arv>-tulemused - sellel tasemel töötavates projektides on lisaks nõuete haldamisele ja projekti planeerimisele kaetud ka projekti monitooringu ja mõningad kvaliteedi tagamise ning konfiguratsioonide haldamise tegevused . Sellel tasemel töötavaid firmasid on Eestis vähe , kui neid üldse on . SW-CMM-<arv> - sellel tasemel töötavates projektides on rahuldatud kõik SW-CMM teise taseme nõuded . Sellel tasemel töötavaid firmasid läbiviidud empiirilise uuringuga hõlmatud firmade hulgas ei olnud . XP-METOODIKA VÕIKS SOBIDA ENAMIKULE EESTI ARENDUSFIRMADELE Peale paarisprogrammeerimise ( tabel <arv> ) peetakse teisi XP-metoodika meetodeid tarkvaraprojektile edu tagamisel olulisteks ( skaala : <arv> = oluline ; <arv> = mitteoluline , -<arv> = pidurdav ) . Ka siin tunduvad arendajate hinnangud olema kraad kõrgemad kui juhtidel . Ehk on korrektne väita , et XP-metoodika range juurutamine eesti tarkvarafirmade arendusprojektides võib olla edukas ja mõttekas . Mõttekas sellepärast , et suurem osa projekte viiakse läbi kuni <arv>liikmeliste meeskondadega ( täiesti aktsepteeritav XP-meeskonna suurus ) ja XP-metoodika juurutamine nõuab suhteliselt vähe ressursse . Tabel <arv> Hinnangud XP-meetoditele projektile edu tagamise seisukohalt  Kokku Juhid Arendajad Teised XP-meetodid <arv>,<arv> <arv>,<arv> <arv>,<arv> <arv>,<arv> Tavalised meetodid <arv>,<arv> <arv>,<arv> <arv>,<arv> <arv>,<arv> Arukad meetodid <arv>,<arv> <arv>,<arv> <arv>,<arv> <arv>,<arv> Koodi standard <arv>,<arv> <arv>,<arv> <arv>,<arv> <arv>,<arv> Häkkeri meetodid <arv>,<arv> <arv>,<arv> <arv>,<arv> <arv>,<arv> Paarisprogrammeerimine <arv>,<arv> <arv>,<arv> - <arv>,<arv> <arv>,<arv> Tabel <arv> Hinnangud XP-meetodite sageduste kohta projektides  Kokku Juhid Arendajad Teised Tavalised meetodid <arv>,<arv> <arv>,<arv> <arv>,<arv> <arv>,<arv> Arukad meetodid <arv>,<arv> <arv>,<arv> <arv>,<arv> <arv>,<arv> Häkkeri meetodid <arv>,<arv> <arv>,<arv> <arv>,<arv> <arv>,<arv> Koodi standard <arv>,<arv> <arv>,<arv> - <arv>,<arv> <arv>,<arv> XP-meetodid - <arv>,<arv> <arv>,<arv> - <arv>,<arv> <arv>,<arv> Paarisprogrammeerimine - <arv>,<arv> -<arv>,<arv> -<arv>,<arv> -<arv>,<arv> XP-metoodika juurutamine võib olla edukas sellepärast , et suur osa tema meetodeid ( paarisprogrammeerimine välja arvatud ) pole vastanute hinnangul arendusprojektides mitte täiesti tundmatud ( tabel <arv> ; skaala : <arv> = tavaline ; <arv> = harva esinev , -<arv> = mittekasutatav ) . Kuigi jah , siin on arendajate ja juhtide hinnangud suhteliselt erinevad . Samas on XP-metoodikaga võimalik hästi täita SW-CMM teise taseme nõudeid ( [ PAULK<arv> ] , [ PIHO<arv> ] ) ja luua hea alus SW-CMM kolmanda taseme nõuete rahuldamiseks [ PAULK<arv> ] . KOKKUVÕTTEKS Antud empiirilisele uuringule tuginedes võib väita , et tarkvara arendamisega tegelevad juhid on valdavalt IT-kõrgharidusega ja enam kui viieaastase arendustegevuse kogemusega . Tarkvara arendajatel seevastu on kuni viieaastane arendustegevuse kogemust . Suur osa arendajatest omab IT-eriharidust . Huvitav küsimus on tarkvara arendusega tegelevate juhtide kõrgem enesehinnang arendusmetoodikate küsimuses , võrreldes tarkvara arendajatega . Uuringu järgi töötab kolmandik arendajatest kuni viie arendajaga väikefirmades . Kolmandik töötab keskmise suurusega firmades ( <arv> ... <arv> arendajat ) ja kolmandik üle <arv> arendajaga suurfirmades . Valdav osa arendusmeeskondadest on uuringu järgi kuni viieliikmelised . Enam kui <arv>liikmelistes arendusmeeskondades töötab marginaalne osa arendajatest . Kolmveerand arendajatest töötab firmades , kus toodetakse müügi tarkvara . Veerand töötab firmades , kus toodetakse tarkvara valdavalt firmasiseseks kasutamiseks . Kolmveerand arendajatest töötab firmades , kus ei kasutata mingit arendusmetoodikat . Vähemalt pooled arendajad töötavad firmades , kus lähiajal ei kavatseta mingit metoodikat kasutusele võtta . CMM-SW teise taseme nõudeid peetakse tarkvara arendustegevuses edu tagavateks . Arendajad hindavad neid nõudeid kõrgemalt kui juhid . Samas on CMM-SW teine tase enamikule Eesti arendusfirmadele piisavalt suur väljakutse . Kui üldse , siis on CMM-SW teisel tasemel töötavaid firmasid Eestis marginaalselt ( ka maailmas ei suuda <arv>% firmadest CMM-SW teise taseme nõudeid täita ) . Kõige tugevamalt on arendusprojektides kaetud nõuete haldamise tegevused . Ka projekti planeerimine on suhteliselt levinud . Kvaliteedi tagamine , projekti monitooring ja versioonide haldamine kuuluvad aga pigem harva esinevate tegevuste hulka . Juhid näevad arendusprojektide tegelikku olukorda tunduvalt paremas valguses kui arendajad . XP-metoodika meetodeid peetakse tarkvara arendustegevuses üldiselt edu tagavateks . See on hea eeldus XP-metoodika juurutamiseks . Ka on XP-metoodika suurele osale eesti arendusfirmadele sobiv . Seda väidet toetab arendajate hoiak , arendajate arv arendusprojektides ja XP-metoodika meetodite praktilise kasutamise kogemus arendusprojektides . Kokkuvõtteks võiks XP-metoodika ( odav , paindlik , mugandatav , ei nõua erilisi vahendeid ) olla paljudele eesti firmadele sobiv tee SW-CMM teise taseme nõuete ( ja sealt edasi juba vastava CMMI taseme ) täitmiseks . Ehk sobib siinkohal mainida CMM ja ISO suhteliselt head kattuvust . Töödest , kus on analüüsitud omavahel ISO <arv> ja SW-CMM nõudeid [ PAULK<arv> ] või ka kõiki ( ISO <arv> , <arv> ja SW-CMM ) omavahel [ TLSM<arv> ] , selgub , et sisuliselt pole suurt vahet , millist nendest tarkvara arendusprotsessi täiustamisel aluseks võtta . Nende kõigi ühisosa on väga suur ja erinevused marginaalsed [ TLSM<arv> ] . USA ja India lähtuvad rohkem CMMst , Euroopa aga rohkem ISOst . Ka üritatakse küpsusmudelit ning ISO-standardeid omavahel paremini ühildada . CMMI lubab oma koduleheküljel [ CMMI ] suuremat kooskõla ISO-standarditega ; SPICE ( ISO <arv> ) oma koduleheküljel [ SPICE ] aga suuremat kooskõla küpsusmudelitega . Kõik teed pidid viima Rooma . Kõige tähtsam on asuda teele . Ju kehtib see ka arendusmetoodika juurutamisel .  Toomas Ruuben , TTÜ raadio- ja sidetehnika instituudi doktorant <arv>. SISSEJUHATUS Käesolev artikkel , kus käsitleme põhjalikumalt just USSDga ( Unstructured Supplementary Service Data ) seotud temaatikat , on jätkuks artiklile “ Mobiilsed sisuteenused ja GSM-tehnoloogiad ” . Nagu juba mainitud , võiks USSD eestikeelne vaste kõlada “ mittestruktureeritud andmetega lisateenused ” ning olla kasutusel nii infoteenuste pakkumisel kui ka telemaatikaseadmete juhtimisel . Võimalikeks kasutusvaldkondadeks on infomenüüd , koduvalvesüsteemid , tõkkepuude ja kõikvõimalike muude seadmete distantsjuhtimine jne. USSD tehnoloogia abil on võimalik koostada menüüpõhiseid teenuseid , kuid samas ei pea kasutatav telefon sisaldama lehitsejat ( WAP , STK ) , mis tähendab , et võime menüüpõhised teenused tuua ka kõige lihtsamatesse telefonidesse . <arv>. ÜLEVAADE USSD-TEHNOLOOGIAST <arv>.<arv>. PÕHILISED OMADUSED USSD-tehnoloogiat on kirjeldatud GSM-standardi dokumentides GSM <arv>.<arv> ja GSM <arv>.<arv>. See on GSM infrastruktuuri osa ja oli esmaselt mõeldud GSM lisateenuste juhtimiseks ( kõnede suunamised jne ) . Alles tänapäeval on seda hakatud kasutama erinevate lisateenuste pakkumiseks ( info , telemaatika jne ) . Küllap on lugeja juba märganud operaatorite infovoldikutes kombinatsiooni *<arv># või midagi analoogilist . Suureks eeliseks on asjaolu , et puudub igasugune vajadus telefoni spetsiaalseks seadistamiseks ning teenused on kohe kasutatavad . Muidugi ei kehti see täiturmehhanisme juhtivate kontrollerite kohta . USSD töötab praktiliselt kõikides olemasolevates GSM-telefonides . USSD on loomult sessioonipõhine ja võimaldab kiiret andmevahetust terminali ( mobiiltelefon ) ja rakenduse vahel . See annab hea võimaluse interaktiivsete teenuste loomiseks . Raadioühendus hoitakse avatud , kuni selle vabastab rakendus , klient või ületatakse etteantud ajalised piirid ( timeout ) . Informatsiooni edastamiseks ( nimetatakse ka USSD stringideks ) kasutatakse signaliseerimiskanalit ( SS<arv> ) ja seega ei koorma see kõnekanaleid . USSD sessiooni võib algatada võrk või abonent . Kui infoteenuste korral algatab USSD sessiooni harilikult abonent , siis telemaatikateenuste korral nimelt rakendus ( antakse näiteks käsk täiturmehhanismile ) . Muidugi on kasutusel ka vastupidised juhud . USSD-l ülesehitatud sisuteenused võivad olla ( ja tavaliselt ongi ) menüüpõhised , kuid samas on võimalus siseneda soovitud menüüvalikusse ka otse , sisestades etteantud USSD stringi . Kuna USSD-põhistes menüüdes jääb navigeerimine mugavuselt alla WAPile ja STK-le , on eelmainitu hea omadus . USSD-põhiste päringute vastussõnumid ( ka menüüd ) tulevad otse telefoni ekraanile . Neid ei salvestata telefoni ega SIM-kaardi mällu , kuigi on olemas ka erandeid . Kuna USSD päringud suunatakse alati telefoni kasutaja koduregistrisse ( HLR ) , siis on USSD-l baseeruvaid teenuseid võimalik kasutada nn roaming-võrgus . <arv>.<arv>. PUUDUSED Muidugi on USSD-l ka puudusi . Üheks on navigeerimise kohmakus . USSD-l ei ole lehitsejat ( browser ) . Menüü valikuks ei liiguta mitte kursoriga linkidel ( nagu WAPis ) , vaid klaviatuurilt tuleb sisestada menüüvaliku järjekorranumber ning siis see ära saata . Teiseks oluliseks puuduseks on krüptimisvõimaluse puudumine . Seega pole võimalik luua kõrget turvalisust nõudvaid sisuteenuseid . Samuti pole USSD-d võimalik kasutada kõne algatamiseks kliendi telefonilt ning ka vastuste või menüüde maht on piiratud ( <arv>/<arv> märki ) . <arv>.<arv>. TÖÖPÕHIMÕTE USSD-l baseeruvate teenuste loomisel on keskseks üksuseks USSD-lüüs ( USSD Gateway ) , mis suunab läbi GSM-võrgu saabunud USSD päringud teenusepakkuja serverisse . Vastused USSD päringutele võivad olla edastatud läbi sama USSD-lüüsi või ka muul moel ( MMS , SMS ) . USSD-lüüsi ja teenusepakkuja serveri vaheliseks infovahetuseks on paljudel juhtudel kasutusel protokollid CIMD<arv> ja SMPP . On olemas ka süsteeme , kus lihtsuse mõttes kasutatakse XML-vormingut . Arhitektuur oleks järgmine :  Joonis <arv>. USSD-l baseeruvate teenuste lihtsustatud tehniline arhitektuur Vaatleme , kuidas näevad välja mobiiltelefoni ja võrgu ( rakenduse ) algatatud USSD sessioonid . Mobiiltelefoni algatatud USSD sessioon <arv>. Klient sisestab oma mobiiltelefoni klaviatuurilt USSD stringi ( käsu ) stiilis *XXX# , kusjuures XXX on teenuse number . Teenuste numbrite vahemik on üldiselt kindlaks määratud ( <arv>- <arv> ) . <arv>. Olles pakutava teenusega tuttav , võib klient sisestada ka *XXX*Y*Z# , kusjuures Y ja Z määravad teenuse alammenüüd või mingid muud parameetrid . <arv>. USSD päringuga saadetakse kaasa telefonis kasutatava tähestiku ja keele tunnused , mida HLR kontrollib . Kui HLR ei tunnista vastavat tähestikku , saadetakse tagasi veateade . <arv>. Kui mobiiltelefon tuvastab , et kasutaja sooritatud toiming on USSD päring , võtab telefon ühenduse keskjaamaga , edastab USSD stringi ja jääb ootama vastust . <arv>. Vastuse ootamise ajal võib toimuda ka võrgu poolt saadetud USSD päringu või kinnitusteate töötlemine . Pärast vahepäringu töötluse lõppu võib telefon ootamist jätkata . <arv>. Mobiiltelefon ei saa algatada kahte paralleelset USSD sessiooni . <arv>. USSD päringu töötlemine võib toimuda järgmistes võrgu komponentides : MSC ( mobiilkeskjaam ) , VLR ( külaliste register ) ja HLR ( koduregister ) . MSC . Kui HPLMN teenuskood eksisteerib , saadab MSC päringu muutmatul kujul edasi külaliste registrile . Vastasel korral töötleb MSC päringut ise . Edastamine VLRile toimub ka siis , kui MSC ei suuda tuvastada tähestikku . Kui üks osapooltest ( MS või VLR ) katkestab ühenduse , katkestab MSC automaatselt teise poole . Kui edastus külaliste registrile ebaõnnestub , saadetakse mobiiltelefonile veateade . VLR . Kui HPLMN teenuskood eksisteerib ja kasutaja ei viibi koduvõrgus , saadab VLR päringu muutmatul kujul edasi koduregistrile ( HLR ) . Kui HPLMN teenuskood puudub või kasutaja on oma koduvõrgus , töötleb VLR päringut ise . Edastamine HLRile toimub ka siis , kui VLR ei suuda tuvastada kasutatavat tähestikku . Kui üks osapooltest ( MSC või HLR ) katkestab ühenduse , katkestab VLR automaatselt teise poole . Kui edastus koduregistrile ebaõnnestub , saadetakse mobiiltelefonile veateade . HLR töötleb päringut alati ( edasisuunamist ei toimu ) . Kui HLR ei suuda tuvastada tähestikku , saadetakse kliendi telefonile veateade . <arv>. USSD päringu töötlemiseks ( iga eespool nimetatud komponendi juures ) vajatakse konkreetset rakendust , mis peab tagama sessioonihalduse ( algatamine-lõpetamine , lisapäringud kliendile ja andmebaasidesse ) kliendiga . Joonisel <arv> on toodud info kulgemise diagramm telefoni algatatud päringu ( request ) korral kui edaspidist informatsiooni kliendilt ei vajata . USSD päringu vastus ( response ) võib olla ka negatiivne ehk veateade . Joonisel <arv> on toodud info kulgemise diagrammi näide telefoni algatatud päringu korral , kui vajatakse edaspidist informatsiooni . Sellisel juhul vastatakse päringule omakorda päringuga . Tüüpiliseks näiteks on valikmenüü edastamine kliendile . Märkusena niipalju , et konkreetne USSD teenusloogika ei asetse nimetatud võrgukomponentides .  OR<arv> : HPLMN service code : Y/N OR<arv> : HPLMN service code AND HPLMN : Y/N : Y/N Joonis <arv>. Info kulgemise diagramm telefoni algatatud päringu korral , kui edaspidist informatsiooni kliendilt ei vajata  Joonis <arv>. Info kulgemise diagrammi näide telefoni algatatud päringu korral , kui vajatakse edaspidist informatsiooni Võrgu algatatud USSD sessiooni <arv>. Kõik eespool nimetatud võrgukomponendid võivad algatada USSD sessiooni/päringu telefoni ( MS ) suunal . <arv>. Kui HLR juures olev rakendus soovib saata USSD päringu telefoni suunal , võtab HLR ühendust VLRiga ( kuhu kasutaja on hetkel registreeritud ) , edastab päringu ning jääb ootama vastust . HLR vastutab seejuures ühenduse säilimise eest . Näiteks kui ta saab VLRilt vastuse USSD päringule ning edasist informatsiooni ei vaja , katkestab ta ühenduse . Samas aga kliendipoolse ühenduse katkestamise korral informeerib ta sellest rakendust . <arv>. Teised komponendid ( VLR ja MSC ) toimivad üldjoontes samamoodi , kui need sisaldavad USSD rakendust . <arv>. Nii VLR kui ka MSC võivad toimida kui USSD päringute vahendajad ( kui USSD sessiooni algatajaks on HLR või VLR ) . <arv>. Mobiiltelefon võib põhimõtteliselt igal ajal võtta vastu USSD päringu , välja arvatud juhul , kui hetkel on käimas sessioon mõne teise USSD rakendusega või toimub väljahelistamine . <arv>. Kui mobiiltelefon ei toeta etteantud tähestikku , informeerib ta sellest võrku . <arv>. Võrgupoolsel USSD sessiooni algatamisel kuvatakse telefoni ekraanile rakenduse saadetud tekst või menüü . Menüü korral oodatakse harilikult kliendipoolset valikut , lihtteksti korral katkestatakse koos saabunud teatega ka ühendus . Joonisel <arv> on toodud HLRi ja MSC algatatud USSD sessioonide info liikumise diagrammid ning joonisel <arv> on HLRi algatatud menüütaolise USSD sessiooni info liikumise diagrammid .  Joonis <arv>. HLRi ja MSC algatatud USSD sessioonide info liikumise diagrammid  Joonis <arv>. HLR-i algatatud menüütaolise USSD sessiooni info liikumise diagrammid <arv>. CIMD<arv> PROTOKOLL JA SELLE USSD LAIENDUS CIMD<arv> on avatud protokoll , mis on ette nähtud sidepidamiseks välise rakenduse ( PC ) ja sõnumikeskuse vahel . Ta on täielikult kirjeldatud eraldi dokumentatsioonis Cimd Interface Specification ( NOKIA ) . Nagu mainitud , saab teda kasutada nii SMSi- kui ka USSD-põhiste teenuste loomiseks . CIMD<arv> baseerub pakettide saatmisel ja vastuvõtmisel . Paketi struktuur on üldjoontes järgmine . PÄIS PARAMEETRID LÕPP &lt; STX &gt; ZZ : NNN &lt; TAB &gt; ... PPP : Parameetri väärtus &lt; TAB &gt; ... CC &lt; ETX &gt; Siinjuures : &lt; STX &gt; Paketi algus &lt; ETX &gt; Paketi lõpp ZZ Operatsiooni kood NNN Paketi number . Suuna eristamiseks kasutatakse paaris- ja paarituid pakette &lt; TAB &gt; Eraldaja PPP Parameetri number ( nt telefoninumber , saadetav tekst jne ) CC Kontrollsumma . Arvutatakse baitide liitmise teel &lt; STX &gt; -st kuni &lt; ETX &gt; -<arv> baiti , lõigates ära MSB . Saadud tulemus esitatakse kahe ASCII sümbolina HEX-formaadis Iga saadetud või vastuvõetud pakett kinnitatakse vastuspaketiga ( ACK ) . Vastuspaketi sisu võib olla positiivne või negatiivne ning rakendus peab oskama sellega arvestada . Pärast ühenduse loomist TCP/IP tasemel algab teadete edastamine/vastuvõtmine autoriseerimisega ( ZZ väärtused vastavalt <arv> ja vastusena <arv> ) , mille alusel määratakse ka konkreetne kasutaja profiil . Ühenduse variante on kolm : ainult teadete ( SMS , USSD ) saatmiseks ( Send O nly ) saatmiseks ja vastuvõtmiseks ( Receiving ) info hankimine vastavalt päringutele ( nn skaneeriv režiim , Querying ) . Kasutatavad operatsioonid on järgmised :  SMSC USSD Center Type Operation ( ZZ ) Send Only Querying Receiving Send Only Receiving Login + + + + + Logout + + + + + Submit + + + + + Enq.message status + + + * * Delivery request - + + - * Cancel + + + * * Deliver message - + + - + Deliver status report - - + - + Set parametres + + + + + Get parametres + + + + + Alive + + + + + + Toetatud - Ei ole toetatud * Toetatud , kuid üldjuhul pole kasutatav Nendest olulisemad ja sagedamini kasutatavad on järgnevad : Login/Logout - algatatakse rakenduse poolt . Kasutatakse autoriseerimiseks lühisõnumi- või USSD-keskuses . Logout pole harilikult otseselt nõutav , kuid korrektsuse mõttes oleks soovitav enne ühenduse katkestamist kasutada ; Submit - algatatakse rakenduse poolt . Kasutatakse lühisõnumi või USSD stringi edastamiseks lühisõnumi- või USSD-keskusele . Oluline on siinjuures märkida , et positiivse vastuse saamine Submit-operatsioonile ei tähenda seda , et teade adressaadini jõudis . Selle jaoks on eraldi kinnitusteated . Submit-operatsiooniga pannakse sõnum tegelikult vastava keskuse sisemisse järjekorda ning tema toimetamisega adressaadini tegeleb keskus juba iseseisvalt ( sh kordussaatmised ebaõnnestumiste korral ) ; Deliver messag e - algatatakse lühisõnumi- või USSD-keskuse poolt . Selle operatsiooniga toimetatakse sõnum adressaadini . Teenuste serveri seisukohalt on need siis telefonidelt saabunud sõnumid ; Deliver status report - a lgatatakse lühisõnumi- või USSD-keskuse poolt . Submit-operatsiooni teatud parameetrite abil saab tellida kinnitusteate sõnumi reaalse jõudmise kohta telefonile . Võimalik on ette anda ka tingimused , mispuhul kinnitusteade saadetakse ja mispuhul mitte . Põhiliselt kasutatakse signaalina sõnumi jõudmise kohta adressaadi telefonile , kuid võib olla kasutusel ka juhuks , kui sõnum aegub lühisõnumi- või USSD-keskuses ; Alive - võib olla algatatud nii keskuse kui ka rakenduse poolt . Kasutatakse lühisõnumi- või USSD-keskuse ja rakenduse vahelise kanali kontrolliks ja ka ülalhoidmiseks . Praktikas on esinenud probleeme ( eriti WAN-võrkude korral ) , kus side katkeb või katkestatakse , kuid üks või teine osapool ei saa sellest teada . See omakorda põhjustab probleeme sõnumite edastamisel . Alive-operatsioonide kasutamine vähendab oluliselt selliste situatsioonide tekkimise võimalust . Harvemini kasutatavad on Enq . message status - võimaldab saada informatsiooni Submit-operatsiooniga edastatud sõnumi kohta Cancel - võimaldab tühistada/eemaldada Submit-operatsiooniga edastatud sõnumi . See operatsioon on kasutatav vaid siis , kui sõnum on veel adressaadini toimetamata . Kasutatakse viitega edastuste korral Delivery request - nõue sõnumite toimetamiseks adressaadini ( skaneeriv süsteem ) Set parameters , Get parameters - parameetrite edastamiseks ja vastuvõtmiseks lühisõnumi- või USSD-keskusest . Nagu tabelist näha , on kasutatavate operatsioonide arv USSD korral mõnevõrra väiksem . Operatsioonide teatud parameetrid sõltuvad sellest , kas tegu on USSD või SMS edastusega . Tulenevalt asjaolust , et USSD pole Store and Forward-tüüpi edastus , pole USSD korral võimalik kasutada näiteks sõnumite kehtivusaja ( SMSC-s ) määranguid ( Validity period ) sõnumite viitega edastust ( ei absoluutset ega ka suhtelist ) keskusesse saadetud ( Submitted ) , kuid mitte veel edastatud ( Delivered ) sõnumite tühistamist ( Cancel ) sõnumi prioriteedi määranguid jne. Samas , USSD-spetsiifilised ja SMSi korral on mittekasutatavad transpordi tüüp ( SMS , USSD ) USSD teate tüüp : <arv> - USSD Process Request <arv> - USSD Request <arv> - USSD Notify <arv> - USSD ACK <arv> - USSD Release <arv> - USSD Process Request ACK USSD dialoogi ID USSD dialoogi ajaline limiit ( Timeout ) USSD faas ( Phase ) ( faas <arv> , <arv> või tundmatu ) teenuse kood . Olulisemad parameetrid on veel teate saaja telefoninumber ( Destination address ) teate saatja telefoninumber ( Originating address , pole kohustuslik ) User Data ( parameeter PPP=<arv> ) . Selle kaudu edastatakse ka USSD stringid , mida rakendus peab töötlema . Selle osa lõpetuseks veel üks näide CIMD-protokolli kasutamise kohta . SMSi saatmine : &lt; STX &gt; <arv> : <arv> &lt; TAB &gt; <arv> : <arv> &lt; TAB &gt; <arv> : <arv> &lt; TAB &gt; <arv> : Tere hommikust ! &lt; TAB &gt; &lt; CS &gt; &lt; ETX &gt; ACK : &lt; STX &gt; <arv> : <arv> &lt; TAB &gt; <arv> : <arv> &lt; TAB &gt; <arv> : <arv> &lt; TAB &gt; &lt; CS &gt; &lt; ETX &gt; <arv>- Submit-operatsioon . <arv> - Saaja aadress ( telefoninumber ) <arv> - Sõnumi kehtivusaeg SMSCs . Arv <arv> konverteeritakse SMSC reaalseks ajaühikuks <arv> - Edastatav tekst <arv> - Submit-vastus . <arv> - Ajatempel ( millal käsk SMSC poolt vastu võeti ) “ yymmddhhmmss ” . <arv>. TEENUSTE LOOMINE , KASUTADES USSD-TEHNOLOOGIAT USSD-tehnoloogial põhinevad teenused võivad olla operaatoripõhised või kolmandate osapoolte omad . Esmasteks tingimusteks sisuteenuste loomisel on muidugi turunduslikud aspektid . Kui nendega on kõik korras , siis tehnilise poole pealt on vajalikud eeltingimused : operaatoripoolne teenusnumbri reserveerimine loodav teenus võib olla ka olemasoleva teenuse ( infomenüü ) osa USSD-keskuse konfigureerimine ( teenusnumbri seostamine kanaliga , kasutaja profiil jne ) USSD-keskuse ja teenust pakkuva serveri vahelise kanali ( lingi ) tekitamine turvaküsimused ( eriti kui teenust pakkuv arvuti ei asu operaatori sisevõrgus ) . Kui eespool nimetatud tingimused on täidetud , sõltub edaspidine sellest , millist protokolli ( SMPP , CIMD<arv> ) konkreetne USSD-keskus toetab . Loodav teenus peab oskama vastavat protokolli kasutada . Kuna nende protokollide käsitlemine pole just kõige lihtsam ülesanne , siis võib operaator välja pakkuda ka mingi lihtsama , näiteks XMLil põhineva liidese ( sisuliselt CIMD<arv>/SMPP à XML konverter ) , mis töötab üle HTTP . Teenusloogika USSD korral võib välja näha järgmine : <arv>. Teenusprogrammi saabub USSD päring . <arv>. Teenusprogramm analüüsib USSD stringi ( parameeter <arv> CIMD<arv> korral ) ja vastavalt teenusloogikale saadab vastuse . Näiteks : tüübina <arv> ( “ USSD Request ” , menüü edastamiseks ) tüübina <arv> ( “ USSD Notify ” , lõpliku vastuse edastamiseks ) . Vastavad tüüpide tähendused võivad sõltuvalt operaatori platvormist varieeruda . Teenuste loomisel tuleks selles osas operaatoriga konsulteerida . Menüü USSD aknas on lihtne ning näeb üldjoontes välja järgmine : <arv>. Valik_<arv> <arv>. Valik_<arv> <arv>. Valik_<arv> Kui klient soovib siseneda menüüs “ Valik_<arv> ” -te , peab ta valima klaviatuurilt numbri '<arv>' ning vajutama “ helistamise ” ( roheline ) klahvile . Konkreetne käitumismudel sõltub siiski kasutatavast telefonist . “ Valik_<arv> ” alt võib avaneda omakorda alammenüü . Kliendi asukoha kohta võimalikus USSD menüüde struktuuris saab arvestust pidada vaid rakendus . Seega jääb sessioonihaldus kui selline teenusprogrammi kanda . Kui teenusprogramm peab ühte otsa pidi sidet USSD-keskusega , siis teistpidi harilikult andmebaasiga või ka teiste seadmetega nagu SMSC , arveldussüsteemid jne. Teenuste maksustamiseks on mitu võimalust . Harilikult maksab klient sisu eest , mitte päringu enda eest . Maksustamine võib toimuda kasutades protokollide ( CIMD<arv> SMPP ) selleks otstarbeks ette nähtud välju ( tariifiklass ) kui teenusprogrammil on eraldi liides operaatori arveldussüsteemi kui on kasutusel näiteks XMLi-laadne liides USSD-keskuse ja teenusprogrammi vahel , võib maksustamisinfo olla liidetud XMLi koosseisu . <arv>. KOKKUVÕTE USSD-l põhinevaid teenuseid on nüüdseks loodud juba mitu . Reaalselt eksisteerivad erinevate mobiilsideoperaatorite infomenüüd , koduvalvesüsteemid , mobiilne parkimine jne. Hetkel on küllalt raske prognoosida , kui laialdaselt tavakliendid USSD-d kasutama hakkavad . Alternatiive on palju ja peale on tulemas <arv>G . Statistika näitab , et infoteenuste tarbimisel on liidripositsioonile tõusnud WAP . Temale järgnevad SMS , USSD ja STK . WAPi edule on kindlasti kaasa aidanud WAPi toetavate telefonide laialdane levik ning käsitlemise lihtsustumine ( näiteks WAP-seadete automaatne laadimine ) . STK levikut piirab hetkel kindlasti see , et olemasolevad kliendid peavad oma SIM-kaardid välja vahetama . Kui võrrelda omavahel sisuteenuste tarbimist üle SMSi ja USSD , siis peab mainima , et USSD on ikkagi mugavam . Pole vaja sisestada pikki võtme- ja märksõnu ning neid meeles pidada . Võib siiski oletada , et USSD põhiliseks kasutusvaldkonnaks jääb seadmete distantsjuhtimine ning muu taoline . Infoteenuste valdkonnas on WAP väga tugevaks konkurendiks . Lõpetuseks sooviksin tänada Tallinna Tehnikaülikooli teadurit Aimur Rajat , kes oli artikli koostamisel nõu ja jõuga abiks .  Uudised kogus Uuno Vallner , Majandus- ja kommunikatsiooniministeeriumi , riigi infosüsteemide osakonna arendustegevuse talituse juhataja KMA AVAB OMA ANDMEBAASID PANKADELE KASUTAMISEKS Pangad loodavad KMA andmebaaside abil välistada võltsitud dokumentide kasutamise ja kontrollida dokumendi kehtivust . Õiguslik alus andmevahetuseks tuleneb jaanuarist jõustunud krediidiasutuste seaduse muudatusest , mille järgi on pangal õigus saada isikuandmeid dokumente väljastavate riigiasutuste andmekogudest . Tänaseks on põhimõtteline kokkulepe KMAga saavutatud ning KMA on ette valmistanud ka vajaliku tehnilise lahenduse . KMA andmebaasis on kõik andmed , mida inimene kirjutab isikutunnistuse või passi taotlusesse . Seal on nimi , sünniaeg ja -koht , kontaktandmed , aadress , telefon ja elektronposti aadress , vanemate nimed ja elukoht . AVATI EUROOPA NOORTEPORTAAL Portaal sisaldab viiteid rohkem kui <arv> <arv>le Interneti-leheküljele <arv> Euroopa Liidu keeles , pakkudes infot , alates reisimisest ja õppimisest kuni töötamiseni mõnes teises Euroopa Liidu riigis . Infot leiab <arv> Euroopa Liidu liikmesriigi , lisaks Islandi , Norra , Liechtensteini , Bulgaaria ja Rumeenia kohta . ILMUS EESTIKEELNE COBIT QUICKSTART Cobit Quickstart pakub ettevõtetele lahendusi IT kontrolli alla saamiseks . Juhendi eesmärk on kindlustada COBITi arukas rakendamine , võttes arvesse konkreetseid vajadusi ja tingimusi . Väljapakutud olulised juhtimiseesmärgid koos peamiste kriitiliste eduteguritega aitavad jälgida ettevõtte eesmärkide saavutamist . Üritatakse täita lüngad riskihalduse , juhtimise ja tehniliste küsimuste vahel . Juhendi lihtsas keeles esitatud materjal on hõlpsasti omandatav ja sobib ka väiksematele ametiasutustele . ILMUS INGLISKEELNE IT AASTARAAMAT Trükist ilmus Eesti avaliku halduse infotehnoloogia arengut tutvustav ingliskeelne aastaraamat “ Information Technology in Public Administration of Estonia , <arv> " . Veebivariant on aadressil <hyperlink> E-HÄÄLETAMISE RIIGIHANGE Vabariigi Valimiskomisjon korraldas riigihanke e-hääletamise realiseerimiseks . Edukaks tunnistati AS Cybernetica poolt esitatud pakkumine . ABOBASE SYSTEMSI KÄIVE KIPUB VÄHENEMA Infotehnoloogiafirma AS Abobase Systems sai eelmisel aastal <arv>,<arv> miljoni krooni suuruse käibe juures <arv>,<arv> miljonit krooni puhaskasumit , aastaga langes ettevõtte käive <arv> ja kasum kuue protsendi võrra . <arv>. aastal sai Abobase Systems <arv>,<arv> miljoni krooni suuruse käibe juures <arv>,<arv> miljonit puhaskasumit . Seoses kehvade majandusnäitajatega vabastas Abobase Systemsi nõukogu maikuu alguses ettevõtte tegevjuhi Tõnis Mäe töölt . Nõukogu esimehe Kaido Saarma sõnul tingis muudatuse planeeritud ja realiseerunud majandustulemuste suur lahknevus . TARTU LINN SÕLMIS MICROSOFTIGA TARKVARA RENDILEPINGU Tartu linna üldhariduskoolide ja kutsehariduskeskuse <arv> arvutis võetakse kasutusele Microsofti tarkvara . Tarkvara kasutusõigused renditakse Tartu linna koolidele kolmeks aastaks “ Partnerid õppimises ” koolilepingu raames . Koolilepingu alusel võtavad Tartu linna <arv> üldhariduskooli ja kutsehariduskeskus tasuta kasutusele Microsoft Windowsi operatsioonisüsteemide uuemad versioonid ja Microsoft Office <arv> tarkvara , mille eest koolid iga-aastast kasutusrenti tasuvad . Tartu linna koolid sõlmisid koolilepingu ühiselt linnavalitsuse taotluse kaudu . Tartu linna munitsipaalõppeasutuste süsteemi tegevuskava aastateks <arv>-<arv> nägi ette tagada Tartu linna koolide infrastruktuuri jätkusuutlik areng , s.o koolide infotehnoloogia riist- ja tarkvarabaasi pidev moderniseerimine . Ülesande paremaks täitmiseks on muudetud arvutite ja tarkvara soetamise strateegiat ja üle mindud rentimisele . Esimese sammuna renditi <arv>. aastal Tartu koolidele <arv> töökohta , nendele lisandub tänavu veel <arv>. Programm “ Partnerid õppimises ” rakendus Eestis <arv>. aasta lõpus , mil EV Haridus- ja Teadusministeerium ning tarkvarafirma Microsoft sõlmisid koostöömemorandumi eesmärgiga soodustada nüüdisaegse tehnoloogia kasutamist ja õpetamist Eesti üldharidus- ja kutsekoolides . Tartu linn sõlmis Microsoftiga “ Partnerid õppimises ” koolilepingu <arv>. aprillil <arv>. TALLINNA TEHNIKAÜLIKOOL HAKKAB KOOLITAMA HIINA TUDENGEID INFOTEHNOLOOGIA ERIALAL Tallinna Tehnikaülikooli delegatsioon sõlmis Hiina visiidil koostööleppe , mille tulemusel on alates <arv>. aasta sügisest oodata TTÜsse senisest rohkem tudengeid Hiinast . Paarkümmend esimest üliõpilast Hiinast asuvad Tallinna Tehnikaülikooli infotehnoloogia- ja majanduserialadele õppima <arv>/<arv> . õppeaasta alguses . Praegu õpib TTÜs mõnikümmend välistudengit , nende seas ka üliõpilasi Itaaliast , Indiast , Venemaalt , Hiinast ja teistest riikidest . MICROLINK KESKENDUB INFOTEHNOLOOGIATEENUSTELE Infotehnoloogiagrupp Microlink müüs läbi aktsiaemissiooni oma osaluse Läti tütarettevõttes SAF Tehnika , edaspidi keskendub ettevõte infotehnoloogiateenuste pakkumisele Balti äriklientidele ja avalikule sektorile . SAF Tehnika oli viimane Microlinki tütarettevõte , mis ei olnud otseselt seotud firma põhitegevusega ehk infotehnoloogiateenuste ja -lahenduste osutamisega Balti riikide äriklientidele . Microlinki eesmärk on pakkuda korporatiivklientidele täielikku IT outsourcingut , sealhulgas PC- ja kesksüsteemide teenuseid , andmesidet , tarkvaraarendust ja -juurutust , konsultatsioone ja lahenduste jaoks vajalikku riistvara . Infotehnoloogiateenused ja -lahendused annavad üle <arv> miljoni krooni ettevõtte konsolideeritud aastakäibest . Microlinki infotehnoloogiateenuste poolele kuuluvad Microlink Eesti , Lätis paiknevad MicroLink Latvia ja Baltijas Datoru Akademija ning Leedu tütarfirmad MicroLink Data , Fortech IT ja MicroLink Netcoms . Microlinki infotehnoloogiateenuste poolel töötab <arv> inimest . EESTIS LUUAKSE TASEMEÕPPEASUTUSI HÕLMAVA INTERNETI-PÕHISE HARIDUSE INFOSÜSTEEM EHIS Valitsus kiitis heaks eelnõu kõiki Eesti tasemeõppeasutusi hõlmava Interneti-põhise hariduse infosüsteemi EHIS loomise kohta . Süsteem võimaldab riigil , omavalitsustel ja õppeasutustel saada lihtsalt ülevaade haridussüsteemi puudutavatest andmetest , neid analüüsida ja teha argumenteeritud otsuseid . Samuti ühildub süsteem koos registriga riigi teiste infosüsteemide ja registritega . Koolidel kaob vajadus lisatöö järele , mis on seotud teabenõuetele vastamise , statistikate koostamise ja muu sellisega . Käesoleva aasta jooksul järk-järgult rakenduv andmebaas sisaldab andmeid kõigi tasemeõppeasutuste õppurite , õpetajate ja õppejõudude , õppekavade ja koolituslubade , koolide infrastruktuuri ja personali ning hinnetelehtede ja lõpudokumentide kohta . IT KOLLED ÞI S UUS E RIALA - TEHNOSUHTLUS IT kolledþ sai Haridus- ja Teadusministeeriumilt koolitusloa Eestis uudse eriala tehnosuhtlus ( ingl : technical communication , soome : tekninen viestintä ) õpetamiseks käesoleva aasta sügisest . Tehnosuhtluse eriala lõpetaja saab lisaks headele infotehnoloogilistele oskustele ka vajalikud teadmised kommunikatsiooni vallast , mis võimaldavad tal töötada ametites , kus on vajalik keerulise IT-terminoloogia ja -sisu vahendamine väljaspool IT-maailma asuvatele inimestele . Lõpetajad võivad kirjutada toodete kasutusjuhendeid ja tootekatalooge , kujundada veebilehe kasutajaliidest , koostada reklaammaterjale jne ja seda kõike toote või teenuse kasutajat silmas pidades . Eriala annab kolme aasta jooksul lisaks kõrgharidusele iseloomulikele üldainetele ja tugevdatud infotehnoloogia baasõppele oskuse väljendada end kirjalikult ja suuliselt , teadmisi disainist , trükitehnoloogiast jm. Näiteks kuuluvad õppekavasse sellised ained nagu kommunikatsiooni juhtimine , turu-uuringud , veenmiskunst ja tekstiõpetus . MICROSOFTI-NIMELINE ARVUTIKLASS IT KOLLED ÞI S Microsofti jätkuva toetuse tunnustamiseks nimetas IT Kolledþ <arv> töökohaga uusima arvutiklassi Microsofti-nimeliseks õppeklassiks . Microsofti toetusel tõsteti arvutite mälumaht <arv> GB-ni ja seeläbi avanevad IT Kolledþi <arv>-kohalises arvutiklassis uued tarkvaraõppe võimalused . Nüüdsest on nendes arvutites võimalik kasutada laiemalt Microsofti uusimaid tehnoloogiaid , sealhulgas näiteks MS Virtual PC <arv> programmi . Programm võimaldab ühes arvutis samal ajal kasutada erinevaid operatsioonisüsteeme nagu Windows <arv> Server kõrvuti Windows XP Professionaliga , aga ka PC-arhitektuurile mõeldud teisi operatsioonisüsteeme , ning katsetada funktsionaalseid lahendusi nende peal . Et operatsioonisüsteemide vahetuseks pole enam põhjust katkestada õppeprotsessi , sobib Microsofti õppeklass hästi spetsialistidele suunatud erinevate koolituste läbiviimiseks . <arv>. aasta detsembris andis IT Kolledþ Microsoftile üle Aasta Toetaja tiitli . Microsoftile tõid tunnustuse IT Kolledþile annetatud Windows XP Professional litsentsid ja kolm uusimat puutetundliku ekraani , kõne ja käekirja tuvastusfunktsioonidega portatiivset Acer Tablet tahvelarvutit . VALITSUS KIITIS HEAKS INFOPOLIITIKA PÕHIALUSED AASTATEKS <arv>-<arv> Valitsuskabineti istungil kiideti heaks dokument , mis kajastab prioriteete ja põhimõtteid , millest riik infopoliitika teostamisel lähtub . Infopoliitika põhialused aastateks <arv>-<arv> on riigi üldisi IT ja infoühiskonna prioriteetseid valdkondi kirjeldav dokument , mille alusel luuakse majandus- ja kommunikatsiooniministeeriumi eestvedamisel koostöös kõigi ministeeriumidega iga-aastane infopoliitika tegevuskava . See näeb eelkõige ette e-teenuste juurutamist terves avalikus sektoris , kindlustades seda samal ajal kogu ühiskonda hõlmava teavitus- ja koolitustööga . Valitsuskabinetis toonitati vajadust suurendada riigisektori infotehnoloogilist kompetentsi ja kaardistada ministeeriumide haldusalade vahel algatatud projektid , sest väga palju tööd on juba riigis tehtud ning oluline on olemasolevaid komponente taaskasutada , mitte neid üha uuesti luua . Oluline on ka algatatud projektide omavaheline haakumine . Infopoliitika põhialused aastateks <arv>-<arv> on leitav aadressil <hyperlink> ITL JAGAS VÄLJA <arv>. AASTA AUHINNAD <arv> Aasta Tegija : e-Riigi Akadeemia E-Riigi Akadeemia Sihtasutus ( eGA ) on info- ja kommunikatsioonitehnoloogia ( IKT ) alane arendus- ja analüüsikeskus , mille eesmärk on koolitada Eesti juhtivate IT-spetsialistide kaasabil endiste SRÜ , Ida-Euroopa ja Aasia riikide tippametnikke . Laia rahvusvahelise ekspertvõrgustiku kaudu viiakse läbi uurimusprojekte ning vahetatakse e-valitsemise kogemusi nii Eestis kui ka teistes riikides . eGA rolliks on koondada IKT-alaseid kogemusi ning koordineerida erinevaid koostöövõrgustikke infoühiskonna arendamiseks . E-riigi Akadeemia ( eGA ) asutati <arv>. aastal Eesti Vabariigi valitsuse , ÜRO arenguprogrammi ( UNDP ) ja Avatud Ühiskonna Instituudi ( OSI ) poolt eesmärgiga koondada ja levitada IKT-alaseid teadmisi Eestis ja välismaal . Seni on koolitatud MONGOOLIA , UKRAINA , TADÞIKISTANI , USBEKISTANI esindajaid . <arv> Aasta Tegu : Skype Interneti-telefoni projekt Eestlaste kaasabil on loodud Interneti-telefon Skype , millega saab Interneti vahendusel teha tasuta telefonikõnesid üle maailma , ainuke nõue on see , et omavahel kõnelevatel inimestel oleks mõlemal Skype installeeritud . Skype vallutab maailma , seda kasutab juba üle miljoni inimese . <arv> Aasta Idee : riiklik riskikapitali fond - Juhan Parts , Meelis Atonen , Raul Malmstein Eestis puudub innovatsioonile orienteeritud ning rahvusvahelise tehnoloogia juurutamise ja turustamise kogemusega riskikapitali turg . Tegutsevad fondid on valdavalt suunatud kasvukapitali pakkumisele traditsioonilistele ettevõtetele , jättes seemne- ja algusfaasis olevad innovaatilised projektid tähelepanuta . Riigi kaasfinantseeritud toetusskeemi eesmärk on vähendada lõhet innovaatiliste ideede ja riskikapitali turu poolt pakutavate investeeringute vahel . Riik saab seeläbi stimuleerida era-riskikapitaliste võtma suuremaid riske ning osalema mahukaid omakapitali investeeringuid nõudvas seemne- ja start-up-faasis . Ustus Aguri nimeline stipendium ( <arv> <arv>.- ) doktorandile : Ilja Tsahhirov - TTÜ , doktoritöö teema Digitaalallkirja ühilduvus riikide vahel , juhendaja prof Jaak Tepandi . Lähemalt auhindadest Aasta Tegija on inimene , inimeste rühmitus või firma , kelle teod , mõtted ja/või tegevus on kõige enam mõjutanud möödunud aasta IKT valdkonda Eestis . Tegija ei pea olema mingist kindlast valdkonnast ja võib olla nii era- kui riiklikust sektorist , eeldatavasti on mõjukad tegijad tuntud ka laiemalt kui vaid teie firmas . Aasta Idee on mõte või plaan , mis on kõige rohkem mõjutanud möödunud aastal IKT valdkonda Eestis . Idee võib olla nii realiseeritud kui realiseerimata , kuid ta peab olema laiemale avalikkusele tuntud . Aasta Tegu on kas mõni üksik tegu , toode , teenus või projekt , millega möödunud aastal IKT-maailma on üllatatud . Aasta Teo nominendiks esitamise tingimuseks on tegevuse lõpetatus . Kui teoks pakutakse toodet või teenust , peab see olema olemas ja jätkuvalt kättesaadav . Eelmiste aastate preemiate saajad <arv> Aasta Tegija : Jaak Tepandi , TTÜ professor , Eesti infopoliitika raamkava koostaja <arv> Aasta Tegija : Toomas Sõmera , peadirektor , infotehnoloogia- ja telekommunikatsioonivaldkonna arengu edendaja <arv> Aasta Tegija : Mart Laar , EV peaminister , progressiivsete ideede ja lahenduste toetaja IT valdkonnas <arv> Aasta Idee : IT Kolledþ <arv> Aasta Tegu : Tele<arv> tasuta Internet <arv> Aasta Tegija : Linnar Viik , EV peaministri nõunik <arv> Aasta Idee : E-VIIS , valitsuse istungite elektrooniline infosüsteem <arv> Aasta Tegu : EMT e-parkimisteenus <arv> Aasta Haridusauhind : IT Kolledþ <arv> Aasta Tegija : Uuno Vallner , IKT visionäär ja edendaja <arv> Aasta Idee : ID-kaardi käivitamine <arv> Aasta Tegu : projekt “ Vaata maailma ” <arv> Aasta Tegija : Marek Tiits <arv> Aasta Idee : jäi välja andmata <arv> Aasta Tegu : <arv> Ustus Aguri nimeline stipendium : Marion Lepasaar , TTÜ , juhendaja Ahto Kalja RIIGI IT-ARHITEKTUUR JA KOOSVÕIME RAAMISTIK VALMIMAS Info- ja kommunikatsioonitehnoloogia lähemate aastate põhiülesanne on muuta infosüsteemid kodaniku- ja nõudluspõhise teenuse keskseks . Infosüsteemid on vajalik seostada elanikkonda ja organisatsioone teenindavaks ühtseks loogiliseks tervikuks . See nõuab riigis selgete reeglite ja kokkulepete fikseerimist ning ühise vahetarkvara kasutamist . Riigis on paari viimase aasta jooksul välja arendatud avaliku võtme infrastruktuur , loodud mitu kasutajakeskset portaali : <hyperlink> , <hyperlink> , <hyperlink> , rajatud andmevahetuskiht X-tee . Raamistik üldistab riigi infotehnoloogia ja infosüsteemide arendamise positiivsed trendid , esitab need süstematiseeritud kujul . Raamistik eeldab riigi kodanikukesksust ning infosüsteemide teenusepõhisust . Eeldatakse , et Eesti Euroopa Liidu liikmesriigina tagab koosvõime teiste liikmesriikidega . Kuigi riigi infosüsteemide toimimine püüab saavutada erasektorile omast ratsionaalsust , säilivad riigil teravad erinevused erasektorist . Riigil pole omaette eesmärki müüa teenuseid . Pigem on eesmärk teenuste otstarbekas hulk . Eeldatakse , et infosüsteemide abil on lähitulevikus võimalik sooritada mitmeid toiminguid ühest kohast ühekorraga : teenuse tarbija ei pea ametnikke ja veebe otsima . Avaliku sektori infosüsteemide efektiivsust ei saa mõõta erasektori meetoditega ( investeeringute tasuvusega ) . Avaliku sektori infosüsteemid peavad integreeritud teenuseosutamise mõttes olema erasektori infosüsteemidele teerajajad . Riigihangete kaudu osalemine riigi kui terviku vajadusi rahuldavate infosüsteemide rajamises on väljakutseks Eesti IT-sektorile . Raamistiku töötavad välja IT-eksperdid koostöös riigi- ja kohalike omavalitsuse ning erasektori asutustega . Raamistiku järgimine on kohustuslik riigi- ja kohaliku omavalitsuse asutuste infosüsteemide omavahelisel suhtlemisel , ühisprojektides ning ühiselt kasutatavates infosüsteemides . Kõik institutsioonid on vabad oma infosüsteemide sisemise arhitektuuri ja koosvõime põhimõtete valikul , kusjuures uutes IT-projektides järgivad riigi- ja kohaliku omavalitsuste asutused raamistiku põhimõtteid . Raamistik hõlbustab riigi- ja kohaliku omavalitsuse asutustel uute süsteemide väljatöötamist ja rakenduste hankimist IT-firmadelt . Dokumendi vaatab kord aastas üle riigi infosüsteeme koordineeriv asutus ja tema juurde vabatahtlikkuse alusel loodud koosvõime komisjon . Riigi IT arhitektuuri ja koosvõime raamistiku kohta loe lähemalt <hyperlink>