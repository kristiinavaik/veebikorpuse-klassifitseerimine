kirjak	tea_AA_05_6.tasak.ela	TOIMETAJALT <arv>-<arv> OPM<arv> ehk Organizational Project Management Maturity Model on Project Management Institute'i ( PMI ) poolt <arv>. aastal evitatud standard . OPM<arv> aitab organisatsioone nende strateegiate elluviimisel , evitades parimad praktikad ( Best Practices ) projektijuhtimisse organisatsiooni tasandil . OPM<arv> loomisel uuriti olemasolevate projektijuhtimise mudelite küpsusastmete määratlusi . Selgus , et olemasolevatel mudelitel on olulisi puudusi , eriti organisatsiooni projektijuhtimise küpsuse inkrementaalse parendamise käsitlemisel . OPM<arv>-mudeli oluline omadus on strateegiliste plaanide realiseerimiseks vajalike projekti- juhtimise praktikate evitamisprotsessi määratlemine . Seejuures arvestati : sihtide põhimõttelisi erinevusi projekti- ja organisatsiooni tasandil turu dünaamilist iseloomu ja organisatsioonide vajadust adapteeruda pidevalt muutuvate tingimustega infovahetuse erinevusi operatiiv- ja organisatsiooni tasandil OMP<arv> defineerib organisatsioonilise projektijuhtimise ( Organizational Project Management Org PM ) kui strateegiliste eesmärkide saavutamist tagava süstemaatilise projektide , programmide ja portfellide ( Project , Program and Portfolio management ehk PPP ) haldamise . OMP<arv> on seega sillaks strateegia ja seda realiseerivate projektide vahel :  OPM<arv>-mudel koosneb kolmest komponendist : teadmus ( Knowledge ) määratlus ( Assessment ) parendamine ( Improvement ) Teadmus komponent : Org PMi ideoloogia ja printsiibid , OMP<arv>-mudel , mudeli sisu ja kasutamine . Määratluskomponent : missugune on organisatsiooni küpsus Org PMs ( kus me asume ) ? Parendamiskomponent : mida tahame saavutada ? Plaanid sihtide saavutamiseks . OMP<arv>-mudel sisaldab enam kui <arv> dokumenteeritud parimat praktikat . OMP<arv>-mudeli loomisel on lähtutud varasemast PMI standardist PMBOK Guide ( Project Management Body of Knowledge ) . Organisatsiooni projektijuhtimise võimekuse mõõtmisel kasutatakse talitluse võtmeindikaatoreid ( Key Performance Indicators , KPIs ) - metoodika , mis on laialt levinud ( nt COB IT ) . Kokkuvõtteks . Kiiresti muutuvas ( agiilses ) maailmas vajavad organisatsioonid agiilseid strateegiaid . Traditsioonilised projektijuhtimise mudelid ja metoodikad pole enam küllaldased - agiilsete strateegiate elluviimine vajab uusi , agiilseid projektijuhtimise mudeleid ja metoodikaid . OMP<arv> on oluline samm niisuguste mudelite ja metoodikate loomisel ning evitamisel . Uut edu ja püsivat isemõtlemist soovides , Enn Õunapuu  Enn Õunapuu - sündinud <arv>. aprillil <arv> Tallinnas . Lõpetanud majandusinsenerina majandusliku informatsiooni töötlemise erialal Tallinna Polütehnilise Instituudi <arv> ja aspirantuuri <arv> matemaatiliste meetodite kasutamine majanduses erialal . <arv> kuni <arv> õppis samas doktorantuuris . Töötanud <arv>-<arv> TPI infotöötluse kateedri stažöör-õppejõuna ja assistendina , <arv>-<arv> TPI arvutuskeskuse projektijuhina , <arv>-<arv> TPI raamatupidamise kateedri vanemõpetaja ja dotsendina , <arv>-<arv> TTÜ informaatikainstituudi dotsendina , aastast <arv> TTÜ info- süsteemide professor . Aasta lõpp on ikka aeg , kus vaadatakse tagasi tehtule ja tehakse tulevikuplaane . Käesolevas kirjatöös püüan sama teha Eesti tarkvarasüsteemide arengu kohta , kusjuures vaatekoht on personaalne , isiklikest kogemustest lähtuv , mitte uurimuslik ja kõikehõlmavale üldistusele pretendeeriv . Oma ametikohustuste tõttu on mul küllaltki hea ülevaade Eesti tarkvarasüsteemide arengust . Eriti hea informatsiooni saamise kohaks on infosüsteemide seminar doktorantidele ja magistrantidele , kus iga doktorant ja magistrant , kes soovib saada hinnatud antud aines , peab tegema ettekande oma töö teemal . Meie doktorantidel ja magistrantidel on juhtiv roll Eesti infotehnoloogia maastikul , ja seega on nii mul kui ka seminarist osavõtjatel hea ülevaade Eestis toimuvast . Lõppevat aastat ( <arv> ) iseloomustab mitmete mind huvitanud tehnoloogiate ja metoodikate tegelik kasutamine . Üks minu lemmikteemasid viimasel ajal on teenustele orienteeritud arhitektuurid ja kõik sellega seonduv . Rõõmustav on , et riiklike tellimuste pakkumisi hakkavad võitma firmad , kes otseselt deklareerivad , et nende pakkumine vastab teenustele orienteeritud arhitektuuri nõuetele . Paljud Eesti IT firmad teevad jõulisi ettevalmistustöid teenustele orienteeritud arhitektuuride kasutuselevõtuks . Üliõpilastele veebiteenuste näiteid tuues ei pea viitama ainult välisnäidetele , nagu Google'i veebiteenus ( <hyperlink> ) ja Amazoni veebiteenus ( <hyperlink> ) . Saan julgelt kasutada ka näiteid Eesti veebiteenustest , nagu äriregistri teenus ( <hyperlink> ) ja x-tee ( <hyperlink> ) . Teine rõõmustav suundumus on infosüsteemide iteratiivse ja agiilse arendamise meetodite jõudmine reaalsesse Eesti praktikasse . Mainida võiks Maksu- ja Tolliameti ja AS Medisoft infosüsteemide arendusmetoodikaid . Üleminek iteratiivsele ja veelgi enam agiilsele arendusele on sõnades lihtne , kuid tegelikkuses tekib terve rida raskusi . Raskused algavad juba projekti rahastamisel . Vähesed soovivad rahastada projekti , mille maksumus , funktsionaalsus ja lõplik valmimisaeg ei ole selgelt välja toodud ning selgub lõplikult alles projekti arenduse käigus . Rõõmustav ongi , et sellises keerulises situatsioonis on leitud osapooli rahuldavaid lahendusi . Kolmandaks rõõmustab , et Eesti infotehnoloogid suudavad ikka suhteliselt väheste vahenditega luua maailmatasemel e-süsteeme . Täna tahaks mainida e-politsei süsteemi . E-politsei süsteem võimaldab otse patrullsõidukist Interneti kaudu liiklejate andmeid kontrollida . Imponeerivad julged , elegantsed ja suurte riikide lahendusi mitte kopeerivad lahendused , mis süsteemi loomise käigus välja töötati . Tulemus on kiitust väärt . Eesti infotehnoloogid , jätkake julgelt oma naturaalse mõistuse kasutamist infotehnoloogiliste lahenduste väljatöötamisel ! Ka e-valimised on positiivseks sammuks demokraatia nüüdisajastamiseks . Sellest kogemusest ilmneb eriti selgesti , et e-lahendustele ei saa läheneda ainult tehnoloogilisest vaatest lähtudes , palju tähtsamad on sotsioloogilised , majanduslikud ja poliitilised vaated . Uue e-lahenduse väljatöötamine toob kaasa ka struktuuri muutuse . Struktuuri all mõistame me organisatsioonilist struktuuri ja äriprotsesse selles organisatsioonis . Näiteks traditsiooniline struktuur kaubanduses koosneb sellistest elementidest nagu tootmisvõrk , müügivõrk ja müügijärgse teeninduse võrgustik . Tootmisvõrk ise on keeruline organisatsioon , kus toote arendajad ja vahetud tootjad on ühendatud ühtsesse virtuaalsesse ettevõttesse . Müügivõrk on traditsiooniliselt üles ehitatud regionaalsest printsiibist lähtudes . Microsoftil on näiteks peakontor Redmondis USA-s ja regionaalsed kontorid Euroopas ja mujal maailmas . Järgmisel tasemel on rahvuslikud kontorid . Vahetu müük käib distribuutorite ehk maaletoojate kaudu , kes loovad oma edasimüüjate võrgustiku . Müügijärgne teenindus organiseeritakse vastavalt kauba liigile erinevalt , kuid ühine on see , et tootja peab selle võrgustiku kindlalt looma . Nagu näeme , on pikaajalise töö tulemusena loodud töötav keerukas struktuur . Minnes üle e-lahendustele , tuleks see struktuur hävitada ja seejärel luua uus struktuur uutest põhimõtetest lähtudes . Näiteks Amazonil on loodud uus edasimüüjate võrgustik , kus oli <arv>. aasta lõpus <arv> liiget , kes saavad oma tasu kaupa vahetult puutumata . Täiesti uute struktuuride loomine on palju lihtsam , kui vanade struktuuride asemel uute loomine , sest viimasel juhul tuleks hävitada töötav ja kasumlik struktuur . Siin näen ma ka Eesti edu üht põhjust . Väga paljudel juhtudel võis alustada puhtalt laualt . Moraal antud loos on ikkagi see , et üksi tehniliselt ilusast lahendusest ei piisa , vaid tuleb luua uus struktuur ja kujundada uued äriprotsessid , arvestades seejuures kõigi osapoolte huve . Tulevikku vaadates loodan , et järgmisel aastal saavutame tegelikku edu ka e-õppe valdkonnas . E-õppest on palju räägitud , kuid tegelike e-õppe lahendusteni on veel pikk tee käia . Ma määratleksin “ tegelikku ” e-õpet kui adaptiivset süsteemi , kus keskset kohta hõlmavad rahvusvaheliste e-õppe standarditele vastavad õpiobjektid , kus ka õppija profiili ja teadmisi võetakse õpetamisprotsessis arvesse , kus eesmärgiks ei ole mitte teadmiste hulk , vaid kvaliteet ( arusaamine ja analüüsivõime , mis avaldub oma mudeli või mõistesüsteemi loomises ) . Seejuures väljub õpetamisprotsess ühe haridusasutuse seest , toimub intensiivne õppijate , õpetajate ja õppematerjalide vahetus , seda nii Eesti sees kui ka rahvusvaheliselt . Kutsutakse ellu töötavad õppijate kogudused , kus luuaksegi uus kvaliteet , nagu see toimus vabavara loomise valdkonnas . Me liigume stabiilselt selle poole ja , nagu ikka , läheb selleks rohkem aega , kui ma esialgu arvasin . Arvo Toomsalu , TTÜ arvutitehnika instituut Arvutite välisseadmete valik suureneb pidevalt , viimastel aastatel on ilmunud palju uusi huvitavaid lahendusi just mäluseadmete vallas . Eriti kiire on areng olnud välkmäludel , jõudsalt on kasvanud nende mälulülituste infomahutavus , paranenud töökiirus ja suurenenud aktiivne tööiga . Välkmälude üheks väga perspektiivseks kasutusalaks on USB välkmäludraivid . Nende seadmete valmistamisega ja uute toodete väljatöötamisega tegeleb järjest rohkem elektroonikafirmasid . Tegemist pole mingite järjekordsete uute arvutiviguritega , vaid pisikeste ja mugavate mäluseadmetega , mida arvutikasutajate seas tuntakse rohkem mälupulkade nime all . Mälupulk on igati tabav ja mõnus nimi , kuid selle termini kasutamisel tehnilistes tekstides võib tekkida raskusi . Tavakeeles kasutatava mõiste “ mälupulk ” maht on laiem kui mõistel “ USB välkmäludraiv ” <arv> . Nii on mälupulkadeks nimetatud erinevaid välkmälukaarte , portatiivseid MP<arv>-pleiereid ja muidki välkmälulülitusi sisaldavaid seadmeid . Mõiste “ USB välkmäludraiv ” maht on järsk , hõlmates üht kindlat mälupulga liiki . Probleemid mälupulga ümber ei piirdu üksnes terminoloogiliste küsimustega . Sageli ei omata korralikku ettekujutust sellest , kuidas seade töötab ning mis on selle pisikese “ pulgakese ” sees . Küllaltki hästi iseloomustab olukorda üks dialoog , mis leidis aset arvutivõrgu Freetime Forumis , kus arutluse teemaks olid muutmälud ( RAM ) . Nimetame selles osalejaid K ( küsija ) ja V ( vastaja ) , Võrgudialoog nägi välja järgmiselt ( tekst on esitatud originaalkujul ) : K : “ Nagu ma aru saan , on RAM mälupulk . Kas kõik on USB baasil ? Et lihtsalt torkad USBsse ja arvutil kohe jõudu rohkem ? ... ” V : “ Ram EI OLE mälupulk . Mälupulk on Mälupulk . ” Et küsijal on RAM , ROM , USB ja mälupulk veidi ähmased mõisted , ilmneb juba küsimuse püstitusest , kuid ega asja ei tee eriti selgemaks ka sellele antud vastus ( “ Mälupulk on Mälupulk ” ) . Mida siis ikkagi see USB-liidesega pisikene mälupulgake , õigemini USB välkmäludraiv endast kujutab , sellest tulebki järgnevalt juttu . USB välkmäludraiv ( USB flash drive , UFD ) on portatiivne välkmälulülitustel põhinev mälukaardike , mis ühendatakse hostseadme ( näiteks arvuti ) USB-porti . Seade täidab väikesemahulise välise teisaldatava mäluseadme ülesandeid . USB välkmäludraivide iseärasuseks on see , et need seadmed ei vaja individuaalset elektritoiteallikat , sest oma loogikalülituste tööks vajaliku elektrienergia saavad nad USB-liidese kaudu hostseadmest . USB välkmäludraivide infomahutavus , võrreldes praeguste magnetilist andmekandjat kasutavate väliste kõvakettaseadmetega , on siiski oluliselt väiksem . Kuigi nende infomahutavus on kiiresti suurenenud , ei ületa see praegu ka parimatel siiski kaheksat gigabaiti ( näiteks Buslink USB<arv>.<arv> Flash Drive PRO <arv> ) . Enamasti on kasutusel aga <arv>- , <arv>- , <arv>- ja <arv>-megabaidised , harvemini aga <arv>- , <arv>- , ja <arv>-gigabaidise infomahutavusega seadmed . Et tegemist pole mitte vähese infomahutavusega mäludega näitab kas või seegi , et <arv>GB-le välkmäludraivile saab salvestada kas <arv> audio CD-plaadi ( mahutavusega <arv> MB ) sisu , või <arv> JPEG-vormingus <arv>-megapikslist kuva , või ligikaudu <arv> minutit DVD-kvaliteediga videofilmi ehk siis <arv> tundi MPEG <arv> vormingus esitatud liikuvkujutisi . Vaatamata sellele , et esimesed laiatarbe-USB välkmäludraivid ilmusid juba <arv>. aasta lõpul , pole nende valmistajad senini jõudnud üksmeelele küsimuses , kuidas seadmeid nimetada . Nii kasutatakse nimetusi nagu USB flash drive ( vahest kõige levinum nimekuju ) , USB drive , USB stick , USB key , USB memory key , pen drive , key drive , key fob , keychain drive , thumb key , pocket drive , jump drive , thumb drive , magic stick , micro hard drive jt. Hoolimata segadusest seadmete nimetamisel , ei vähenda see asjaolu USB välkmäludraivide kiiresti kasvavat populaarsust . USB Flash Drive Alliance andmete kohaselt müüdi <arv>. aastal ainuüksi USAs ligikaudu <arv> miljonit USB välkmäludraivi . Järgmiseks , s.t käesolevaks , <arv>. aastaks , on prognoositud aga nende läbimüügi kolmekordistumist . USB välkmäludraivide tootmine ei suurene iga aastaga mitte ainult koguseliselt , vaid ikka ja jälle suudavad tootjad meid üllatada uudse disaini ja lisafunktsioonidega varustatud välkmäludraividega . Nii näiteks on neid lisatud populaarsetele Ðveitsi armeenugadele ( <arv>-megabaidine SwissMemory ) , käekelladele ( <arv>- või <arv>-megabaidine Meritline USB Watch Drive ) , rääkimata juba laiast valikust tavapärasematest jässakamatest või siis , vastupidi , väga saledatest sulepeakujulistest USB mäludraividest . <arv>. aasta detsembris moodustati mittetulunduslik organisatsioon USB Flash Drive Alliance ( UFDA ) , eesmärgiga korrastada , ühtlustada ja välja töötada standardid USB välkmäludraivide valmistajatele , et tagada erinevate tootjate poolt valmistatud seadmete ühilduvust . Siiski ei ole esialgu kavas välja töötada USB välkmäludraivide kõikehõlmavaid tehniliste tingimusi , vaid piirdutakse ühtsete keskkonnaalaste , mehaaniliste ja rakendusspetsiifilisele liidetusele esitatavate turvanõuetega . VÄLKMÄLUDRAIVIDES KASUTATAVAD VÄLKMÄLUD Nagu juba eelnevalt öeldud , kujutab USB välkmäludraiv välkmälulülitustel põhinevat välismäluseadet , mis säilitab temasse talletatud informatsiooni ka olukorras , kus mälulülituste elektritoide on välja lülitatud . Keskseks komponendiks , millest oleneb välkmäludraivi üks olulisimaid näitajaid - infomahutavus , on seadmes kasutatav välkmälulülitus või -lülitused . Mälukeskkonnana kasutatakse programmeeritavate elekterkustutusega püsimälude ( EEPROM ) klassi kuuluvaid poolpüsimälusid , mis ei vaja mällu salvestatud informatsiooni säilitamiseks elektrienergiat ning sobivad talitlema pidevas salvestus-lugemisrežiimis . Vaatamata välkmälulülituste mitmetele voorustele ei tohiks alahinnata asjaolu , mida kahjuks kiputakse välkmälude korral ära unustama , et välkmälulülituste salvestus-lugemistsüklite arv on oluliselt väiksem , kui SRAM- või DRAM-põhistel muutmäludel või kõvaketastel . Vanematel välkmälulülitustel piirdus see umbes <arv> <arv> tsükliga , kuid uusimatel lülitustel küünib lugemis-salvestustsüklite arv juba miljoniteni . Lisaks pikeneb välkmälulülituste vananedes nende salvestustsüklite kestus . Eriti peaks sellega arvestama juhtudel , kui välkmäludraivi soovitakse kasutada kõvaketta asemel . Olenevalt välkmälulülituse mäluelementide sisemisest korraldusest eristatakse NOR- ja NAND-tüüpi välkmälusid . Ajalooliselt hakati esmalt kasutama NOR-tüüpi mäluelemente . Igas välkmälu mäluelemendis säilitatakse üht infobitti , kuid uusimates ( nn mitmetasemelistes ) mäluelementides saab säilitada ka rohkem kui üht infobitti . Lihtsustatult näeb NOR-tüüpi mäluelementidel välkmälu ehitus ja talitlus välja järgmiselt . Mälus rakendatakse informatsiooni talletamiseks maatriksina asetuvaid transistorstruktuure . Kuigi kasutatavad transistorstruktuurid on üldiselt sarnased traditsioonilistele MOS-väljatransistoridele , on nende oluliseks erinevuseks see , et transistoris on ühe paisu asemel kaks paisu . Üht paisudest nimetatakse juhtpaisuks ja teist ujupaisuks . Kui juhtpais moodustatakse transistoris samamoodi kui tavalises väljatransistoriski , siis ujupais isoleeritakse ümbritsevast keskkonnast oksiidikihiga . Kuna ujupais on isoleeritud , siis temasse kogunevad elektronid satuvad nagu omapärasesse “ lõksu ” ning neid saab edukalt ära kasutada infokandja funktsioonis . Ujupaisule kogunenud elektronid on juhitavad juhtpaisu poolt tekitatava elektriväljaga . Taolises mäluelemendis toimuvad lugemis-salvestusoperatsioonid üldjoontes järgmiselt : <arv>. Informatsiooni lugemiseks mäluelemendist tekitatakse selle juhtpaisul vajaliku tugevusega elektriväli , mis mõjudes ujupaisule kutsub esile selles sisalduvate vabade elektronide suunatud liikumise ( elektrivoolu ) . Tekkiva elektrivoolu tugevus sõltub vabade elektronide kogusest ( elektrilaengust ) ujupaisus . Olenevalt sellest , kas transistori lätte ja neelu vahel vool tekib või mitte , saab eristada mäluelemendis loogikalisi olekuid “ <arv> ” ja “ <arv> ” ( vastavad mäluelementi talletatud infobiti väärtusele ) . <arv>. Informatsiooni salvestamise režiimis tekitatakse esmalt transistori lätte ja neelu vahel vool ning seejärel tekitatakse juhtpaisu abil elektriväli , mille toimel viiakse mäluelemendi ujupais olekusse , mis vastab kas loogilisele olekule “ <arv> ” või “ <arv> ” . <arv>. Informatsiooni kustutamisel viiakse mäluelement algolekusse ( olekusse “ <arv> ” ) , selleks rakendatakse transistoris juhtpaisu ja lätte vahele kõrge pinge , mis põhjustab suure hulga elektronide kogunemise ujupaisu . Struktuurselt moodustatakse välkmäludes üksikuist mäluelementidest võrdse infomahutavusega üksused , mida nimetatakse mälusegmentideks ( -plokkideks , -sektoriteks ) . Välkmälus saab informatsiooni kustutada või modifitseerida üksnes kas kogu mäluruumi ulatuses ( üheaegselt kõigis mälusegmentides ) või mälusegmendi kaupa . Informatsiooni salvestamist või kustutamist üksikute mällu talletatud bittide , baitide või mälusõnade kaupa teha ei saa . Seega , kui teatavas mälusegmendis soovitakse muuta vaid ühe baidi või isegi biti väärtust , tuleb esmalt kustutada kogu antud mälusegmendi sisu ning seejärel taastada selles eelnevalt talletatud informatsioon , kus on tehtud juba soovitud korrektsioonid . Küll on aga võimalik lugeda välkmällu talletatud informatsiooni nii baitide kui ka mälusõnade kaupa . NOR-tüüpi välkmälude puuduseks loetakse seda , et neis kulub informatsiooni salvestamisele ja kustutamisele suhteliselt palju aega , kuid samas on kõik mälualad kergesti juurdepääsetavad . Seetõttu eelistatakse NOR-tüüpi välkmälusid kasutada juhtudel , kui seadme talitlusel esineb suhteliselt harva vajadus mälusisu muutmiseks . Viimane asjaolu on põhjuseks , miks NOR-tüüpi välkmälulülitusi pole ratsionaalne kasutada USB välkmäludraivides . Võrreldes NOR-tüüpi välkmäludega on NAND-tüüpi mälulülitused märksa kiiremad , neis saab kustutus ja salvestusoperatsioone sooritada lühema ajaga . Ühtlasi saab NAND-tüüpi mäludes kristalli pinnaühikule moodustada rohkem mäluelemente kui NOR-tüüpi välkmäludes . Seetõttu on NAND-tüüpi välkmäludes ühe infobiti maksumus madalam kui sama infomahutavusega NOR-tüüpi mäludes . NAND-tüüpi mälulülituste kitsaskohaks peetakse jadamisi toimuvat andmepöördust . Hoolimata sellest puudusest kasutatakse USB välkmäludraivides just NAND-tüüpi välkmälulülitusi . Üheks perspektiivseks suunaks välkmälude arendamisel on NROM- ( Nitride Read-Only Memory ) lülitused , kus ühes mäluelemendis on võimalik säilitada juba kahte infobitti . Kui NOR-tüüpi välkmäluelemendis osaleb informatsiooni salvestusprotsessides tuhandeid elektrone , siis NROM vajab vaid paarisada elektroni , seega saab vähendada mälulülituse energiatarvet ja tõsta töökiirust . USB VÄLKMÄLUDRAIVI PÕHIÜKSUSED JA TÖÖPÕHIMÕTE Kuna USB välkmäludraivide turul pakutakse laias valikus väga erinevate firmade tooteid , siis näib esmapilgul , et orienteerumine selles kirevas koosluses pole lihtne . Kui olukorraga aga veidi lähemalt tutvuda , siis midagi keerulist selles pole . Vaatamata välisele näivale mitmekesisusele , kasutatakse USB välkmäludraivides , eriti riistvara osas , üheülbalisi arhitektuurilis-struktuurseid lahendusi . Et lähemalt tutvuda USB välkmäludraivide ehituse ja talitluse üldiste põhimõtetega , sobib hästi firma Freescale Semiconductor , Inc <arv> poolt valmistatav <arv> MB NAND-tüüpi välkmälu- lülitust sisaldav ja USB <arv>.<arv> liidesega varustatud USB Thumb Drive ( RDHCS<arv>UF<arv>TD ) . USB Thumb Drive'i konstruktiivne lahendus on toodud fotol ( joonis <arv> ) . Sellelt on näha trükiplaadile monteeritud mikrokontrollerkiip , kvartsresonaator ja teised diskreetsed raadiokomponendid . Välkmäludraivi standardne USB-liidese A-tüüpi pistik asub trükiplaadi vasakul küljel . Trükiplaadi vastasküljele on monteeritud välkmälukiip .  Joonis <arv>. Välkmäludraivi USB Thumb Drive mikrokontrollerlülituse-poolne vaade ( seadme korpus on eemaldatud ) . Välkmälukiip asub trükiplaadi vastaspoolel . Joonisel <arv> on näidatud USB välkmäludraivi ühendus hostseadmega , antud juhul on selleks personaalarvuti , ja välkmäludraivi sisemised komponendid - UF<arv> mikrokontrollertuum ( mikrokontroller ) ning välkmälulülitus . Eraldi on välja toodud mikrokontrollertuuma sisemine struktuurne korraldus .  Joonis <arv>. Välkmäludraivi USB Thumb Drive põhikomponendid . Mikrokontrollertuuma UF<arv> ülesandeks on juhtida andmevahetust hostseadme ja välkmälulülituse vahel . Põhiliselt seisneb see kahe liidese teenindamises . Üks liidestest on standardne USB-liides , mis ühendab hostseadet välkmäludraiviga ( USB- ehk välisliides ) . Teine liidestest ( meedialiides ) ühendab mikrokontrollertuumas sisalduva IQUE-üksuse ( Integrated Queue ) ehk integreeritud andmejadakontrolleri välkmälulülitusega . Lisaks liideste ohjele tegeleb mikrokontrollertuum vastavalt hostseadmest saabunud korraldustele andmevahetus- operatsioonide ( andmete mällu salvestamine või mälust lugemine ) üldise ohjega . Mikrokontrollertuumana kasutatakse firma Motorola <arv>-bitise sõnapikkusega HCS <arv>-pere mikrokontrolleri baasil loodud mikrokontrollerlülitust MC<arv>S<arv>UF<arv> <arv> . MC<arv>S<arv>UF<arv> keskseks lülituseks on HCS<arv> protsessortuum , mida toetavad kiire <arv>-kilobaidine EEPROM-põhine välkmälu , <arv>,<arv> -kilobaidine muutmälu , spetsiaalne integreeritud andmejadakontroller ja mitmekesine valik liidestuslülitusi . Viimaste hulka kuuluvad traditsiooniline jadaliides , USB <arv>.<arv>-tüüpi jadaliides ja erinevate välkmälupõhiste mälukaartide ühendamiseks kohandatud meedialiides . Lisaks on mikrokontrollertuumas <arv>-kanaliline <arv>-bitine taimerlülitus , toitepinge reguleerimise lülitus ja taustrežiimis talitlev silurlülitus ( joonisel <arv> pole nimetatud lülitusi näidatud ) . Kõiki funktsionaalseid üksusi seob ühtseks tervikus mikrokontrollertuuma siseliides . Keskseks üksuseks , mida läbib välkmäludraivi andmeinformatsioon , on integreeritud andmejadakontroller . IQUE suudab samaaegselt teenindada kuni nelja sõltumatut andmejada . IQUE-üksus ohjab andmete plokkedastusi USB välkmäludraivi välkmälulülituse ja hostseadme vahel , ilma et neisse protsessidesse peaks sekkuma mikrokontrollertuuma protsessor . Vajaliku autonoomsuse saavutamiseks on IQEU varustatud individuaalse ( üksusesisese ) muutmäluga ( IQEU RAM-ga ) . IQEU talitlust ohjab UF<arv> tööd korraldav multitegumtöötlusele orienteeritud minituuma ( mini-kernel ) püsitarkvara . Minituuma püsitarkvara käivitub automaatselt välkmäludraivi pingestamisel . Lisaks IQEU üksuse juhtimisele , mis hõlmab näiteks IQUE RAMi aadressiruumi ohjet , loogiliste aadresside teisendamist füüsilisteks aadressideks , failipaigutustabeli ( FAT<arv> ) ohjet , tegeleb minituuma püsitarkvara samuti taimeri , USB-liidese , multimeediumi-liidese ja mõnede teiste lülituste talitluse korraldamisega . UF<arv>-lülitusega on ühendatud mikrolüliti S ( “ Lukk ” ) , mida kasutatakse selleks , et soovi korral saaks blokeerida USB välkmäludraivi informatsiooni salvestamist . Lüliti täidab põhimõtteliselt sama funktsiooni kui <arv>,<arv> MB diskettidel disketi plastümbrisel olev infosalvestust tõkestav liugplaadike . Välkmäludraivi pingestamisel kontrollitakse automaatselt lüliti S asendit ( “ Sees ” või “ Väljas ” ) , algselt tuvastatud olek loetakse kehtivaks seni , kuni seade on pingestatud . Kui välkmäludraivi talitluse ajal muudetakse lüliti S asendit , siis seade ei reageeri sellele . Valgusdioodindikaatori VD abil saab kasutaja jälgida USB välkmäludraivi töörežiimi . Reeglina helendab indikaator siis , kui toimub andmevahetus hostseadme ja USB välkmäludraivi vahel . Lühiajaliselt hakkab indikaator helendama ka siis , kui USB välkmäludraiv ühendatakse hostseadmega ning selles käivitub minituuma püsitarkvara . Nii teavitatakse seadme kasutajat USB välkmäludraivi valmisolekust talitluseks . USB Thumb Drive ' i NAND-tüüpi välkmälulülitus tagab temasse talletatud informatsiooni pikaajalise ja korrektse säilitamise . Lisaks juhib mälulülituse sisemine kontroller mälupöördusoperatsioonide vahetut läbiviimist mälus . Välkmälulülitusena kasutatakse jadapöördusega <arv>-gigabitise infomahutavusega mälukiipi TC<arv>DVG<arv>A<arv> . Mälulülitus on seesmiselt jaotatud <arv> võrdse infomahutavusega plokiks ( iga plokk mahutab <arv> baiti ) , mis omakorda koosnevad <arv> mäluleheküljest infomahutavusega <arv> baiti ( joonis <arv> ) . Informatsiooni kustutamine välkmälukiibis toimub ploki kaupa . Lisaks on mälukiibis veel täiendav <arv>-baidine staatiline register , mida kasutatakse mälulülitusesiseseks infovahetuseks . Mälukiibi suhtlus väliskeskkonnaga toimub läbi <arv>-bitise rööppordi , mille kaudu edastatakse nii andme- , aadressi- kui ka juhtinformatsiooni . Tehnilistele tingimuste kohaselt suudab mälulülitus TC<arv>DVG<arv>A<arv> korrektselt täita mitte vähem kui <arv> <arv> programmeerimis-kustutustsüklit . Normaalsetes keskkonnatingimustes peaks informatsioon säilima mälulülituses kuni kümme aastat .  Joonis <arv>. Välkmälulülituse TC<arv>DVG<arv>A<arv> sisemine hierarhiline korraldus Välkmäludraiv USB Thumb Drive suhtleb hostseadmega kiire USB <arv>.<arv>-standardile vastava liidese kaudu . USB Thumb Drive 'i ühendamine hostseadmega võib toimuda kuumvahetusrežiimis . Kui hostseadmes töötab operatsioonisüsteem Windows ME , Windows <arv> , Windows XP , Mac OS <arv>-<arv>X või Linux <arv>.<arv>.<arv> , siis välkmäludraivi kasutamiseks ei ole vaja mingeid täiendavaid draivereid hosti installeerida ( hosti USB-porti ühendatud USB välkmäludraiv on otsekohe töövalmis ) . Teatavasti kuuluvad USB-tüüpi liidesed jadaliideste klassi . Kuigi jadaliidesed on suhteliselt lihtsa konstruktiivse lahendusega ja küllaltki töökindlad , piirab nende kasutamist piiratud infoläbilaskevõime . Jadaliides edastab samu liine pidi nii andme- , aadressi- kui ka juhtinformatsiooni , kusjuures andmevahetus toimub pooldupleksrežiimis . Seetõttu toimuvad ka USB-liideses andmeedastused üksteisele järgnevaist seanssidest , millest igaüks sisaldab üht või enamat andmeülekannet . Iga andmeülekanne võib koosneda ühest kuni kolmest paketist ehk edastuse faasist , mis toimuvad kindlas järjestuses . Esmalt kantakse üle loapakett ( token packet ) , seejärel andmepakett ( data packet ) ja ülekande lõpetab konkreetse andmeülekande käitluspakett ( handshake packet ) . Maksimaalselt kantakse USB-liideses ühe andmeülekande jooksul host- ja välisseadme vahel üle <arv> baiti . Näiteks <arv> baidist koosneva andmemassiivi ülekandeks tuleks sooritada <arv> tehingut . Kaua selliseks operatsiooniks aega kulub , sõltub eeskätt sellest , kas kasutatakse USB<arv>.<arv> või USB <arv>.<arv> liidest . Kui “ aeglase ” USB<arv>.<arv>-liidese maksimaalseks andmeedastuse kiiruseks on kuni <arv> megabitti sekundis , siis “ kiire ” USB <arv>.<arv>-liidese edastuskiirus küünib juba <arv> megabitini sekundis . Suuremahuliste andmemassiivide ülekandel võib tunduda USB välkmäludraiv aeglasevõitu ja tihti peetakse töökiiruse languse põhjuseks USB-liidese piiratud infoläbilaskevõimet . Enamasti kipub süüdlaseks olema hoopiski laisavõitu välkmälulülitus . Paljudes USB välkmäludraivides sisalduvate välkmälulülituste infoläbilaskevõime ei ületa <arv> megabitti sekundis . Kuna USB välkmäludraive kasutatakse valdavalt suuremahuliste teisaldatavate andmekandjatena , mitte aga kõvaketta asendajatena , siis seadmete piiratud jõudlus ei tohiks olla eriti tõsiseks probleemiks . LÕ PETUSEK S Tehnilise progressiga kaasneb paratamatult seniste paradigmade kriitiline ümberhindamine . Arvutimälude maailmas on toimumas magnetilise andmekandjaga elektromehaaniliste mäluseadmete asendamine täiselektroonilistega . Viimaste üheks populaarsemaks esindajaks on mäluseadmed välkmäludel . Välkmälude tormiline võidukäik kuulutab paratamatut kadu vanamoodsatele kohmakatele mürarikastele ja võrdlemisi kapriissetele magnetlinte või -kettaid kasutavaile mäludraividele . USB välkmäludraivide head tehnilised näitajad - pidevalt suurenev infomahutavus , minimaalne energiatarve , kõrge töökindlus , väliskeskkonna kahjulike mõjude ( elektromagnethäiringud , vibratsioon , temperatuuri kõikumine jne ) taluvus , mehaaniliste sõlmede puudumine , väikesed gabariidid ja mass , käsitsemise lihtsus ning suhteliselt madal hind - on põhjusteks , miks need seadmed on arvutikasutajaskonna seas muutunud nii menukaiks . Lähitulevikus keskenduvad USB välkmäludraivide tootjad seadmete komponentide edasisele vähendamisele . Peagi on oodata , et valmivad suure infomahutavusega USB välkmäludraivid , mis tuginevad vaid ühele lausintegraallülitusele . Seeläbi lihtsustuks seadmete tootmistehnoloogia ning alaneks välkmäludraivide maksumus . Loodetavasti peaksid ilmuma ka esimesed traaditud USB välkmäludraivid ja välkmäludraivid , mis on varustatud väga kiire Firewire-liidesega ( IEEE <arv> , <arv>b ) .  Arvo Toomsalu , TTÜ arvutitehnika instituut Vajadus tõsta mikroprotsessorite jõudlust sunnib pidevalt täiustama olemasolevaid ja otsima uusi , veelgi paremaid protsessorarhitektuure . Mikroprotsessorite arendamisel pööratakse praegu enim tähelepanu superskalaarse , superspekulatiivse , multiskalaarse , andmeskalaarse arhitektuuriga ning jäljeprotsessoritele . Nimetatud protsessorarhitektuuridest kolme on lähemalt kirjeldatud artiklis “ Monomikro- protsessorite arhitektuuri põhilisi arengusuundi ” . Kui lühidalt meenutada , siis olenevalt käsuvoo töötluse korraldusest protsessoris eristatakse enamasti järgmisi põhilisi arhitektuurseid lahendusi . <arv>. Protsessorite arhitektuurid , kus jõudluse tõus saavutatakse üheainsa käsuvoo töötlemise kiirendamise kaudu . Selle suuna esindajateks on superspekulatiivse ja täiustatud superskalaarprotsessori arhitektuurid . <arv>. Protsessorite arhitektuurid , kus jõudluse tõstmiseks rakendatakse mitme käsuvoo töötlust , s.t harg- ehk lõimtöötlust . Võtet rakendatakse simultaanse hargtöötlusega protsessoris ja kiipmultiprotsessoris . <arv>. Protsessorite arhitektuurid , kus hargtöötluse võtteid kasutatakse ühe käsuvoo sees . Antud arhitektuuri esindavad jälje- , multiskalaarne ja andmeskalaarne protsessor . Järgnevalt vaatlekski veidi lähemalt kolmanda arhitektuurse suuna kahte esindajat - multiskalaarse ja andmeskalaarse arhitektuuriga protsessorit . Mis puutub jäljeprotsessorisse , siis seda on kirjeldatud ülalmainitud artiklis . MULTISKALAARSE PROTSESSORI ARHITEKTUUR Nimetus “ multiskalaarne ” tuleneb protsessori struktuursest korraldusest . Multiskalaarset protsessorit võib vaadelda kui kogumit jadamisi talitlevaist ( skalaarseist ) protsessoreist , mis töötlevad ühiselt üht jadaprogrammi . Multiskalaarse protsessori arhitektuuris väljendub ilmne püüe ära kasutada järjestikuse programmi käsuvoos peituvat sisemist rööpsust ning selle abil tõsta protsessori jõudlust . Kui väga lihtsustatult iseloomustada multiskalaarse protsessori tööpõhimõtet , siis võib öelda , et protsessor talitleb printsiibil “ jaga ja valitse ” . Multiskalaarse arhitektuuriga protsessoris arendatakse edasi superskalaarses protsessoris kasutatavat võtet , mis seisneb selles , et dünaamiline käsuvoog jagatakse mitmeks , teatavat liiki infoteisendustele spetsialiseerunud piirnevaiks käsukogumeiks . Jadaprogrammi tükeldamine käsukogumeiks võib toimuda kas riistvaraliselt , tarkvaraliselt või nende kahe meetodi ühendamisel . Moodustunud käsukogumeid töödeldakse rööpselt töötluselementide PE ( PE - Processing Element ) või nagu neid sageli veel nimetatakse - protsessorüksuste kogumil . Iga sellesse kogumisse kuuluv protsessorelement võib olla kas skalaarne või superskalaarne protsessor , mis iseseisvalt sooritab käsuvõtte ja käskude töötlemist . Väliselt näib multiskalaarse protsessori arhitektuur sarnanevat monokiipprotsessori ehk CMP arhitektuuriga , kuid sisuliselt on tegemist siiski erinevate protsessorarhitektuuridega . Erinevalt CMPst iseloomustab multiskalaarset protsessorit märksa tihedam informatiivne seos üksikute protsessorelementide vahel . Kui CMPs töödeldakse käsuvoogude erinevaid harusid ( lõimi ) , mis on staatiliselt moodustatud kas programmeerija või paralleliseeriva kompilaatori poolt , siis multiskalaarses protsessoris töödeldakse jadaprogrammi , mida on rikastatud täiendava järjestusinfoga . Et tavalist jadaprogrammi saaks multiskalaarses protsessoris töödelda , tuleb see spetsiaalselt ette valmistada . Selleks kirjeldatakse programmi käitumust spetsiaalse juhtvoograafi ehk CFG abil ( CFG - Control Flow Graph ) . CFG esitab orienteeritud graafi , mille tippudeks on programmi baas- ehk põhiplokid ( basic block ) . Graafi tippe ühendavad kaared tähistavad aga juhtvoo kulgemist ühest põhiplokist teise . Programmi töötlemist multiskalaarses protsessoris võib vaadelda kui liikumist piki CFGs moodustunud teid . Liikumisel CFGs moodustatakse dünaamiliselt põhiplokkide järjestus , mida täidetakse konkreetsel programmi töötluse etapil . Programmi jaotamine üksikuiks tegumeiks ( seejuures ei ole nõutav , et tegumid oleksid üksteisest sõltumatud ) toimub staatiliselt ning moodustunud tegumite kirjeldus lisatakse CFG kirjeldusse . Iga tegum kujutab endast teatavat käskude kogumit , selleks võib olla põhiplokk või mõni suurem osa põhiplokist , programmne silmus jne. Programmi töötluse korraldamisel multiskalaarses protsessoris tuleb arvestada asjaoluga , et liikumine CFGs toimub spekulatiivselt , s.t üksikute tegumsammudena ( task-sized step ) ilma peatusteta selleks , et lähemalt analüüsida tegumi üksikuid käske . Kõrge jõudluse saavutamiseks on vajalik , et programmi töötlus toimuks CFGs võimalikult rööpsena ( liigutakse rööpselt piki graafi paralleelseid teid ) . Samas ei tohi CFG alusel läbiviidav infotöötluse korraldus rikkuda töödeldava programmi enda seesmist jadastruktuuri . Tegumite töötlemist korraldab multiskalaarses protsessoris otseselt tegumijärjesti ( task sequencer ) , mis programmi töötluse käigus järjestab tegumeid spekulatiivselt , eraldades igale tegumile individuaalse töötluselemendi . Et paremini esile tuua infotöötluse korralduse põhimõttelisi erinevusi erinevais protsessor- arhitektuurides , on joonisel <arv> näidatud , kuidas lähtekoodist ( <arv>a ) , millest lähtuvalt moodustatakse ka CFG , kujuneb konkreetne töödeldavate käskude dünaamiline voog ( <arv>b ) , mida võib töödelda kas tavalises jadaprotsessoris ( <arv>c ) , käsukonveierit sisaldavas protsessoris ( <arv>d ) , superskalaarses protsessoris ( <arv>e ) või siis multiskalaarses protsessoris ( <arv>f ) . Sümbolitega A , B , C , D ja E on joonisel tähistatud erinevad käsud . MULTISKALAARSE PROTSESSORI MIKROARHITEKTUURIST Multiskalaarse arhitektuuriga protsessoril võib olla erinevaid struktuurseid lahendusi , neist üks tuntumaid on esitatud joonisel <arv>. Kujutatud protsessoris on n protsessorelementi ( PE<arv>-PEn ) , igaühes neist töödeldakse tegumijärjesti poolt neile eraldatud tegumit seni , kuni kõik antud tegumisse kuuluvad käsud on täidetud . Et tagada protsessorelementide autonoomne rööpne talitlus , on kõik PEd varustatud individuaalsete riistvaraliste ressurssidega . Töödeldavas tegumis sisalduvate käskude säilitamiseks on käsuvahemälu , käskude töötlust sooritab vastav töötlusüksus , lähteandmete ning tulemite säilitamiseks on piisavalt suure infomahutavusega registrikogum .  Joonis <arv>. Käsuvoo töötlemine erineva arhitektuuriga protsessoreis .  Joonis <arv>. Multiskalaarse arhitektuuriga protsessori mudel . Multiskalaarse arhitektuuriga protsessori kasutamisel tõstatuvad olulised küsimused : kuidas vältida või minimeerida tegumitevahelistest sõltuvustest tulenevaid jõudluspiiranguid ja kuidas otstarbekalt korraldada tegumitevahelist informatsioonivahetust ? Multiskalaarse arhitektuuriga protsessoris toimib käskude töötlusesse suunamise kahetase- meline mehhanism , mis arvestab nii tegumite sisemisi kui ka tegumitevahelisi sõltuvusi . Tegumi- sisene mehhanism tegeleb iga tegumi sees käskude dünaamilise järjestuse prognoosimisega . Tegumitevaheline mehhanism prognoosib käskude järjestusi tegumeis , võttes arvesse ka tegumisisese prognoosi tulemusi . Kui tegumisisesel prognoosil piirdutakse vaid ühe ennusti kasutamisega , siis tegumitevahelisel prognoosil rakendatakse iga protsessorüksuse tarvis individuaalset ennustit . Et tagada sisulise jadastatuse säilimine töödeldavas programmis , lähtutakse protsessori töö korraldamisel kahest põhimõttest . <arv>. Igas protsessorelemendis toimub talle eraldatud tegumi töötlemine jadamisi . <arv>. Protsessorelementide kogumisse kuuluvate PEde käivitamine toimub jadamisi . Selleks moodustatakse protsessorelementidest ühesuunaline ringstruktuur . Joonisel <arv> kujutatud multiskalaarse protsessori mudelis on näidatud PEde ringstruktuuris ( PE<arv>-PEn ) protsessorelement , mis alustab programmi töötlemist esimesena nn pea-protsessorelement , ja viimasena käivituv ehk nn lõpp-protsessorelement . PEde kindla käivitusjärjekorra abil tagatakse töödeldavate andmete õige ajaline liikumine nende vahel . Mis puutub multiskalaarse protsessori mälusüsteemi , siis seda vaadeldakse kui tervikut , mille moodustavad vastava protsessorelemendi registrikogum ja protsessorelemendile eraldatud individuaalne mälulülitus ehk andmepank AP . Multiskalaarses protsessoris toimub andmevahetus nii lokaalselt ( protsessorelement-kinnistatud andmepank ) kui ka globaalselt protsessorelementide vahel . Viimasel juhul toimub andmevahetus sünkroonselt . Et tagada protsessorelementidele piisav autonoomsus , varustatakse kõik PEd neile vajaliku üldkasutatava informatsiooniga ( üldkasutatava info koopiaga ) . Protsessorelementides töötluse käigus moodustunud tulemite edastamisel teistele PEdele arvestatakse aga eelnevalt kompilaatori poolt genereeritud maske . Andmeid edastatakse otse ( läbi otseedastuse ringstruktuuri ) vaid neile PEdele , mis kasutavad antud protsessorelemendis saadud tulemeid lähteandmetena . Andmeedastuse ohjet korraldab vastav registerstruktuur , mis analüüsib andmetega kaasnevaid juht- ehk maskibitte . Maskibittide asukoht määratakse kindlaks programmi kompileerimise etapis . Tegumi töötlus PEs käivitub vaid tingimusel , et kõik infotöötluseks vajalikud lähteandmed on kasutuskõlblikud . Struktuurselt on multiskalaarse protsessori andmemälu korraldatud ühiskasutatavate vahemälusegmentide ehk andmepankade kogumina ( AP<arv>-APn ) . Andmepank pole siiski pelgalt andmevahemälu , selle koosseisu kuuluvad lisaks tavalistele mälulülitustele veel kaks olulist lülitust - ARB ( Address Resolution Buffer ) ja MDT ( Memory Dependence Table ) . Infovahetus andmepankadega erineb infovahetusest PEde vahel . Kui PE peab oma tegumi töötluse käigus sooritama andmepangast laadeoperatsiooni , siis puudub tal teave selle kohta , kas andmed , mida valmistatab ette mõni teine PE , on selles juba mälus olemas . Et mitte peatada infotöötlust protsessorelementides , lähtutakse multiskalaarses protsessoris spekulatiivsest andmesõltumatusest . Oletatakse , et antud PEs toimuv laadeoperatsioon ei ole sõltuv tema eellas-PEs toimuvast infotöötlusest . Seega viiakse mälupöördus läbi spekulatiivselt . Spekulatiivsete mälupöörduste ohjel etendab olulist rolli ARB-lülitus , mis jälgib , et spekulatiivsed mälupöördused toimuksid korrektselt , ning vajaduse korral ta blokeerib pöörduse . MDPs säilitatakse aga lisainformatsioon andmesõltuvuste kohta . Kokkuvõttes võib öelda , et multiskalaarses protsessoris toimub informatsiooni spekulatiivtöötlus kahel tasemel . <arv>. Spekulatiivsus juhtimise tasemel , seda rakendab tegumijärjesti . <arv>. Spekulatiivsus andmesõltuvuste tasemel , seda rakendatakse igas töötluselemendis . Muidugi võib multiskalaarses protsessoris informatsiooni spekulatiivtöötlust kasutada veelgi laialdasemalt . Nii näiteks võiks tegumite töötlusel kõrvuti etteantud andmetega kasutada prognoositavaid andmeväärtusi . ANDMESKALAARSE PROTSESSORI ARHITEKTUUR Erinevus nüüdisaegsete mikroprotsessor- ja mälulülituste talitluskiiruse vahel ilmutab jätkuvat kasvutendentsi . Klassikaline “ mälumüüri probleem ” on endiselt väga aktuaalne . Aeglased mälu- lülitused ei võimalda täielikult ära kasutada protsessorite potentsiaalselt jõudlust . Talitluskiiruste sobimatust püütakse leevendada üha suurema infomahutavusega mälulülituste integreerimisega protsessorkiipidesse ning keerukate mitmetasemeliste mälusüsteemide kasutuselevõtuga . Mälumüüri probleemile püüab lahendust pakkuda ka andmeskalaarse arhitektuuriga protsessor . Andmeskalaarses arhitektuuris püütakse lahendada kaht mikroprotsessorsüsteemide jõudlust piiravat probleemi . <arv>. Kuidas laiendada monokiiparvutite piiratud mäluruumi . <arv>. Kuidas paralleliseerida jadatoimeliste monoprotsessorsüsteemidele loodud tarkvara . Põhirõhk andmeskalaarse arhitektuuriga protsessoreis on siiski asetatud sellele , kuidas parandada mikroprotsessorsüsteemis mäluallsüsteemi tõhusust . Arhitektuuri eesmärgiks ei ole informatsiooni jadatöötluse asendamine rööptöötlusega . Andmeskalaarne protsessori arhitektuur tugineb MMM-arhitektuursele mudelile ( MMM - Massive Memory Machine ) , mis võeti kasutusele <arv>. aastate algul . MMM-mudeli loomisel lähtuti omakorda sünkroonsest SISD-arhitektuurist , milles suurem arv miniarvuteid ühendati omavahel maailmastuva leviedastussiini ( global broadcasting bus ) abil . Iga sellesse süsteemi ühendatud miniarvuti haldas süsteemi ( füüsilisest ) mäluruumist võrdlemisi suurt osa . Kirjeldatava arvutisüsteemi iseärasus seisnes selles , et iga operandi valdas vaid üks kindel süsteemi kuuluv miniarvuti ( protsessor ) . Vallatavat operandi säilitati vaid antud miniarvuti mälus . Kõik süsteemi ühendatud miniarvutid töötlesid ühte ja sama programmi nn lukustusrežiimis ( lock-step ) . Iga konkreetset operandi valdav protsessor , kui ta pöördus vallatava operandi poole , levitas seda ka teistele süsteemi kuuluvaile protsessoreile , et need saaksid rööpselt samu infoteisendusi läbi viia . Vallatavate andmete ( operandide ) leviedastus toimus läbi miniarvuteid ühendava globaalsiini . Taoline infotöötluse viis on tuntud kui töötlus sünkroonse ESP-mudeli alusel . Andmeskalaarse protsessori arhitektuuris arendati MMM-mudelit ja ühendati ühtseks tervikuks protsessorite omavahelist suhtlust korraldav ESP-mudel käskude järjekorravälise töötlusega . Lisaks asendati sünkroonne ESP-mudel asünkroonse ESP-mudeliga . Asünkroonses ESP-mudelis saavad need protsessorid , mis valdavad antud hetkel töödeldavaid operande ( andmeid ) , sooritada infotöötlust ennetavalt võrreldes ülejäänud protsessoritega . Seeläbi kiireneb leviedastuse kaudu edastatavate andmete jõudmine teiste süsteemi kuuluvate protsessoriteni . Kirjeldatud infotöötluse korraldust nimetatakse andmelõiminguks ( datathreading ) . Erinevalt aga sünkroonse ESP-mudeli alusel toimuvast andmelevist peab asünkroonse ESP-mudeli korral varustama iga leviedastuse kaudu ülekantavat andmeüksust täiendava informatsiooniga aadressi või sildikoodi näol . See on vajalik seetõttu , et andmeedastused võivad toimuda mittedetermineeritud järjekorras , sest protsessoreis endis toimub käskude järjekorraväline töötlemine . Kui süsteemis rakendatakse leviedastust mitte lähteandmete ( operandide ) edastamiseks , vaid töötluse tulemite edastamiseks , siis on tegemist tulemsuhtlust ( result communication ) rakendava süsteemiga . Kasutades kõigi andmete edastamiseks vaid leviedastust , võib peagi tekkida olukord , kus protsessoreid ühendav globaalsiin koormatakse lihtsalt üle , millele järgneb paratamatult süsteemi jõudluse drastiline langus . Et vähendada protsessorite omavahelise suhtluse intensiivsust , dubleeritakse süsteemi kuuluvate protsessorite lokaalmäludesse sagedasti vajatavaid andmeid . Andmete dubleerimine võib toimuda erinevatel tasemetel - sõna , vahemälu rea , mälulehekülje kaupa . Andmeid võib dubleerida kas staatiliselt või dünaamiliselt . Üldjuhul andmete jämedakoeline staatiline dubleerimine ei taga dubleeritavatele andmetele aga sellist lokaalsuse astet , mida pakub andmete peenekoeline dünaamiline dubleerimine . ANDMESKALAARSE PROTSESSORI TALITLUS Andmeskalaarse arhitektuuriga protsessoris toimub jadaprogrammi töötlemine liiasusega , paralleelselt mitmel protsessoril või protsessorüksusel ( PÜ ) . Sageli kasutatakse termini “ protsessorüksus ” kõrval terminit “ protsessorelement ” . Erinevalt aga primaarse protsessoriga tavapärastest mikroprotsessorsüsteemidest on andmeskalaarses protsessoris esmatähtis mälu ja selle korraldus . Andmeskalaarse protsessori kasutamisel jaotatakse töödeldav jadaprogramm süsteemi kuuluvate mälude vahel . Iga mälu juurde kinnistatakse protsessorüksus . Kõik protsessorüksused töötlevad üht ja sama programmi , s.t neis toimub asünkroonselt ühtede ja samade käskude ning andmete töötlemine . Protsessorüksuste kasutuses olev mäluruum jagatakse sõltuvalt andmete päritolust kaheks - dubleeritud ( replicated ) andmete ja edastatud ( communicated ) andmete mäluruumiks . Dubleeritud andmeid säilitatakse püsivalt iga protsessorüksuse juures nn dubleeritud andmete mäluruumi osas . Edastatavaid andmeid levitatakse globaalsiini vahendusel kõigi protsessorüksuste vahel , neid säilitatakse igale protsessorüksusele eraldatud nn edastatavate andmete mäluruumi osas . Nagu märgitud , dubleeritakse lehekülgede kaupa iga protsessorüksuse lokaalmällu vaid need andmed , mida protsessor sageli vajab . Protsessori pöördumised oma lokaalmälu poole ei põhjusta lisakoormust süsteemi globaalsiinil . Neid andmeid ( operande ) , millest on vaid üks koopia ja mida valdab vaid antud protsessorüksus , säilitatakse edastatavate andmete mäluruumis . Kui protsessorüksus sooritab ainuvallatava operandi laadimist oma siseregistritesse , siis edastab ta selle operandist ka kõikidele teistele süsteemi ühendatud protsessorüksustele . Kui protsessorüksus soovib laadida operandi , mida ta ise ei valda , siis peatatakse laadeoperatsioon PÜs seniks , kuni sama laadeoperatsiooni sooritab selline protsessorüksus , mis valdab antud operandi . Seejuures on oluline , et operandi mittevaldav protsessorüksus ise ei pöördu teiste protsessorite poole , vaid jääb passiivselt ootama , kuni temani jõuab globaalsiinilt leviedastav operand . Joonisel <arv> on toodud kahe mikroprotsessorsüsteemi mudelid : üks neist kujutab traditsioonilist monoprotsessorsüsteemi ( <arv>a ) , teine aga nelja protsessorüksust ( PÜ<arv>-PÜ<arv> ) sisaldavat andmeskalaarse protsessoriga süsteemi ( <arv>b ) .  Joonis <arv>. Traditsioonilise monoprotsessorsüsteemi ( a ) ja neljast protsessorist koosneva andmeskalaarse arhitektuuriga ( b ) mikroprotsessorsüsteemide mudelid ( CPU - protsessor ; GB - globaalsiin ; SMEM - süsteemimälu ; ICMEM - protsessorkiibisisene mälu ( näiteks vahemälu ) ; CMEM - edastatud andmete mälu ; RMEM - dubleeritud andmete mälu . CMEM ja RMEM moodustavad protsessorkiibisisese lokaalmälu ) . Kokkuvõtlikult võib öelda , et andmeskalaarse protsessoriga süsteemis lähtutakse infotöötluse korraldamisel järgmistest põhimõtetest . <arv>. Kõik protsessorüksused töötlevad sama programmi , kuid üksteisest veidi erinevatel ajahetkedel . <arv>. Üks protsessorüksustest ( peaprotsessor ) töötleb informatsiooni teiste protsessorüksustega võrreldes ennetavalt ( leviedastades teistele vajalikke operande ) . <arv>. Kui programmi töötluse käigus tekib olukord , kus vajatakse operandi , mida antud hetkel peaprotsessorina toimiv protsessorüksus ei valda , siis leiab aset peaprotsessori vahetumine . Uueks peaprotsessoriks saab süsteemis see protsessorüksus , mis valdab vajatavat operandi . <arv>. Kõik protsessorüksused peatavad infotöötluse ajaks , kuni töötluse ohje võtab üle uus peaprotsessor ning edastab vajalikud andmed ( operandi ) . <arv>. Andmeskalaarses protsessoris kasutatakse ainult ühesuunalisi infoedastusi ( globaalsiinil ei esine kunagi salvestusoperatsioone , selles leiavad aset vaid laadeoperatsioonid ) . Vaatleme detailsemalt , kuidas andmeskalaarse arhitektuuriga protsessoris viiakse läbi pea-protsessorelemendi ( -üksuse ) vahetust . Lihtsuse mõttes lähtume sünkroonsest ESP-mudelist . Töötagu andmeskalaarses protsessoris kolm protsessorüksust PÜ<arv> , PÜ<arv> ja PÜ<arv> . Igal ajahetkel saab pea-protsessorüksuse ülesandeid täita neist vaid üks - see , kes valdab antud hetkel vajalikke andmeid . Igal ajahetkel toimub vaadeldavas süsteemis vaid ühe andmelõime töötlemine . Kui vaheldub pea-protsessorüksus , siis sisuliselt minnakse üle uue andmelõime töötlusele . Eeldame , et jadaprogramm koosneb järgmistest andmelõimedest : w<arv>-w<arv> , w<arv>-w<arv> , w<arv> ja w<arv>-w<arv> . Kirjeldatud andmelõimedes tähistab sümbol “ w ” operandi , kusjuures iga operand wion sõltuv talle eelnevast operandist wi-<arv>( w i = f ( wi-<arv>) / i = <arv> , ... , <arv> ) . Operande w<arv> , w<arv> , w<arv> , w<arv> , w<arv> ja w<arv> valdab protsessorüksus PÜ<arv> , operande w<arv> ja w<arv> protsessorüksus PÜ<arv> ning operandi w<arv> protsessorüksus PÜ<arv> . Joonisel <arv> on näidatud , kuidas ajaliselt on korraldatud andmestringi ( w<arv> , ... , w<arv> ) töötlus selles andmeskalaarses protsessoris .  Joonis <arv>. Andmestringi ( w<arv> , ... , w<arv> ) töötlus kolmest protsessorüksusest koosnevas andmeskalaarses protsessoris . Ajahetkel <arv> alustab andmete töötlemist protsessorüksus PÜ<arv> , mis ühtlasi täidab ka pea-protsessorüksuse ülesandeid , sest ta valdab operandi w<arv> . Mõningase hilinemisega jõuab leviedastatav operand w<arv> protsessorüksustesse PÜ<arv> ja PÜ<arv> . Ajahetkel <arv> hakkab pea-protsessorüksuse ülesandeid täitma PÜ<arv> , mis valdab operande w<arv> ja w<arv> . Seejärel võtab ajahetkel <arv> juhtimise üle protsessorüksus PÜ<arv> , mis valdab operandi w<arv> , kuid seda mitte kauaks , sest ajahetkel <arv> hakkab pea-protsessorüksuse ülesandeid taas täitma protsessorüksus PÜ<arv> . Huvitavalt korraldatakse andmeskalaarseis protsessoreis ka laade- ja salvestusoperatsioonide täitmine dubleeritud ja edastatud andmeid sisaldavais mäludes . Joonisel <arv> on toodud näide olukorrast , kus leiavad aset laade- ja salvestusoperatsioonid protsessorüksuste PÜ<arv> ja PÜ<arv> dubleeritud ja edastatud mäluruumi osades .  Joonis <arv>. Laade-salvestusoperatsioonide sooritamine protsessorüksustes PÜ<arv> ja PÜ<arv> . Eeldame , et joonisel kujutatud protsessorüksustes toimuvad erinevad laade- ( ld-<arv> , ld-<arv> ) ja salvestus- ( st-<arv> ja st-<arv> ) operatsioonid , millesse on haaratud dubleeritud ja edastatud andmete mäluruumi osas paiknevad operandid . Operatsioonid ld-<arv> ja st-<arv> PÜ<arv>s ja PÜ<arv>s on seotud andmevahetusega protsessorüksuste dubleeritud andmete mäluruumi osas asuvate andmetega ja võivad toimuda rööpselt mõlemas protsessorüksuses . Laadeoperatsioon ld-<arv> on seotud andmetega , mida valdab protsessorüksus PÜ<arv> , seetõttu peatatakse protsessorüksuses PÜ<arv> infotöötlus seniks , kuni PÜ<arv> on läbi globaalsiini edastanud vajalikud andmed ( operandi ) PÜ<arv>-te . Samal ajal kui PÜ<arv> ootab puuduvat operandi , sooritab PÜ<arv> ettenähtud infoteisendused ning alustab tulemi salvestamist ( operatsiooni st-<arv> ) oma edastatavate andmete mäluruumi ossa . Et protsessorid töötlevad ühte ja sama programmi ka samade andmetega , siis genereerivad nad ka samu tulemeid . Viimased kuuluvad salvestamisele edastatavate andmete mäluruumis , kuid salvestus viiakse läbi vaid protsessorüksuses PÜ<arv> , protsessorüksuses PÜ<arv> tulemit ei salvestata . Et andmeskalaarses protsessoris rakendatakse asünkroonset ESP-mudelit , mis eeldab käskude järjekorravälist töötlemist , siis protsessoris võib igal ajahetkel olla töötluses mitu erinevat andmelõime ( mitu erinevat käskude jada ) . Asünkroonsus protsessorüksuste talitluses võimaldab neis sooritada ennetavalt vaid neid arvutusi , kus kasutatakse antud protsessorüksuse poolt vallatavaid andmeid . Teisalt aga , kuna asünkroonses andmeskalaarses protsessoris iga PÜ töötleb käske erinevas ( individuaalses ) järjekorras , siis ajutiselt võib neis loobuda talitlusest ESP-mudeli alusel ning sooritada privaatseid arvutusi , edastades teistele protsessorüksustele vaid töötlustulemeid , mitte aga operande ( s.t sooritada tulemedastust ) . Et andmeskalaarses protsessoris rakendatakse spekulatiivtöötlust , siis erilist tähelepanu tuleb pöörata infotöötluse korrektsele ajastatusele . Spekulatiivtöötlust võib protsessorüksustes läbi viia kahel viisil . <arv>. Andmete spekulatiivsest leviedastusest hoidutakse seniks , kuni pole selgunud läbiviidud spekulatiivtöötluse õiguspärasus . <arv>. Alustatakse küll spekulatiivtöötluse käigus kasutatavate andmete leviedastust , aga niipea kui selgub , et spekulatiivtöötlus polnud õiguspärane , siis teavitatakse kohe teisi protsessorüksusi sellest , et levitatud andmed on kehtetud . Et spekulatiivtöötluse korral vähendada infoliikluse intensiivsust globaalsiinil , võib spekula- tiivsete laadeoperatsioonide ohje efektiivsuse tõstmiseks rakendada täiendavat informatsiooni , mis iseloomustab laetavate andmete usaldatavust . Kõrge usaldatavusega andmeid leviedastatakse teistele protsessorüksustele viivitusteta , ja kui peakski selguma edastatud andmete kehtetus , siis teavitatakse sellest kohe . Madala usaldatavusega andmeid ei suunata leviedastusse , vaid hoitakse antud protsessorüksuse juures senikaua , kuni selgub spekulatiiv- töötluse õiguspärasus , alles seejärel kuuluvad andmed leviedastusele . Nagu protsessori töökirjeldusest nähtub , on andmeskalaarse arhitektuuriga protsessori üheks kriitiliseks sõlmeks globaalsiin , mille läbilaskevõimest sõltub suurel määral kogu süsteemi töövõime ja jõudlus . Andmeskalaarse arhitektuuriga protsessorite globaalsiini struktuurilis- topoloogiline korraldus peab tagama süsteemis kiire ja usaldatava andmeedastuse , samas ei tohiks see olla liialt kallis . Ühe võimaliku globaalsiini lahendusena on välja pakutud ANSI/IEEE standardile <arv>-<arv> vastav ringtopoloogiat omav SCI-liides ( SCI - Scalable Coherent Interface ) . Kuigi esmapilgul võib jääda mulje , et andmeskalaarse arhitektuuriga protsessor raiskab oma koosseisu kuuluvate protsessorüksuste võimsust , pole see siiski päriselt nii . Hinnangu andmisel andmeskalaarsele protsessorarhitektuurile tuleks kindlasti arvesse võtta järgnevat . <arv>. Andmeskalaarse protsessori arhitektuur on orienteeritud efektiivsele mälusüsteemile ning programmidele , mille töötlusaeg sõltub oluliselt mälu kiirusest ning mille töötlust on raske paralleliseerida . Taolise arhitektuuriga protsessori kasutamine annab häid tulemusi nende programmide korral , kus klassikalised paralleliseerimise algoritmid ei suuda anda soovitud tulemusi . <arv>. Tõsi , praegu kasutatavad tehnoloogiad ei suuda tagada , et andmeskalaarse arhitektuuriga süsteemid suudaksid oma majanduslike näitajate poolest võistelda teiste tänapäevaste kõrgjõudlusega mikroprotsessoritega . Selleks et tõsta nende protsessorite konkurentsivõimet , on vaja : a ) et kasutatavate protsessorüksuste endi maksumus oleks võimalikult madal , põhiliselt peaks süsteemi hind sõltuma selles kasutatavate mälulülituste maksumusest ; b ) põhiline infoliiklus peaks toimuma protsessorüksuse ja tema lokaalmälu vahel . Infoliikluse intensiivsus teiste süsteemi kuuluvate mäludega peaks olema minimaalne . Andmeskalaarse arhitektuuriga protsessoreid võib realiseerida mitmeti . Nii võib selleks olla arenenud struktuuriga arukas mälu ehk IRAM , täiustatud arhitektuuriga kiipmultiprotsessor või teatav tööjaamade võrk . KOKKUVÕTTEKS Kui lühidalt kokku võtta , mille poolest erineb jäljeprotsessori , multiskalaarse ja andmeskalaarse protsessori arhitektuur - kõigis neis saavutatakse jadaprogrammi töötluse kiirendamine lõimetasemelise spekulatiivtöötluse abil - siis võiks välja tuua järgmise : Jäljeprotsessoris saavutatakse protsessori kõrge jõudlus käsutasemelise rööpsuse oskusliku ärakasutamise tõttu , mida toetab veel ka protsessori kõrge takteerimissagedus . Jäljeprotsessori iseloomulikuks tunnuseks on suure arvu protsessorelementide rakendamine , mis töötlevad käskude dünaamilisi järgnevusi ehk programmijälgi . Multiskalaarses protsessoris jaotatakse töödeldav jadaprogramm üksikute tegumite kogumiks , mida siis töödeldakse rööpselt suurel hulgal protsessorelementidel . Protsessori talitlust ohjatakse kesksest kiiretoimelisest ( riistvaralisest ) järjestusüksusest . Andmeskalaarses protsessoris toimub ühe ja sama jadaprogrammi rööpne töötlemine suurt hulka protsessorüksusi sisaldaval kogumil , kasutades hajutatud andmekogumeid . Protsessori jõudlus sõltub eeskätt tema mälusüsteemi efektiivsusest .  Innar Liiv , TTÜ informaatikainstituut SISSEJUHATUS Andmete maht , mida oleks vaja töödelda , kasvab pidevalt . Kümmekond aastat tagasi peeti utoopiliseks analüüsitavaks andmemahuks gigabaite . Tänaseks haldavad paljud rahvusvahelised korporatsioonid terabaitides andmeid , suurematel neist tuleb juba opereerida petabaitidega . Ilmselt ei ole siin midagi imestada - andmete maht peabki kogu aeg kasvama , sest salvestatakse pidevalt ajalugu ( mis peab jäädvustuma , isegi kui hetkel ei osata seda kõige otstarbekamalt kasutada ) ning tänast päeva , mille kohta iga hetk aina rohkem informatsiooni talletatakse . Lihtsaimaks näiteks on ostukeskused - iga triipkoodiga kassast läbi läinud kaup salvestatakse unikaalselt andmebaasi , nõnda kõikide kassade ning ketis olevate poodidega . Mõistagi muutub taolise andmehulga analüüs pidevalt keerulisemaks . Seetõttu oleks andmehulkade paremaks töötlemiseks hädasti tarvis uusi suundi ning ideid , s.t mitte ainult optimeeritumaid algoritme , vaid pigem erisuguseid lähenemisviise . Suurenenud informatsiooni- hulka oleks tarvis pöörata koondatud teadmiseks ning ellu rakendada . Valdkonda , mis just selle probleemiga tegeleb , nimetatakse andmekaevandamiseks . ANDMEKAEVANDAMISE OLEMUS “ Mine sinna - ei tea kuhu , too seda - ei tea mida ! “ ( Vene muinasjutt ) Andmekaevandamine ( data mining ) ei erine põhimõtete poolest traditsioonilisest kaevandamisest - teatud oskusteabe ning vahendite abil püütakse pinnasest kätte saada väärtuslikke maavarasid . Andmete puhul täpselt samamoodi : kindla oskusteabe ning vahendite abil proovitakse suurest andmehulgast kätte saada väärtuslikku ning isegi ootamatut informatsiooni . Eesmärgiks viimasest saadud teadmist edukalt ka mingis kindlas valdkonnas rakendada . Julgeksin üsna kindlalt ka väita , et niisama loomulik kui täna on traditsioonilises kaevandamises erinevad load , keelud ja piirangud , ei ole väga kaugel ka ajaloo kordumine andmekaevanduse kontekstis . Privaatsuspoliitika ning paranoiline ( paraku tihti mitte ka alusetu ) hoiak erinevate eraeluliste andmete kogumisele on juba käesoleval hetkel tekitanud avalikke diskussioone erinevate andmete analüüsimise eetikas , seda ka Eestis . Tõepoolest , iga turundusdirektori unistus oleks ekspluateerida klientide alateadvust ning panna neid seeläbi rohkem ostma . Lähemalt selle üle arutledes võib siiski jõuda tõdemuseni , et tegelikult ongi alati püütud seda teha - lihtsalt vahendid on olnud teised . Loodetavasti kirjeldabki “ andmekaevandamine “ kõige paremini juba termini enda läbi ning traditsioonilise kaevandamise analoogia abil tegevuse põhiolemust . Kirjanduses on välja pakutud mitmeid erinevaid laiemalt levima jäänud definitsioone : etapp teadmushõives , mille üldine eesmärk on leida andmetest paikapidavaid , uudseid , potentsiaalselt kasulikke ning lõppkokkuvõttes mõistetavaid mustreid [ <arv> ] mahukate andmete analüüs leidmaks uusi seaduspärasusi ja ootamatuid seoseid ning summeerida andmed sellisel uudsel viisil , et need oleksid omanikule samaaegselt arusaadavad kui ka kasulikud [ <arv> ] mustrite avastamise protsess , mis peab olema automaatne või ( sagedamini ) poolautomaatne . Leitud mustrite sisu peab olema selline , et nad suudaksid juhatada teed mõne teatud eeliseni , tüüpiliselt ärilise konkurentsieeliseni [ <arv> ] Autori arvates on eelnenud definitsioonid oma tehnilisusega ning terminoloogia tõttu valdkonnaga alles tutvuda soovijatele keerukad . Lisaks ei tohiks olla üldine definitsioon liigselt mõne kindla tehnika keskne ega seotud konkreetse tegevusalaga . Pigem olgu andmekaevanduse definitsioon üldisem ( nagu pakutud - analoogia traditsioonilise kaevandamisega ning väärtusliku informatsiooni leidmine ) , hilisemalt annab alati minna vastavalt täpsemale eesmärgile spetsiifilisemaks . Kõige üldisemas mõttes on andmekaevandamisel kaks eesmärki : [ <arv> ] kirjeldamine - keskendub andmete selgitamisele , mis võimaldaks analüütikul nende sisse näha ning neid interpreteerida prognoosimine - võimaldab olemasolevate tunnuste põhjal luua ennustusmudeleid tundmatute või tulevikuväärtuste leidmiseks . Tuuakse välja ka kolmas - juhtimata ning järelevalveta avastamine ( nt [ <arv> ] , [ <arv> ] ) , ent tegelikult võiks selle pigem liigitada ikkagi kirjeldamise alla , sest tegemist ei ole niivõrd eesmärgiga kui pigem protseduuri tüübiga , jaotades tehnikad selle järgi veel eraldi : juhitud tegevused - küsimus , millele vastust otsitakse , on juba olemas - sihikindlalt liigutakse selle vastuse leidmise suunas juhtimata , järelevalveta ning juhuslik tegevus - ettevalmistatud andmehulgale rakendatakse erinevaid tehnikaid , lootes leida midagi huvitavat ; Siiski ei tohiks eelnevat mõista selliselt , et arvutid ning algoritmid kaevandavad - seda teevad ikkagi inimesed ning kaevandamisvahendite roll on abistav - võimaldada hakkama saada tohutute andmehulkadega ning neid interpreteerida . Loomulikult on võimalik ka eelnevaid protsesse automatiseerida , ent sellisel juhul pigem juba leitud mudelite taasrakendamise kujul . Loovust ning sellele vastavat käitumist on arvutitelt veel vara loota . ANDMEKAEVANDAMISE JA STATISTIKA ERINEVUS Statistika , masinõpe , andmebaasid ja andmeaidandus , mustrite leidmine , tehisintellekt , andmete visualiseerimine - andmekaevandus oma interdistsiplinaarse olemusega on seotud kõigi nendega ning tihti ka kirjeldatud läbi nimetatute omavahelist lõikumist . Autori arvates toob statistikaga kõrvutamine ja võrdlemine andmekaevandamise olemuse kõige paremini esile . Seda enam , et ühised jooned ei tundu liigselt juhuslikud ka ülejäänud maailma jaoks - statistikute ringkondades on juba alustatud [ <arv> ] diskussioone andmekaevandamise temaatikal eesmärgiga : proovida kasu lõigata väga lähedase valdkonna populaarsuse kasvust otsustada , kas hakata artiklites avaldama survet , et andmekaevandamine kuulutatakse lihtsalt statistika alamdistsipliiniks . Põhiline erinevus [ <arv> ] andmekaevandamise ja traditsioonilise statistika vahel , lähtudes toimimise loogikast , on see , et formaalne järeldav statistika on juhitud oletustest - formaliseeritakse hüpotees ning kontrollitakse seda teatud etteantud olulisuse nivool . Andmekaevandus on aga , vastupidi , juhitud avastustest - mustrid ja hüpoteesid genereeritakse andmetest automaatselt . Teisisõnu , andmekaevandust juhivad pigem andmed ning statististilist analüüsi inimesed . Proovides eelnevat väidet laiendada , võiks öelda , et statistika puhul räägime andmete esmasest analüüsist - me teame juba ette , mida me soovime kontrollida ning kogume vastavalt ka andmeid . Andmekaevandamisel aga vastupidi - üldjuhul kasutatakse selliseid andmeid , mida mingil muul põhjusel on juba varem kogutud ning nüüd viiakse läbi andmete sekundaarne ( või järjekorras veelgi hilisem ) analüüs . Seetõttu on ka andmekaevandamist vahetevahel defineeritud kui “ suurtes andmehulkades läbiviidud sekundaarne andmeanalüüs eesmärgiga leida ootamatuid ning uudseid tulemusi . “ [ <arv> ] Suurimateks erinevusteks statistika ja andmekaevandamise vahel võib pidada [ <arv> ] : andmetabelite suurust - statistikud peavad andmete hulka suureks juba mõnesaja tunnusega , igal juhul on tuhanded tunnused analüüsimisele juba tõsine katsumus . Kindel on aga see , et maailma ühe juhtiva telekommunikatsioonifirma AT &amp; T ligi <arv> <arv> <arv> <arv>-objektise andmetabeli [ <arv> ] analüüsimisega jääksid traditsioonilised vahendid hätta puuduvad ja vigased andmed ( sh ülekaetus ja kordumised ) - probleemi olemus on tegelikult tihedalt seotud eelmise erinevusega . Näiteks <arv>,<arv>% puuduvaid või vigaseid andmeid avaldaks tavapärastes statistilistes analüüsides väga vähe mõju , suurte andmemahtude puhul tähendaks see aga näiteks miljardist miljonit kirjet , mida ei saa enam analüüsi läbi viies ignoreerida . Lisaks , et andmekaevandamisi viivad suurelt jaolt juba läbi ka mittestatistiku taustaga analüütikud , siis puuduvate ja vigaste andmete maht võib olla veelgi suurem . Nad aktsepteerivad seda , sest nad ei soovigi kätte saada lõplikku kindlust ja kinnitust , vaid vihjet hüpoteesile , mille paikapidamist tuleks veel kontrollida mittestatsionaarsus - tihti ei ole enam aega koguda andmeid ning hakata neid analüüsima , vaid andmebaas suureneb pidevalt . Äärmuslikes olukordades tuleb isegi olla võimeline analüüsima reaalajas - loomulikult sellised tegevused on rangete piiridega ning seeläbi automatiseeritavad . Mittestatsionaarsuse probleemi toob kõige selgemalt välja informatsiooni vajamise kiirus - eelmise kuu müügi- või mõõtmiste tulemuste analüüsi täna kätte saada võib olla juba liiga hilja . Loomulikult on need kaks probleemi külge vasturääkivad - soov saada andmeid ääretu kiirusega ning tohutud andmehulgad , paraku andmekaevandamisprotsess toimubki pidevalt kompromissina nende piirangute vahel mittearvulised väärtused . Klassikaline statistika tegeleb puhtalt numbrilise analüüsiga ja kuidas analüütik oma praktilised vajadused nendeks kodeerib , on iga kord spetsiifiline . Andmekaevandamisel tegeldakse aga ka eriomaste andmetega - näiteks pildid , tekst ning geograafilised andmed . Üldine eesmärk - leida huvitavaid mustreid ning avada andmete sisemist struktuuri - kohaldub täiesti edukalt ka neile . Vaadates nüüd eelmainitud punkte , võime näha , et enamasti on statistika poolelt tegemist teatud piiride seadmisega ning üleastumiste mittetolereerimisega . Selge on see , et andmekaevandamist ei ole võimalik vaadata ilma statistikata , ent eelneva põhjal võiks teadlaste täiesti loogiline käik olla andmekaevandamise lahterdamine statistika alla . Viimast pigem isegi mitte klassikaliseks ja uudseks lähenemiseks , vaid moodustamaks terviklikumat süsteemi , mis võimaldaks ühest küljest genereerida hüpoteese poolautomaatselt tohututest andmehulkadest ja seejärel analüütiku valikul nende korrektsust ning usaldusväärsust kontrollida . Poolautomaatsuse aitaks ära hoida aktsepteeritavate intelligentsete valikute reaalne toimimine . TEADMUSHõIVE ANDMEBAASIDEST NING SELLE PROTSESS Teadmushõive andmebaasidest ( knowledge discovery in databases ) on mittetriviaalne protsess , mille käigus leitakse andmetest paikapidavaid , uudseid , potentsiaalselt kasulikke ning lõppkokkuvõttes mõistetavaid mustreid . [ <arv> ] Meenutades nüüd selle definitsiooni kõrval andmekaevandamise definitsiooni , võime näha hämmastavat , isegi segadusse ajavat sarnasust . Mis on siis ikkagi nende erinevus või nad on sünonüümid ? Tegemist ei ole sünonüümidega - teadmushõive andmebaasidest kujutab endast tervet protseduuride jada , mida on tarvis teha selleks , et andmetest peidetud teadmisi kätte saada . Seega andmekaevandamine on üks etapp teadmushõives andmebaasidest . Teisest küljest ei saa andmekaevandamist läbi viia ilma eelnevate protseduurideta ega pole temast kasu ilma hilisema rakendamiseta , seetõttu lihtsustamise mõttes loetakse neid tihti teadlikult sünonüümideks . Vaatamata sellele , et seni kõige autoriteetsema definitsiooni autorid Fayyad et al. [ <arv> ] sõnastasid üsnagi selgesti sellise definitsiooni hoopis kogu teadmushõive kohta ning kirjeldasid andmekaevandamist kui ühte etappi ( rakenduslikku vahendit ) terves pikas protsessis , avaldatakse jätkuvalt ja korduvalt ülalesitatud definitsiooni andmekaevandamise definitsioonina , kusjuures autoriks viidataksegi Fayyad et al. Alguse tegijad [ <arv> ] ning edasiarendajad [ <arv> ] näevad teadmushõivet andmebaasidest järgmisse iteratiivse ning interaktiivse protsessina : <arv>. Valdkonnaga tutvumine ning piisavad eelnevad teadmised , võimaldamaks protsessi ees- märke näha tellija ( kliendi ) vaatepunktist . <arv>. Andmete valik , millest omakorda selekteeritakse sobivad atribuudid ning vajadusel ka alamhulk kirjeid . <arv>. Andmete puhastamine ning eeltöötlus - võimaluse korral eemaldatakse müra , pannakse paika strateegia vigaste ja puuduvate andmetega ringikäimiseks , silutakse episoodilisi andmeid . <arv>. Andmete lihtsustamine ning neile õige kuju andmine . <arv>. Esimese etapi eesmärgid seotakse kindla andmekaevandamise tehnikaga ( nt summeeri- mine , klassifitseerimine , regressioonianalüüs , klasterdamine ) . <arv>. Avastav analüüsimine , andmekaevandamise algoritmide ja meetodi valik mustrite leidmiseks . <arv>. Andmekaevandamine - valitud meetodi ning konkreetse algoritmi rakendamine . <arv>. Leitud mustrite ja vihjete interpreteerimine , võimalik tagasipöördumine kõigi esimese seitsme etapi juurde - selle etapi lõpuks võidakse proovida tulemust ka visualiseerida või välja pakkuda konkreetne mudel . <arv>. Leitud teadmistele vastav käitumine - mudelite integreerimine asutuse süsteemidesse automatiseeritult , lihtne dokumenteerimine ja aruandlus või mudeli rakendamine turunduses või asutuse strateegia kujundamisel .  Joonis <arv>. Teadmushõive etapid [ <arv> ] . On veelgi loomulikum , et uuel ning üha populaarsemaks saaval tegevusel võib areneda välja mitu konkureerivat protsessimudelit . Õnneks on üldises teadmushõives ja andmekaevanduses suudetud pigem teineteist täiendada ning koostöös ressursirikaste ettevõtetega panna paika ka kokkulepitud protsessikirjeldus . Tohutuks edasiviivaks jõuks kujunes kolme ettevõtte initsiatiiv panna kokku ühtne protsessimudel [ <arv> ] , mille autoriteks on Pete Chapman ( NCR ) , Julian Clinton ( SPSS ) , Randy Kerber ( NCR ) , Thomas Khabaza ( SPSS ) , Thomas Reinartz ( DaimlerChrysler ) , Colin Shearer ( SPSS ) ning Rüdiger Wirth ( DaimlerChrysler ) . Statistikute juures kõrgelthinnatud SPSS omandas andmekaevandamise oskusteabe teise ettevõtte - ICL ostmisega , mille tulemusena on ka SPSS koosseisus uus tarkvara SPSS Clementine . Töörühm pani tulemusele nimeks Tegevusalast sõltumatu standardiseeritud protsess andmekaevandamiseks ( CRoss Industry Standard Process for Data Mining - CRISP-DM ) . Erinevus , võrreldes eelnevalt väljapakutud protsessidega , oli selgelt äriliste huvide kaitsmine - s.t iga taoline projekt peab algama ärilisest vajadusest ning lõppema tulemuste rakendamisega konkurentsieeliste saavutamise eesmärgil .  Joonis <arv>. CRISP-DM etapid . Nende esitatud protsessimudel võiks välja näha selline ( detailselt [ <arv> ] ) : ärilise poole mõistmine - esimene etapp keskendub projekti ärilistele eesmärkidele ja nõuetele , püüab formuleerida selle teadmise andmekaevanduse probleemipüstitusena ning pakkuda välja esialgse plaani eesmärkide täitmiseks andmete mõistmine - etapp algab andmete kogumisega , sisaldab tegevusi nende struktuuri ja sisuga tutvumiseks ning kvaliteediprobleemide tuvastamiseks . Lisaks saadakse selles etapis juba esimesi vihjeid andmete kohta ning moodustatakse väljavõtte , millest võiks hüpoteese genereeruda kõige edukamalt andmete ettevalmistus - kolmas etapp sisaldab endas kõiki vajaminevaid tegevusi algsetest allikatest lõpliku andmetabeli moodustamiseks . Lõplikuks kutsutakse andmetabelit siis , kui seda on sobiv ette sööta kaevandamisvahendile . Andmete ettevalmistuseks vajaminevaid tegevusi sooritatakse suure tõenäosusega korduvalt ning ilma kindla järjekorrata . Selliste tegevuste hulgas on näiteks tabelite , kirjete ning atribuutide valikud , samuti kõikvõimalikud puhastamised ja üldkuju transformeerimised andmekaevandamine - valitakse sobivaid tehnikaid ning rakendatakse neid andmetele . Tüüpiliselt on olemas mitu erinevat lähenemist samale probleemile , lisaks eeldavad mõned tehnikad andmetelt teatud kuju , mistõttu andmete ettevalmistamise juurde tagasipöördumine ei ole siin etapis harv juhus hindamine/interpreteerimine - selleks hetkeks olete juba välja töötanud mudeli ( või ka mitmeid mudeleid ) , mis näivad olevat väärtuslikud andmeanalüüsi seisukohalt . Enne elluviimist on tähtis , et mudel köidaks korralikult ka äriliste eesmärkide ning nõudmiste mõttes taas läbi kontrollimaks , kas mõnda eeldust või nõuet ei ole unustatud . Peale hindamise ning kogu senise protsessi ülevaatamise pannakse täpselt paika järgmised sammud juurutamine/elluviimine - mudeli loomisega üldjuhul projekt ei lõpe . Isegi kui mudeli eesmärgiks on näiteks andmetest ülevaate saamine , tuleb saadud teadmine korrastamise ja struktureerimise abil viia sellisele kujule ning presenteerida taoliselt , et klientidel oleks sellest kasu . Tihti tuleb ka saadud mudel integreerida olemasolevatesse otsuste vastuvõtmise protsessidesse . Näiteks teatud objekte ( ettevõtte kliente , tooteid ) mõnest kindlast aspektist hindav mudel tuleb realiseerida korduvate ja regulaarsete arvutustöödena turunduse andmebaasides . Seega olenevalt nõudmistest võib kogu projekti väljund olla lihtsast tulemuste aruandest kuni keeruka korduva andmekaevandamisprotseduuri implementeerimiseni kogu ettevõttes . Tihti on antud etapi läbiviivaks pooleks juba töö tellinud klient , mitte täitev andmeanalüütik . Isegi kui andmeanalüütik ise ei tegele juurutamisega , peab ta siiski kliendile juba ette täpselt määratlema kõik vajalikud sammud mudelite elluviimiseks . Esmalt tasub kohe märkida , et kui paljud artiklid püüdsid kummutada mingil ajahetkel tekkinud valearusaama , justkui teadmushõive andmebaasidest oleks sama mis andmekaevandamine , siis [ <arv> ] nullis suures osas nende tehtud töö . Vaatamata sellele , et ka [ <arv> ] kirjelduses on andmekaevandamine vaid üks etapp , sisaldab kogu protsessi nimetus ikkagi teadmushõive asemel andmekaevandamist . Loomulikult võib süvenemisel tõlgendada seda ka õigesti , et ülejäänud etapid on lihtsalt kohustuslikud eelnevad ja järgnevad tegevused , kuid keskne tegevus on ikkagi andmekaevandamine . Arvestades aga , et isegi artiklis [ <arv> ] suudeti pealiskaudsel tõlgendamisel terminoloogias palju segadust tekitada , siis artiklist [ <arv> ] on seda loota veel rohkemgi - seda enam , et sihtgrupiks ning esimeseks filtriks ei ole enam teadusasutustes töötavad inimesed , vaid erineva taustaga äriettevõtete töötajad . Vaatamata terminoloogiale andis [ <arv> ] siiski tohutu panuse andmekaevandamise rakendamise , eelkõige formaalsema raamistiku loomisega ning tegevuse tugevama sidumisega eesmärkidega ja hilisema rakendamisega . Lisandus ka etapp , millele [ <arv> ] veel tähelepanu pööranud polnud - arendamine , jälgimine ning hooldamine . Eelkõige kirjeldas [ <arv> ] küll tehnilist hooldamist eesmärgiga süsteemide muutumisel vigadele kiiresti jälile saada , kuid tegelikult võis ( eriti rõhutuse tõttu , et kogu protsess on iteratiivne ) välja lugeda ka ühe lisanüansi , millele märksa rohkem pani rõhku [ <arv> ] : ka äriline keskkond ( loomulikult teisedki valdkonnad , kus andmekaevandamist kasutatakse ) muutub pidevalt , konkurendid võivad välja tulla uute toodetega , elukvaliteet muutub - kõik see võib muuta klientide käitumist ning seetõttu ei pruugi varasema käitumise põhjal kokkupandud mudel igavesti töötada - teda tuleb pidevalt korrigeerida . Viimane teeb muidugi investeeringute tasuvuse osas ettevõtetele kogu taolise projekti üsnagi riskantseks , sest pideva rahastuseta võib kogu tegevus mõttetuks osutuda . Probleem nii tõsine siiski pole , kuna hinnanguliselt <arv>% kogu töömahust on valdavalt eelnev andmete korrastamine , õigele kujule viimine ning tehnikate valimine . Seda enam , et tänapäeval on andmebaasidesse n-ö regulaarsed transformeerimisteenused juba sisse integreeritud , võimaldades pärast andmevoogude esimest transformeerimise kirjeldamist hilisemad muutused juba automaatseks viia . Olles üldjoontes korrastanud protsessi korrektse läbiviimise , on üldine trend taas välja töötada uusi ning täiendada olemasolevaid tehnikaid ja algoritme . PRAKTILISED RAKENDUSED Järgnevates alapunktides on toodud valdkonniti andmekaevandamise võimalikud praktilised rakendused , nimekiri pole sellisel kujul kindlasti lõplik . Pangandus , kindlustus ning telekommunikatsioon ei ole esimeste hulgas mitte juhuslikult - nendes valdkondades on seni kõige rohkem investeeritud andmekaevandusse . Seda kahel lihtsal põhjusel : neil on kapitali , mida sellesse investeerida , ning nad teavad , kuidas see investeering ennast üsnagi kiiresti ära tasub ning väga võimsalt neile kasumit genereerib . Loomulikult ei taha keegi jäägitult uskuda , et kõikides valdkondades peab kõike mõõtma rahas - heaks näiteks on meditsiin . Paraku on motivaatoriks taoliste projektide puhul siiski kulude kokkuhoid ( meditsiini alapunktist saab lugeda näidet , kuhu kulub ameeriklastel miljardeid ) , mitte üllas soov paremini ravida . Sarnaselt ka teistes valdkondades - efektiivsus tähendab raha . Seega on järgmised alapunktid pühendatud eelkõige andmekaevandamisprojekti võimaldajate motivatsioonile - ehk siis kuidas teenida andmekaevandamise abil omanikele rohkem raha . TURUNDUS JA MüüK Esimese rakendusena toome välja turunduse ja müügi üldiselt , sest sellega katame ettevõtete ja organisatsioonide tüüpilise ühisosa : kõik soovivad kellelegi midagi müüa . Vastus , miks kasutada turunduses ja müügis andmekaevandamist , on üsna lihtne - selleks et mõista paremini klientide huve ja käitumist . Eestis ei ole rakendamine võrreldav suuremate riikidega , sest piisavalt suuri ettevõtteid on vähe ning maailma mastaabis suuri polegi . Kui aga tinglikult kuhugi alampiir tõmmata , siis autori hinnangul võiks andmekaevandamisest kasu saada järgmise suurusega ettevõtted : käive &gt; <arv> miljoni krooni aastas ; kliente kokku &gt; <arv> ja/või müügiarvete ridu aastas keskmiselt &gt; <arv> <arv>. Eelnev ei ole kindlasti lõplikult määrav , ent filtreerib enam-vähem õiglaselt välja ettevõtted , kus ei ole mõtet andmekaevandamise peale mõelda ( investeeringuteks raha raisata ) . Kindlasti võiks see ka väiksematele firmadele anda väärtuslikku informatsiooni , ent investeering ei tasuks ennast majanduslikult ära . Seda enam , et eelnevalt toodud piir on üsnagi leebe iseloomuga ning kaasab ka palju kohalikke keskmise suurusega ettevõtteid . Järgnev tabel peaks andma ülevaate , millistele küsimustele üldse andmekaevandamise abil vastust leida võib : Tabel <arv> Tehnoloogiate võrdlus  Tehnoloogia Äriline küsimus Olemus Andmete salvestamine ( alates <arv>ndad ) Kui palju on raha sisse toonud klient X ? Informatsioon Andmeaidad ja mitme- dimensioonilised andmebaasid ( alates <arv>ndatest ) Kuidas on ettevõttel läinud toodete ning maakondade kaupa , võrreldes eelmise aastaga ? Ida-Virumaal on toimunud tõus ... mis on mõjutanud sealset müüki ? Analüüs Andmekaevandamine ( massidesse jõudmas alles tänasel päeval ) Kui tõstaksime toote X hinda <arv>% , kui palju kliente me kaotaksime ? Miks ? Kirjeldused Vihjed Ennustamine Põhilised turundusalased rakendused on järgmised [ <arv> ] : kliendiprofiilide leidmine ning segmenteerimine ( profiling and segmentation ) - otseturunduses ehk individualiseeritud turunduses ei ole kliendiprofiilide leidmine ning segmenteerimine uus - mida täpsemalt ja võimalikult väikese kuluga potentsiaalsed ostjad ära tabada , seda võimsam kasum . Andmekaevandamine pakub võimaluse töödelda suuremat kliendibaasi rohkema ja kaudsema informatsiooniga , kus tunnusteks on peale traditsioonilise demograafilise bloki ka ostukäitumised ja -harjumused . Lisaks pakub tugevamat ennustusaparatuuri ristmüük ( cross-selling and up-selling ) - juba rahulolev klient ostab keskmisest suurema tõenäosusega samalt pakkujalt ka teise toote ( näiteks lisaks sõiduki kindlustusele ka elukindlustuse ) või annab olemasoleva toote asemele müüa suurema/parema ( näiteks elamu kindlustamine suurema summa peale ) . Tundes toodetevahelisi seoseid , on võimalik ühe toote kampaania abil võimendada teise müüki kliendikaotuse vältimine ( customer retention , customer attrition , churn management ) - kõrge konkurentsiga tegevusalades tähendab uue kliendi saamine teisele firmale kliendi kaotust - sellest võimalikult varakult teadasaamine võib aidata seda vältida . Kliendi kadumine on igal juhul ettevõttele suurem kahju kui uue kliendi saamisest tulenev kasu ( millest tuleb maha arvestada ka saamisele kulunud ressurss ) . Teisest küljest kasutatakse kliendikaotuse mudeleid ka hinnakujundamisel - näiteks hinnatõusu puhul arvestades teadlikult loobumistega . Viimast loomulikult eeldusel , et hinnatõusust saadav raha on suurem loobujatelt saadavast eluaegse väärtuse hindamine ( LTV - lifetime value ) - kogu kliendiksolemise aja jooksul sissetuleva raha määratlemine , lojaalne klient on lisaks ka vähem hinnatundlik . Kindlaksmääratud tõenäosusega potentsiaalse teenitava summa teadmisega on võimalik toetada tulevasi investeeringuid . PANGANDUS Lisaks eelmises punktis väljatoodud toodete ristmüügile ning klientide paremale tundmisele , profileerimisele ja säilitamisele , on panganduses ka mitmeid spetsiifilisi rakendusi , näiteks : investeeringute optimaalne juhtimine ning riskide hindamine krediidiriskide hindamine krediidi kulukuse määra võimalikult täpne hindamine .  Joonis <arv>. Laenuriski lihtsustatud otsustuspuu . KINDLUSTUS Kindlustussektoris hakati andmekaevandamist rakendama esimeste seas . Täpsemalt , olemasolevaid statistilisi ning adaptiivseid mudeleid prooviti korrigeerida ning rakendada üha suuremate andmebaaside puhul - lihtsalt algselt ei kutsutud seda andmekaevandamiseks . Mahtude suurenemisel tuli paratamatult seda tööd tegema hakata andmekaevandamisvahendite abil , sest spetsiaalne ( sisuliselt olemasolevate vahendite ) tarkvaraarendus ei oleks majanduslikult otstarbekas . Põhilisteks andmekaevandamise kasutusvõimalusteks kindlustusvaldkonnas on : riski ennustamine ja hindamine hinnakujundus kahjunõuete töötlemine ja analüüs kindlustuspettuste ning keerukamate petuskeemide avastamine Kindlustuspettustest saab rääkida ka riiklikes organisatsioonides , näiteks haigekassa hüvitiste väljapetmine . TELEKOMMUNIKATSIOON Lisaks turunduslikule aspektile ( toodete paremale kujundamisele , positsioneerimisele ning ristmüügile ) ning pettuste ja krediidiriskide hindamisele on telekommunikatsiooni-spetsiifiliselt põhjalikumalt uuritud andmekaevandamise rakendamist ka ulatusliku võrgu monitoorimisel ( nt [ <arv> ] , [ <arv> ] , [ <arv> ] , [ <arv> ] ) . Koostöös telekommunikatsioonifirmadega on välja töötatud tarkvara nimega TASA ( Telecommunication Alarm Sequence Analyzer ) , mille prototüübid on juba reaalses kasutuses . Tänapäevased keerulised võrguseadmed genereerivad terve süsteemi peale päevas tohutul hulgal alarme - enamik neist pole tähtsad ning osade puhul hindavad seadmed lokaalselt viga ebatäpselt . Kasutusele võeti sagedaste episoodide analüüs ( sequential patterns ) , mis olemuselt on assotsiatsioonireeglite leidmine koos lisandunud ajalise mõõtmega . Analüüsi tulemusel suudetakse paremini : tuvastada korduvaid ja ülemääraseid alarme senise kogemuse põhjal ennustada sõltumatute lokaalsete alarmide põhjal ülesüsteemilist viga - kindel järjestus lokaalseid alarme üldjuhul viitab mõnele suuremale üldisele veale ; tõrked võivad olla omavahel ka seotud , mistõttu teatud tõrgete järel osatakse juba ennustada , kus järgmisi alarme oodata on , ning ennustada ka üldiseid süsteemi vigu . MAKSUAMET Enim levinud rakenduseks on rahapesu skeemide tuvastamine . Põhjalikumalt saab protsessi ning väljatöötatud mudelitega tutvuda [ <arv> ] . Hakates inimjõul tõestama , et mõni ettevõte tegeleb pettusega , tasub tohutuid andmemasse klasterdades näiteks igaks juhuks tähelepanelikuma pilguga üle käia kõik arvuti poolt samasse lahtrisse asetatud ettevõtted . Väljapakutud ettevõtted ei pruugi tegelda veel kelmustega , ent taoliselt võib tuvastada ka mõne üldisema petmisskeemi mudeli , mida analüütikud seni hoomanud pole . Ka Eestis on maksuametis ümbrikupalkade maksmise tuvastamiseks rakendatud andmebaaside abi . Viimasel juhul tehti siiski väljavõte mustrist , mida genereeris oma ala spetsialist , mitte automaatselt mõni algoritm : kõik suurte käivetega ettevõtted , kelle tööjõukulud on väiksemad selle piirkonna keskmisest palgatasemest . Selle põhjal võiks arvata , et korralik algus on tehtud ning varem või hiljem rakendatakse ka vähemate kahtlustunnustega maksupetturite leidmiseks andmekaevandamist . Autori hinnangul on pankade ning kindlustusasutuste kõrval just riiklikud organisatsioonid need , kes võiksid igapäevasest andmekaevandamise rakendamisest kõige rohkem võita . KURITEGEVUSEGA VõITLEMINE Eelnevates punktides sai mitu korda käsitletud kõikvõimalikke kelmusi ning üldise süsteemi nõrkade kohtade ärakasutamist . Kelmuste avastamine ( fraud detection ) on seni olnud kaevandamise praktilise rakendamise lipulaev , sest kurjategijad proovivadki ekspluateerida inimeste võimetust suurte hulkade puhul avastada seda , et mängitakse väikestele kõrvalekalletele . Kuna viimaste avastamine ongi andmekaevanduse üks põhilisi tugevaid külgi , siis on tänaseks enamik suure klientide arvuga ettevõtteid suutnud edukalt arendada endale taolisi süsteeme . Tasapisi on võimalik rääkida andmekaevandamise kasutamisest ka riiklikul tasandil kuri- tegevusega võitlemiseks , seda seni eelkõige suhtlemisvõrgustike ( mustrite ! ) avastamiseks ning analüüsimiseks . Suuremad ettevõtted on proovinud oma töötajate suhtlemist e-posti ning telefoni teel kaardistada - sellisel juhul oleksid tulemuseks omavahel suhtlevad osapooled , mida on isegi kaalutud graafina võimalik üles joonistada . Taolise graafi analüüsimine tooks välja omavahel kõige tihedamalt suhtlevad osapooled , mis võimaldaks analüüsida , kas meeskonnad on kõige optimaalsemalt planeeritud ning kas töötajad ei suhtle põhiajast ettevõttesiseselt selliste inimestega , kelle peale ei tohiks nad tegelikult aega kulutada . Riiklikul tasandil on suhtlusmustrite avastamist proovitud rakendada [ <arv> ] kuritegelike grupeeringute piiritlemiseks , struktuuri ning võimuhierarhia tuvastamiseks . Lisaks on juba mitmeid näiteid , kuidas püütakse lahendada traditsioonilise tööga lahendamata jäänud kuritegusid . SPSS suutis Suurbritannias [ <arv> ] juurutada politseitöösse andmete analüüsi , mis võimaldaks tabatud kurjategijate käitumismustrite järgi siduda neid vanade lahendamata kuritegudega . TOOTMINE Üldiste näidetena võiks välja tuua : kvaliteedikontrolli mudelite parandamine protsessimudelite korrigeerimine garantiide juhtumikäsitlus ( tugev analoogia kindlustusega ) - garantiipettuste avastamine , teatud mudelitel tüüpiliste ehitusvigade tuvastamine , varuosade vajaduse prognoosimine automaatse diagnostika ekspertsüsteemid . TEKSTIANALÜÜS , DOKUMENDIHALDUS Teksti kaevandamises on tõstatatud küsimus : kas on võimalik näha ka teksti sisse samamoodi , nagu me püüame avada traditsiooniliste andmetabelite sisu . Strateegiaid ning lähenemisi on mitmeid [ <arv> ] : statistiline - töödelda dokumente nagu suurt hulka sõltumatuid tunnuseid ( analüüsida võib sõnade või n-grammide kaudu , viimaseid on tarvis selleks , et paremini suuta analüüsida mürarikkaid tekste ning dokumente , kus on korraga esindatud mitu keelt ) lingvistiline - analüüsida dokumendi süntaksit ning semantikat graafiline - käsitleda dokumente visualiseeritavate objektidena ; niisugune lähenemine nõuab siiski analüütikutelt tugevat võimet vastavaid mustreid avastada . Tüüpilised väljakutsed teksti kaevandamisele võiksid olla : kas need dokumendid on kirjutatud sama inimese poolt ? kas need dokumendid puudutavad samu küsimusi ning temaatikat ? John Madison , John Jay ning Alexander Hamilton kirjutasid aastal <arv> konstitutsiooni kiiremaks läbisurumiseks terve seeria esseesid , mis avaldati nime all “ The Federalist Papers ” [ <arv> ] . <arv> autorit <arv>-st on teada vaid oletuslikult . Kjelli ja Friederi [ <arv> ] hüpoteesiks oli , et n-grammide abil on võimalik leida tekstides mustreid ning seeläbi tuvastada autor . Valiti välja võimalikult unikaalsed n-grammid ning püüti neid segmenteerida . Leiti , et John Madison kirjutas tegelikult kõik üksteist tundmatu autori esseed . Sarnaseks mahukamate tekstide analüüsinäiteks või tuua veel Dr. Charles Nicholas' [ <arv> ] piibli- teksti sügavamad uurimused ( seda enam , et piibel on kirjutatud heebrea , kreeka ja aramea keeles ning kaks esimest on on-line-versioonidena Internetis levinud ) , kui ta proovis vastata teoloogidele kaua arutlusainet pakkunud küsimustele : kas prohvet Jesaja puhul oli tegemist ainult ühe inimesega ? kes on Deuteronoomiumi ehk Viienda Moosese raamatu autor ? kes on esimese ja teise Ajaraamatu autor ? kas apostel Paulus kirjutas kõik Epistlid ? Kõige rohkem saavad tekstianalüüsiga seotud uuringutest mõjutusi tulevased dokumendihaldussüsteemid , mis peaksid võimaldama tekste automaatselt lahterdada autori ning teema kaupa . MEDITSIIN Andmekaevandamise kasutusvõimaluste uurimisel meditsiinis on suurimaid investeeringuid teinud ilmselgelt ravimifirmad , sest uute ravimite projekteerimine ( drug design ) on juba oma olemuselt ääretult üldiselt võetuna kombinatsioon ainetest , millele organism üht või teist moodi reageerib ( uurimiseesmärgiks seega eri kombinatsioonide lahterdamine ) . Erinevad vahendid tohutute katsetulemuste ning kõrvalnähtude andmebaasist teadmiste kaevandamiseks pakuvad juba täna uute ravimite väljatöötamises kulude kokkuhoidu . Heade näidetena on järgnevalt ära toodud veel kaks projekti , mille puhul on erasektori asemel tegemist riiklikul tasandil algatatud uuringutega . Singapuri elanikest umbes iga kümnes põeb suhkruhaigust , millel on mitmeid kõrvalnähte - suurem risk silmahaiguste , neeruhaiguste ning muude tüsistustega . Varajane haiguse avastamine ning korralik ravi võimaldavad neid vältida . Haiguste vastu võitlemiseks alustas Singapur aastal <arv> haigete regulaarset jälgimist - patsientide informatsioon , kliinilised sümptomid , silmahaiguste diagnoosid ning raviinfo salvestati andmebaasi . Tänaseks on suutnud nad antud süsteemi üsnagi hästi tööle rakendada , põhjalikuma ülevaate saamiseks ning tehnoloogiaga tutvumiseks võib lugeda [ <arv> ] . Uuringus kasutati seaduspärasuste otsimiseks andmekaevandamise assotsiatsioonireeglite leidmise tehnikat . Teine , ilmselt veelgi võimsama toetusega praktiline rakendus on käsil neeru dialüüsi patsientidega Ameerikas [ <arv> ] . Umbes <arv> <arv> ameeriklast on neeruvaeguste puhul sellises staadiumis , kus dialüüs või neeru transplantatsioon on eluliselt vajalik . Aastane kulu neeruhaigete ravile on <arv> miljardit dollarit . Hemodialüüsis patsientide jälgimisel jääb maha tohutu suur hulk meditsiinilist infot , mistõttu arstidel on mustrite nägemine üle pikema aja üsnagi problemaatiline . Tehnika ei paku uusi lahendusi , vaid laiendab analüüsimisel ajalist akent , mille sisse mahtuvat spetsialist suurte andmemahtude tõttu enam haarata ei suudaks . Seniste juhtumianalüüside põhjal ning patsientide ajalooliste raviandmete analüüsimine võimaldab vastavalt andmekaevanduse olemusele kirjeldada hetkeolukorda täpsemalt ning ehitada prognoosimiseks paremaid mudeleid . JAEKAUBANDUS Andmekaevandamise populariseerimine ning eriti assotsiatsioonireeglite leidmise probleem ( association rules , affinity analysis ) võlgneb suuresti tänu ka jaekaubandusega tegelevate ettevõtete investeeringutele . Algselt tuntigi assotsiatsioonireeglite temaatikat rohkem ostukorvi analüüsina ( market basket analysis ) . Analüüsi sisu on tegelikult lihtsalt mõistetav : isegi korvi isikuga sidumata on võimalik kõikide kassas registreeritud ostukorvide sisu analüüsides leida omavahel tugevalt seotud kaubad , täpsemalt , milliseid kaupu ostetakse koos . Analüüsi eesmärk on leida huvitavaid seoseid , mis ei oleks liiga triviaalsed ( näiteks sai ja leib ) , kuid mis näitaksid piisava kindlusega , et kahte ( või enamat kaupa ) ostetakse tihti koos . Taolise uuringu tulemust saab jaekaubanduses tõhusalt rakendada mitmel moel : paigutada koosostetavad kaubad teineteise lähedale , suurendades nõnda nende mõlema müüki ( soovitud toote mitteleidmisel võib klient ka loobuda ) asetada koosostetavad kaubad teineteisest võimalikult kaugele , suurendades nii võimalust , et teel teise kauba juurde ostetakse emotsioonide ajendil ka muid kaupu toodete paigutus riiulitel , riiulite paigutus , kliendi liikumise optimeerimine sooduskampaaniate ning kupongide abil võimendada ühte kaupa reklaamides teise müüki . Sooduskampaania varjus klient tegelikult ei anna endale aru , et teine toode on samavõrra ( või isegi rohkem ) kallim odavamat kaupa on alati lihtsam müüa - seega võib olla kasulik odava kauba ( millega koos tegelikult alati ostetakse ka seotud kallim kaup ) reklaami rohkem investeerida ; Andmete maht , mida jaekaubanduse andmebaasides töödeldakse , esitab juba väga tõsise väljakutse riist- ja tarkvara tootjatele , sest mitmed eksperdid on andnud hinnangu , et Wal-Marti andmebaasid ( eriti tulevase RFID tehnoloogia mõjul ) võivad juba lähiaastail ületada <arv> petabaidi ( = <arv> <arv> terabaiti = <arv> <arv> <arv> gigabaiti ) . Lisaks sügavale analüüsimisele peab nende süsteem Retail Link hakkama saama [ <arv> ] ka enam kui <arv> tarnijale täpse jooksva müügiinfo serveerimisega , võimaldades neil oma tootmist ning ladusid paremini planeerida . TULEVIK Esmalt tuleks kindlasti välja tuua üha valjenev poliitiline trend , mille arengut kärpivaid mõjusid võib tunda ilmselt juba lähiaastatel - uuritavate range privaatsuse tagamine . Olgugi , et andmekaitse on alati olnud tundliku informatsiooniga tegelejatele kohustuslik nõue , on andmete kogumise ning laiatarbe analüüsitarkvara levikuga tekkimas olukord , kus informatsiooni lekkimise risk on kõrge . Teiseks küljeks on privaatsuse eetiline aspekt - kas on õige tunda inimeste käitumist ning seda ekspluateerida ? Üldiseks trendiks süsteemides ja rakendustes on suund muutuda automaatsemaks , kuhu professionaali oskusteave oleks juba üha rohkem integreeritud . Teisest küljest kaotaks see põhilise konkurentsieelise , mida spetsialisti loovus võimaldaks . Seetõttu usub autor , et antud valdkond peaks jääma alati teatud mõttes poolautomaatseks ning täisautomaatsena oleks süsteemil mõtet ainult ettevõttesisesena ( mille kitsad piirid seadistab eelnevalt siiski spetsialist ) . Laiatarbetarkvara , mis sisseehitatud oskusteabe abil lubab konkurentsieelist , on nonsenss . Konkurentsieelise tekitavad siiski inimesed , olgugi et andmekaevandamise abil suurema võimendusega .  Martin Silla , Tallinna Ülikooli informaatika osakond ; Mart Laanpere , Tallinna Ülikooli haridustehnoloogia keskus SISSEJUHATUS Tiigrihüppe Sihtasutus on aastaid toetanud multimeedia-õpitarkvara loomist ja hankimist Eesti koolidele , kokku on ajavahemikus <arv>-<arv> jõudnud koolidesse üle <arv> nimetuse ainealast õpitarkvara . Paraku on suur osa sellest tarkvarast loodud aegunud kontseptsioonist lähtudes , kus õppesisu ( tekstid , animatsioonid , testiküsimused , ülesanded jm ) on integreeritud rakenduse sisse . Selline lähenemine muudab õpitarkvara arendamise kalliks , sest iga arendaja peab lisaks sisule looma ka unikaalse rakenduse , mis pakub õppeprotsessi haldamise funktsioone : õppija tegevuse monitooring , tagasiside , õpitulemuste hindamine jne. Teisalt on võimatu seda laadi kompaktsest rakendusest õppesisu lõike eksportida ja mõnes teises õpikeskkonnas taaskasutada . Üheks näiteks võiks siinkohal tuua Tiigrihüppe SA toel loodud teadmiste testimistarkvara ApsTest , mida sajad Eesti õpetajad on juba aastaid kasutanud , luues selle abil tuhandeid kontrolltöid . Paraku on ApsTesti arendus juba ammu seisma jäänud , tarkvara ei ühildu uuemate operatsioonisüsteemidega ja ega oma tänapäeval nii enesestmõistetavat veebiliidest . Samas on tavakasutajal praktiliselt võimatu ApsTestist eksportida sinna kunagi sisestatud teste ja kontrolltööküsimusi , et neid kasutada mõnes tänapäevasemas testimiskeskkonnas . Uue põlvkonna internetirakenduste ( sh semantilise veebi ja dünaamiliste sisuhaldussüsteemide ) kiire areng on toonud kaasa paradigma muutuse ka õpitarkvara arenduses . Üha suuremat populaarsust omandavad õpitehnoloogia standardeile vastavad virtuaalsed õpikeskkonnad e õpihaldussüsteemid , mille puhul õppesisu on rangelt eraldatud õppeprotsessi haldamise funktsionaalsustest . Seda laadi õpikeskkondadesse saab kergesti importida standardeile vastavaid õppematerjale ning neid seal terviklikeks e-kursusteks siduda . Uuele kontseptsioonile vastavad õpikeskkonnad on kahtlemata kiiremini arenenud kui standarditele vastava õppesisu hulgitootmine , sest õpikukirjastused ei kiirusta uuendustega . Tiigrihüppe jätkustrateegia aastateks <arv>-<arv> ( koodnimega Õppiv Tiiger ) on võtnud selge sihi üksnes uuele kontseptsioonile vastava õpitarkvara ( s.t eraldi veebipõhiste õpikeskkondade ja digitaalse õppesisu ) arendamisele . Olulist rolli sellest arendustegevuses mängivad EL <arv>. raamprogrammi toel tehtavad uurimis- ja arendusprojektid eMapps , CALIBRATE ja iCamp , millest kahes viimases osaleb lisaks Tiigrihüppe Sihtasutusele aktiivselt ka Tallinna Ülikool . Käesolev artikkel annab esmase ülevaate hiljuti käivitunud CALIBRATE projektist . EELLUGU Tiigrihüppe Sihtasutus võttis suuna digitaalse õppesisu tootmisele ja selle vahendamisele veebi kaudu juba <arv>ndate aastate lõpul , mil koostöös Tallinna Pedagoogikaülikooli haridustehnoloogia keskusega rajati haridusportaal Õpetaja Võrguvärav . Eesmärgiks oli elektrooniliste õppematerjalide ( tunnikavade , multimeedia-esitluste , interaktiivsete harjutustike , konspektide jms ) säilitamise ja vahendamise platvormi loomine Eesti üldhariduskoolide õpetajaile . Juba tolleks ajaks oli selge , et kohalike tarkvarafirmade ja õpikukirjastuste poolt ei ole ette näha arvestatavat panust digitaalsete õppematerjalide hulgitootmisse ja imporditud õpitarkvara lokaliseerimisse - selleks on Eesti turg liiga väike . Seetõttu otsustati toetada ( magistristipendiumide , koolituste , projektikonkursside jms kaudu ) aineõpetajatepoolset initsiatiivi digitaalse õppesisu loomisel . Paralleelselt Õpetaja Võrguväravaga tegutses samal suunal ka OÜ Miksike , kelle serverile on kogunenud kümneid tuhandeid e-töölehti . Õpetaja Võrguvärav tegutseb alates <arv>. aastast Koolielu portaali nime all ( vt <hyperlink> ) , sellesse on pidevalt uusi õpetajate loodud e-õppematerjale lisandunud . Analoogilised trendid ilmnesid samaaegselt enamikus Euroopa riikidest . Õppesisu digitaliseerimist , standardimist ja vahendusportaalide tegevust toetasid suuremastaabilised uurimis- ja arendusprojektid . Samas on koolidele veebipõhiseid e-õppe teenuseid arendanud ja pakkunud ka hoopis teistest eesmärkidest lähtuv kogukond , kelle pedagoogiline kontseptsioon ( CSCL , Computer-Supported Collaborative Learning ) väärtustab elektrooniliste konspektide asemel hoopis aktiivõpet Interneti vahendusel . Need kaks e-õppe arendamisega tegelevat kogukonda ei ole seni omavahel eriti suhelnud , rääkimata koostööst . Allpool kirjeldatava CALIBRATE projekti suurimaks väärtuseks ongi katse ehitada teineteisemõistmise silda digitaalsele õppesisule ja e-aktiivõppele orienteeritud kogukondade vahel ning luua mõlema osapoole tugevamaid pooli ärakasutavad järgmise põlvkonna e-õppe lahendused . CALIBRATE PROJEKTI EESMÄRGID Käesoleva aasta oktoobris käivitus European Schoolneti eestvedamisel EL <arv>. raamprogrammi IST-projekt CALIBRATE , et ühitada erinevaid koolidele suunatud IKT uurimis- ja arendustegevusi laienenud Euroopas . Ühelt poolt on õpivara arendajad loonud väga palju erinevaid vahendeid , millest laialdasse kasutusse on jõudnud vähesed . Näiteks toodavad paljud õpetajad ise elektroonilisi õppematerjale , kuid ei vaevu neid varustama metaandmetega ja levitama just selleks otstarbeks loodud repositooriumide vahendusel . Teisalt on arendajad liikunud erinevates suundades . Nende loodud vahendid on orienteeritud samadele koolidele , kuid on harva omavahel integreeritavad . Eriti selgelt tuleb koostalitlusvõime puudus esile kahe eelmainitud koolkonna tarkvaratoodete vahel : näiteks European Schoolneti poolt loodud õpiobjektide metaandmete repositooriumi CELEBRATE ning Helsingi Kunsti- ja Disainiülikooli e-õppekeskkonda Fle<arv> on praktiliselt võimatu mõistlikul viisil sobitada - osalt seetõttu , et tegemist on eelkirjeldatud kahe erineva kogukonna loodud toodetega , keda vastaspoole tegemised seni pole huvitanud . [ <arv> ] CALIBRATE projekti eesmärk on arendada juba loodud lahendusi ( eelkõige interoperaabluse osas ) ning neid omavahel sobitada , kaasates sellesse protsessi ka Euroopa Liidu uutest liikmesriikidest pärit partnerinstitutsioone . Eesmärgi saavutamiseks on planeeritud järgmised sammud : <arv>. Otsitakse uusi viise , kuidas parandada õpiressursside sisu kirjelduste ristkasutamist . Probleemiks on see , et erinevad õppematerjalide loojad ( õpetajad , kirjastused , õpivara tootjad ) kirjeldavad õpiobjekte ( ÕO ) erineval viisil . Ühtse ÕO metaandmete kirjeldamise praktika puudumine muudab võimatuks digitaalsete õppematerjalide automatiseeritud otsingu üle erinevate repositooriumide . Tegelikult on õpiobjektide metaandmete kirjeldamiseks olemas oma standard ( IEEE LOM : Learning Object Metadata , vt [ <arv> ] ) , kuid see on õpetajale kasutamiseks senisel kujul liiga töömahukas - LOM sisaldab üle <arv> andmevälja . <arv>. Luuakse avatud koodil põhinev digitaalsete õppematerjalide vahendussüsteemi ( European Learning Resource Exchange - LRE ) arhitektuur . LRE komponendid ( õpiobjektide ja nende metaandmete repositooriumid , õppesisuga kauplemist võimaldav vahendusplatvorm , õpiobjektide loomise ja otsingu vahendid , õpikeskkonnad , koostöö- ja suhtlusvahendid , sisuhalduse vahendid ) peavad toetama etteantud suhtlusprotokolli , metaandmete formaati ja digitaalsete õiguste kaitset . <arv>. Luuakse avatud koodil põhinevad õppesisu ja õpidisaini autorvahendid ( Learning Toolbox ) , mis võimaldavad luua ühiseks kasutamiseks mõeldud õppematerjale ning sobitada kahe eelmainitud koolkonna ( õppesisule ja suhtlusele orienteeritud ) e-õppe lahendusi . <arv>. Valideeritakse CALIBRATE projekti tulemusi <arv> riigis enam kui <arv> koolis , kasutades edasiarendatud hindamismeetodeid . [ <arv> ] PROJEKTI TAUST CALIBRATE projekt jätkab sealt , kus European Schoolneti ( EuN ) eelmine projekt CELEBRATE ( Context eLearning with Broadband Technologies ) pooleli jäi . CELEBRATE projekti raames loodi Euroopa koolidele ühine õpiobjektide portaal . Objektid on varustatud IEEE LOM ( Learning Object Metadata ) standardile vastavate metaandmetega . Portaal sisaldab vahendeid õpiobjektide loomiseks , otsimiseks ja esitamiseks . Õpiobjektid võivad asuda nii CELEBRATE portaalis kui ka teistes serverites . Huvilised võivad portaaliga liituda aadressil <hyperlink> . CELEBRATE põhirõhk oli õpiobjektidel põhinevate õppemeetodite tutvustamine õpetajatele ja nende meetodite rakendatavuse uurimine igapäevase koolitöö kontekstis . Projekti tulemusena leiti , et õpetajatele sobib ressursside jagamine väiksemateks taaskasutatavateks õpiobjektideks , ning ressursside otsimine ja taaskasutamine metaandmete põhjal on tänapäevases koolipraktikas piisavalt hästi teostatav . IKTga paremini kursis olevad õpetajad suudavad lihtsaid autorvahendeid kasutades luua kvaliteetseid õpiobjekte . Leiti ka , et liikmesriikide haridusministeeriumid on huvitatud suurema hulga vabalt kättesaadavate õpiobjektide loomisest ning nõus seda tegevust toetama [ <arv> ] . CELEBRATE edasiarendusena leiti , et on vaja luua laiemalt kasutatav õpiobjektide vahendamiskeskkond . Mainitud keskkonna esimene versioon sai valmis alles CELEBRATE projekti lõpuks . Vahenduskeskkonna loomine on CALIBRATE projekti raames põhiliselt EuNi ülesandeks . Leiti ka , et CELEBRATE autorvara võiks sisaldada vahendeid ressursside loomiseks , mis toetaks koostööl põhinevat õpet . Rühmatööd toetava autorvahendi loomiseks paluti abi Helsingi Kunstiülikoolilt ( Taideteollinen korkeakoulu , TAIK ) , kelle töömeeskonnal on eelnev kogemus projektiga ITCOLE ( School of Tomorrow ) , mille raames valmis konstruktivistlikel ideedel põhinev õpikeskkond Fle<arv> . [ <arv> ] Projekti tulemuste valideerimiseks kasutatakse ja arendatakse edasi VALNET projekti raames väljatöötatud meetodeid . [ <arv> ] Eesti ei võtnud osa CELEBRATE projektist . Mainitud õpikeskkonnaga paralleelselt loodi Eestis oma õpiressursside portaal - koolielu.ee. Tallinna Ülikooli haridustehnoloogia keskuse poolt <arv> septembris algatatud projekti eesmärgiks on luua Internetiportaal , mis pakuks Eesti õpetajaile erinevaid teenuseid ( uudised , ainealased vestlusringid , õppematerjalide andmebaas jms ) ja toetaks nõnda infotehnoloogilist uuendust kooli tasandil . Nüüdseks on projekt üle antud Tiigrihüppe Sihtasutusele , kes tegeleb Koolielu.ee haldamisega . Portaal on külastatav aadressil <hyperlink> . CALIBRATE projekti raames on plaanis Koolielu.ee liita Euroopa õpiressursside vahendamiskeskkonnaga LRE . [ <arv> ] PROJEKTI ÜLDANDMED JA OSALEJAD Projekt algas <arv>. oktoobril <arv> ja planeeritud lõpp on <arv>. märts <arv> , kestus <arv> kuud . Projektis osaleb <arv> erinevat organisatsiooni kümnest riigist . Peakoordinaator on European Schoolnet ( EuN ) . Kaasatud on juhtivad uurimisinstituudid Soomest , Norrast ja Ungarist . Lisaks <arv> riigi haridusministeeriumid . Et Eesti Haridus- ja Teadusministeeriumis puudub haridustehnoloogilise kompetentsiga osakond , siis esindavad Eestit projektis Tallinna Ülikooli haridustehnoloogia keskus ja Tiigrihüppe Sihtasutus . LRE portaali loomine koosneb <arv> iteratsioonist : <arv>. LRE versioon ( oktoober <arv> - november <arv> ) . CALIBRATE esimene versioon luuakse CELEBRATE tulemuste põhjal ja sisaldab : lihtsat õpiressursside esitust navigeerimisvõimalusi kasutusjuhendeid <arv>. LRE versioon ( oktoober <arv> - september <arv> ) sisaldab : elektrooniliste õpiressursside föderatsiooni lihtsat otsingukeelt ( S<arv>QL- Simple School Query Language ) õpiobjektide vahenduskeskkonda lihtsustatud digitaalsete õiguste haldust ( DRM - Digital Rights management ) täiustatud navigeerimisvahendeid täiustatud juhendmaterjale on lisatud õpitööriistakasti ( Learning ToolBox ) <arv>. versioon on lisatud õppekavade kaardistamise töövahendite <arv>. versioon <arv>. LRE versioon ( oktoober <arv> - märts <arv> ) . Versioonile <arv> on lisandunud : CQL-il ( Continous Query Language ) põhinev edasiarendatud otsing õpiobjektide ja õppekavade vastenduse ( i.k. mapping , suure tõenäosusega ontoloogiapõhine sidumine ) täiustatud versioon <arv> <arv>. LRE versioon ( oktoober <arv> - september <arv> ) . Versioonile <arv> on lisandunud : täielik digitaalsete õiguste haldus täiustatud otsing , mis põhineb õppekavade kaardistustel ja tarkvaralisel agendil ToolBox <arv>. versioon on integreeritud LREga õpiobjektide ja õppekavade vastenduse süsteem on integreeritud LREga Projekti ülesanded on jagatud kuude suuremasse alamprojekti : <arv>. Õpiressursside kirjelduste parandamine . <arv>. Euroopa õpiressursside vahetuskeskkonna ( LRE ) loomine . <arv>. Õpiressursside kooskasutamist soodustavate vahendite ( ToolBox ) loomine . <arv>. Projekti tulemuste hindamine . <arv>. Projekti tulemuste levitamine ja kasutamine . <arv>. Projektijuhtimine . Järgnevalt olulisematest alamprojektidest põhjalikumalt . ÕPIRESSURSSIDE KIRJELDUSTE PARANDAMINE CALIBRATE projekti raames uuritakse , kuidas õpiobjektide sisu seostub konkreetse riigi õppekavaga . Eesmärk on luua vahendeid ja meetodeid ELi liikmesriikide õppekavade kaardistamiseks ( õpiobjektide sidumiseks õppekavaga , kavade võrdlemiseks , ühiste osade ja erinevuste leidmiseks ) . Et erinevate riikide õppekavad oleksid omavahel võrreldavad , tuleb erinevate kavade kirjeldamiseks kasutada sama väljendusformaati . Hetkel eksisteerib õpiobjektide kirjeldamiseks standard IEEE LOM , kuid paljudes riikides seda ei kasutata või on juurutatud analoogilisi mittestandardseid vahendeid . Tihti on erinevused minimaalsed , kuid siiski ühilduvust häirivad . Semantiline interoperaablus ( kirjelduste rist- ja korduvkasutatavus ) on eriti oluline õpiressursside otsimisel ja evalveerimisel . Enamasti otsitakse õpiressursse kolme tunnuse järgi : keel , kasutajate vanus ja võtmesõnad . Kui keele ja vanuse andmete kirjeldamine on erinevates riikides ja organisatsioonides sarnane , siis ressursi kirjeldamiseks kasutatavad märksõnad võivad olla sarnase objekti puhul täiesti erinevad . Kui kõik õpiressursside loojad järgiksid IEEE LOM standardit , oleks ühilduvus tagatud . Paraku käib selle juurutamine paljudele organisatsioonidele üle jõu ( see on liiga kallis ja aeganõudev ) . CALIBRATE eesmärk on katsetada ja juurutada lihtsamaid kirjeldusviise : <arv>. CEN/ISS poolt pakutud vastendustehnikad <arv>. ISO ontoloogiastandard Topic Maps <arv>. RDF- Resource Description Framework CALIBRATE projekti raames luuakse seosed sarnaste kirjeldusandmete vahel - tesaurus . Seejärel seotakse kirjeldused erinevate riiklike õppekavadega . Alamprojekti tulemusena luuakse vahendid , mis võimaldavad : <arv>. Õpetajatel endil kirjeldada rahvuslike õppekavade neid osi , kus nad kasutavad elektroonilisi õpiressursse . <arv>. Seostada ja kaardistada ELi liikmesriikide õppekavasid . Kaardistamise raames kasutatakse õpiressursside kirjeldamiseks lihtsamaid viise . Seostamise käigus toimub ressursse kirjeldavate sõnastike harmoniseerimine ( tesauruse - sünonüümsõnastike loomine ) . Käesoleva projekti eesmärk on luua kaardistamisvahendid , mitte kaardistada kõigi EL liikmesriikide kõik õppekavad . Tegevuse ulatus saab olema piiritletud konkreetse vanusegrupi ja konkreetse ainega ( näiteks algebra <arv> - <arv> ) . Valitud aine kaardistamisega tegelevad <arv> - <arv> riigi õpetajad . <arv>. alamprojekti juhiks on InterMedia Oslo Ülikoolist . Eesti selle alamprojektiga seotud ei ole . [ <arv> ] EUROOPA ÕPIRESSURSSIDE VAHENDUSKESKKONNA LOOMINE Eesmärk on luua õpiressursside vahenduskeskkond LRE , millega oleks kõikidel EL liikmesriikidel lihtne liituda . Planeeritud keskkond peab võimaldama : <arv>. Agendipõhist otsingut õpiressursside hulgas . <arv>. Toetama liikmetevahelisi kokkuleppeid objektide kirjelduste muutmise osas . <arv>. Pakkuma täiendavaid teenuseid ( otsing , vahetus , autoriõiguste haldus ) , mida liikmed võivad vastavalt vajadusele kasutada . <arv>. Toetama mitmekeelset digitaalsete õiguste kirjeldamist . Erinevatel organisatsioonidel ( koolidel ja ka kommertsettevõtetel ) peaks olema lihtne vahenduskeskkonnaga ühineda , sest : <arv>. Digitaalsete õiguste kaitse on tagatud . See on teema , mis puudutab just ettevõtteid , kes teenivad õpiressursside loomiselt . Samas puudutab see ka kasutajaid , kes on huvitatud kõrgekvaliteediliste õpiressursside olemasolust . <arv>. LRE portaal on paindlik süsteem , mis võimaldab liitunutel valida erinevate teenuste vahel . Kui liige ei ole valmis kasutama kõiki võimalusi , võib ta piirduda väheste funktsioonidega ( näiteks kasutab õpiressursside otsingut , kuid ei vahenda ressursse , ega ole huvitatud õppekavade kaardistamisest ) . See soodustab ka IKT alal aeglasemalt edenenud organisatsioonide liitumist ja kiirendab nende arengut . <arv>. LRE on teenustele orienteeritud arhitektuuriga ( service-oriented ) . Õpiobjekte ja nende metaandmeid ei säilitata LRE-s . Siinkohal toome selgituseks ühe näite sellest , kuidas LRE võiks toimida . Kasutaja sooritab LRE keskkonnas otsingu , päring sooritatakse üle kõigi konsortsiumiga liitunud repositooriumide . Päringu tulemused kuvatakse LRE keskkonnas , kuid konkreetse õpiobjekti poole pöördudes suunatakse kasutaja valitud õpiobjekti kodurepositooriumisse . Kui õpiobjekt on tasuta ( nt Creative Commons litsentsiga ) , saab otsija seda vabalt kasutada - kopeerida selle oma arvutisse või kohalikku repositooriumisse , seda töödelda ja kasutada oma ainetes . Kui õpiobjekt on loodud kommertsalustel ja kasutatav teatud tasu eest , saadab repositoorium LREle litsentsi . Litsentsis on kirjas tegevused ja tingimused , kuidas ressurssi kasutada . Näiteks võib seda ükskord tasuta vaadata , kuid kursuse kavasse lisamiseks , täiendamiseks või õppetöös kasutamiseks tuleb ressursi loojale maksta . Litsentsis on kirjas maksmistingimused , kuid LRE vahendusel maksta ei saa . Tasumine toimub LRE-väliselt . Et otsingut üle erinevate repositooriumide kiirendada , luuakse LRE keskkonna jaoks agentidel põhinev tarkvara , mis indekseerib liitunud repositooriumide õpiressursse nende metaandmete järgi . Teise alamprojekti töögraafik on järgmine : <arv>. LRE versioon ( jaanuar <arv> ) : LRE on valmis rahvuslike repositooriumide liitumiseks keskkonnas kasutatakse S<arv>QL ( Simple School Query Language ) päringukeelt ( otsing kolme parameetri järgi : keel , vanus , võtmesõnad ) <arv>. LRE versioon ( september <arv> ) : rahvuslikud repositooriumid on liitunud lisaks S<arv>QL päringukeelele on loodud CQL ( Continuous Query Language ) päringukeel ( otsing , mis põhineb rahvuslike repositooriumide poolt saadetud andmevoogudel ) ToolBox <arv>. versioon on integreeritud ( luuakse <arv>. alamprojekti meeskonna poolt ) LRE on valmis esimeseks testimiseks koolides ( viib läbi <arv>. alamprojekti meeskonnad ) <arv>. versioon ( mai <arv> ) : juurutatakse Creative Common litsentsi toetus integreeritakse õppekava kaardistamise vahendid ( loob <arv>. alamprojekti meeskond ) luuakse õpiobjektide metaandmeid indekseeriv ja nende hulgas otsingut teostav tarkvaraagent ToolBox <arv>. versioon on lisatud ( <arv>. alamprojekti tulemus ) <arv>. versioon ( september <arv> ) : täielik digitaalsete õiguste kontroll ( Digital Rights Management - DRM ) Alamprojekti juhiks on European Schoolnet ( EuN ) . Eesti esindajaks selles alamprojektis on Tallinna Ülikool ( TLU ) . Nende ülesandeks on luua õpiressursside repositoorium ja ühendada see CALIBRATE föderatsiooniga . TLÜ esimene ülesanne on Eesti repositooriumi loomine . Eesti õpiressursside portaal Koolielu.ee sisaldab küll tuhandeid õpiobjekte ja neid on kirjeldatud ka võtmesõnadega , kuid võtmesõnad asuvad MySQL andmetabelis ega vasta IEEE LOM õpiobjektide metaandmete standardile ( LOMi andmed säilitatakse enamasti XML formaadis või andmebaasis , mis genereerib XML faile ) . Sisuliselt tuleb Eesti repositoorium alles luua . Eesmärk on leida ja adapteerida olemasolev avatud lähtekoodil põhinev õpiobjektide repositooriumi tarkvara ( nt EducaNext või Rhaptos ) , mis põhineks IEEE LOM standardil . ÕPIRESSURSSIDE ÜHISKASUTUST SOODUSTAVATE VAHENDITE LOOMINE Virtuaalsed õpikeskkonnad ei ole siiani täitnud neile pandud ootusi . Enamasti on põhjuseks see , et õpikeskkonnad põhinevad esituslikul ja individualiseeritud õppeviisil . Vähe on vahendeid õpiobjektide kooskasutamiseks . Disainerid keskenduvad põhiliselt materjali jagamisele väikesteks objektideks ja nende kirjeldamisele metaandmetega . Kolme alamprojekti raames viiaksegi omavahel kokku seni teineteisest kaugele jäänud sotsiaalse konstruktivistliku pedagoogika esindajad ja traditsiooniliste õpihalduskeskkondade ning standardite loojad . Eesmärk on luua avatud koodil põhinev töövahendite kogum ( ToolBox ) , mis sisaldab ka vahendeid õpiobjektide samaaegseks kasutamiseks . <arv>. alamprojekti alguses toimub IMS Learning Design ( IMS LD ) spetsifikatsiooni uurimine . Erinevalt teistest standarditest ja spetsifikatsioonidest ( näiteks IMS LOM , IEEE LOM , SCORM ) sisaldab see vahendeid õpilaste omavahelise tegevuse ja keskkondade kirjeldamiseks . Eesmärk on selgitada välja , kas antud spetsifikatsiooni vahendid võimaldavad kollektiivse õppe- ja õpiressursside loomise kirjeldamist ? Kui jah , siis saab IMS LD ToolBoxi aluseks . Luuakse tarkvara , mille abil õpetajad saavad koostöös uusi õpiobjekte luua . See omakorda sisaldab töövahendeid , mis võimaldavad luua kollektiivset õpet toetavaid õpiressursse . Ühtlasi varustatakse ToolBox ühiseks kasutamiseks mõeldud õpiobjektide näidete ja nende koostamise mallidega . Töövahendid ei ole mõeldud ainult õpetajatele , vaid ka õpilastele , lapsevanematele ja ekspertidele , kes soovivad anda oma panuse kollektiivsesse teadmusloomesse . ToolBoxi arendamisse on kohe kaasatud õpetajad . Nende abil hinnatakse ja täiendatakse paberil loodud kasutajastsenaariume - kirjeldusi , kuidas õpetajad kollaboratiivseid õpiressursse loovad ja kasutavad . Alamprojekti põhiülesanded : <arv>. IMS LD uurimine . <arv>. Õpiobjektide loomismallide disain . <arv>. Õpiobjektide loomismallide prototüüpide juurutamine . <arv>. ToolBoxi kasutajaliideste ja interaktsiooni tüüpide määratlemine . <arv>. Integreeritud ToolBoxi arendamine . <arv>. Loodud mallide ja vahendite demonstreerimine . ToolBoxi esimene versioon valmib ja integreeritakse LRE portaaliga septembris <arv>. Teine ja lõplik versioon valmib septembris <arv>. Järgnevalt lühike näide , kuidas ToolBox võiks töötada . Tegemist võib olla tarkvaraga , mille autor ( õpetaja , õpilane , ... ) installeerib oma arvutisse . ToolBox suhtleb LREga ja selle vahendusel saab ta otsida erinevaid õpiressursse . Näiteks leiab õpetaja huvitava materjali Hispaania repositooriumist . Ta salvestab selle oma arvutisse ja hakkab õpiressurssi lokaliseerima . Selleks on ToolBoxis õppeotstarbeline sisuhaldusvahend , mille abil saab asendada hispaaniakeelsed tekstid eestikeelsetega , vahetada helilõike ja fotosid . ToolBox sisaldab ka vahendeid metaandmete automaatseks muutmiseks või käsitsi täiendamiseks . Seejärel salvestab autor õpiressursi Eesti repositooriumisse . Ressursid Eesti repositooriumis on nähtavad ka teistele föderatsiooni liikmetele . Alamprojekti juht on Helsingi Kunstiülikool ( TAIK - Taiteteollinen Korkeakoulu ) . Partnerid on InterMedia ( UiO - University of Oslo ) , Tallinna Ülikool ( TLU ) ja Hungarian Academia of Science ( SZTAKI - Szamitastechnikai es Automatizalisi Kutatointezete ) . TLÜ on seotud antud alamprojekti kõikide põhiülesannetega . LRE JA TOOLBOXI VALIDEERIMINE Selle alamprojekti eesmärk on testida vahenduskeskkonna ja õpitöövahendite teostust . Eesmärgi saavutamiseks : <arv>. Hinnatakse , kuidas õpetajad kasutavad olemasolevaid rahvuslikke repositooriume . <arv>. Aidatakse kaasa alamprojektide <arv> - <arv> loodud vahendite integreerimisel LREsse ja luuakse kasutusjuhendid ning koolitusmaterjalid . <arv>. Valideeritakse RLEd ja ToolBoxi seitsmes riigis , kokku <arv> õpetaja ja nende õpilaste poolt . Tulemuste kontrollimiseks kasutatakse EuN varasema projekti VALNET ( European Schoolnet Validation Network ) käigus kujunenud metodoloogiat . Kontroll toimub kolmel tasemel : <arv>. IKT-valdkonnaga paremini kursis olevad õpetajad osalevad LRE ja ToolBoxi loomises algusest peale . Tegelevad esimeste versioonide testimisega ja annavad disaineritele kohest tagasisidet . <arv>. Piloot-valideerimise raames osalevad üksikud koolid , et panna paika põhivalideerimise raamid ja luua valideerimisvahendid ( ajakava , küsimustikud , vaatlusjuhendid , logid ) . <arv>. Põhivalideerimine seitsmes riigis kokku <arv> koolis . Põhivalideerimine koosneb kahest etapist . Esimese etapi lõpuks antakse tagasiside LRE <arv> ja ToolBox <arv> versiooni kohta ( jaanuar <arv> ) . Teise etapi jooksul saadakse tagasiside LRE <arv> ja ToolBox <arv> versiooni kohta . Kogunenud andmete põhjal koostatakse valideerimisaruanne , mille tähtaeg on jaanuar <arv>. Alamprojekt <arv> koosneb järgmistest üldistest ülesannetest : <arv>. Valideerimiseks vajaliku keskkonna loomine : koolide võrgustiku loomine ( koolide valimine , koolitamine ja toetamine ) ühise visiooni loomine aktiivõppe ja koostöös õppimise osas alamprojektide <arv>-<arv> tulemuste integreerimise toetamine <arv>. Eel-valideerimine üksikutes koolides ja õpetajate koolituse planeerimine . <arv>. Valideerimisraamistiku loomine ja õpetajate koolitus . <arv>. Täisvalideerimise läbiviimine ja tulemuste kogumine ning analüüsimine . Alamprojekti liider on Ungari Eötvös Lorand University ( ELU ) . Selle asutuse ülesandeks on luua valideerimisraamistik ja korraldada eelvalideerimine . Põhivalideerimine viiakse läbi koostöös kuue riigi haridusministeeriumite esindajatega . Eesti Haridus- ja Teadusministeeriumi esinda- jaks CALIBRATE projektis ja <arv>. alamprojektis on Tiigrihüppe Sihtasutus . Nende vahendusel leitakse Eestist koolid , kes võtavad osa põhivalideerimisest . [ <arv> ] PROJEKTI TULEMUSTE LEVITAMINE JA KASUTAMINE Eesmärk on jagada projekti kõikidele osapooltele ja ka välistele huvigruppidele asjakohast teavet projekti käigu ja tulemuste kohta . Eesmärgi saavutamiseks : <arv>. Luuakse CALIBRATE projekti kodulehekülg . <arv>. Koostatakse <arv> elektroonilist ajakirja ( september <arv> ja august <arv> ) . <arv>. Korraldatakse <arv> rahvusvahelist konverentsi ( september <arv> Brüsselis ja jaanuar <arv> Prahas ) . <arv>. Koostatakse plaanid CALIBRATE tulemuste kasutamiseks ja edasiarendamiseks pärast projekti lõppu . Levitamise alamprojekti kuuluvad ka artiklite avaldamised rahvuslikes teabekanalites ja kohalikel seminaridel osalemine . Alamprojekti koordinaatoriks on House of International Services of Ministry of Education ( HIS MoS ) . Tallinna Ülikool koos TAIKiga vastutab ToolBoxi levitamise eest . Kuna tegemist on avatud koodil põhineva tarkvaraga , siis rakendatakse open-source-kogukondades levinud tavasid : <arv>. Tarkvara kood tehakse avalikuks nii vara kui võimalik . <arv>. Igaüks võib liituda tarkvara arendusprotsessiga . <arv>. Tarkvarakood avaldatakse , installeeritakse open-source-server , luuakse mailinglist ja muud tarkvara avatud arendamiseks vajalikud töövahendid . <arv>. Koostöös teise alamprojekti meeskonnaga täiendatakse CALIBRATE portaali , et ToolBox oleks keskkonnaga ühilduv . <arv>. Luuakse ToolBoxi kasutamisjuhendid . <arv>. Korraldatakse intensiivseid arendussessioone . [ <arv> ] ToolBox ja selle loomisprotsess on avatud , tarkvaraarendus põhineb agiilsel SCRUM ! metoodikal ja arendusmeeskonna koostöökeskkonnana on kasutusel avatud lähtekoodiga projektihaldustarkvara TRAC . Huvilised võivad kolmanda alamprojekti meeskonna tegevust ja töötulemusi reaalajas jälgida aadressil <hyperlink> KOKKUVÕTE Virtuaalsed õpikeskkonnad ei ole siiani täitnud neile pandud ootusi . Enamasti on põhjuseks see , et õpikeskkonnad põhinevad esituslikul õppeviisil ega arvesta aktiivõppe vajadusi . Vähe on vahendeid õpiobjektide kooskasutamiseks . CALIBRATE projekti eesmärk on tugevdada IKT uuringutulemuste integreeritust laienenud Euroopas . Lähendada teineteisele kaht erinevat kogukonda - ühed , kes usuvad õpiobjektide standardiseerituse kasulikkusesse , ja teised , kes ei pea seda oluliseks , vaid isegi kahjulikuks , sest see juhib tähelepanu kõrvale olulisemalt - hariduse kvaliteedist . Vastasleeride lähenemine on võimalik , sest tegelikult töötavad mõlemad ühise eesmärgi nimel - luua ja rakendada koolides innovaatilisi õpimeetodeid . Ka on vastastel üks ühine probleem , millega võidelda - see , kuidas inimesed Internetti kasutavad , on väga erinev , võrreldes sellega , mida õpikeskkonnad pakuvad . Erinevuse vähendamiseks tuleb IKT-alaseid uuringuid koordineerida , et nende tulemused ei jääks kitsa ringkonna teada . ALLIKAD <arv>. CALIBRATE Specific Targeted Research or Innovation Project . Annex <arv> - Description of Work <arv>. CELEBRATE Final Evaluation Report ( D<arv>.<arv> ) <hyperlink> <arv>. Innovative Technology for Collaborative Learning and Knowledge Building ( ITCOLE ) project <hyperlink> <arv>. The European Schoolnet Validation Network ( ValNet ) <hyperlink> <arv>. Tallinna Ülikooli haridustehnoloogia keskuse projektid <hyperlink> <arv>. IEEE <arv>.<arv>.<arv>-<arv> Learning Object v<arv> Metadata Final Draft , <hyperlink> Leo Võhandu , TTÜ emeriitprofessor Ammu enne hullu gripilaine jõudmist Eestisse on päris paljud eestlased nakatunud teise moodsasse tõppe - Sudokusse . Eesti trükiturule on äkitselt ilmunud suur hulk arvmõistatuse Sudoku variante . Kõik kolm üleriigilist ajalehtegi on pidanud vajalikuks neid trükkida . Mis on siis Sudoku ? VEIDI AJALOOST Rahvusvaheline ajakirjandus on välja uurinud , et mõistatuse algvariant pärineb möödunud sajandi <arv>ndaist aastaist New Yorgi nuputamisajakirjast Matemaatika ja Loogika Probleeme . Erilist edu see Ristsummade nime all avaldatud mõistatus USAs ei saavutanud . Alles pärast seda , kui inglise keelt mitteoskav Jaapani ärimees Kaji otsis USAs ajaviiteks tekstivaba mõistatust , hakkas asi liikuma . Ta võttis selle mõistatuse koju kaasa ja asutas ettevõtliku mehena <arv>. aastal oma mänge loova firma . Jaapanis võitis uus mõistatus kiiresti hulganisti pooldajaid , ja nüüd on Sudoku muutunud omamoodi ülemaailmseks hulluseks . SUDOKU NÄIDE Tavaliselt koosneb mõistatus <arv> x <arv> ruuduga väljast , mille mõnedes ruutudes on arvud <arv> ... <arv> ning enamik ruute on tühjad . Teie eesmärgiks on täita kõik tühjad ruudud arvudega <arv> kuni <arv> , nii et igas reas , igas veerus ja igas väiksemas jämedama joonega eraldatud <arv> x <arv>-ruutses plokis on parajasti üks number <arv> ... <arv>. See mõistatus on põhiliselt loogika vallast , mingit matemaatikat siin peidus ei ole . Arvude asemel võiksid olla <arv> erinevat tähte , kujundit või ka värvi . Matemaatika ja informaatikaga on aga tõsiselt tegemist nende mõistatuste uurimisel ja analüüsimisel ning loomulikult ka efektiivsete programmide koostamisel , mis oleksid võimelised neid lahendama ja ka koostama . Vaatleme hakatuseks ühte lihtsama probleemi skeemi , mis on võetud Inglise ajalehest Guardian . ( Märgimegi , et ajalehtedes ilmuvad enamasti kerged või keskmise raskusega mõistatused . Liiga rasked peletaksid võimalikud lahendajad asja juurest eemale . ) Enne kui asuda arvuti abil taolist probleemi lahendama ( või vastava meetodi üle mõtteid vahetama ) , teeme samm-sammult läbi täieliku lahenduskäigu . Selle mõneti tüütu protsessi peab üks kord läbi tegema , siis kulgeb lahenduskäik edaspidi suhteliselt libedalt .  Lahenduse kirjeldamisel kasutame tavalist rida-veerg-koordinaatide süsteemi . Loendame ridu ülalt alla ja veerge vasakult paremale . Kõige ülemine vasakpoolne ruuduke sisaldab arvu <arv>. Seda kirjeldame nii <arv>- &gt; <arv>. All paremal nurgas <arv>- &gt; <arv> . KUIDAS SUDOKUSID LAHENDADA ? Tavaliselt on kasulik alustada lahendamist n-ö triviaalsetest paigutustest . Nendeks on paksude joontega eraldatud rea- või veerukolmikutes kahe ühesuguse arvu leidmine ja kolmandasse veergu sama arvu üheselt paigutada proovimine . <arv>. Esimeses püstkolmikus on kaks arvu viied ( teine ja kolmas veerg ) , mis paiknevad teises ja kolmandas põikkolmikus . Seega kolmas <arv> peab paiknema esimeses veerus ja esimeses põikkolmikus . Näeme , et vabad on kaks ruutu arvu <arv> all . Viis sobiks mõlemasse , kuid vaadates piki teist ja kolmandat rida paremale , on kerge märgata , et kolmandas reas on juba üks <arv>. Seega saame <arv>- &gt; <arv> ( kirjutame selle kohe pliiatsiga võresse sisse ! ) . Vaatame , kuidas on lugu viiega esimeses põikkolmikus . Näeme , et esimeses reas on kaks vaba kohta <arv> ja <arv> , kusjuures ei veerus <arv> ega veerus <arv> ei ole ühtegi elimineerivat viit . Jätame selle koha praegu rahule ja läheme edasi . <arv>. Viimases püstkolmikus on kaks kuut , vabad <arv> ja <arv> ; et esimeses reas on <arv> , siis saamegi <arv>- &gt; <arv> ( Paneme kirja ! ) . <arv>. Pöördume nüüd viite juurde tagasi . Need peavad esimeses põikkolmikus paiknema kas <arv> või <arv> ( vt punkt <arv>. kolme viimast rida ) . Kui vaadata viimast põikkolmikut , siis seal peavad viied asuma kas <arv> või <arv> ( Miks ? ) . Igal juhul peab kummaski veerus olema <arv> viis . Vabaks jääb vaid veerg <arv> , millel keskmises kolmikus on kaks vaba kohta <arv> ja <arv> , kuid kuuenda rea <arv> jätab alles vaid valiku <arv> - &gt; <arv> . Ühtlasi saame keskmise põikkolmiku jaoks <arv>- &gt; <arv>. <arv>. Nüüd järgneb Sudokule tüüpiline võte . Kolmandas reas ei saa <arv> olla esimeses veerus . Keskmise ploki <arv> ( <arv> ) kõrvaldab positsioonid <arv> ja <arv> ning <arv> pole võimalik <arv>-ndas veerus oleva <arv> tõttu . Seega jääb üle vaid üks vaba koht : <arv>- &gt; <arv>. Edasi näeme kohe , et veerud <arv> ja <arv> koos <arv> reaga annavad <arv>- &gt; <arv> . <arv>. Järgneb veidi raskem koht <arv> paigutamiseks . Teine rida ja kolmas veerg jätavad <arv>-le kohad <arv> ja <arv>. Esimesse veergu võiks <arv> minna ka kohtadele <arv> või <arv> , kuid neljanda veeru <arv> paneb <arv> vägisi esimesse veergu ( Miks ? ) . Seega <arv> ei sobi ja <arv>- &gt; <arv> . Loomulikult järgneb sellele <arv>- &gt; <arv> . <arv>. Edasi vaatame kolmandat rida . Näeme , et <arv>- &gt; <arv> , sest veerud <arv> ja <arv> on kaetud . Nüüd on tekkinud üks Sudoku tüüpolukordi . Nimelt juhul , kui mingis reas , veerus või <arv> x <arv> sektsioonis on parajasti <arv> auku , siis tuleb vaadata , kas need on puuduvate arvudega üheselt täidetavad . <arv>. Meil on selline rida <arv>. Puudu on arvud <arv> ja <arv>. Üks ei saa olla esimeses veerus , seega <arv>- &gt; <arv> ja <arv>- &gt; <arv> . <arv>. Edasi vaatame esimest sektsiooni . Siin on <arv> auku <arv> , <arv> ja <arv> jaoks . Esimeses reas on <arv> ja <arv> , seega <arv>- &gt; <arv> . Vaatame kohe , kas <arv> ja <arv> saab paigutada . Ei saa , sest ei teises reas ega <arv>/<arv> veerus pole ühtegi kahte ega kuut . <arv>. Jätk on lihtne . <arv>- &gt; <arv> ; <arv>- &gt; <arv> ; <arv>- &gt; <arv> . Teises sektsioonis on puudu <arv> ja <arv> , aga neid ei saa paigutada . <arv>. Nüüd tuleb jälle üks põhivõte . Kolmandas reas on <arv> ( <arv> ) . Seitset saab esimeses põikkolmikus paigutada vaid <arv>-sse , sest teine rida keskmises sektsioonis on täis , s.o kõik kolm arvu on paigas . <arv>- &gt; <arv> . <arv>. Seitsmes rida ja neljas veerg annavad <arv>- &gt; <arv> ja <arv>- &gt; <arv> . Sellega on raskemad kohad Sudoku raamistikus täidetud ja meil jääb vaid jälgida kaheauguliste üksuste täitmise ideoloogiat . Pikemalt arutamata võime kärjestikku välja kirjutada : <arv>- &gt; <arv> ; <arv>- &gt; <arv> ja <arv>- &gt; <arv> <arv>. <arv>-ndas reas on <arv>,<arv> , <arv>. Esimene ja kaheksas veerg paigutavad <arv>- &gt; <arv> ja <arv>- &gt; <arv> . <arv>. <arv>- &gt; <arv> ; <arv>- &gt; <arv> ; <arv>- &gt; <arv> ; <arv>- &gt; <arv> <arv>. <arv>- &gt; <arv> ; <arv>- &gt; <arv> <arv>. <arv>-ndas veerus on <arv> ja <arv> puudu . <arv>- &gt; <arv> ; <arv>- &gt; <arv> ; <arv>- &gt; <arv> ja <arv>- &gt; <arv> . <arv>. <arv>. rida annab <arv> ja <arv>. <arv>- &gt; <arv> ; <arv>- &gt; <arv> ; <arv>- &gt; <arv> ja <arv>- &gt; <arv> . Samas vaimus jätkates : <arv>. <arv>- &gt; <arv> ; <arv>- &gt; <arv> . <arv>. <arv>- &gt; <arv> ; <arv>- &gt; <arv> ; <arv>- &gt; <arv> ; <arv>- &gt; <arv> ; <arv>- &gt; <arv> ; <arv>- &gt; <arv> ; <arv>- &gt; <arv> . <arv>. <arv>- &gt; <arv> ; <arv>- &gt; <arv> ; <arv>- &gt; <arv> ; <arv>- &gt; <arv> ; <arv>- &gt; <arv> <arv>. <arv>- &gt; <arv> ; <arv>- &gt; <arv> ; <arv>- &gt; <arv> ; <arv>- &gt; <arv> ; <arv>- &gt; <arv> ning kõige lõpuks <arv>- &gt; <arv> . Nagu te võisite veenduda , on kõik tehtud paigutused suhteliselt lihtsad ega nõua eriliselt pikka mõttekäiku . Nii on lugu muide suure enamuse Sudokuraamidega . Tuleb lihtsalt silmadel lasta ringi käia ja otsida võimalusi üheselt määratud arvude leidmiseks või kaheste ( vahel ka kolmeste ) aukude täitmiseks . Postimehe hommikused Sudokud on parajasti lahendatavad kohvijoomise ja kahe-kolme võileiva söömise ajaga . ERINEVATE ÜHESELT LAHENDUVATE SUDOKUDE ARV Sudoku võre on erijuhtum omapärasest matemaatilisest objektist nimega Ladina ruut . Ladina ruudu puhul on tegu <arv> kuni n kulgevate naturaalarvudega , mis tuleb paigutada ruudukujuliselt nii , et üheski reas ega veerus ei esineks sama arv kaks korda . Võimalike erinevate Ladina ruutude arv kasvab n kasvades tohutu kiirusega . Kui n = <arv> korral on vaid <arv> sellist ruutu , siis n = <arv> korral juba <arv> <arv> <arv> ruutu ja n = <arv> korral <arv> <arv> <arv> <arv> <arv> <arv> <arv> <arv> <arv> <arv> <arv> <arv> <arv> ruutu ! ( Kas te üldse oskate seda arvu sõnades väljendada ? See polegi nii lihtne . ) Muidugi , Sudoku puhul on meil lisatingimus , mis nõuab ka kolm korda kolmeste alamplokkide korral erinevaid naturaalarve ning see vähendab oluliselt võimalike lahendite arvu . Aga siiski - üheselt määratud lahendusega erinevate <arv> x <arv> Sudokude hulk on hunnitu : <arv> <arv> <arv> <arv> <arv> <arv> <arv> <arv>. ( Kas te seda hoopis pisemat arvu oskate sõnades väljendada ? ) Ilmne on igatahes see , et Sudoku probleemid ei saa praktiliselt kunagi otsa . Tehes eelduse , et te suudate <arv> minutiga lahendada ühe probleemi , proovige leida , mitu sajandit teil kuluks kõigi Sudokude lahendamiseks . Eeldades , et kõik <arv> miljardit maakera elanikku tegelevad sama tööga sama kiiresti , kui kaua neil selleks aega kulub ? Üldiselt võivad Sudokud olla õige rasked lahendada . Nad kuuluvad nimelt nn NP-täielike probleemide klassi . Selle klassi puhul on kerge kontrollida , kas lahendus on õige , aga lahenduse leidmine võib võtta tohutult aega . ( Lahendusaeg kasvab eksponentsiaalselt . ) Kes graafiteooria vastu huvi tunneb , selle jaoks võib märkida , et Sudoku lahendamine on ekvivalentne nn graafi värvimise ülesandega . ( Tegu on <arv>-tipulise graafiga . ) Internetist saab muidugi leida Google'i sirvija abil Sudokude lahendusprogramme . Kõige lihtsam on esitada küsimus “ Sudoku solver ” . Saate terve hulga vastuseid , millest siis tuleb endal sobivaim välja valida . Nende ridade autorile meeldib kõige rohkem J-keeles kirjutatud lühike programm , mille autoriks on Roger Hui Kanadast . Programm ei kuluta ka väga raskete probleemide puhul isegi aeglasel <arv>-megahertsilisel arvutil kõigi lahenduste leidmiseks rohkem kui <arv> millisekundit . Proovige ka ise koostada programm Sudoku lahendamiseks . See on päris paras ülesanne koduseks nuputamiseks . Algoritmi väljamõtlemine pole õnneks väga raske . SCHOTTI MEETOD J-keele foorumis arutleti Sudoku teemal päris pikalt . Enamik leidis , et Sudoku lahendamise arvuti kätte usaldamine on liiast . Parem ikka ise käsitsi teha . Teiste lahendusmeetodite hulgas tundus Brian Schotti oma olevat eriti selge ja asjalik . S<arv> . Kirjuta pliiatsiga igasse tühja ruutu võimalikud sinna minevad arvud ( s.o kustuta arvude <arv> ... <arv> hulgast need , mis paiknevad antud ruudu reas , veerus ja <arv> x <arv> plokis ) . S<arv> . Kui tekkis ruute , milles on üksainus väärtus , siis kirjuta need tugevalt sisse . Mine tagasi sammule S<arv> ja korda seda . S<arv> . Kui enam ei leidu üheste väärtustega ruute , siis kontrolli iga rida , veergu ja <arv> x <arv> plokki , seni kuni leiad ühe ruudu , milles on ainult üks võimalik arv . Kui sellise leidsid , siis pane see kirja ja mine sammule S<arv> . Kui selliseid ruute pole , siis mine sammule <arv>. S<arv> . Kontrolli ridu , veerge ja <arv> x <arv> plokke kuni leiad kaks ruutu , milles on kaks sama võimalikku arvu ( kui selliseid pole , siis on mõistatus vigane ) . Kui kaks sellist paari on leitud , siis võib sama rea , veeru või ploki muudes kohtades need arvud kustutada . Mine sammule S<arv> . Tehke proovi , kas Schotti meetod töötab . Muidugi on peast lahendamine õpetlikum ja eriti koolilastele peaks sellest parajalt tulu tõusma . LÕPUMÄRKUSED Me paneme selle loo lõppu peotäie erineva raskusastmega Sudokusid , nii et iga soovija saab oma mõtteviisi arengut ise jälgida ja mõõta . Jõuluperioodiks saate vaeva küllaga ! Eesti päevalehtedest võib soovitada Internetis olevat aadressi . Eesti Päevaleht on oma onlain-varianti kaasanud ingliskeelse Sudokude generaatori , mille abil saate ise endale tellida soovitud raskusega probleeme . Alustage kerge ( easy ) , keskmise ( medium ) või raske ( heavy ) variandiga . Sudokudest on välja mõeldud veel terve rida muid variante : Tapjasudoku , Samuraisudoku ja hoopis matemaatilisem Kokuro . Nendest kõigist aga juba mõni teine kord . Kerge Sudoku  Keskmine Sudoku  Raske Sudoku  Hulluks ajav Sudoku 