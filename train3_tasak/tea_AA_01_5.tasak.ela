kirjak	tea_AA_01_5.tasak.ela	Paul Leis Compaq Tru<arv> Unix -TruCluster Server Järjeks A &amp; A eelmises numbris toodud HP Superdome'i funktsionaalsele ülevaatele oli seekord plaanis anda (pisi)ülevaade Compaqi Unix-serveritest - AlphaServer GS ( kuni <arv> tükki <arv>-GHz või <arv> MHz Alpha-protsessorit - vaieldamatult maailma võimsaim protsessor , kuni <arv> GB ECC põhimälu ) , AlphaServer ES ja AlphaServer DS seeriad jne. Kuid pärast Compaqi ja Hewlett-Packardi ühinemisest tekkinud segadust - pole ju selge , mis ikkagi saab Compaq/Hewlett-Packardi arvukatest serveriperedest nii lähemas kui ka kaugemas tulevikus - tuli plaane muuta . Pole kahtlust , et ka edaspidi toetatakse olemasolevaid serveriperesid ja tulevikus luuakse ühinemise sünergiale tuginedes veelgi paremaid servereid . Siinkohal vaatleme aga seda , mis kõikidele poliitilistele/ärilistele/tehnoloogilistele mängudele vaatamata kindlasti püsima jääb - see on Compaqi Unix-kobaratehnoloogia( clustering ) , mis D.H. Brown Associates' i ( DHBA ) analüüsi põhjal on Unix-maailma parim kobaratehnoloogia . Esmalt meenutame , milles seisneb kobaratehnoloogia . Kobarasse kuuluva serveri tõrke korral võivad kobara teised serverid selle töö üle võtta . Lihtsaimal juhul moodustavad kobara kaks serverit ( maksimum on enamasti<arv> serverit ) . Üks serveritest on aktiivne ( põhiserver ) . Põhiserver teeb tööd , teine (varu)server on ooteseisundis ( “ laiskleb ” ) . Põhiserveri mittekäideldavuse puhul annab kobarahaldur põhiserveri töö üle varuserverile . Paljuserverilise kobara puhul enamik servereid ei “ laiskle ” ( võimalik ka , et ükski ei “ laiskle ” ) , vajadusel korraldab ülevõtu ja töö jaotamise kobarahaldur . Kobarat moodustavad serverid annavad üksteisele oma seisundist teada eriliinides saadetavate nn. pulsisigaalide ( heartbeat signals ) abil . Kui mingi server pulsisignaali ei saada , siis alustab kobarahaldur selle ülesannete ülevõtu korraldamist . Kobaratehnoloogia tagab süsteemi järgmiste väärtomaduste parandamise : käideldavus ( availability ) - serveri(te) tõrkele vaatamata jätkab süsteem tööd skaleeritavus ( scalability ) ja tootlikkus ( performance ) - kui võimsusest ei piisa , lisatakse uus server - ja tootlikkus kasvab peaegu lineaarselt teenindatavus ( serviceability ) - nt. komponenetide kuumaendus . DHBA analüüsis kõigi enamlevinud Unix-serverite kobaralahendusi ( Compaq , DG , HP , IBM , Sequent , Sun ) . Kobaratehnoloogiaid hinnati järgmiste tegurite alusel : rakenduste toetus ülevõtu paindlikkus ülevõtu konfigureeritavus paralleelandmebaaside ( nt. Oracle Parallel Server ( OPS ) , Informix Extended Parallel Server ( XPS ) ) toetus kobara hallatavus taaste paindlikkus ühtse süsteemikujutise olemasolu ( Cluster Single-System-Image ) . Kõiki tegureid lahati omakorda põhjalikult , nt. ülevõtu paindlikkuse hindamisel arvestati : kas üks tipp ( server , domeenarhitektuuri puhul - domeen ) saab üle võtta mitut tippu kas on realiseeritud kaskaadülevõtt - kas ülevõtja tõrke korral saab üle võtta ka selle tipu tööd , mis enne tõrget alustas ülevõttu kas on realiseeritud valikuline ülevõtt - võtta üle vaid teatud rakendused ja teenused kas pulsisignaalidel on erinevaid teid ; kui jah , siis kui palju kas on realiseeritud tõrget ennetav ülevõtt - kui tõenäoliselt tõrkele viivad tingimused on täidetud ( tipu tõrke-eelse seisundi äratundmine ja proaktiivne reageerimine ) missuguseid turvaprotokolle toetatakse ( nt. IPv<arv> ) missuguseid muid väärtomadusi ( nt. Storage Area Network , SAN ) toetatakse/ei toetata . Lisaks arvestati ka üksikserveri käideldavust ja teisi väärtomadusi ( nt. Sun Starfire No Single Point of Failure - pole ühesõlmetõrget ja Hot Plug - komponentide kuumasendus ) . DHBA analüüsi tulemus - võitja Compaq TruCluster Server Version <arv>.<arv> ( opsüsteem Tru<arv> UNIX <arv>.<arv> ) , mis töötab paljudel Compaq AlphaServer'itel ( alates AlphaServer DS<arv>- st ja lõpetades võimsaima AlphaServer GS<arv>- ga ) ning mis tagas ainsana ühtse süsteemikujutise . Ühtne süsteemikujutis omakorda teeb muude tehnoloogiate ( nt. Cluster File System ( CFS ) , Distributed Lock Manager ( DLM ) , Logical Storage Manager ( LSM ) jt. ) realiseerimise hõlpsamaks ja paindlikumaks . Kokkuvõtteks . Internetiseerumine nõuab kõrgkäideldavust , skaleeritavust , teenindatavust . Üksikserverite puhul tuleb lugeda nende omaduste parendamise kõrval äärmiselt oluliseks kobaratehnoloogia arendamist/rakendamist . Eesti firmade väiksust arvestades pole kobaratehnoloogia täisrakendused ( nt. OPS'i kasutamine ) meil veel levinud . Muu maailmaga integreerumine toob aga paratamatult kaasa vajaduse võimsamate IT-süsteemide , seega ka kobaratehnoloogiate evitamiseks . Valmistuda tuleks selleks juba praegu , eriti tudengite õpetamisel . Niilo Saard Mõtteid äri võimalikkusest eesti it-maastikul Niilo Saard - sündinud <arv>. novembril <arv>. Lõpetanud <arv> TPI automaatika ja telemehaanika erialal . Töötanud Küberneetika Instituudis nooremteadurina ( <arv>-<arv> ) , Elektroonsete Juhtimisseadmete Instituudis arvutiülemana ( <arv>-<arv> ) , Küberneetika Instituudis vanemteadurina ( <arv>-<arv> ) , firmas Enterprise Development arendusdirektorina ( <arv>-<arv> ) . <arv>. aastast AS Assert / AS Cell Network tegevdirektor , <arv>. aastast Eesti Infotehnoloogia Seltsi volikogu aseesimees . Kas Eestis on infotehnoloogia kõrgelt arenenud ? Kas Eesti infotehnoloogiafirmad on rahvusvahelises ulatuses edukad või mitte ? Need ja paljud teised küsimused vaevavad meid alati , kui tahame ennast positsioneerida maailma mastaabis . Me otsime oma Nokiat , meedia võimendab meie üht või teist edusammu taevani ning ikkagi ei ole meil vastust küsimusele : kui suured tegijad me tegelikult oleme . Soome ja Eesti arvutifirmade käibeid aastal <arv> miljonites eurodes Piisab , kui heita pilk MicroLink'i juhatuse esimehe Allan Martinsoni koostatud diagrammile , ja meil tuleb tõdeda , et nii nagu Eesti ise , nii on ka tema IT-tööstus ikka väikene küll ( et mitte öelda väga väikene ) . Tõsi , toodud diagrammil puuduvad Eesti ühed suuremad “ arvutifirmad ” , pangad ( täpsemini , nende IT-osakonnad ) , kuid see ei muuda üldpilti . Kõige väiksem tulp sellel diagrammil kujutab firmat Assert ( nüüdse nimega Cell Network ) . Firmat , mille juht mul on au olnud olla tema asutamisest peale <arv>. aastal , firmat , mis on korduvalt olnud ajalehe Äripäev arvutifirmade edetabeli eesotsas ning viimases edetabelis lausa tipus . Erinevalt Äripäevast pean ma aga firmade edukuse hindamise kriteeriumiks eelkõige äriplaanide võimalikult täpset täitmist ( nii nagu see on börsiettevõttele kohane ) , mille puhul ei pruugi me sugugi positsioneeruda nii kõrgele kohale , nagu see juhtus tänavu . Siiski andsin ma ajakirja A &amp; A peatoimetajale nõusoleku avaldada oma uitmõtteid IT- ( edukast ) ärist ning probleemidest Eestis . Arvan , et Eestis tegutsev tarkvarafirma põrkab kokku kahe põhilise probleemiga : kuidas leida edukaid projekte ning kust leida ja kuidas hoida tublisid inimesi . PROJEKTID Tüüpiline Eesti arvutifirma tegeleb nii müügiga ( vahendusega ) kui ka suuremal või väiksemal määral tarkvaraarendusega . Arvestades ajakirja profiili , piirdun ainult tarkvara arendusalase problemaatikaga . Tarkvaraga tegutsevatel arvutifirmadel on valida mitme arengustrateegia vahel . <arv>. Oma tootearendus See arengustrateegia on esmapilgul kõige loogilisem , lihtsam , mugavam , kasulikum . Pealegi on ühiskondlik vajadus oma Nokia järele suur . Projekti õnnestumise korral rahvusvahelises mastaabis võite saada lausa rahvuskangelaseks ja kui hästi läheb , siis kirjutatakse teist ka näidend . Isiklikult arvan ( tahtmata kellegi entusiasmi vähendada ) , et minnes maailmaturule sildi all Made in Estonia on tõenäosus läbi põruda suur . Pean aga ausalt tunnistama , et <arv>/<arv> eksisteeris Californias tootearendusfirma Assert Inc . , mis tagantjärele hinnates oli olemuselt õigesti püstitatud projekt . Asjaolude halva kokkusattumise tõttu lõppes tema tegevus aga tulemusteta . Kahjuks pean veel mainima , et isegi õnnestumise korral ei oleks see olnud Eesti toode ( ą la meie Nokia ) . Eelnev ei kehti muidugi siseturule orienteeritud toote kohta , mille puhul ettevõte peab tõsiselt kalkuleerima oma tegevuse rentaablust . <arv>. Teenindustööd ( ingl. services ) Pean silmas projekte , kus firma müüb oma intellektuaalset potentsiaali kas siis konsultatsiooni , spetsifitseerimise , projekti juhtimise , programmeerimise vm. näol . On selge , et töö konkreetne sisu ning selle täitmise viis määratakse kindlaks tellija ja täitja vahelise lepinguga . Laias laastus võiks sellised projektid liigitada kaheks . Tellimusprojektid Sel puhul on tarkvarafirma otseses lepingulises suhtes tellijaga ning kannab projektis ettenähtud vastutust tellija ees . Olgu siinkohal näitena toodud AS Cell Network' i poolt väljatöötatud õppe- ja infosüsteem Tartu Ülikoolile . Arvan , et sarnast teenust on ääretult raske müüa väljapoole Eestit , sest lisaks laitmatule keeleoskusele nõuab see ka üldise sotsiaalse ja kultuurilise keskkonna tundmist . Erandi moodustavad vahest süsteemtarkvara väljaarendused , kus ülesande spetsifikatsioon on puhttehniline . Meie kogemused on näidanud , et selliseid projekte on läbi Interneti võimalik edukalt realiseerida väga kauge maa taha ( nt. Bostonisse ) . Alltöövõtud Tarkvarafirma on lepingulistes suhetes põhitäitjaga , kelle ees kannab ka täit vastutust . Selline projekti organisatsioon sobib pikaajaliste rahvusvaheliste koostööpartnerite vahel ning on meie firmas leidnud aastatepikkust rakendust ( nt. tarkvaraarendus Hispaania pangale ) . Muidugi on alltöövõtt laialt levinud ka suurte siseriiklike projektide puhul ( nt. X-tee ) . <arv>. Valmisprodukti maaletoomine ning tugi Jälgides üldisi rahvusvahelisi tendentse ( mida kinnitas ka äsja lõppenud mess Systems <arv> Münchenis ) , jõudsin veendumusele , et infosüsteemide ellurakendamisel ei ole kõige tähtsam mitte oma uue süsteemi arendamine , vaid turult juba valmistoote ostmine . Maailm näib liikuvat sinnapoole , kuhu on liigutud riistvaraga : enamik endale ise arvutit kokku ei kruti , vaid lihtsalt ostab selle . INIMESED Inimesed ning nende oskused on arvutifirmade peamine vara . Kui artikli alguses rõhutasin , et Eesti arvutifirmad on maailma mastaabis väikesed tegijad , siis ei tähenda see hoopiski seda , et Eestis ei ole tublisid IT-spetsialiste ( õppejõude , teadlasi , IT-asjatundjaid jne. ) . Vaadates ajas tagasi , ei saa sugugi öelda , et Eesti arvutiteadurid ( ja teised spetsialistid ) olid suures impeeriumis ( Nõukogude Liidus ) provintslased . Ärgem unustagem , et tollane Küberneetika Instituut oli üks juhtivaid keskusi masinprojekteerimise alal ( üleliiduline preemia Boris Tamme juhtimise all ) , et osaleti koos Moskva ning Novosibirski teadlastega üleliidulises suurprojektis uue personaalarvuti väljatöötamiseks . Enn Tõugu vedas selle projekti raames tehisintellekti süsteemi loomist . <arv>-ndate alguses juhtus kahjuks , et paljud head arvutiteadlased ja -spetsialistid läksid tööle väljapoole Eestit ( professoriteks Stanfordi , Rootsi , Norra ülikoolidesse jm. ) . Ka meie firma oli üks Küberneetika Instituudi spin-off'e ( veel näiteks Aetec , IT süstems , Univoice jt. ) ja ka meilt lahkus kõrgetasemelisi spetsialiste välismaale ( töötavad näiteks Cisco's ) . Seega peame meie , juhtivad arvutifirmad , ütlema täna suuri tänusõnu <arv>-ndate aastate põhitegijatele . See oli ajalooline platvorm , millest paljud firmad alustasid ning mis oli maailmas üsnagi heal tasemel . Nõrk siseturg , piisav eneseusk ning hea erialaline tase ja isiklikud rahvusvahelised kontaktid võimaldasid <arv>-ndate aastate algul teha geograafilises mõttes <arv>-kraadise kannapöörde . Moskva , Leningradi , Novosibirski asemel võeti suund Helsingisse , Stockholmi , Bostonisse . Kui äri tegevuskohaks on küberruum , siis ei ole geograafilisel asukohal tähtsust . Ning seda kõike salasooviga rakendada oskusi ja kogemusi lõpuks ikka Eestimaal . Meie kiirelt muutuvas maailmas on ohtlik anda pikaajalisi spekuleerivaid hinnanguid . Alles see oli , kui maailma vallutas Interneti-buum , infotehnoloogia sektor oli pop . Täna valitseb Silicon Valley's pohmelus ( et mitte öelda paanika ) , paljud ülemakstud pikapatsipoisid longivad ilma tööta ringi . Kui möödunud aastal räägiti Saksamaal umbes <arv> <arv> programmeerija puudumisest , siis nüüd räägitakse niisama paljude ülejäägist . On hinnanguid , mis prognoosivad järgmise kolme aasta jooksul pankrotti <arv> protsendile Rootsi börsil noteeritud IT-firmale . Samas on huvitav märkida , et järgmisel aastal tehakse Rootsis IT-sektorisse <arv>,<arv> korda rohkem investeeringuid kui tänavu . Ka meil Eestis käivitub ( või on juba käivitunud ) rida ülimalt progressiivseid ning huvitavaid riiklikke projekte ( X-tee , E-kodanik , ID-kaart jne. ) . Soodsa majandusliku arengu puhul on oodata ka erasektorilt jätkuvat investeeringute tõusu IT-valdkonda ning huvitavate projektide algatamist . Täis põnevust ja suuri võimalusi , aga ka probleeme on geenivaramu projekt , mis vajab õnnestumise korral suurt IT-alast potentsiaali . Niisugune olukord nõuab arvutifirmadelt valmisolekut rasketeks aegadeks , teisalt aga kõrget erialalist valmisolekut . Selge on see , et viimase puhul loodavad arvutifirmad koolidele ( eriti kõrgkoolidele ) . Täna tundub , et Eesti IT-haridus on oma <arv>-ndate alguse mõõnast üle saanud ning läheb tänu mitme selle valdkonna inimese kolossaalsele pingutusele tõusuteed . Samas tahaksin küsida : mida teevad arvutifirmad Eesti IT-hariduse edendamiseks ? Ehk parafraseerides John F. Kennedyt : “ Ärge küsige , mida Eesti riik ja tema haridussüsteem saab IT-taseme tõstmiseks teha , küsige , mida Teie ise selleks teha saate . ” Kalle Tammemäe , Tallinna Tehnikaülikool , Eesti Infotehnoloogia Kolledž Mikrokontrollerite invasioon jätkub Kõrvuti laua- ja sülearvutitega on tehnoloogiliselt arenenud maades inimkaaslasteks saanud rida intellektuaalseid abiseadmeid nagu mobiiltelefonid , pihuarvutid , meediamängijad ning nende kõikvõimalikud hübriidid , mille tõttu võib tehnokeskkonda nautida reisil , puhkusel või maal sugulastel külas olles . Inimene on loomult rändur ning iga tehnoloogia , mis seda elustiili toetab , on loomulikult võitja . Meie meedia on omandanud hästi Moore'i seaduse , mille järgi transistoride arv kiibil ja kaudse efektina ka protsessorite tootlikkus kahekordistuvad iga <arv> kuuga . Selle taustal on Inteli ja AMD rebimised kahe ja enam gigahertsise piiri pärast silmatorkavad . Samas peaks olema selge , et protsessor , mis sööb ja eraldab kümneid või sadu vatte ( W ) energiat , ja arvuti , mis vajab püsivat elektrivõrku ühendamist või kilo jagu akusid , ei saa olla rändrahva huvisfääris . See artikkel vaatlebki neid väiksemat klassi abimehi , mille tootlus ehk toores arvutusjõudlus ja paindlikkus jäävad lauaarvutitele alla , kuid mille algoritmiline võimsus on siiski piisav töömahukate üksikülesannete ( sh. MP<arv> , MPEG<arv> dekodeerimine ) perfektseks täitmiseks ja seda vägagi piiratud energiaga tooteklassis . Selles energiaklassis ei räägita gigahertsidest , vaid tagasihoidlikest kümnetest või sadadest megahertsidest . Pihuarvutite valmistajate ja kaubamärkide loetelu on üsna pikk - <arv>Com-st välja kasvanud Palm , Psion , HP , Compaq , Sony , Microsoft , Casio jt. , kellele on lisandumas või kellega on ühinemas Nokia , Ericsson , Motorola ja teised mobiiltelefonide tootjad . Kuigi Palm Piloti pihuarvutid ja nende samanimeline operatsioonisüsteem on veel turuliidrid ( Euroopas umbes <arv>% pihuarvutitest , operatsioonisüsteemi osas isegi <arv>% ) , on see kiirelt muutuv turg , milles võitlevad keerulistes suhetes erinevad firmad , operatsioonisüsteemid , rakendused ja protsessorid . Raske on selget vahe teha ka tasku-PC-l , pihu-PC-l ja pihuarvutitel , kuigi firmad annavad oma tootele kindla nime . Tervikpildist on selles artiklis jõukohane käsitleda vaid nähtuse ühte külge ja antud juhul on selleks pihuarvutite protsessorite arhitektuurilised ja energeetilised iseärasused . Ka järgnev loetelu näitab vaid üksikuid verstaposte ühe või teise toote arengus eesmärgiga tuua välja läbiv telg . Omaette probleemiks on pihuarvutitekeskse töötlusseadme nimetus . On see mikrokontroller , mikroprotsessor või kiipsüsteem ? Peaksime eelistama esimest , kuid olenevalt vaatenurgast on kõik kolm korrektsed ning artikliski esineb nimetuste segakasutamist . PALM Tuntud PalmPilot , maailmas müüdavam pihuarvuti , sisaldab Motorola Dragonball-protsessorit . Üllatavalt tuleneb Dargonball-arhitektuur õige vanast Motorola <arv> <arv>-bitiste protsessorite pere arhitektuurist . Meeldetuletusena , et IBM oli aastakümneid tagasi esimest personaalarvutit tehes valiku ees , kas Intel <arv> või Motorola <arv>. Võitis esimene ning tegi auhinnalaua praktiliselt puhtaks . Sellel ajal paremaks tunnistatud Motorola arhitektuur aga ei saanud evolutsioonitiiglist lihtsalt ära kaduda ning oma niši pikk otsing on leidnud ühe avara väljundi pihuarvutites . Viimase täiendina on Motorola pookinud vanale arhitektuurile ARM-protsessori omadusi ning uued Dragonball MX<arv> protsessorid viivad taktisageduse üles <arv> MHz-ni . Selle taga on eesmärk jõuda <arv>-bitiste arhitektuuride ja operatsioonisüsteemi maailma , mille osas Palmi peetakse juba mahajääjaks , võrreldes Microsofti ja Psioniga . <arv>-bitine Palmi OS ei ole suuteline toime tulema paljude samaaegsete ülesannete või nn. lõimede ( thread ) töötlusega , mis kaasnevad mobiilside ( GSM , GPRS , III põlvkond jt. ) ning võimalike paljude samaaegsete Bluetooth sessioonidega . Väidetavalt ei peeta ARM-arhitektuuri sissetoomise raskuste tõttu reaalseks esialgselt väljakuulutatud Palmi telefon-pihuarvutite hübriidide realiseerimist jooksva aasta sees .  COMPAQ Compaq on võtnud suuna Microsofti operatsioonisüsteemile Microsoft Windows CE ( Windows for Pocket PC ) . See on kindla peale minek , sest Microsofti toodanguga harjunud kasutajate hulk on suur ning võimalike lauaarvutilt tuttavate rakenduste kohandamine pihuarvutile läheb lihtsalt .  PSION Psioni operatsioonisüsteem EPOC on välja töötatud Symbiani poolt . EPOC-i ühised omanikud on praegu Motorola , Psion , Nokia , L. M. Ericsson Telephone ja Matsushita Electric Industrial . Nokia kasutab EPOC-operatsioonisüsteemi oma Communicator-sarja mobiiltelefonides .  CASIO Casio kasutab nagu Comapq Microsoft Windows CE operatsioonisüsteemi .  HP HP pihuarvutite operatsioonisüsteem on Windows CE ja protsessorid varem Hitachilt , kuid ARM- protsessorid on oma eeliste tõttu nende kohta üle võtmas .  PROTSESSORID Joonisel <arv> on näha RISC-protsessorite turujaotus . See ei kajasta küll täpselt RISC-protsessorite jaotust kaasaskantavate seadmete lõikes , aga et viimaste puhul on tegemist väga suure turusegmendiga , siis on ARM-protsessorite või protsessortuumade osakaalu näitaja usaldusväärne .   * Kaudsete hinnangute alusel , andmed puuduvad ENERGIATARVE Lülitussageduse ja dünaamilise energiatarbe suhe on lineaarne , kus P on tarbitav võimsus , F - lülitussagedus , V - toitepinge ja C - koormusmahtuvus . Avaldis näitab küll , et toitepinge mõju energiatarbele on veel suurim , kuid paraku on see nišš juba ammendumas , sest toitepinge on juba suurusjärgus üksikud voldid või isegi üksik volt . Lisaks sellele eristatakse CMOS-ahelates veel lülitusvoolu läbi lülitushetkeks avanevate loogikaelemendi väljundtransistorite kanalite ning lekkevoolu , mille osatähtsus toitepinge alanemisel kasvab . Mobiilseadmete energiakriitilises missioonis kasutatakse kõikvõimalikke võtteid energiakulu vähendamiseks , näiteks : Erinevad suikerežiimid taktisignaali blokeerimisega mittetöötavatele osadele . Mittetöötavate ahela- või töötlusosade toite väljalülitamine , kaotamaks lekkevoolu mõju . Taktisageduse alandamine . Toitepinge alandamine ( PC-arvutite protsessorites kasutatavaid tehnoloogiaid : Intel - SpeedStep , AMD - PowerNow , Transmeta - Longrun ) . Mälupankade sisselülitamine ainult otsesel vajadusel . Mälupankade infosiinide nivoodetektorid , mis katkestavad mälupanga toite niipea , kui väljundis on bitiväärtus tuvastatud . Hoolikas tasakaal konveierarhitektuuride ( suurendavad taktisagedust ) ja paralleelsuse vahel ( suurendavad pinda ja ahelate pikkust ) . Aadressiruumi Gray-kodeering ( järjestikulised aadressid erinevad vaid ühe biti võrra , mis tähendab tüüpiliste jadapöörduste korral väga vähe lülitusi ) . Eri kiirusega töötavate osade paigutamine erinevatele siinidele . Jne. Tootlikkus <arv> MIPS-i ühe vati ( W ) kohta on hoolika disaini korral jõukohane , mida näitab ka pihuarvutite protsessorite üldtabel . Võrdluseks : lauaarvutid saavutavad sama tootlusnäitaja <arv> W energiatarbe kohta , sülearvutid <arv> W kohta . ARHITEKTUUR Pihuarvutite sisemine arhitektuur on kompleksne , sisaldades ühelt poolt protsessortuuma ahelaid juurdepääsuks tavalisetele ressurssidele nagu mälu , jadaliides , infrapunaliides , heliväljund , mikrofon , klaviatuur jms. Teisalt on sellised spetsiifilised ressursid nagu puuteekraan , GSM/Bluetooth-liides , LCD ehk vedelkristallekraan , kiipkaardiliides jms. Sellise hulga eri seadmete ühendamine ühe kiibi külge ei ole sageli tehnoloogiliselt ega energiatarbe seisukohalt otstarbekas ning spetsialiseeritud abikiipide lisamine on tavaline võte . Näitena on joonisel <arv> toodud Nec Vr<arv> protsessori ( MIPS-arhitektuuriga protsessortuum ) ühendusskeem pihuarvutis . Nagu näha , on tegemist mitmekiibisüsteemiga , kus küllalt laialdase erinevate liideste hulgaga keskseadmele ( VR<arv> ) vajatakse eraldiseisvat kontrollerit ( VRC<arv> ) , mis vastutab puuteekraani , klaviatuuri , heliväljundi ja PC-kaartide lisamiseks mõeldud universaalliidese eest . Eraldi juhtkiip ( LCDC ) on vajalik vedelkristallpaneeli jaoks . Enamikus Palm-protsessorites kasutatava Motorola Dragonball EZ protsessori arhitektuur on toodud joonisel <arv>. Võrreldes Nec-protsessoriga on selles vedelkristallkontroller integreeritud , kuid osa pihuarvutile vajalikest funktsioonidest jääb ikka väliste kontrollerite täita . KOKKUVÕTE Kui kokkuvõtteks küsida , kas pihuarvutite ilmumine on lisanud midagi põhimõtteliselt uut arvutite arhitektuurile , siis tuleb tunnistada , et paraku ei . Nüüdisaegne ränitehnoloogia lubab integreerida suvalisi kontrollerifunktsioone ühele kiibile ning seda on ka tehtud , pidades silmas pihuarvutite tüüpilisi vajadusi . Väliskeskkonnaga rohkem kui kümnete erinevate liideste ja protokollidega suhtlevatest kiipidest südamest leiame vanu arhitektuure ( nt. Motorola <arv> , Intel <arv> , MIPS , ARM ) , mis on tuttavad möödunud sajandi kaheksakümnendatest aastatest . Teisalt on ka transistor on põhimõtteliselt sama , alates tema leiutamisest <arv>. Liideste nimistus kajastavad nüüdisaegset tehnoloogiat puuteekraani kontroller , infrapunaliides ning raadiosideliidesed ( GSM , Bluetooth jt. ) . Märkimisväärne muutus on toimunud pigem energiatarbega . Protsessorid , mis <arv> aastat tagasi nõudsid jahutusradiaatoreid ja ventilaatoreid , neelavad praegu sadu kordi vähem energiat , olles varustatud terve arsenali säästu- ja suikerežiimidega . Vaatamata sellele on energiatarbe vähendamine kestev uurimisteema , sest inimene korra maigu suhu saanud , tahab ühte pisiseadmesse paigutada kõik , mida ta oma töö või meelelahutuse jaoks on välja mõelnud või mõtlemas . gap desc='references'&gt; Martin Sandberg , TTÜ arvuti- ja süsteemitehnika magistrant Hajusarvutuste läbiviimine internetti ühendatud arvutite abil SISSEJUHATUS Selles artiklis käsitletakse hajusarvutuste korraldamist Internetti ühendatud arvutite vabade töötsüklite ärakasutamise abil . Uuritakse selliste hajusarvutussüsteemide kommunikatsiooniprobleeme ning töö jaotumist keskse serverisüsteemi ja klientide vahel . Lähemalt uuritakse turvaprobleeme , mis on seotud valelike klientidega ning nende paljastamise ja arvutustulemuste usaldusväärsusega . Artikli lõpetab lühiülevaade hetkel läbiviidavatest ja alustatavatest hajusarvutusprojektidest koos viitega selliste projektide võimalikele ärilistele tuleviku perspektiividele . Artikli kirjutamisel on näitena suures osas tuginetud SETI@home projektile , mis on üks suuremaid Internetis läbiviidavaid hajusarvutusi , ning selle projekti teostajate poolt saadud kogemustele . <arv>. HAJUSARVUTUSTE LäBIVIIMISE PõHIMõTTED Hajusarvutus ( ingl. distributed computing ) tähendab tavaliselt väga suure arvutusülesande jagamist väiksemateks alamülesanneteks , mida saavad paralleelselt töödelda paljud heterogeensed arvutid . Loomulikult peab sellise arvutussüsteemi mudeli korral eksisteerima ka süsteemi keskne serveriosa , mis koordineerib arvutuste tegemist , korraldades ülesannete väljajagamise tegelikult arvutusi läbiviivatele klientarvutitele . Hajusarvutussüsteemid tegelevad ülesannete lahendamisega , mida on traditsiooniliselt lahendanud superarvutid või spetsiaalne , vastavate ülesannete jaoks optimeeritud riistvara . Ent traditsiooniliste superarvutite arvutusvõimsus kasvab palju aeglasemalt kui nüüdisaegsetes personaalarvutites kasutatavate mikroprotsessorite võimsus ning spetsiaalse riistvara disain ja tootmine on väga kallis nagu superarvutite loominegi . Personaalarvutite kasutamise omapäraks on see , et kuigi inimesed soovivad saada järjest kiiremaid arvuteid selleks , et nad ei peaks arvutite järel ootama , on tegelik olukord vastupidine - enamuse ajast ootavad personaalarvutid kasutajate järel . Tegelikult on tänapäeva arvutid lihtsate tööde jaoks , kus neid ka kõige rohkem kasutatakse ( tekstitöötlus , Internet , E-post ) , liiga kiired . Lisaks sellele on enamik personaalarvuteid sisse lülitatud ka siis , kui nendega tööd ei tehta . Hajusarvutustarkvara luuaksegi tavaliselt nn. ekraanisäästjana või siis pannakse võimaluse korral arvutis pidevalt tööle madalama prioriteediga kasutaja jaoks oluliste programmide suhtes . Seega eksisteerib maailmas tohutu vaba arvutusvõimsus , ent samal ajal vaevlevad paljud projektid arvutusvõimsuse puuduses , mis sunnib neid projekte edasi lükkama või ülesande keerukust vähendama , mis omakorda vähendab ka uuringutulemuste väärtust . Kuid arvutusvõimsuse olemasolust üksi on vähe kasu . Arvutid peavad kätte saama vajaliku töötlustarkvara . Nad peavad saama ka andmeid , mida töödelda , ja tagasi saatma tulemusi . Seega ei ole ilma vastava , kõikide hajusarvutustest osavõtvate arvutiteni ulatuva kommunikatsioonikanalita võimalik sellist arvutust läbi viia . Selliseks kanaliks on tänapäeva maailmas Internet . Võib öelda , et peamise tõuke hajusarvutuste läbiviimiseks on andnud suure hulga järjest võimsamate arvutite ühendamine Internetti . Hajusarvutuste läbiviimisel on väga oluline osa inimfaktoril . Kõik need vabad arvutiressursid kuuluvad kellelegi . Samuti peab keegi installeerima nendesse arvutitesse tarkvara , seda hooldama ja vajadusel uuendama . Iselevivaid programme on küllalt lihtne luua , nagu on tõestanud arvukad viirusekirjutajad , aga see ei oleks arvutiomanike suhtes kuigi viisakas ning ka programmil endal ei pruugi arvutites viiruseks kuulutatuna pikka iga olla . Miks peaks keegi üldse tahtma oma arvuti(te)sse mingit tarkvara installeerida , millest tal endal otsest kasu ei ole ? Põhjuseid võib olla mitu , siinkohal puudutame neist levinumaid . Au ja kuulsus - inimesed võistlevad saavutuste nimel , kes suudab anda ülesande lahendamiseks rohkem arvutiaega . Hajusarvutusprojektidega tegelevate organisatsioonide kodulehekülgedel on väljas vastavad edetabelid . Võistlusest osavõtt sunnib inimesi installeerima arvutusprogrammi mitmesse arvutisse , samuti on võimalik koonduda gruppidesse ja värvata gruppidesse uusi liikmeid . Teisalt esitatakse vahel ka probleem ise väljakutsena . Soov anda enda poolt midagi tähtsa eesmärgi saavutamiseks - sellisele põhjusele saavad tugineda vaid vähesed projektid , mis tegelevad laiadele massidele huvipakkuva probleemiga . Näiteks ravimiuuringud . Majanduslik kasu - lahenduse leidjale on välja pandud suur auhind või siis makstakse raha projektile antud arvutiaja koguse pealt . Huvi lahendatava probleemi vastu - näiteks võib matemaatikaga , robotitega vms. tegelejatele huvitav olla oma erialaste probleemide uurimine . Riistvara testimine - see argument on suunatud küll rohkem firmale kui üksikisikule . Keerukad arvutused koormavad protsessorit ja selle liideseid tugevalt ning on kergesti kontrollitavad . Motivatsiooni küsimus on tegelikult väga oluline , sest hajusarvutusprojekt saab olla edukas vaid tänu suurele hulgale kasutatavatele arvutitele ehk siis inimestest osavõtjatele/arvutiomanikele . <arv>. KOMMUNIKATSIOON HAJUSARVUTUSSüSTEEMIDES Massiliste hajusarvutuste korraldamine on võimalik vaid Interneti poolt pakutava kommunikatsioonisüsteemi tõttu . Samal ajal seab seesama kommunikatsioonisüsteem hajusarvutuste läbiviimisele ka suurimad piirangud . Nüüdisaegne Internet on läbilaskevõime poolest liiga aeglane ja ebausaldusväärne andmeintensiivsete arvutuste tegemiseks . Sellest tulenevalt kõlbab Internetil põhinev hajusarvestussüsteem ainult niisuguste ülesannete lahendamiseks , mis on rohkem protsessori- kui andmeintensiivsed . Kui probleemi on võimalik jagada plokkideks , mida saab töödelda üksteisest sõltumatult , on hajusarvutussüsteem selle probleemi lahendamiseks ideaalne . Seevastu algoritm , mis eeldab , et iga andmeploki töötlus sõltub teistest andmeplokkidest , kohtab tõsiseid sidekanalite läbilaskevõime probleeme . Hajusarvutussüsteemides vajaliku kommunikatsiooni saab jagada kolmeks osaks : klienditarkvara ülekandmine klientarvutitesse ( ka uuendused ) arvutusteks vajalikud andmetööühikud ( ingl. work unit ) arvutustulemuste ehk vastuste ülekanne klientidelt keskusesse . Kommunikatsiooni korraldamisel keskuse ja klientarvutite vahel peab arvestama paljusid faktoreid . Programmi ja andmete ülekande maht ei tohi ära hirmutada potentsiaalseid arvutusvõimsuse jagajaid . Hoolimata püsiühenduste laialdasest levimisest ka kodudesse on enamik arvuteid siiski Internetti ühendatud telefoniliinide kaudu suhteliselt aeglaste modemite abil . Näiteks võib tuua järgmised graafikud , mis on tehtud populaarse SETI@home projekti statistikale tuginedes ( vt. joonised <arv> ja <arv> ) [ <arv> ] . Nendest nähtub , et valdav enamik projekti registreerunud kasutajatest teeb arvutusi kodus . Kuigi mujal ( tööl , koolis või teadmata asukohas ) asuvad kasutajad aitavad andmeid töödelda suhteliselt rohkem , töödeldakse üle poole andmetest ikkagi kodudes asuvates arvutites . Seega tuleb hajusarvutusprojekte läbi viies arvestada kõige rohkem koduarvutite ( väheseid ) sidevõimalusi . Teine oluline osa andmete ülekandemahtudega arvestamisel on klientide ühendus süsteemi keskse osaga , mis ei tohi muutuda pudelikaelaks . Näiteks SETI@home kasutab andmetööühikuid , mille suurus on <arv>,<arv> MB . Vastuvõtja poolel kulub selle vastuvõtmiseks T<arv> liini kaudu ( <arv>,<arv> Mbit/s ) umbes <arv>,<arv> sekundit või siis <arv>,<arv> min <arv>-kbit/s telefoniliinil töötava modemi kaudu , mis on täiesti mõistlik suurus kõigi klientide jaoks . Serveri poole pealt suudaks sama T<arv> liin nädala jooksul transportida <arv> GB andmeid ehk teenindada selle aja jooksul <arv> <arv> kliendipäringut . Sellele suurusele lisanduvad kliendiprogrammide allalaadimised ja päringud projekti www-lehtedele informatsiooni ja statistika lugemiseks . Et hetkel on SETI@home projektil üle <arv> <arv> <arv> registreeritud kasutaja ning ühe paketi töötlemise keskmine aeg on alla <arv> arvutitunni , siis on sidekanalite vajalik läbilaskevõime väga suur . Internetis laialt levinud turvasüsteemidega arvestamine on kommunikatsiooni korraldamise huvides samuti oluline . Nii näiteks kasutatakse SETI@home projektis tavalist http-protokolli , mis töötab üle pordi <arv> ja kommunikatsioonisessioone algatab ainult klienti . See võimaldab vältida takistusi , mida seavad tulemüürid , proxy'd jm. turvapiirangud Internetti ühendatud arvutite juures . Samuti on näiteks Distributed.net arvutusrühmas võimalik vahetada andmepakette ja vastuseid E-posti teel . <arv>. HAJUSARVUTUSTEGA KAASNEVAD TURVAPROBLEEMID Hajusarvutuste läbiviimisel kerkib mitu süsteemi turvalisuse küsimust . Eriti olulised on need hajusarvutussüsteemide kommertseesmärkidel kasutamisel , aga ka teadusprojektide läbiviijad on põrganud raskustele . Unustada ei tohi klientide muresid . <arv>.<arv>. OHUD KLIENTIDE JAOKS JA NENDE VÄLTIMINE Inimesed , kes tahavad osa võtta hajusarvutusprojektidest , peavad paigaldama oma arvuti(te)sse arvutuste läbiviimiseks tundmatu klienditarkvara ja saama avalikust Internetist andmeid töötlemiseks , samuti lubama oma arvutil saata andmeid Internetis asuvale arvutusprojekti serverile . Need probleemid on siiski suhteliselt lihtsalt lahendatavad programmide allikat ning infovahetusserveri identiteeti tuvastavate sideseansside sertifikaatide kasutamise , krüptimise jms. abil . Samuti on võimalik ja vajalik kehtestada klienditarkvaras kindlad piirangud aktsepteeritavatele infovahetuspartneritele , lubades näiteks infovahetust ainult ühe kindla serveriga . Kokku võttes taandub enamik selliseid probleeme teise partneri ehk siis hajusarvutuse korraldaja usaldusväärsusele . <arv>.<arv>. VALELIKUD KLIENDID Palju tõsisemate probleemidega puutuvad kokku hajusarvutuste korraldajad . Inimesed , kes kasutavad oma arvuteid andmete töötlemisel , võivad tahta parandada arvutamise jõudlust , et saavutada edetabelites kõrgem positsioon , ning modifitseerivad selleks oma kliendiprogrammi . Näiteks puutus sellise probleemiga kokku ka SETI@home projekt . Tulemusena erinesid saadud arvutustulemused tegelikest ettearvamatul moel ning neid arvutustulemusi ei saanud projektis kasutada . Probleemi lahendamist raskendas asjaolu , et muudetud kliendid suhtlesid serveriga täpselt samal viisil kui originaalkliendid . Internetti ühendatud arvutitel põhinevaid hajusarvutusi kommertseesmärkidel kasutades tuleb kokku puutuda ja lahendada sarnaseid probleeme . Näiteks võiks mõni naftaotsimisega tegelev firma tegutseda palju efektiivsemalt , kui ta laseks geoloogilisi andmeid enne äritehingu sooritamist analüüsida hajusarvutuste abil . Ent samal ajal võib tema konkurent seada samasse avalikku võrku üles oma arvutid , et saada ülevaade töödeldavatest andmetest . Samuti võivad võrgus olla uuringut saboteerida tahtvaid isikuid kas konkurendi kõrvaldamiseks või lihtsalt pahatahtlikkusest . Seega peab selline projekt kasutama turvamudelit , mis ei lase klientarvuti(te)l saada käimasolevast ülesandest rohkem aimu , kui arvutuste teostamiseks hädapärast vaja , ja kindlustama , et ükski klientarvuti ei saaks tulemust ebasoodsalt mõjutada . Turvasüsteemi väljatöötamiseks tuleb vastused leida järgmistele küsimustele : kuidas teha vahet originaalkliendi ja muudetud kliendi poolt töödeldud andmepakettide vahel ? kuidas saab server teada , et klient mängib õigete reeglite järgi ? <arv>.<arv>. VALELIKE KLIENTIDE EEMALDAMINE ARVUTUSTEST Hajusarvutustest osavõtvate arvutite hulgast pahatahtlike äratundmine on , arvestades töödeldavate andmete ja arvutustest osavõtvate arvutite suurt hulka , küllalt raske probleem . Ka varem on hajusarvutusi läbi viidud , kuid tavaliselt on neid korraldanud arvutifarmid , mille omanikuks on ainult üks isik või organisatsioon . Sellises süsteemis võib arvuti olla kas hea või halb ehk siis kas töötama korralikult või olla rikkis . Suhteliselt käsitlemata on aga jultunult valetavate arvutite probleem . Kõige lihtsam viis valetavate arvutite otsimiseks on jälgida kahtlust äratavaid vastuseid ja kontrollida neid serveri poolt ülearvutamise teel . Meetod töötab , kuid selle puuduseks on oluline sõltuvus kahtlaste vastuste äratundmise mehhanismist . Kui korraga osutub palju vastuseid kahtlaseks , muutub ülearvutamismehhanism süsteemi pudelikaelaks . Teine võimalus on eemaldada petmise motivatsioon . Sellisel juhul tuleb näiteks loobuda arvutajate edetabelist . Siis kaoks põhjus kasutada kiiremat modifitseeritud klienti , mis võimaldab tabelites kiiremini tõusta . Probleemiga on kokku puutunud ka SETI@home projekt , kuid asi lahenes suhteliselt õnnelikult , sest kliendid olid heasoovlikud ehk siis soovisid teistest rohkem edasi jõuda , aga ei tahtnud projekti rikkuda . Meetodi eeliseks on lihtsus nii selle mõistmisel kui ka elluviimisel . Siiski eksisteerib vähemalt kolm probleemi , mida see meetod ei lahenda : ta ei tunne ära ega eemalda kliente , kes juba on modifitseeritud kui kliendil on teistsugused motiivid pahatahtlikkuseks , siis see lähenemine ei toimi edetabelist loobumine kaotab ergutava motiivi hajusarvutustest osavõtmiseks . Lähenemise erijuhtumiks on variant , kus edetabel säilitatakse , ent petmisega vahelejäänud klient eemaldatakse tabelist . See siiski ei ohjelda edetabelist mittehoolivaid kliente ja eeldab , et modifitseeritud kliendid on enne ära tuntud . Kolmas võimalus on kasutada kliente teiste klientide kontrollimiseks . Juhul kui projektis sisaldab palju üleliigset arvutijõudlust ( nagu näiteks SETI@home projektis ) , võib kontrollimise eesmärgil lasta samu andmetööühikuid töödelda mitmel kliendil , mis moodustavad nn. hääletusploki . Arvutuse lõpus võrreldakse klientide vastuseid . Vastust , mille poolt hääletab ploki enamus , saab lugeda tõeseks . Eeldades , et enamik kliente töötab korrektselt , on nii võimalik eristada originaalseid ja modifitseeritud kliente . Samas tähendab see eeldus , et modifitseeritud kliendid peavad igas plokis moodustama vähemuse . See omakorda tähendab , et hääletusplokkide konstrueerimine ei tohi toimuda täiesti juhuslikult , vaid olema kontrolli all . Üks võimalus selle saavutamiseks on klientide sorteerimine usaldusväärsuse järgi . Juhul kui server teab paari kindlalt usaldusväärset klienti ( need võivad olla kas serveri otsese kontrolli all või kliendid , kes on pidevalt saatnud korrektseid tulemusi ) , saab ta paigutada neid plokkidesse tundmatute või ebausaldusväärsete klientidega ning siis tulemusi võrrelda . Juhul kui tulemused langevad kokku , muutub hääletusplokis osalenud esialgu ebausaldusväärsete klientide hinnang paremaks . Sellise meetodi toimimise eelduseks on , et originaalse ja modifitseeritud kliendi poolt samade andmete töötlemine annab erineva tulemuse . Kui vastus on liiga lihtne , siis on valesid vastuseid eristada raske . Teisalt võimaldab piisavalt detailne arvutuskäigu protokoll vastuste hulgas teostada põhjalikku kontrolli suhteliselt lihtsalt . Selline lähenemine töötab küllalt hästi , sest teadaolevatel andmetel ei tegutse modifitseeritud kliendid tavaliselt üksteisega koordineeritult . Muidugi , kui leiduks kontrollsüsteemi vastane süsteem , mis suudaks jälgida serverit ja modifitseeriks süstemaatiliselt usaldusväärseks kuulutatud kliente , siis oleks selline lähenemine läbikukkumisele määratud . Järjekordne võimalus valelike klientide leidmiseks on lõksude seadmine . Selleks tuleb uurida originaalse ja modifitseeritud kliendi erinevusi arvutuskäigus . Kui on teada , et originaalse kliendi mingi T arvutusetapi vaheväärtus x on <arv>,<arv> ja modifitseeritud kliendil <arv>,<arv> , saab ehitada modifitseeritud klientide püüdmiseks lõksu , saates talle tuntud andmepaketi ning paludes raporteerida T etapil väärtus x . Väike probleem asja juures on see , et klient võib kahtlustada kontrollivõimalust ja kontrollida ebatavalist töökäsku õige kliendi abil ning saata vastu õige tulemuse . Tõsisem probleem on see , et niisugune lähenemine eeldab , et server teab , millist modifitseeritud klienditarkvara kasutatakse . Veel on õigete klientide äratundmiseks võimalik kasutada nn. arvutuse protokolli , mis koosneb infost arvutuste vaheastmete , sisemiste olekute , registrite sisu jms. kohta . Tavaliselt kasutatakse seda informatsiooni kombineeritult koos räsifunktsioonide väärtustega ja tõenäosusliku analüüsiga . Lähemalt on nende võimaluste üle arutletud artiklis [ <arv> ] . <arv>.<arv> TULEMUSTE USALDUSVÄÄRSUS Massiivsetel hajusarvutustel on väärtust vaid siis , kui nende tulemused on usaldusväärsed . Enamik usaldusväärsuse küsimusi taandub ülesannetele : tagada , et kliendid teevad tööd õigel viisil ja hoida süsteemist eemal pahatahtlikud segajad . Nende mõlema ülesande lahendamiseks kasutatakse alajaotuses <arv>.<arv> kirjeldatud võimalusi . Parimaid tulemusi annab erinevate võimalust kombineerimine . Samas on probleemiks , et paljud kontrollimehhanismid vähendavad süsteemi üldist jõudlust , sest lisaks klientide töö ( kasvõi kohatisele ) dubleerimisele peab ka serversüsteem tegema rohkem tööd kontrollifunktsioonide rakendamiseks . Samuti tuleb tunnistada , et vastavad kontrollimehhanismid on hoolimata teoreetikute ulatuslikust tööst praktikas küllalt läbi proovimata . Igasuguste kontrollisüsteemide rakendamise vajalikkuse üle otsustamine jääb seega suures osas hajusarvutuste läbiviija poolt oletatavalt piisavale tasemele , tagamaks piisavat turvalisust võimalikult hea jõudluse juures . See tähendab , et oluliste hajusarvutuste läbiviija peab olema kõigepealt ise usaldusväärne ettevõte või organisatsioon , kellel on olemas korralik reputatsioon tänu korrektselt läbiviidud hajusarvutustele . <arv>. Töö JAOTUMINE KESKSE SüSTEEMI JA KLIENTARVUTITE VAHEL Internetil põhinevate hajusarvutuste läbiviimise eesmärk on lasta võimalikult palju tööd arvutuste juures ära teha juhuslike aeglase võrguühendusega klientarvutite poolt . Siiski pole kogu töömahu väljajagamine võimalik ei tehnilistel põhjustel ega ka otstarbekuse seisukohalt , sest andmemahukad operatsioonid tuleb tsentraliseerida Interneti sidekanalite keskmiselt väikese läbilaskevõime pärast tuleb tsentraliseerida turvalisusega ( klientide infobaas ) ja projekti usaldusväärsuse tagamisega ( tulemuste ja nende kontrolli andmebaas ) seotud tegevused . Siia peaksid kuuluma ka väikesed keskse süsteemi juurde kuuluvad usaldusväärsed kliendid , kelle abil on võimalik arvutustulemusi kontrollida . Õnneks on mõlemad tingimused kattuvad - päringud ja operatsioonid kliendiinfobaasis ja tulemuste andmebaasis on kahtlemata rohkem andme- kui arvutusmahukad . <arv>.<arv> HAJUSARVUTUSSÜSTEEMI KLIENT Hajusarvutuskliendi tehtava töö võib põhimõtteliselt jagada kolmeks : andmete töötlemise ehk arvutuste läbiviimise osa kommunikatsiooniliides , mis võimaldab suhelda keskse serveriga andmete saamiseks ja tulemuste edastamiseks kasutajaliides kasutajapoolseks tarkvara seadistamiseks ( kommunikatsiooniviisid , arvutuste käivitamise prioriteedid ) koos lisavõimalustega , milleks võib olla näiteks ekraanisäästja , arvutuste statistika kuvamine jms. Klienditarkvara tööks tuleb arvestada ka vajadus teatud liiasuse järele klientide kontrollimise ja identifitseerimise eesmärgil , mida käsitlesime <arv>. peatükis . Klienditarkvara valmistamisel võetakse selliste projektide juures suund ülimale lihtsusele , et võimaldada sama tarkvara kompileerida paljudele erinevatele riist- ja tarkvaraplatvormidele [ <arv> ] , millega süsteem saab võimalikult palju potentsiaalseid kliente . <arv>.<arv> HAJUSARVUTUSSÜSTEEMI SERVERISÜSTEEM Serverisüsteemi peamisteks ülesanneteks on suure arvutusülesande tükeldamine nende tükkide klientarvutitele saatmine klientarvutite poolt väljaarvutatud tulemuste vastuvõtmise ja nende tulemuste õigsuse ja usaldusväärsuse kontrollimine mitmesugused lisafunktsioonid , näiteks kasutajate panuse arvutamine kas edetabeli koostamise või arvutiaja eest tasumise eesmärgil jms. , konkreetsete projektide spetsiifikast sõltuvad ülesanded . Hajusarvutuse serverisüsteemi on kõige parem uurida praeguse suurima hajusarvutusprojekti SETI@home näitel , mis on toodud joonisel <arv> [ <arv> ] . Esimese osa süsteemist moodustab andmete töötluseks ettevalmistamise süsteem , mis koosneb neljast tööjaamast . Need loevad andmeid observatooriumist saabunud magnetlintidelt ( <arv> GB DLT ) , tükeldavad need töötlemiseks sobivateks andmetööühikuteks ja salvestavad ajutiselt andmehoidlasse klientidele väljajagamiseks . Peamine serversüsteem koosneb kolmest Sun Enterprise <arv> seeria serverist . Esimene neist hoiab klientide andmeid kõikide registreerunud kasutajate kohta koos vajaliku statistilise informatsiooniga . Teine server hoiab teaduslikku andmebaasi ( maht <arv> GB RAID <arv>+<arv> oktoobris <arv> ) , mis sisaldab iga töödeldud andmetööühiku puhul informatsiooni aja , taevakoordinaatide , sageduste jms. kohta , samuti seda , kui palju kordi on vastavat ühikut töödeldud klientarvutite poolt ja millised on olnud tulemused . Kolmas server hoolitseb klientidega suhtlemise eest , jagades neile välja andmetööühikuid ja korjates tagasi arvutustulemusi . Lisaks kasutab SETI@home veel ühte serverit teadusliku andmebaasi analüüsimiseks ja andmete kontrollimiseks . Kui selgub vajadus kontrollida , saadetakse andmetööühikud uuesti klientidele ümberarvutamiseks ja võrreldakse tulemusi . <arv>.<arv> TSENTRAALSE TÖÖ OSATÄHTSUS HAJUSARVUTUSSÜSTEEMIS SETI@home projekti kuuluvad klientarvutid on viimasel ajal kogunud üle tuhande arvutiaasta jagu arvutusvõimsust ööpäevas , saavutades kiiruseks <arv> teraFLOP/s [ <arv> ] . Samal ajal on selle projekti läbiviimise tuumikuks vähem kui <arv> väikest ja keskmist Sun-tööjaama ja -serverit . Uurides SETI@home projekti tehnilist kirjeldust [ <arv> ] ning jälgides mitmesuguste probleemide kirjeldusi Interneti uudistegruppides ja SETI@home projekti kodulehel , on selgelt näha , et peamised probleemid , kitsaskohad ja süsteemile vajalikud täiendused on olnud seotud andmesalvestussüsteemidega ja serverite Interneti-ühenduse läbilaskevõimega . Sellest võib järeldada , et SETI@home projektis on klientidele antud teha peaaegu kogu sisuline arvutuslik töö , sest vastasel korral ei oleks serverisüsteem oma ülesannetega toime tulnud ning projekt oleks sellega läbi kukkunud . <arv>. INTERNETIS LäBIVIIDAVATE HAJUSARVUTUSTE PRAEGUNE SEIS Hetkel töötab Internetis suur hulk hajusarvutusprojekte . Peab tunnistama , et väga vähe Internetil põhinevaid hajusarvutusprojekte on lõpetatud , seda peamiselt kahel põhjusel . Esiteks on suuri hajusarvutusprojekte hakatud läbi viima alles viimastel aastatel ning nende kestus on ka suure arvutusvõimsuse korral küllalt pikk . Teiseks , kui projekt on ühe ülesande lahendanud , tahetakse edasi minna järgmiste ülesannete juurde , kasutades ära juba eelmise ülesande lahendamiseks projekti kogunenud klientarvutite potentsiaali . Viimase lähenemise parimaks näiteks on Distributed.net , mis tegeleb mitmesuguste krüpteeritud andmete lahtimurdmisega , ning ka SETI@home , mis on oma ülesannet klientide arvu ja arvutusvõimsuse kasvades pidevalt laiendanud ning kus kavandatakse alustada ka uut projekti SETI@home <arv>. <arv>.<arv>. KÄIMASOLEVAD PROJEKTID Anname lühikese ülevaate suurematest ja huvitavamatest projektidest . Täielikum informatsioon erinevate projektide kohta koos viidetega nende kodulehtedele on saadaval Interneti-leheküljel [ <arv> ] . SETI@home projekt , mis otsib raadioteleskoobiga märke Maa-välisest elust , on leidnud käesolevas töös juba korduvalt käsitlemist , olles üks vanemaid ja suuremaid hajusarvutuste projekte . Entropia on keskkond , milles töötab paralleelselt mitu projekti . Suurim neist otsib ravimit AIDS-ile , samuti tegeletakse aktsiaturgude ennustamise probleemidega . Distributed.net testib erinevaid krüptimise viise , püüdes krüptitud andmeid dekrüptida . Samuti tegeldakse matemaatiliste probleemidega . Hetkel on neil sõlmitud koostöölepe firmaga United Devices , kellele jagatakse oma kogemusi hajusarvutuste korraldamisel ning saadakse vastu tehnilist ja rahalist tuge [ <arv> ] . United Devices alustas <arv>. aasta alguses koostöös Oxfordi ülikooli , Inteli ja Riikliku Vähiuuringute Fondiga ( National Foundation for Cancer Research ) hajusarvutust vähiravimite väljatöötamiseks . Folding@home uurib , kuidas oleks võimalik toota proteiine . Genome@home on eelmise projekti tütarprojekt , mis tegeleb uute proteiinide ja geenide loomisega , mis võivad viia uute raviviisideni . Huvitav vahepala suhteliselt sarnastele hajusarvutusprojektidele on Porivo [ <arv> ] , mis tegeleb suurte www-süsteemide jõudluse testimisega ja pudelikaelte otsimisega . Erinevuseks teistest hajusarvutusprojektidest on tugev sõltuvus võrguühendusest , mis on vajalik www-serverite testimiseks . Siiski on ühe tööühiku töötlemise aeg vaid <arv>-<arv> minutit , mis teeb selle vastuvõetavaks ka modemiühenduse kasutajatele . <arv>.<arv>. UUTE PROJEKTIDE IDEED Uute projektide all mõeldakse siin projekte , mis pole veel käivitunud või on alles idee staadiumis . Nendest üks kaugemale jõudnud on “ Ubero ” [ <arv> ] , mis kavatseb kasutada Javal baseeruvat universaalset klienditarkvara , mida saab serveri suunamisel kasutada erinevateks arvutusteks . Samuti lubatakse klientidele maksta tasu sõltuvalt töödeldud andmetööühikute iseloomust ja hulgast . Keskuse ülesandeks jääb koguda tellimusi arvutuste tegemiseks ja jagada töö ning ülesannete täitmisest saadav raha klientide vahel ära . Järgmine uus suund on aga olemas vaid idee tasandil . Idlepower.net [ <arv> ] kavatseb luua hajutatud superarvuti , mis on võimeline lahendama ka andmeintensiivseid ja raskesti paralleelseks muudetavaid ülesandeid . Seetõttu on suured ka klientidele esitatavad nõuded - kiire Interneti-ühendus ja palju kõvakettaruumi andmete hoidmiseks . Lõpetuseks võiks mainida ka veel XtremWeb'i [ <arv> ] , mis on seadnud eesmärgiks töötada välja klientide ja serverite universaalne keskkond , mille abil saaksid soovijad läbi viia oma hajusarvutusprojekte . <arv>.<arv>. HAJUSARVUTUSTE ÄRILISED VÕIMALUSED Hajusarvutuste potentsiaalsed kliendid on firmad , kes vajavad suuri arvutusvõimsusi . Hajusarvutuste tehnoloogiale toetudes oleks neil võimalik oluliselt vähendada arvutustega seotud investeeringuid ja arvutite hoolduskulusid . Traditsioonilisel viisil tegutsedes peaks selline firma ostma kas väga kalli superarvuti või siis arvutikobara ning kandma suuri kulusid selle hooldamisel , kusjuures sellise ressursi väärtus hakkab kohe pärast ostmist kiiresti vähenema , kuni superarvuti leiab end võistlemast mõned aastad nooremate tööjaamadega . Lisaks tuleb iga uue riistvarahanke järel suure tõenäosusega rakendustarkvara portida või täielikult ümber kirjutada . Internetil põhinev hajusarvutuse projekt võimaldaks osta vaid hetkel vajalikku arvutusvõimsust võtta kasutusele iseuuenev platvorm , mis muutub automaatselt kiiremaks iga kord , kui kodukasutajad täiendavad oma arvuteid vähendada haldus- jm. kulusid , mis on seotud superarvutite ainulaadse riistvara kasutamisega laiendada süsteemi jõudlust kiiresti ja odavalt , baseerudes mitte projekteeritud , vaid tegelikel vajadustel kirjutada rakendustarkvara vaid ühele platvormile ( klientarvuti universaalne tarkvara ) , mis on ühine kõikidele olemasolevatele riistvaraarhitektuuridele . Kommerts-hajusarvutussüsteemid muudaksid superarvuti jõudluse mõistliku hinna eest kättesaadavaks paljudele ettevõtetele ja isegi üksikisikutele . Hetkel on sellel suunal edasiliikumise suurim takistus standardse universaalse kliendiarhitektuuri puudumine . Praegu arendavad mitmed firmad välja enda isiklikke riistvara suhtes universaalseid kliente , lootes , et just nende klient saab nn. tööstuse standardlahenduseks . KOKKUVõTE Hajusarvutussüsteem tükeldab suure projekti paljudeks väikesteks ja jaotab need paljudele erinevatele samal ajal võrgus töötavatele arvutitele . Selliseid väikseid ülesandeid saavad töödelda tavalised Internetti ühendatud arvutid , kui neil parajasti puudub muu töö . Nii kasutatakse ära vaba arvutusvõimsus . Taoliste arvutuste korraldamisel on suureks probleemiks Interneti väike läbilaskevõime ja ebakindlus , mistõttu laial baasil on võimalik läbi viia ainult arvutus- , mitte aga andmeintensiivseid töid . Hajusarvutuste tegemisel on oluline ka turvalisusprobleemide lahendamine : nende korraldaja peab veenduma klientide ja nende poolt serverile saadetud arvutustulemuste õigsuses . Kõiki ohte hajusarvutuste turvalisusele pole veel tuvastatud , sest tegemist on uue nähtusega . Töö jaotamisel arvutussüsteemi serveri ja klientide vahel on oluline jätta andmemahukad operatsioonid nagu ka turvalisuse tagamise võtmefunktsioonid serverite teha . Seevastu arvutusülesandeid tuleb võimalikult suurel hulgal saata lahendamiseks klientidele , sealhulgas ka enamik tulemuste kontrolliks vajalikest lisaülesannetest . Hajusarvutustel on tõenäoliselt ees ka äriline tulevik , sest on olemas nii vajadus suure ja odava arvutusvõimsuse järele , vajalikud vahendid vähekoormatud personaalarvutite ja Interneti näol kui ka paljude arvutiomanike huvi nende projektide vastu . Käesolev artikkel valmis Ph.D. Kalle Tammemäe juhendamisel Tallinna Tehnikaülikooli õppeaine “ Paralleelarhitektuurid ” raames referaadina . gap desc='references'&gt; Peep Küngas , TTÜ Küberneetika Instituut Grammatikate tuletus ja automaatide induktsioon ( <arv> ) <arv>.<arv>.<arv>. Algoritmi RPNI kirjeldus Algoritmi RPNI pseudokood näeb välja järgmine : Algoritm RPNI sisendid : näidised , väljund : näidistega ja kooskõlaline determineeritud lõplik automaat A begin // N on olekute arv automaadis PTA ( )  for i=<arv> to | |-<arv> for j=<arv> to i-<arv> derive det erm_merge if compatible then break end if end for end for return A end RPNI Iga olek automaadis PTA ( ) vastab unikaalsele prefiksile . Tükeldust üle PTA ( ) olekute hulga tähistatakse sümboliga . Tükelduse sisu on põhimõtteliselt sama mis algoritmis GIG . Sisuliselt valivad selle pseudokoodi kaks ülemist tsüklit olekuid , mida omavahel mestida . Funktsioon derive väljastab automaadi , mis on konstrueeritud vastavalt tükeldusele . Automaat ( automaat , mis on konstrueeritud tükelduse järgi ) võib olla mittedeterministlik . Funktsioon det erm_merge väljastab tükelduse , mis on saadud , mestides rekursiivselt kõik tükelduses mittedeterminismi tekitanud plokid . Sel viisil saadakse determineeritud automaat . Kui on deterministlik , siis tükeldus on võrdne tükeldusega . Funktsioon compatible kontrollib automaadi kooskõlalisust negatiivsete näidetega . Olekute mestimisel ei vaata me läbi mitte kõiki kombinatsioone tükeldustest , vaid kõigest osa . Kui vaadelda antud lähenemisviisi otsimisena regulaarsete keelte ruumis [ <arv> ] , siis leiame , aktsepteerimaks otsitavat keelt , vaid lokaalselt minimaalse automaadi . Vastutasuks sellise mittepõhjalikkuse eest saavutame kokkuhoiu mälu ja arvutuste mahus , mis on olulisteks faktoriteks suure näidise puhul . Kahjuks pole algoritm RPNI positiivsete ning negatiivsete näidete jooksva lisamise suhtes inkrementaalne . Kui seda lisamist tehakse , oleme sunnitud eelnevalt saadud tulemused tühistama ning näidetest õppimisega otsast pihta hakkama . Samas leidub algoritmist ka inkrementaalne variant RPNI<arv> [ <arv> ] , mis analoogiliselt RPNI-ga tuletab regulaarseid automaate . <arv>.<arv>.<arv>. Algoritmi RPNI selgitav näiteülesanne Olgu positiivseks näidiseks ning negatiivseks näidiseks . Siis on prefiksiteks leksikograafilises järjestuses . Esimese sammuna ehitame automaadi . Järgmisena mestime olekud ning <arv> - tulemuseks saadud automaat on paraku vastuolus negatiivse näidisega ( aktsepteerib stringe <arv> ja <arv> ) . Seega heidame selle variandi kõrvale ning mestime olekud <arv> ja <arv> . Saadud automaat on kooskõlaline negatiivse näidisega , seetõttu omistame ta automaadile A . Pärast seda mestime olekud ja <arv> . Siis olekud <arv> ja <arv> , ja <arv> , ja <arv> , <arv> ja <arv> .  Viimase sammuna mestime olekud ja <arv> . Edasise mestimise tulemusena satuks automaat A vastuollu negatiivse näidisega . Seetõttu me ka lõpetame . Tulemuseks saadud automaadis on vaid kolm olekut , võrreldes esialgse kümnega , mis on järjekordseks näiteks masinõppimise kasulikkusest mudelite lihtsustamisel . <arv>.<arv>. L* Angluini poolt välja pakutud algoritm L* [ <arv> ] genereerib “ minimaalselt adekvaatse õpetaja ” abiga vähima olekute arvuga deterministliku lõpliku automaadi , mis aktsepteerib õpitavat keelt . Teisiti öeldes anname õppijale õpetaja , kes vastab kahte sorti päringutele - kuuluvus- ( kas sisendstringi on aktsepteerib tuletatud automaat M ? ) ja ekvivalentsipäringutele ( kas konstrueeritud hüpoteetiline automaat M on ekvivalentne õpitava automaadiga ? ) . Lisaks võib õpetaja esitada õpilasele kontranäite , mis tõestab , et genereeritud hüpoteetiline automaat pole korrektne . <arv>.<arv>.<arv>. Algoritmi kirjeldus Algoritm konstrueerib hüpoteetilise deterministliku lõpliku automaadi , esitades õpetajale kuuluvuspäringuid ( membership query ) . Pärast hüpoteetilise automaadi loomist esitatakse õpetajale ekvivalentsipäring ( equivalence query ) , selgitamaks välja , kas õpitud automaat vastab sellele automaadile , mida õpetaja silmas pidas . Automaadi ehitamiseks kasutatakse vaatlustabelit ( tähistatakse sümboliga T ) , milles read vastavad võimalikele olekutele ( S ) ning siiretele ( S A ) hüpoteetilises automaadis ja veerud eksperimentidele ( E ) , mille ülesandeks on uute olekute leidmine . A tähistab siin alfabeeti , üle mille automaati tuletatakse . Vaatlustabelit saab neid hulki ning kujutist T kasutades lihtsustatult esitada järgnevalt :  Erinevalt kahest eelnenud lõplike automaatide õppimise algoritmist , kus otsiti automaati üldistamise teel , alustatakse L*-s universaalautomaadist ehk siis üldisimast automaadist automaatide võres ning üritatakse selle ainus olek jagada nii paljudeks olekuteks kui vaja ehk siis tegeletakse automaadi spetsialiseerimisega . Olekute tähistamiseks kasutatakse sisendsõnu , millega automaat selle sisendiks saades , jõuab algolekust vastavasse olekusse . Algoleku märgime tähega . Et me soovime leida vähima olekute arvuga automaati , siis peame kuidagi tuvastama juhu , mil erinevad märgistused vastavad samale olekule tabelis - seda võrdlust teeme , jälgides võrreldavate olekute veergusid . Kui kahe rea väärtuste komplektid erinevad , siis tähendab see , et nendest kahest olekust suundutakse sama sisendi korral erinevaisse olekuisse . Seega pole need kaks olekut deterministliku automaadi korral identsed . Tabeli välju täidetakse , esitades kuuluvuspäringuid tabeli väljale vastava rea S või S A ning veeru liitmisel saadud stringile . Päringu tulemus ( jah või ei ) salvestatakse vastavasse ( T ( S E ) või T ( S A E ) ) välja tabelis . Intuitiivselt tähendab see , et õppija küsib õpetaja käest , kas leidub sellist siiret teadaolevatest olekutest , mis viiks lõppolekuni , ning seega üritab välja uurida , kas õpitavas automaadis leidub veel olekuid lisaks teadaolevatele . Täidetav tabel koosneb kahest osast - ülemisest ning alumisest , mis on vastavalt hüpoteetiliste olekute ning siirete jaoks . Tabeli täitmiseks on meil vaja defineerida tabeli terviklikkuse ( consistency ) ning suletuse ( closed ) kriteeriumid . Terviklik on tabel juhul , kui iga kaks samade tulemustega rida selle ülemisest osast annavad samasuguse vastuse , kui lisada neile alfabeedist A ükskõik milline sümbol . Järgnev näide on terviklik , sest stringidel ning <arv> tabeli ülaosast on sama vastuste komplekt ( jah , ei ) ning ka alfabeedist sümbolit <arv> ja sümbolit <arv> lisades saadud stringidel ( vastavalt <arv> ja <arv> ning <arv> ja <arv> ) on samad tulemuste paarid - ( ei , ei ) ning ( ei , jah ) .  Tabel on suletud , kui igale reale tabeli alumises osas leidub samade tulemustega rida ülemises osas . Ehk siis teisiti : tabel on suletud , kui kõik hüpoteetilises automaadis leiduvad olekud on kirjeldatud tabeli ülemises osas . Järgmine tabel on suletud , sest selle alumises osas leiduvatele vastuste kombinatsioonidele ( jah , ei ) , ( ei , ei ) ja ( ei , jah ) leidub samasugune ülemises .  Tabeli ülemisse ossa S kuuluvad stringid kujutavad automaadi olekuid ning alumise osa S A stringid selle automaadi siirdeid . Kui tabel on terviklik ning suletud , siis peatatakse õppimisprotsess , genereeritakse tabeli baasil hüpoteetiline automaat ning küsitakse õpetaja arvamust selle kohta . Tuletamise protsess kestab kuni õpetajat rahuldava automaadi loomiseni . Formaalsem selgitus tabeli täitmiseks pseudokoodi näol on esitatud pärast näiteülesande lahendamist . <arv>.<arv>.<arv>. Näiteülesanne Illustreerimaks antud algoritmi , lahendame näiteülesande , kus õppija hakkab õppima lõplikku automaati üle alfabeedi , mis aktsepteeriks stringe , mis sisaldavad paaris- või nullarvu alfabeedis esinevaid sümboleid . Esialgu eeldame hüpoteetilises automaadis vaid ühte olekut . Me esitame kuuluvuspäringud , <arv> ja <arv> jaoks ning saame järgmise tabeli :  See tabel on terviklik , kuid mitte suletud , sest selle alumises osas leiduvale vastusele ( ei ) ei leidu vastavat ülemises osas . Seega tõstame rea <arv> tabeli ülemisse ossa ning küsitleme tema kõikide alfabeedis leiduvate sümbolitega laiendatud järeltulijaid <arv> ja <arv> :  Tulemuseks saadud tabel on nii suletud kui terviklik . Nüüd konstrueerime automaadi , mis vastab sellele tabelile , kusjuures on ühtlasi nii alg- kui lõppolek :  Automaati kirjeldava tabeli täitmisel indekseeritakse antud juhul olekud eksperimendi tulemustega . Näiteks on saadud tulemusest ( jah , ei ) . Automaadi algolekuks valitakse tühja stringi tähistava tähega algav rida . Et konstrueeritud automaat ei ole see , mida pidas silmas õpetaja , siis vastab ta kontranäitega <arv> , mille lisame koos tema kõigi prefiksitega ( , <arv> ) tabeli ülaossa . Loomulikult ei dubleeri me olemasolevaid ridu ( ) . Seejärel esitame kuuluvusküsimused <arv> , <arv> ja <arv> kohta ning saame uue tabeli :  See tabel on suletud , kuid mitte terviklik ( jälgi ridasid <arv> ja <arv> ning nende järglasi <arv> ja <arv> ) . Seega lisame uue veeru <arv> ( hulka E ) . Tehes kuuluvuspäringud ridadele <arv> , <arv> , <arv> , <arv> ja <arv> , moodustame järgmise tabeli :  Viimane on jällegi terviklik ning suletud . Tuletatud automaat , kus nii alg- kui lõppolekuks on , näeb välja järgmine :  Õpetaja vastab kontranäitega <arv> ( kuigi õpitav keel koosneb vaid sõnadest , millesse kuulub paarisarv alfabeedis leiduvaid sümboleid , aktsepteerib automaat sellise stringi ning see esitatakse õpilasele kontranäitena ) . Lisame <arv> ning tema prefiksid hulka S. Võimalikest prefiksitest on puudu ainult <arv> ja <arv>. Täitmaks laiendatud tabelit , teostame kuuluvuspäringuid <arv> , <arv> , <arv> , <arv> ja <arv> kohta :  on küll suletud , kuid mitte terviklik ( jälgi ridu <arv> ja <arv> ning nende järglasi <arv> ja <arv> ) . Niisiis lisame hulka E elemendi <arv> ja teeme päringuid stringide <arv> , <arv> , <arv> , <arv> , <arv> , <arv> ja <arv> kohta , saades tulemuseks tabeli :  Et see tabel on terviklik ning suletud , konstrueerime vastava automaadi , kus nii alg- kui lõppolekuks on :  Õpetaja aktsepteerib genereeritud hüpoteetilist automaati ning me lõpetame tuletusprotsessi . <arv>.<arv>.<arv>. L* pseudokood Initsialiseeri S ning E ] } -ga Esita kuuluvuspäringuid ja iga kohta Konstrueeri esialgne vaatlustabel ( S , E , T ) Itereeri senikaua , kuni ( S , E , T ) pole suletud ning kooskõlaline kui ( S , E , T ) pole kooskõlaline leia , ja sellised , et row ( ) = row ( ) ja lisa hulka E lisa tabelisse kirjed , kasutades kuuluvuspäringuid , kui ( S , E , T ) pole suletud leia ja sellised , et row ( ) @ row ( ) , lisa hulka S lisa tabelisse kirjed , kasutades kuuluvuspäringuid , kui ( S , E , T ) on suletud ja kooskõlaline , siis M=M ( S , E , T ) konstrueeri hüpoteetiline automaat M kui õpetaja vastab kontranäitega t , siis lisa t ja kõik tema prefiksid hulka S lisa tabelisse kirjed , kasutades kuuluvuspäringuid kuni õpetaja kiidab heaks hüpoteetilise automaadi M väljasta M <arv>. KOKKUVÕTE Artiklis käsitlesime algoritme automaatide tuletamiseks ning sel moel regulaarsete grammatikate induktiivseks konstrueerimiseks . Automaatide üldistamise teel on võimalik olemasolevaid mudeleid lihtsustada või luua hoopis uusi , kasutades olemasolevaid modelleeritavaid süsteeme kirjeldavaid vaatlusandmeid . Kasutades automaatide õppimist , võib üldistada olemasolevaid teadmisi ning sel moel lisada tehisintellekti algeid nii agentidele kui ka tavalistele programmidele . Teisest küljest võib automaate vaadelda teadmiste kompaktse esitamise vormina , kusjuures automaatide tuletamise algoritmide olemasolu tõttu on nende teadmiste üldistamine sellesse vormi juba sisse ehitatud . Lisamaterjali automaatide tuletamise ning grammatikate õppimise kohta saab artiklitest [ <arv> ] - [ <arv> ] .  Tõlkinud Vello Hanson I.Hannula , R.Linturi / SADA NÄHTUST <arv> - <arv> / Virtuaal-Helsingi ja kübermutt <arv> Ahvi aasta Islami aasta <arv> Olümpiamängud Universum siiski paisub Maakera temperatuur on <arv> kraadi tõusnud ≤<arv>% polaarjääst on sulanud Vilja napib , vilja hind kasvab järsult Täiesti salajane : geenipomm Kõrbe-päikesepurjetamise esimene MM toimub Hiinas Meeldivuste mälu Sony Multivisioonile Virtuaalajaviide laostab füüsilist vormi Virtuaaltennis säilitab vormi Arstiteaduse Nobel paraantibiootikute väljatöötajaile Need kellad , mis kõlksuvad inimkonnale , on - vähemalt enamik neist - nagu Alpide karjakellad ; nad on sõlmitud meile kaela ja oleme ise süüdi , kui nende kõla pole meeldiv ega harmooniline . Peter Medawar . Inimese bioloogiline tulevik . <arv>. Sony reklaamleht - <arv>.<arv>.<arv> DIGIVALET - MURRANGULISE MULTIVISIOONI LISASEADE Kallis klient , soovime Sind tänada hea vastuvõtu eest , mis on saanud osaks meie tootesarja staarile , Sony Multivisioonile . Meie kliendid on ta omadustega rahule jäänud . Paljud on siiski soovinud teatavaid lisaomadusi , seetõttu on Sony asunud neid soove täitma , tutvustades iga kuu Multivisiooni uusi võimalusi . Need uued funktsioonid on saadaval ka Sinu seadme jaoks . Meie uusim laiend on DigiValet , väljavõetav mälumoodul , mis õpib tundma kõiki Su eelistusi . DigiValet toob Multivisiooni kasutusviisi murrangu . Kujutle , kui kerge on käia virtuaalpoes , kui DigiValet valib just Sind huvitavad asjad , jättes kõrvale need , millest nagunii pikemata mööduksid . DigiValet on ka isiklik teener . Ta käib Sinu eest sisseoste tegemas ja teda võid usaldada - ta ei osta midagi , mis Sulle ei meeldi . Võid ka avada DigiValeti oma sõprade käsutusse , näiteks siis , kui nad tahavad Sulle osta tähtpäevakinki . Võid oma meeldimuste kaardi paigutada isegi oma kodulehele . DigiValet ületab tunduvalt näiteks seda , mida suudab NetFin . Ta koolitamine ei tekita mingeid raskusi . Ta kogub kogu aeg andmeid Su eelistuste kohta , Sul endal ei tule teha midagi . DigiValet õpib Su eelistusi siis , kui vaatad filme , kulged läbi seikluste , ajad asju videotelefoni kaudu või käid virtuaalsisseoste tegemas . Ühesõnaga , nagu parimatele traditsioonidele vastav teener ! Mida kauem on DigiValet Su teenistuses , seda rohkem on temast abi . DigiValet oskab ka võrgust tuleva infovoolu seest sõeluda välja need asjad , mis Sind huvitavad . Ja loomulikult abistab ta ka Kohtingunupu kasutamisel ( seda küll alates versioonist <arv>.<arv> ) . Nii on Su partnerid endisest paremini kooskõlas Su soovidega , isegi Su alateadvuslike unelmatega . Tutvu DigiValetiga kohe ! See on lahendus , mis kõrvaldab suure osa Su probleemidest . DigiValet maksab <arv> eurot . Ta toimetatakse kohale kullersaadetisena . Tellimuse võid jätta meie kodulehele . Sealt leiad ka üksikasjaliku tutvustuse ja rohkeid näiteid DigiValeti kasutusvõimalustest . CompuMedia - <arv>.<arv>.<arv> VIRTUAALAJAVIIDE LAOSTAB FüüSILIST VORMI Kaugtöö , virtuaalajaviide ja muud loomulikku liikumist vähendavad tegurid on laostamas läänemaise inimese füüsilist vormi . WHO sooritatud uuringu andmetel on <arv>. eluaasta ületanud läänemaise naise füüsilised võimed langenud viie aastaga umbes <arv> protsenti , meeste võimed aga isegi <arv> protsenti . Ehkki need arvud tunduvad väikesed , peab WHO oma aruandes muutust dramaatiliseks . Füüsilise vormi halvenemist osati küll oodata , kuid see on toimunud ennustustest palju kiiremini . Muutuse kiiruse taga on peaaegu kõikehõlmav eluviiside muutus , mis puudutab suuremat osa inimestest ning mõjub nii töö- kui ka jõudeajal . Üha suurem arv inimesi töötab kodus , istudes kogu päeva multimeediumitoolis . Üha suurem osa igapäevasest liikumisest toimub mööda eskalaatoreid ja liugradu , mitte kõndides . Vaba aja traditsioonilisi liikumisharrastusi on asendamas liikumatult nauditavad virtuaalelamused . Vormi halvenemist võib juba selgesti täheldada haiguste ja terviserikete statistikas , kust see peagi peegeldub majandusellu . WHO aruandes peetaksegi möödapääsmatuks , et järgmise kümne aasta vältel võtavad valitsused ja rahvusvahelised organisatsioonid füüsilise vormi parandamise oma tähelepanu keskmesse . Virtual Sport Ltd. reklaamleht - <arv>.<arv>.<arv> VIRTUAALTENNIS SäILITAB VORMI Sa ei jaksa enam liikuda nii nagu enne ? Hingeldad trepil ? Seks ei paku huvi ? Tundub tuttav ? Su vorm on halb - ja Sa pole ainus ! Õnneks on Su probleemile leitud meeldiv lahendus : virtuaaltennis . Paljudel meist kisub kõht krampi , kui kuuleme sõna “ tervisesport ” . See toob meelde ebameeldiva pingutuse , jõusaalide higist lehkavad ebahügieenilised riidekapid ja kallid kuumaksud . Aga on meeldivaidki sportimisviise . Üks meeldivamaid on tennis . Et aga tõelised tenniseväljakud võtavad kasutaja kohta palju ruumi , on nende kasutamise hinnad väga kõrged . Nüüd aga pakub Virtual Sport võimalust nautida tennist hõlpsalt ja odavalt . Virtual Sport sai äsja valmis virtuaalsete tennisehallide võrgu . Virtuaaltennist mängida on odavam ja see on isegi huvitavam kui tavaline tennis . Virtuaaltennise väljak on pisut suurem kui pool tavalist tenniseväljakut . Õieti on tõeline ainult Sinu väljakupool . Teisel pool võrku on Su virtuaalne vastane , kelle võid programmeerida mängima sellisel tasemel , nagu soovid . Peale selle võid seada ta lööma Sulle just selliseid palle , mida soovid harjutada - ja variantidele ei tule lõppu . Virtuaaltennise saladus on Virtual Sporti loodud pallis . See on liikuv hologramm , mida Sa ei suuda eristada tõelisest pallist . See pall lendab nagu ehtne tennisepall . Kui teed löögi , tundub tabamus täiesti ehtne - tänu meie infrahelitehnikale . Pall lendab Su löögist üle võrgu ja tuleb tagasi vastavalt sellele , kuidas oled programmeerinud oma vastase . Virtuaaltennise tasu on ainult pool tavalise saalitennise tasust . Su vastane aga on ideaalne , just selline , kellega oled alati soovinud mängida . Kui Su oskused suurenevad , võid endale programmeerida üha parema ja parema vastase . Võid ka harjutada kogu mänguaja rabakuid , tagantkäelööke , serve või suvalist lööki , mida soovid täiustada . Võid alustada tennist ka päris otsast peale . Su virtuaalvastane on suurepärane , kannatlik ja väsimatu õpetaja . Ja Su vorm paraneb mühinal ! Lähima virtuaaltennisehalli aadressi leiad meie kodulehelt , samuti hinnakirja . Hallis on Sulle varutud ka kvaliteetne reket , mille saad pärast <arv> külastust endale . Tule meie juurde mängima , nautima ja oma vormi parandama ! Mart Laanpere , TPÜ lektor , Tiigrihüpe Pluss arengukava töörühma liige Infotehnoloogia Eesti koolis . Riiklik arengukava aastateks <arv>-<arv> <arv>. aastal käivitunud Eesti koolide arvutiseerimisprogramm Tiigrihüpe lõppes aastal <arv> , olles suures osas saavutanud oma eesmärgid . Samas oli selge , et sellega sai loodud vaid hädapärased eeldused tõsisemate muudatuste läbiviimiseks haridussüsteemis ja Tiigrihüpe vajab jätkuprogrammi . Artikkel käsitleb riikliku arengukava “ IT Eesti koolis <arv>-<arv> ” ( ehk Tiigrihüpe Pluss ) taustategureid , saamislugu ja põhijooni . IT-ARENGUSTRATEEGIAD EESTIS JA MUJAL Tänapäeva maailmas kipub poliitilistes reformides kahanema maailmavaate ja ideoloogia tähtsus , poliitiliste parteide valimisprogrammid erinevad üksteisest üha vähem . Kandvaid ideid , mis võiksid toimida ühiskonna arengu teljena , otsitakse ka väljast poolt ideoloogilisi platvorme . Maavarade kasutamisel põhineva tehnoloogilise progressi idee on jõudnud kriisini . Seetõttu pole ime , et poliitikute lootused ühiskonna probleemide leevendamiseks on seotud infotehnoloogia poolt pakutavate võimalustega . Euroopa Liidu esimene kaalukas seisukohavõtt infotehnoloogia kohast ühiskonnas oli <arv>. a. avaldatud nn. Bangemanni raport , milles väljendati sügavat veendumust info- ja kommunikatsioonitehnoloogia positiivsest rollist sotsiaalse , haridusliku ja majandusliku ebavõrdsuse vähendamisel , ühiskonna arengu tasakaalustamisel , institutsioonide töö tõhustamisel jne. Kümnest käivitatud katseprojektist olid kaks otseselt seotud haridussüsteemiga : ülikoolidevahelise Interneti- ja videokonverentsipõhise kaugkoolituse arendamine ning kõiki Euroopa ülikoole ühendava kiire magistraalvõrgu rajamine ( Bangemann , <arv> ) . <arv>. aasta kevadel kuulutas Euroopa Komisjon välja järjekordse ambitsioonika arendusprogrammi “ e-Europe - infoühiskond kõigile ” , mille peamisteks eesmärkideks on kõigi inimeste , kodude , koolide , firmade ja asutuste aitamine digitaalsesse ajastusse ja võrku digitaalse kirjaoskuse tagamine kõigile Euroopa kodanikele , ettevõtlus- ja uuendusmeelse kultuuri toetamine kogu ühiskonna kaasamine sellesse protsessi . Haridussüsteemi puudutab e-Europe programmi kümnest tegevusliinist otseselt vaid üks “ Kiire Internet teaduritele ja tudengitele ” , mille väljunditena mainitakse võrguõpet , virtuaalseid haridusasutusi ja üleeuroopalist teadustöö võrgustikku . Eesti Vabariigi infopoliitika alused kinnitas Riigikogu juba <arv>. aastal . Alustes mainiti kahe prioriteetse valdkonnana infotehnoloogia arendamises emakeelset haridust ja avalikku haldust . Riikliku infopoliitika praktilise väljundina haridussfääris nähakse ette mitu arendusprogrammi ( Tiigrihüpe , ISE jm. ) . Ka EV Haridusministeeriumis töös olev riiklik haridusstrateegia ( Haridusministeerium , <arv> ) rõhutab infotehnoloogia rolli kvaliteedijuhtimisel , õppeasutuste haldamise efektiivsemaks muutmisel , õppeprotsessi kaasajastamisel ja paindlikumaks muutmisel ( sh. virtuaalõpe üle Interneti ) . Eeltoodud arengustrateegiad on siiski liiga üldised , et nende põhjal saaks kavandada Eesti koolide infotehnoloogiaalast arengut pärast Tiigrihüppe programmi ametlikku lõppemist . TIIGRIHÜPPE TULEMUSED Eesti koolide riiklik arvutiseerimisprogramm Tiigrihüpe käivitus prominentsete poliitikute toel juba <arv>. aastal . Programmi eesmärgiks oli ( Tiigrihüpe Pluss , <arv> ) aidata omavalitsustel välja arendada koolide infotehnoloogilist infrastruktuuri , sh. toetada koolides Interneti-ühenduse loomist aidata Eesti õpetajatel omandada elementaarset arvutioskust ja suunata neid kasutama ajakohaseid info- ja kommunikatsioonitehnilisi võimalusi oma aine õpetamisel toetada interaktiivse ja õpioskusi arendava õpikeskkonna abil õppekava uuendamist edendada eesti keelt , kultuuri , ajalugu ja loodust käsitleva originaaltarkvara loomist vastavuses riikliku õppekavaga . Arendustegevuse koordineerimiseks asutas Haridusministeeriumi sihtasutuse , mis nelja aasta jooksul suunas erinevate infotehnoloogiaprojektide finantseerimiseks <arv> <arv> <arv> krooni riigieelarvelist raha . Tiigrihüppe tulemusena olid aastaks <arv> kõik Eesti üldhariduskoolid varustatud arvutitega ( keskmiselt <arv> õpilast arvuti kohta ) , <arv>% koolidest oli Interneti püsiühendus . Tiigrihüppe toetusel oli saanud arvutialase algkoolituse üle <arv>% Eesti põhikooli- ja gümnaasiumiõpetajatest , samuti oli loodud <arv> algupärast õpitarkvara paketti . UUED VAJADUSED Et Tiigrihüpe oli algul välja kuulutatud kolmeaastase sihtprogrammina , oleks see pidanud lõppema juba aastal <arv>. Riigikogu otsustas Haridusministeeriumi ettepanekul pikendada programmi kestust <arv>. aasta lõpuni . Samas oli asjaosalistele selge , et ka see aastane lisaaeg ei võimalda Tiigrihüpet edukalt lõpetatuks lugeda , sest üha ilmsemaks muutus vajadus jätkuprogrammi järele , mis toetaks rajatud infrastruktuuri rakendamist haridussüsteemi reformis . Võrreldes Tiigrihüppe algusaegadega olid <arv>. aasta lõpul tekkinud uued vajadused koolide infotehnoloogia arengu valdkonnas : keskenduda tehnoloogia asemel hariduse edendamisele toetada aktiivselt uue , infoühiskonda sobiva koolikultuuri levikut laiendada reformi skoopi , suunates tuge ja raha ka nendesse haridussüsteemi osadesse , mis Tiigrihüppe poolt toetust ei saanud toetada aktiivselt infotehnoloogia integratsiooni õppekavadesse - seda eelkõige õppevahendina , õppekeskkonna rikastajana avardada sihtrühma , jõuda iga õpetaja ja õpilaseni ( Tiigrihüpe tegeles peamiselt õpetajaskonna entusiastlikuma ja uuendusmeelsema osaga ning finantseeris väikese/keskmise mastaabiga innovatiivseid projekte ) tagada koolide infotehnoloogia jätkusuutlik areng ka pärast jätkuprogrammi lõppu ( on väheusutav , et riik jääbki haridussüsteemi IT-valdkonda eraldi ja eelistatult toetama ) . TIIGRIHÜPPE JÄTKUPROGRAMMI KAVANDAMINE Tiigrihüppe jätkustrateegia kavandamiseks moodustas haridusminister <arv>. aasta kevadel komisjoni , millesse kuulusid H. Aru ja E. Rebane Haridusministeeriumist , E. Mägi ja A. Liiva Tiigrihüppe Sihtasutusest , T. Eelma Sihtasutusest Archimedes , E. Lindemann Rocca al Mare koolist ja allakirjutanu . Komisjoni koostatud strateegia tööversioon läbis suve ja sügise jooksul põhjaliku kadalipu maakondlikes Tiigrihüppe töörühmades , lisaks saadeti see hindamiseks kuuekümnele eksperdile ja praktikule üle terve Eesti . Strateegia kavandi arutelu võeti ka septembris ja oktoobris toimunud Koolituuri ürituste kavva , KOOLID-listis ja Õpetajate Lehes kujunes välja üsna tuline diskussioon uue strateegia teemadel . Hulgalise tagasiside põhjal koostas komisjon uue versiooni , mille pealkirjas kasutas militaarse maiguga “ strateegia ” asemel sõna “ arengukava ” . Koodnime “ Tiigrihüpe Pluss ” ( TH Pluss ) oli jätkuprogrammile andnud prof. J. Aaviksoo juba Tiigrihüppe kevadisel aastakonverentsil . Eesti üldhariduse IKT-arengukava arutelu eesmärk oli jõuda võimalikult lähedale konsensusele küsimustes , mis puudutavad koolide IKT-arengu edasist juhtimist , finantseerimist ja hindamist erinevatel tasanditel ( riiklik , maakondlik , valla ja kooli tasand ) . Peamised dilemmad . <arv>. Otsustamise tsentraliseerimine vs. hajutamine ( näiteks : kas jätta riistvarahanked , koolitusprogrammide läbiviimine ja Interneti-ühenduste haldamine tsentraalselt Tiigrihüppe Sihtasutuse pädevusse või viia otsustusõigus valla/kooli tasandile ja jagada riigi poolt eraldatav raha koolidele laiali tavalise pearahaskeemi alusel ? ) . <arv>. Regulatsioon vs . deregulatsioon ( näiteks : kas kohustada kõiki koole ühesuguse ainekava alusel kindlates klassides informaatikat õpetama ? kas nõuda kõigilt õpetajatelt AO-tunnistusi või jätta siingi koolidele võimalus omanäoliste lahenduste leidmiseks ja õpetajale õiguse mitte osata Exceli abil sektordiagrammi luua ? ) . <arv>. Spetsialiseerumine vs . integratsioon ( näiteks : kas püüelda selles suunas , et infotehnoloogiaga ja selle õpetamisega tegeleksid ka koolides üksnes erialase haridusega informaatikud arvutiõpetuse tundides või üritada integreerida infotehnoloogia õppimist ja rakendamist teistesse ainetesse ? ) . Haridusministeeriumi ametlik poliitika ( riikliku õppekava , õpetajate atesteerimisjuhendi jms. kaudu ) on juba <arv>. aastast alates hoidnud kurssi IKT-ga seonduva deregulatsiooni ja integratsiooni suunas ning Tiigrihüppe Sihtasutus on mitme olulise otsuse tegemise delegeerinud maakondlikule tasandile . Siiski on õpetajate , haridusametnike , õpetajakoolitajate ja lapsevanemate seas palju ka neid , kes on vastupidistel seisukohtadel ( vt. näiteks Prank , <arv> või Unt , <arv> ) . Üksmeel oli neis küsimustes visa tekkima , mistõttu ka arengukava lõplik versioon ei sisalda selgeid ja üheselt mõistetavaid seisukohavõtte kõigi ülaltoodud dilemmade suhtes . TIIGRIHÜPE PLUSS ARENGUKAVA PÕHIJOONED Kuigi EV Valitsuse poolt <arv>. jaanuaril <arv> kinnitatud arengukava “ IKT Eesti koolis <arv>-<arv> ” on igale soovijale kättesaadav Tiigrihüppe Sihtasutuse veebisaidi vahendusel ( vt. <hyperlink> ) ja ka trükisena igasse haridusasutusse saadetud , tutvustan allpool siiski põgusalt selle olulisemaid punkte . Arengukava koostamisel võeti aluseks järgmised põhimõtted : toetuda arendustegevuses edaspidi Tiigrihüppe saavutustele ja tugevatele külgedele ( näiteks riist- ja tarkvarahangete korraldamise ja rahastamise skeem , projektikonkursid , laiema avalikkuse teavitamine ja jõuline meediapoliitika , mitme funktsiooni delegeerimine maakondlikele töörühmadele ) teadvustada Tiigrihüppe poolt lahendamata jäänud probleemid ja leida neile lahendused , toetudes muuhulgas ka teiste maade kogemustele , sest iga kord pole tarvis endal jalgratast leiutada lähtuda arengukava koostamisel EV infopoliitikast , hariduskontseptsioonist ja teistest olemasolevatest strateegiadokumentidest , tagades võimaluste piires kooskõla ka Euroopa Liidu vastavate arengukavadega pidada arendustegevuses edaspidi silmas konsensusliku tulevikuvisiooni põhjal seatud eesmärke ja keskenduda prioriteetsetele arendusvaldkondadele ( kõiki probleeme ei jõua kohe ja korraga lahendada ) kavandada kohe ka arendustegevuse monitooring ja evalvatsioon , et saada protsessi kohta pidevalt objektiivset teavet . TH Pluss arengukavas toodud tulevikuvisioon Eesti haridussüsteemist aastal <arv> on tuletatud EV hariduskontseptsiooni põhjal , silmas on peetud ka Euroopa Liidu haridusstrateegilisi dokumente . Muuhulgas nähakse visioonis ette , et tulevikus tagab haridussüsteem eelduste loomise koostöö- ja suhtlemisoskuste ning otsustusvõime kujundamiseks õpilastes ( praeguses õppekavas on need eesmärgid küll üldiste põhimõtetena sisse kirjutatud , kuid rakenduslikus osas katteta ja neid on tänase õppetöö korralduse raames suhteliselt raske ellu viia ) võrdsed võimalused heale haridusele kõikidele õppijatele ( sh. kaasaegse õpikeskkonna kasutamiseks , mis eeldab selle õpikeskkonna olemasolu , sellele juurdepääsuvõimalust ja selle kasutamise pädevust ) formaalhariduse piiride laienemisel ( sh. ka väljaspool kooli , näiteks virtuaalsetes ühisustes ja huviringides õpitu tunnustamine kooli poolt ) kooli avanemise ühiskonnale : õpilaste , lastevanemate , kohaliku kogukonna ja kooli juhtkonna koostöö kooliarendusliku tegevuse eesmärgil . Kirjeldatud tulevikuvisioonist tulenevalt on TH Pluss eesmärgiks seatud “ IKT rakendamine õpiühiskonna kujundamise eelduste ja tingimuste loomiseks Eesti üldhariduskoolides , tagades võimaluse omandada võimetekohane haridus tugevdades ainetevahelisi seoseid muutes hariduse sisu elulähedasemaks muutes kooli avatumaks ja paindlikumaks ajakohastades õpetajate ettevalmistust muutes hariduse infosüsteemi hästi töötavaks ” ( TH Pluss , <arv> ) . Nagu eeltoodust näha , on TH Pluss arengukava skoop/sihtrühm piiratud vaid üldhariduskoolidega , kõrvale jäetakse koolieelsed lasteasutused , huvi- ja kutsekoolid ning kõrgharidus ( viimast puudutab vaid õpetajakoolituse nüüdisajastamise nõue ) . Kuigi viimaste aastate jooksul on kõlanud üleskutseid Tiigrihüppe laiendamiseks tervele haridussüsteemile , avalikule sektorile või lausa kogu Eesti ühiskonnale , on ilmselt protsessi parema hallatavuse huvides jäädud siiski esimese Tiigrihüppe määratletud piiridesse . Loodetavasti kompenseerib selle Tiigrihüppe Sihtasutuse senisest parem koostöö teiste IKT-arendusprogrammidega Eesti kõrg- ja kutseharidussüsteemis ning laiemaltki ( näiteks Külatee , Vaata Maailma , e-Learning , EL haridusprogramm Socrates , European Schoolnet ) . TH Pluss arengukava määratleb neli prioriteetset valdkonda . <arv>. IKT-alane pädevus - tuleb määratleda IKT-alased pädevusnõuded iga kooliastme lõpetajale , samuti õpetajatele ja teistele haridustöötajatele ; neile nõuetele vastav pädevuskoolitus tuleb tagada rahastamise , õppekavade , õppematerjalide , täienduskoolituskursuste ja hindamis-/sertifitseerimissüsteemiga ( sh. eksamite korraldamine ja haridustöötajate kvalifikatsiooninõuete muutmine ) . <arv>. Virtuaalõpe - IKT kaasabil tuleb luua paindlikumad õppimisvõimalused sihtrühmadele , kelle erivajadustele praegune jäik haridussüsteem ei suuda piisavalt vastu tulla ( näiteks vaegkuuljad ja -nägijad , keskhariduseta töötavad täiskasvanud , eriti andekad õpilased , väikesaartel ja muudes eraldatud kohtades elavad lapsed ) . Praktikas tähendab virtuaalõppe arendamine elektrooniliste õppematerjalide loomist ja kättesaadavaks muutmist , Interneti-põhiste õpikeskkondade ja virtuaalsete haridustugiteenuste loomist , eestikeelse õpitarkvara loomist ja loodetavasti lõpuks ka virtuaalse(te) gümnaasiumi(de) rajamist ning sellega seonduvate seadusandlike , administratiivsete ja finantsprobleemide lahendamist . <arv>. Infrastruktuuri jätkusuutlik areng - tuleb töötada välja ja käivitada mehhanismid , mis tagaksid IKT infrastruktuuri arengu ka pärast Tiigrihüppe jätkuprogrammi lõppu <arv>. aastal ( teisisõnu : et koolide arvutibaasi ja Interneti-ühendusi säilitataks vajalikul tasemel ja uuendataks pidevalt juba koolide endi ja nende omanike poolt , et poleks vajadust järjekordse tsentraalse jätkuprogrammi TH UltraPluss järele ) . <arv>. Kõigi osapoolte koostöö - tuleb luua uusi ja toetada olemasolevaid koostööstruktuure ja -vorme , mis aitavad kaasa TH Pluss eesmärkide saavutamisele ( näiteks ühitada maakohtades koolide ja omavalitsusasutuste Interneti-ühenduste haldamine ja arendamine , algatada koostööprojekte õpikukirjastustega elektrooniliste õppematerjalide loomiseks , samuti tõhustada Tiigrihüppe Sihtasutuse koostööd Haridusministeeriumi , Õpetajate Liidu , EENeti ja ülikoolidega , koolidevahelist koostööd ning firmade ja mittetulundusühingute kaasamist arendustegevusse ) . TH Pluss rakenduskava määratleb arendusprotsessi tulemuslikkuse mõõdikud ja vastutuse jagunemise osapoolte vahel ( Haridusministeerium , Tiigrihüppe Sihtasutus , koolide omanikud ) . Aastaks <arv> näeb TH Plussi rakenduskava ette ligi <arv> miljoni krooni ulatuses kulutusi , millest <arv> miljonit tuleb riigieelarvest läbi Tiigrihüppe Sihtasutuse . Suurimad kuluartiklid <arv>. a. on riist- ja tarkvarahanked koolidele ( <arv> miljonit krooni , millest kolmandik tuleb riigieelarvest ) koolide Interneti-ühenduste kulud ( <arv> miljonit krooni , peamiselt omavalitsuste kanda ) elektroonilise haldusinfosüsteemi juurutamine koolides , valdades/linnades , maakondades ja Haridusministeeriumis ( <arv> miljonit krooni , osaliselt kaetud Phare ISE-projekti vahenditega ) virtuaalõppealased projektid ( <arv> miljonit krooni riigieelarvest läbi TH SA ) õpetajate haridustehnoloogia-alane pädevuskoolitus ( <arv> miljon krooni riigieelarvest läbi TH SA ) elektroonilised õppematerjalid , koolide koostööprojektid ( <arv> miljon krooni riigieelarvest läbi TH SA ) . HARIDUSE IKT-ARENGUKAVAD TEISTES RIIKIDES Ligikaudse rahvusvahelise taustsüsteemi visandamiseks meie Tiigrihüpe Pluss arengukavale kirjeldaksin veel mõne riigi hariduse infoühiskonna strateegiaid . Suurbritannia ja Põhja-Iirimaa Ühendatud Kuningriigi Tiigrihüppe-programm kannab nime National Grid for Learning ( NGfL , vt. <hyperlink> ) ja selle kuulutas Briti valitsus välja juba <arv>. a. Nagu märgitakse dokumendi eessõnas ( <hyperlink> ) , on NGfL näol tegemist ühelt poolt Interneti kui õpikeskkonna arhitektuuri loomisega ja teisalt selle kasutamise võimaldamise riikliku programmiga . NGfL ei keskendu üksnes üldhariduskoolidele , programmil on oma alajaotused ka täienduskoolituse , kutse- ja kõrghariduse , raamatukogude , omavalitsuste ja tööandjate tarvis : tegemist on tõelise õpiühiskonna strateegiaga , millel on konkreetsed , mõõdetavad eesmärgid ja hästi toimiv rahastamise skeem . <arv>. aastaks tahab Briti valitsus ühendada sellesse õpiühiskonnavõrku kõik koolid , ülikoolid ja raamatukogud ning enamiku omavalitsustest tagada , et iga õpetaja ja raamatukoguhoidja tuleks toime IKT kasutamisega oma töös tagada , et iga kooliõpetaja valdaks riiklikele standarditele vastavat IKT-pädevust viia haridusasutuste vaheline suhtlemine suuremas osas elektrooniliseks tõsta Suurbritannia maailmas liidripositsioonile Interneti õppematerjalide ja virtuaalsete haridusteenuste vallas . NGfL riigipoolne finantseerimine on märkimisväärne - vähemalt <arv> miljonit naelsterlingit ( u. <arv> miljardit Eesti krooni ) koolide , ülikoolide ja raamatukogude võrgustamiseks , <arv> miljonit õpetajate ja raamatukoguhoidjate koolituseks jne. NGfL ei ole tsentraalselt juhitav , valitsuse strateegia määratleb prioriteedid ja nendele vastavate algatuste rahastamise allikad ja viisid ( näiteks õpetajakoolituse kulud kaetav Riiklik Loteriifond ) . Samas on tänu NGfL toetusele tekkinud mitmeid avalikke ja ka erainstitutsioone , mis on enda kanda võtnud terve hulga tiigrihüppe funktsioone . Ühe näitena võib siinkohal tuua erafirma Learning and Teaching Scotland Ltd. , vt. <hyperlink> , mis riigi toetusel koolitab šoti õpetajaid , toodab elektroonilisi õppematerjale ja õpitarkvara , nõustab haridusministeeriumi , tegeleb õppekavaarendusega ja pakub muid IKT-ga seonduvaid haridusteenuseid . Soome võttis oma esimese infoühiskon nastrateegia ( “ Soome infoühiskonnaks ” , vt. <hyperlink> ) vastu juba <arv>. aastal , jõudes ette teistest arenenud riikidest ja olles neile eeskujuks . Esimese infoühiskonna programmi positiivsetele tulemustele on üles ehitatud praegu kehtiv “ Koolituse ja teadustegevuse infostrateegia ” aastateks <arv>-<arv> ( vt. <hyperlink> ) , mis võrreldes eelmisega rõhutab enam õppe sisu ja meetodite arendamist , rahvusvahelist koostööd , era- ja avaliku sektori asutuste vahelist võrgustumist ning võrdsete võimaluste tagamist kõigile Soome kodanikele . Soome infoühiskonna strateegiaid iseloomustab nüüdisaegse koolituse tähtsustamine infoühiskonna rajamise peamise nurgakivina , samuti teadustegevuse arendamine käsikäes haridusvaldkonnaga . Nii nagu britid käsitlevad ka soomlased oma strateegia peamist sihtrühma - õppijaid - selle sõna kõige laiemas tähenduses ( lasteaiast ülikooli ja kutsekoolini , sh. mitteformaalne , väljaspool haridusasutusi toimuv pidevõpe ja ametialane koolitus töökohtadel ) . Prioriteetsed tegevusvaldkonnad Soome uues infoühiskonna strateegias on Infoühiskonna pädevus igaühele ( toetus <arv> miljonit marka ehk <arv> miljonit Eesti krooni riigieelarvest ) , sh. e-postiaadress igale soomlasele aastaks <arv> arvutivõrkude mitmekülgne rakendamine õpetamisel ja õppimisel ( <arv> miljonit krooni ) , sh. virtuaalse ülikooli , kutsekoolide ja gümnaasiumide rajamine digitaalse kapitali kasvatamine ( <arv> miljonit krooni ) , sh. uue õpitarkvara ja elektrooniliste õppematerjalide loomine infoühiskonna struktuuride tugevdamine haridus- ja teadusvaldkonnas ( <arv> miljonit krooni ) , sh. infrastruktuuri edasine uuendamine , õpikeskkonna kujundamine erivajadustega inimestele sobivaks , õppeasutuste koostöövõrgustikud eelmise strateegia toel alanud koolitus- ja teadusprojektide toetamine ( <arv> miljonit krooni ) . Soome koolitus- ja teadustegevuse infoühiskonna strateegia üldjuhtimine lasub küll haridusministeeriumil , kuid mingit eraldi struktuuri ministeerium selleks moodustanud pole , tegelikkuses toimub pea kogu tegevus projektipõhisena . Suuremate projektide taga ( näiteks virtuaalülikool , mitmed uurimisprojektid ) on õppeasutuste ja erafirmade konsortsium ja rahastajate ringki on sellisel juhul laiem . Taani riiklik strateegia “ IKT haridussüsteemis <arv>-<arv> ” ( vt. <hyperlink> ) keskendub viiele tegevusvaldkonnale : õpilased ja IKT - peatähelepanu IKT-pädevuse kujundamisele ja hindamisele iga kooliastme lõpuks õpetajad ja IKT - IKT-alaste pädevusstandardite koostamine õpetajatele , standarditele vastav koolitus ja kvalifikatsiooninõuded õppeained ja IKT - IKT rakenduste integreerimine õppekavadesse , IKT-l põhinevate uute õpetamismetoodikate ja õpikeskkondade juurutamine võrdsed ( ja paindlikud ) võimalused pidevõppeks - ajast , kohast ja kitsendavatest eeltingimustest sõltumatute koolitusprogrammide loomine IKT-põhise õppe- ja teadustegevuse koordineerimine - ressursside mõistlikuma ja tulemuslikuma kasutamise poole pürgimine ( IKT-sse tehtud investeeringud peavad hakkama ennast tasa teenima ) . Taanis piirdub arendustegevuse sihtrühm peamiselt üldhariduskoolidega , ülikoole puudutab vaid õpetajakoolituse ja andmesidekorralduse osa ( nii nagu mitu teist Euroopa riiki tahab Taani ühendada koolid ja ülikoolid ühtsesse akadeemilisse andmesidevõrku - sarnaselt meie EENetiga , mida meil mõned just vastupidisel moel tükeldada tahavad ) . Nii nagu paljud muud asjad Taani haridussüsteemis , on ka IKT-arengukava rakendamine ja haldamine äärmiselt detsentraliseeritud ja otsustamine on viidud võimalikult madalale tasandile . Lätis algas meie Tiigrihüppest pisut hiljem analoogiline riiklik programm LIIS ( Läti Hariduse Infosüsteem , vt. <hyperlink> ) , mille peamiseks erinevuseks meie omast on selle haldamise viis : nimelt sõlmis Läti Haridusministeerium programmi läbiviimiseks lepingu Läti Ülikooliga . Akadeemilisel eestvedamisel on oma plussid ja miinused , üldkokkuvõttes tuleb aga tõdeda , et ega lätlased meist kuigi palju maha jäänud pole . Mõnes lõigus ( näiteks koolide ühtse haldusinfosüsteemi rakendamine ja õpitarkvara tootmine ) on Läti Eestist tublisti ette rebinud ja arengupotentsiaal lähiaastateks paljulubavam kui meil ( sh. investeeringute maht riigieelarvest ja välissponsoritelt ) . Kuigi LIIS-programm oleks pidanud lõppema <arv>. aastal nagu Tiigrihüpegi , ei pea selle eestvedajad vajalikuks alustada uue riikliku strateegia kavandamisega enne kui LIIS-i algsed eesmärgid on täielikult saavutatud ( Bicevskis jt. , <arv> ) . LIIS keskendub küll üksnes üldhariduskoolidele , kuid ülikoolide roll on selles märgatavalt suurem kui Tiigrihüppes . LIIS-i juhid on kaardistanud programmi tegevusvaldkonnad ja sihtrühma järgneva maatriksi vormis : Leedus on taasiseseisvumisaja algusest saadik juhtinud koolide IKT-alast arengut haridus- ja teadusministeeriumi kooliinformaatika osakond . Tiigrihüppe sarnase riikliku programmi puudumine annab otseselt tunda koolide infotehnoloogilise infrastruktuuri olulises mahajäämuses võrreldes Eestiga ( Pelgrum ja Anderson , <arv> ) . <arv>. aasta lõpul kinnitas Leedu valitsus riikliku strateegia IKT rakendamiseks Leedu üldhariduskoolides , mis suurendab tunduvalt koolide arvutiseerimise riigipoolset rahastamist . Peamised tegevusvaldkonnad Leedu strateegias ( Brazdeikis ja Markauskaite , <arv> ) : haridusasutuste avanemine üldsusele koolikultuuri uuenemine õppetöö sisu ja korraldus koolis koolide varustatus IKT ja õppevahenditega õpetaja rolli muutumine , uued õpetamismeetodid seoste tugevdamine teaduse ja hariduse vahel IKT-alase arendustegevuse haldamine ja rahastamine . Arendustegevus on Leedus jaotatud nelja etappi ( Brazdeikis ja Markauskaite , <arv> ) , iga etapp kestab ideaalis ühe aasta : finants- , juriidilise ja tehnilise baasi loomine üldhariduskoolide õpetajate totaalseks IKT-alaseks koolituseks kooliraamatukogude moderniseerimine ja õpetajatele arvutitöökohtade loomine koolides IKT integratsioon erinevatesse õppeainetesse ja õpilaste IKT-pädevuste kujundamine Interneti infrastruktuuri nüüdisajastamine , uute haridusalaste telemaatikarakenduste ja teenuste loomine koolidele . <arv>. aastal on strateegia rakendamiseks Leedu riigieelarvest eraldatud ligi <arv> miljonit Eesti krooni ( vrd. <arv>. aasta TH Pluss eelarve on <arv> miljonit krooni ) Kuigi eespool kirjeldasin üksnes viie riigi hariduse infostrateegiat , annavad need siiski ülevaate infotehnoloogia strateegilise planeerimise trendidest erinevate riikide hariduspoliitikas . Kõrvutades neid trende Eesti Tiigrihüppe ja Tiigrihüpe Pluss programmidega , võime tõdeda , et Eesti tee on koolikesksem - Tiigrihüpe ja selle jätkuprogramm keskenduvad vaid üldhariduskoolidele , jättes kõrvale kutse- ja huvikoolid , kõrgharidus- ja teadusasutused vahendikesksem - Tiigrihüppe kohta kehtib see täiel määral , TH Plussi puhul juba oluliselt vähemal määral , sest viimane tõstab tehnoloogia asemel tähelepanu keskmesse õppimise ja hariduse hoogu kaotamas - võib-olla on see tingitud varasest ja suurejoonelisest algusest , kuid võrreldes naaberriikidega näitab meie Tiigrihüppe eelarve maht ( vähemalt eraldised riigieelarvest ) tuntavat kahanemistendentsi tsentraliseeritum - suurt osa haridussüsteemi infotehnoloogia arendamiseks suunatud riigieelarvelistest vahenditest kontrollib Tiigrihüppe Sihtasutus . KOKKUVÕTE “ Kuningas on surnud , elagu kuningas ! ” hüüti kunagi ammu Prantsusmaal . Meie võime nüüd ( ja usun , et uhkusega ) hüüda “ Tiigrihüpe on lõppenud , elagu Tiigrihüpe Pluss ! ” . Võrdlus naaberriikidega näitab , et liigume õiges suunas ja et uus strateegia on taas selgendanud sihid nii meie endi kui ka teiste jaoks . Jääb vaid loota , et uus tiiger suudab enda ümber vähemalt sama palju koolirahva ja teiste asjaosaliste loovat energiat koondada , kui seda tegi meie esimene triibuline . gap desc='references'&gt; Leo Võhandu , emeriitprofessor Graafide korrastamisest J-keele abil ( <arv> ) Matemaatika üheks kõige keerulisemaks teoreetiliseks uurimisobjektiks on graafid . Teiselt poolt on graafid tunnetuslikult ka igale matemaatilise hariduseta inimesele suurepäraselt taibatavad . See näiline vastuolu lihtsuse ja keerulisuse vahel ongi matemaatika kui teaduse üks peamisi võlusid . Juba mitusada aastat ringleb nii asjaarmastajate kui süvateadlaste hulgas rohkesti väga lihtsalt kirjeldatavaid probleeme , mis tegelikult osutuvad üpris kõvadeks pähkliteks . Nende hulka võib lugeda kõigepealt kuulsa nelja värvi probleemi ( kas igal geograafilisel kaardil piisab neljast värvist , et naabermaad ei oleks samavärvilised ? ) . Järgmine vähemalt sama kuulus probleem on Fermat' probleem ( kas võrrandil x[n + y[n = z[n on täisarvulisi lahendeid n <arv> korral ? ) . Nendele probleemidele on matemaatiliselt korrektsed lahendused leitud raske vaevaga alles viimase mõnekümne aasta jooksul . Rea analoogilisi põnevaid probleeme pakub ka graafiteooria , millest teeme juttu , kasutades arvutusabivahendina juba tuttavat ja arvutis otse töötavat J-keele tähistusviisi . Graafide mõtteliseks aluseks on mingite objektide hulk A = ( a<arv> , a<arv> , ... , an ) ja võimalus hulga iga kahe elemendi vahel kontrollida mingi suhte ( relatsiooni ) olemasolu ( tõesust ) või puudumist ( väärasust ) . Mittetäppisteaduslikes distsipliinides on graafid asendamatud abimehed , uurimaks kollektiivide käitumist , nende sisemist struktuuri , analoogiaid , konflikte jne. Olgu tegemist seitsme objektiga A , B , C , D , E , F , G ja vaatleme iga kahe objekti vahelise suhtena näiteks väidet “ tunnevad teineteist ” . Kui A ja B tunnevad teineteist , siis tähistame selle suhte tõesust väärtusega <arv> , ja kui ei tunne , siis väärtusega <arv>. Kui kõikide paaride kohta teadaolev tundmisinfo kokku koguda , siis selle esitamiseks on terve rida tunnetuslikult ja matemaatiliselt samaväärseid esitusi . Toome neist esialgu vaid paar varianti . Kõigepealt võime anda teineteist tundvate paaride loetelu AC , AF , AE , BF , BG , CD , CE , CF , DE , EF , EG , FG . Seda loetelu vaadates on kaunis raske aru saada , kes keda tunneb ja kuidas vastastikuse tundmise üldine struktuur välja näeb . Eriti hulluks läheks asi , kui objektide arv oleks seitsmest tunduvalt suurem , siis on tekkiv sümbolipaaride rägastik täiesti tunnetamatu . Meenutame , et N objekti korral võib paare olla N ( N-<arv> ) /<arv> . Näiteks <arv> objekti puhul võib olla maksimaalselt <arv> paari . Juba nende paaride loetelu võtaks enda alla mitu lehekülge ülevaatlikkusest rääkimata . Matemaatikud on selliste seosepaaride süsteemseks esitamiseks välja mõtelnud hoopis parema meetodi , nn. naabrusmaatriksi mõiste . See pole midagi keerulist , igaüks saab asjast vaevata aru . Nimelt võetakse NxN-tabel ja selle igasse ritta kirjutatakse objekti seoste väärtused ( so . ühed ja nullid ) vastavalt sellele , kas antud veeru objektiga on seos tõene või väär . Meie seitsmeelemendilise näite korral oleks tabel ( maatriks ) niisugune :  See tabel on loomult sümmeetriline , sest meie suhte aluseks oli lause “ tunnevad teineteist ” , so . vastastikune tundmine . On mõeldav ja praktikas igati kasulik pruukida ka ühepoolseid seoseid . Näiteks võib tuua klassikalise suhte “ armastab ” . Kui A armastab B-d , siis see ei tähenda kaugeltki , et B peaks armastama A-d . Sel juhul võib tabel olla mittesümmeetriline ( aga kõigiti uurimiseks kõlblik matemaatiline objekt ) . Mittesümmeetrilise suhte näiteks võib on ka suhe “ võitis ” tenniseturniiri mängupaaride jaoks . Üks mängijatest võidab , ta saab teise mängija vastu <arv> , kaotaja nulli . Smasugune pilt tekib male- ja kabevõistlustel . Siis lisandub muidugi veel kolmas võimalus - viik . Meie tabelis võib seda tähistada näiteks nii , et mõlemad saavad nulli . Eraldi tuleb arutada , mida paigutada iseendaga suhte väärtuse kohale . Kui tegu on suhtega “ tunnevad teineteist ” , siis on asi lihtne , igaüks tunneb ju iseennast . Armastamise koha pealt võib vist teha sama eelduse , igaüks armastab iseennast . Muidugi , vahel võib mõne noore daami suust kuulda väljendit “ ma vihkan iseennast ” , aga seda ütlust tuleb vist võtta rohkem edvitamise kui tõena . Noh olgu , meil on koostatud tundmiste graafi naabrusmaatriks . Kui seda vaadata , siis on kerge näha , et B tunneb ainult kahte ülejäänut , E ja F aga tervelt viit inimest . Kuidas taolisest pildist saada head ülevaadet , nii et kõik võimalikud suhetes peituvad struktuurid avaneksid ja me saaksime aru , kuidas kirjeldada objektisüsteemi sisemisi vahekordi ? Mida mõista sisemise struktuuri all ? Näiteks kas või seda , et objektid EFG ja CDE on kõik omavahel tuttavad ja moodustavad nn. täieliku alamgraafi ehk kliki ( tabeli vastav alamtükk koosneb ainult ühtedest . Kontrollige ! ) . Kas need klikid on antud graafis kõige suuremad või leidub veel neli või viis inimest , kes kõiki tunnevad ? See probleem - leida antud graafi suurim klikk - on väga tõsine matemaatiline probleem , mille lahendamine ei ole suurte graafide korral üldsegi triviaalne ülesanne . Suurima kliki efektiivse leidmise probleem kuulub nüüdisaja matemaatika kõige moodsamate hulka . USA-s Rutgersi ülikoolis on loodud isegi ülemaailmne keskus nimega DIMACS , mis kogub süstemaatiliselt maailmast uusi lahendusmeetodeid , võrdleb nende efektiivsust ning korraldab autorite ( tavaliselt autorite gruppide ) vahelisi võistlusi . Selleks on koostatud kimp raskeloomulisi paljuobjektilisi graafe , mille kallal siis uute algoritmide väljamõtlejad oma hambaid murravad . Kogu ürituse eestvedajaks on professor Panos Pardalos , kelle enda algoritm on muide üks efektiivsemaid . Nende algoritmide matemaatiline külg on enamasti komplitseeritud ja nõuab üsna sügavaid matemaatilisi teadmisi . Meie üritame siinkohal graafide klikkide leidmist organiseerida nn. monotoonsete süsteemide teooria abil . Seda teooriat on TTÜ informaatika instituudis arendatud varsti juba <arv> aastat ning tulemused on paljutõotavad . Ja mis meile praegu peamine , tulemustest on kerge aru saada . MONOTOONSE SÜSTEEMI LOOMINE GRAAFILE Monotoonsete süsteemide teooria põhiidee on lihtne . Kui süsteemi iga objekti jaoks on olemas mingi headuse mõõt , millel on see lisaomadus , et süsteemist ühe suvalise objekti kõrvaldamisel kõigi ülejäänud objektide mõõdud kas kahanevad või jäävad samaks , siis nimetatakse süsteemi ( nõrgalt ) monotoonseks . Selle definitsiooni juures on oluline , et mõõt on suhteliselt vabalt valitav ja enamasti sisuliselt kergesti defineeritav . Proovime praeguse graafi juures võtta selleks mõõduks iga objekti tutvuste arvu . Kas see mõõt on monotoonne ? Küllap vist , sest mingi objekti süsteemist kõrvaldamine vähendab ju kõigi seda objekti tundvate objektide mõõte ühe võrra . Ainsaks erandiks on objektid , kes elimineeritavat objekti ei tunne . Teeme proovi . Leiame graafi naabrusmaatriksi kõikide veergude summad . Mida see annab ? Saame iga objekti mõõduks talle tuttavate objektide arvu pluss <arv> ( so . tutvuse iseendaga ) . Töö on muidugi triviaalne , aga eriti lihtne näeb see välja J-keeles . Tabeli G ( paneme selle nime meie graafile ise ) veergude summa leidmiseks piisab korraldusest V= : +/ G . Selle korralduse tulemusena saame tabeli veerusummade nimistu V. Praegu V= . <arv> <arv> <arv> <arv> <arv> <arv> <arv> Need summad ongi meie graafi objektide mõõtudeks . Miks nii ? Lihtsalt sellepärast et see oli esimene ja ilmselt kõige lihtsam mõõt , mis rahuldab monotoonsuse tingimust . Pealegi on mõõdul väga lihtne sisuline tõlgendus - tuttavate arv . Monotoonsete süsteemide meetod asub pärast sobiliku mõõdu defineerimist kogu süsteemi korrastama . Selleks leitakse süsteemi objektide hulgast kõige väiksema mõõduga objekt ja kõrvaldatakse see süsteemist . ( Seatakse end asutuse direktori positsioonile , kes peab mõne inimese vallandama ja esimesena kõrvaldab kõige kehvema hinnangu saanu . ) Seejärel arvutatakse allesjäänud objektide jaoks uuesti mõõdud ja elimineeritakse jälle kõige nõrgem objekt . Niimoodi toimitakse järjestikku , kuni süsteemi kõik objektid on elimineeritud . Saadaksegi antud mõõdu aspektist süsteemi objektide korrastusjärjekord ehk teisisõnu - määrav jada . Pärast seda võetakse algne suhete tabel ja koostatakse see uuesti objektide määrava jada järjestuse jaoks . ( Matemaatikud ütleksid sellel kohal , et me teeme algmaatriksi ridade ja veergude permutatsiooni . ) Kui see ümbertõstmistöö on valmis , siis vaatame saadud tabelit ja püüame aru saada , kas tabelisse tekkis mingi selgesti nähtav struktuur näiteks võimalikult suurema kliki näol . Klikid näitavad meile praeguses graafis objektide selliseid alamgruppe , kus kõik kõiki tunnevad . Samamoodi võiks otsida ka selliseid alamgruppe , kus keegi peale iseenda kedagi teist ei tunne . Neid gruppe nimetatakse graafi sõltumatuteks alamhulkadeks ja nende leidmine on sümmeetriliselt niisama raske matemaatiline probleem kui suurimate klikkide leidmine . Teeme nüüd enne arvutiprogrammi koostamist vajaliku järjestikku elimineerimistöö graafi G jaoks käsitsi läbi . See lihtne võte on alustuseks alati kasulik ja annab pealegi pärast programmi valmimist hea kontrollülesande . Kui näiteülesande puhul tuleb sama vastus kui käsitsitöös , siis võime uskuda , et oleme programmiga õigel teel . Leidsime juba veergude summad <arv> <arv> <arv> <arv> <arv> <arv> <arv>. Edasi tuleb leida siit järjekorras esimene miinimum ( J-keelne verb on selline m= . ] . @/ : V ) . ( Sordime V elemendid kasvavasse järjekorda ja võtame sellest järjekorrast esimese , so . vähima elemendi . ) Praegu m = <arv>. Nüüd tuleb maatriksist eraldada teine rida ja lahutada vektorist V , saades mõõtude parandatud vektori ( <arv> <arv> <arv> <arv> <arv> <arv> <arv> ) - ( <arv> <arv> <arv> <arv> <arv> <arv> <arv> ) = ( <arv> <arv> <arv> <arv> <arv> <arv> <arv> ) J-keeles teeb seda tööd korraldus V- ( ≤m ] " <arv> G ) ( Lahuta V-st lahtiboksitud m-is G rida . ) Algoritmi põhiidee kohaselt tuleks meil nüüd võtta järgmine vähim element ja protsessi seni korrata , kuni kõik objektid on kõrvaldatud . Praegu segab meid see , et nõrgim objekt jäi tegelikult kõrvaldamata ja ilutseb oma jääkväärtusega <arv> listis edasi . Et säilitada J-le omast järjestikku läbijooksu , kasutame väikest nõksu , mis sageli teeb elu lihtsaks . Nimelt asendame V-listis äsja elimineeritud vähima elemendi jääkmõõdu väärtuse mingi väga suure arvuga ( olgu meil selleks praegu <arv> ) . Asenduse tulemusena saame V= : <arv> <arv> <arv> <arv> <arv> <arv> <arv> Vastav J-verb on V= . ( <arv> ) m } V Edasi tuleb ära teha veel üks tähtis eeltöö . Nimelt tuleb meil meeles pidada objektide kõrvaldamise järjekord . Selleks loome tühja listi z= . <arv>$<arv> , millele siis järjest iga leitud vähima objekti numbri juurde lisame z= . z , m PUUST ETTE Sellega on monotoonsete süsteemide meetodi abil tehtav graafi korrastamise programm peaaegu valmis . Teeme siiski kogu töö käsitsi läbi ( asendades laisa inimese moel arvu <arv> üheainsa tähega s ( suur ) ) . Min V= . <arv> <arv> <arv> <arv> <arv> <arv> <arv> -<arv> <arv> s <arv> <arv> <arv> <arv> <arv> -<arv> <arv> s <arv> s <arv> <arv> <arv> -<arv> <arv> s <arv> s <arv> <arv> s -<arv> s s <arv> s <arv> <arv> s -<arv> s s s s <arv> <arv> s -<arv> s s s s s <arv> s -<arv> s s s s s s s Selle skeemi kohta võib öelda veel paar kasulikku sõna . Esiteks muutub s väärtus igal sammul vähenemise suunas , aga need väärtused jäävad oma suuruse tõttu miinimumi ümber toimuvas elimineerimismängus arvest välja . Teiseks , kui seda tööd käsitsi teha , siis on pärast kolmandat sammu V-listis parajasti <arv> nelja . Mida see tähendab ? Parajasti seda , et alles jäänud <arv> objekti on kõik kõigiga tuttavad ja moodustavad neljase kliki . J-keelse programmi puhul ei ole mingit mõtet sellist katkestuse võimalust kontrollima hakata . See võtab rohkem aega ja on keerulisem , kui programmil samas vaimus lõpuni joosta lasta . Olles kõik objektid elimineerinud , jääb meil üle vaid tabeli G read ja veerud uude listiga z määratud järjekorda ümber tõsta . Seda teeb verb h= . ( z ( [ ] ] ) “ <arv> ( z ( [ ] ] ) g ) . Lõpuks tuleb uuesti korrastatud tabel ja vanad objektinumbrid kenasti välja trükkida . Ka see töö ei nõua pikka kirjeldust ( h ; , . z+<arv> ) . Miks me oma elimineerimisjärje numbritele z ühe lisame ? Sellepärast et arvutis algavad J-keeles indeksid alati nullist . Meie graafi objektide loend algas aga numbrist <arv>. Nii annabki ühe lisamine jälle kätte õiged objektitähised . Ah jaa , meil olid objektid tähtedega tähistatud . Seega tuleks tekstist 'ABCDEFG' valida tähed elimineerimisjärjekorras . Selles aitab meid verb z ] 'ABCDEFG' . ( Küsimus : miks siin z + <arv> ei ole ? ) Nii , nüüd peaksid kõik tükid valmis olema ja võime kogu korrastusprogrammi kokku kirjutada . Meie jupikaupa kirjutatud programm on kõigiti korrektne , aga hoolimata juba saavutatud lühidusest on J-klubiliste hulgas levinud üks paha haigus . Nimelt proovitakse üpris keerulised tööd ära teha üherealiste programmidega . Metoodilises mõttes on see muidugi paha , sest niimoodi kaob üksikosadest ülevaade . Kui aga tõlgendada asja nõnda , et see üherealine programm on võimas alamprogramm , siis on võte täiesti kõlblik . Meie poolt kirjeldatud graafikorrastusprogramm on kokkuvõtlikult selline : a= . <arv> <arv> <arv> <arv> <arv> <arv> <arv> a= . a , <arv> <arv> <arv> <arv> <arv> <arv> <arv> a= . a , <arv> <arv> <arv> <arv> <arv> <arv> <arv> a= . a , <arv> <arv> <arv> <arv> <arv> <arv> <arv> a= . a , <arv> <arv> <arv> <arv> <arv> <arv> <arv> a= . a , <arv> <arv> <arv> <arv> <arv> <arv> <arv> a= . a , <arv> <arv> <arv> <arv> <arv> <arv> <arv> g= . <arv> <arv>$ a NB . Sellega on naabrusmaatriks sisestatud [ p . +/g NB . Leiab veerusummad <arv> <arv> <arv> <arv> <arv> <arv> <arv> z= : <arv>$<arv> NB . Loob tühja listi määrava jada jaoks ( z= . z , m [ [ V= . ( ( <arv> ) m } ( V- ( ] . @/ : V ) ] " <arv> G ) ) ) NB . arvutab ( ( z ( [ ] ] ) “ <arv> ( z ( [ ] ] ) G ) ) ; , . z ] 'ABCDEFG' ) NB . Tõstab tabeli elimineerimisjärjekorda ja paneb objektide õiged nimed . Näeme , et suurema jao kirjutamisruumist võtab enda alla graafi naabrusmaatriksi defineerimine . Artikli järgmises osas vaatame teisi , vähem ruumi nõudvaid esitusi . Praegune sisestuskuju on hästi nähtav ja kontrollitav . Veerusummade V arvutamine ja tühja listi z loomine on lihtne . Veidi peenem seis tekib põhilise arvutuskorraldusega z=.z , m jne. Seda tuleb nüüd täita nii mitu korda , kui süsteemis on objekte ( kõik objektid tuleb ju elimineerida ! ) . Meie praegustest teadmistest ei jätku veel täistsüklilise programmiteksti loomiseks , seepärast teeme elu lihtsaks ja vajutame J-keelsel aktiivtöölehel ( lehe ülaäärel oleva lisandiga . ijx ) seitse korda selle programmirea lõppu , mis algab korraldusega z= . Z , m , ja siis üks kord viimasele reale . Seega oleme töötanud nagu kalkulaatoriga , kasutades J-keelt valemi tõlgendajana ja täitjana . Tulemuseks saame kenasti korrastatud naabrusmaatriksi :  LÕPUMÄRKUSED Selleks korraks aitab . Järgmisel korral lisame peensusi , mis üldjuhul kasulikuks osutuvad . Näiteks tekib täiesti õigustatud küsimus , kas niimoodi monotoonsete süsteemide meetodi järgi toimides saame korrastatud naabrusmaatriksi alumisse paremasse nurka alati selle graafi suurima kliki ? Oh ei ! Enamasti küll , aga mitte alati , sest valisime võrdväärtusega elimineerimiskonkurentide hulgast alati lihtsalt esimese . Tegelikult saab seda kõige lihtsamat algoritmi parandada , nimelt tuleks mitme võrdse miinimumi korral valida neist see , mille reavektoril oli eelmise elimineeritava reavektoriga kõige rohkem kokkulangevusi ( direktor valib mitme võrdse vallandatava hulgast ikka selle , kes oli viimati vallandatu kõige suurem sõber ... ) . Teine hoopis võimsam parandus seisneb seosmõõdu parandamises . Igas vähemalt kolmeses klikis moodustab iga objekt ju suvalise kahe ülejäänud kliki liikmega kolmnurga ( ehk kolmese alamkliki . Kontrollige seda ACEF-klikil ! ) . Võtame iga objekti kliksuse headusmõõduks selle arvu , mis näitab , kui mitmesse kolmnurka antud objekt kuulub . Kuidas leida seda objekti kolmnurksuse mõõtu ja mida sellega peale hakata ? Mõtelge ise . Artikli järgmises osas esitan küll omapoolse selgituse , aga võib-olla mõtleb lugeja välja hoopis mugavama meetodi objekti kolmnurksuse mõõtmiseks . Keda asi tõsisemalt huvitab , võib kõigepealt hambaid teritada mõne <arv> x <arv> või <arv> x <arv> naabrusmaatriksi kallal . Kasulik harjutus oleks ka see , kui mõtleksite välja sümmeetrilisest maatriksist ainult alumise kolmnurga sisestamise variandi . Selleks jõudu .