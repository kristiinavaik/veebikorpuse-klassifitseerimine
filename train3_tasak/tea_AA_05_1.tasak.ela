kirjak	tea_AA_05_1.tasak.ela	TOIMETAJALT<arv>-<arv> &lt; Kettamälust rääkides oleme sujuvalt läinud megabaitidelt üle gigabaitidele , ka pole terabaidised ( <arv> TB = <arv> GB = <arv>baiti ) kettamasiivid uudiseks . Kettamälu vajadused ärirakendustes kasvavad järjest marulisemas tempos . Kui <arv>. aastal oli see maailmas alla <arv> petabaidi ( PB , <arv> PB = <arv> TB = <arv>baiti ) salvestatud andmeid , siis <arv>. aastaks ennustatakse vajadust salvestada enam kui <arv> PB . Muutunud on ka salvestatava informatsiooni olemus : kui veel lähiminevikus piirduti tehinguandmebaaside andmetega , siis nüüd on vaja salvestada ja arhiveerida e-posti kirju koos manustega , ettevõtted on kohustatud säilitama kõiki digiallkirjastatud dokumente , kliendikesksed ärirakendused vajavad reaalajas kõiki kliendiga seotud andmeid ( Real-time Operational CRM ( Customer Relationship Management ) , Real-time Analytical CRM ) jne. On mõistetav , et senised andmesalvestustehnoloogiad pole piisavad uute probleemide lahendamiseks , vaja on lahendusi , mis võimaldavad reaalajas juurdepääsu tohututele andmemassiividele . Andmete kriitilisuse tõttu on vaja tagada andmete turvalisus ( käideldavus , terviklikkus ja konfidentsiaalsus ) , süsteemide jõudlus peab oluliselt kasvama . Kui relatsioonandmebaaside tehnoloogia oli sobiv kõikidele tehingupõhistele rakendustele ja andmehoidlatehnoloogiad rahuldasid paljude rakendussüsteemide vajadusi , siis nüüd on tekkinud vajadus rakendustele spetsialiseeritud lahenduste järele , näiteks salvestussüsteemid , mis on optimeeritud e-posti rakendustele . Suured andmemahud ja vajadus nende töötlemist optimeerida tingivadki vajaduse erisüsteemide järele . Tõepoolest , mida võiks tähendada “ universaalne , kõikide rakenduste vajadusi optimaalselt lahendav süsteem ” ? Optimaalsust ja universaalsust samal ajal saavutada pole võimalik - või siiski : süsteemide loomise karkass ( Framework ) , mille häälestamine ( programmeerimine , tehisintellekti meetodid jne ) võimaldab luua erisüsteeme agiilselt ( paindlikult , kiiresti ) . Niisuguses , võib öelda et revolutsioonilises situatsioonis on loodud eeldused “ uute tegijate ” areenile ilmumiseks : “ vanadel tegijatel ” on innovatiivsete tehnoloogiate loomine ja evitamine tülikas , kuna nad peavad oma olemasolevatele klientidele tagama vanade ja uute süsteemide ühildatavuse . Kuna “ loodus tühja kohta ei salli ” , siis pole üllatav ka Hitachi edu . Hitachi kõrgtaseme kettasüsteemid on oluliselt muutnud pilti selles valdkonnas : Gartneri maagilises kvadrandis ( Gartner's Magic Quadrant ) on Hitachi Data Systems ( HDS ) liider kõrg- ja kesktaseme kettamassiivide turul . On märkimisväärne , et HDS edestab konkurente visiooni dimensioonis . Kui arvesse võtta Hitachi majanduslik võimsus : HDS-l on müükide suurendamiseks <arv>,<arv> töötajat <arv> riigis , HDS on loonud partnersuhted Hewlett-Packardi ja Suniga , Hitachi kettasüsteeme on müüdud <arv> riigis , Hitachi klientideks on enam kui pooled Fortune <arv> firmast . HDSi Universal Storage Platform ( USP ) on Lightning <arv> V seeria ja Thunder <arv> V seeriaga ja haldustarkvaraga HiCommand Storage Area Management parimaks tooteks kõrg- ja kesktaseme kettamassiivide turul . Septembris <arv> tõi HDS turule kõrgtaseme salvestussüsteemi TagmaStore USP , mille uudne arhitektuur võimaldab saavutada andmeedastuskiirust <arv> GB/s . Gartneri hinnangud HDS perspektiivide suhtes : Tehnoloogia - “ tugev positiivne ” ( ” Strong Positive ” ) : HDSi tehnoloogia ületab konkurentide tehnoloogiat TagmaStore Universal Storage Platform - “ tugev positiivne ” Thunder <arv> V seeria - “ positiivne ” Üldhinnang haldustarkvarale - “ positiivne ” Teenused - “ lubav ” ( “ Promising ” ) Hind - “ ettevaatust ” ( ” Caution ” ) : <arv> kuni <arv> HDS-I kõrgtaseme süsteemid maksid enam kui konkurentidel EMC , IBM ja StorageTek . Nüüdseks on HDS hinnapoliitikat muutnud ja pakub konkurentidest odavamaid lahendusi . Lõpetuseks märgime , et Eestis on HDS toodete müügipartneriks AS Microlink Eesti . Peep Sürje  Peep Sürje - sündinud <arv>. aprillil <arv> Rakveres . Lõpetanud <arv> cum laude ehitusinsenerina teetehnika erialal Tallinna Polütehnilise Instituudi ja <arv> samal erialal tehnikakandidaadina SOJUZDORNII ( Moskva ) . Täiendanud end <arv> Moskva Autode ja Teedeinstituudis MADI , <arv> Soome Riiklikus Tehnikauuringute Keskuses VTT , <arv> Belgia Riiklikus Teedeuuringute Keskuses ja <arv> USA Riiklikus Teedeinstituudis . Aastatel <arv>-<arv> RPI “ Eesti Tööstusprojekt ” vaneminsener , grupijuht ja brigaadi juhataja , <arv>-<arv> TPI autoteede kateedri vanemõpetaja ja vanemteadur , <arv>-<arv> Autotranspordi Ministeeriumi Teedeehituse Kesklaboratooriumi juhataja asetäitja , <arv> <arv>-<arv> TPI autoteede kateedri dotsent , <arv> Soome Riikliku Tehnikauuringute Keskuse VTT vanemteadur , <arv>-<arv> TPI autoteede kateedri juhataja , <arv>-<arv> TTÜ ehitusteaduskonna prodekaan , teedeinstituudi direktor ja teetehnika professor . Alates aastast <arv> TTÜ teadus- ja arendusprorektor ja <arv>. aastast Eesti Teadlaste Liidu kaasesimees . Aastast <arv> volitatud insener ja <arv> EUR ING . Käesolev kirjatöö on jaanuaris Eesti Päevalehes ilmunud artikli “ Väsinud IT-tiiger ” algversioon , mida kirjatsurad pole veel oma soovide ja nõuete kohaselt silunud . Vahest pakub asjaomastele mõningast huvi autori ehe nägemus pealkirjas sõnastatud probleemist ? Eesti vastuvõtmine NATOsse ja Euroopa Liitu tagas riigi turvalisuse suurenemise , misjärel muutub üha olulisemaks inimeste elukvaliteedi tõstmine , ja seda olukorras , kus valmisolek kartulikoorte söömiseks on kauge möödanik ja ELi palganumbrite edetabelis on Eesti päralt üks viimastest kohtadest . Kätt südamele pannes : kes ei tahaks elada jõukalt ja majanduslikult kind- lustatult kui mitte veel täna , siis vähemati homme ? Samas ei saa me piiratud inim- ja loodusvarude tõttu lõputult viljelda ressursimahukat tootmist ega loota ka madalate tootmiskulude kaudu saavutatavale konkurentsieelisele . Edasiminekuks on tegelikult vaid üks tee - püüelda teadmistel põhineva lisandväärtuse loomise poole , pöörates üha suuremat tähelepanu haridusele , teadus- ja arendustegevusele ning tehnosiirdele . Võtmeküsimuseks on seejuures tootlikkuse ja ekspordipotentsiaali kasv , sest vastasel korral jäämegi Euroopa vaeseks ääremaaks . Taasiseseisvumise esimestel aastatel põhines Eesti areng kohalike võimaluste ekspluateerimisel ja üliliberaalsel majanduspoliitikal , kus turunõudlus oli peamiseks regulaatoriks . See mudel koos õigetel ajahetkedel tehtud ebapopulaarsete otsustega andis majandusele hea stardikiirenduse . Kuid juba hingavad kuklasse meie Balti naabrid , keda Euroopa Liitu jõudmisel pidime pika puuga edestama , ja oh häbi - meie väsivast IT-tiigrist ollakse massiliselt mööda punumas ! Mis kõige hullem , seni valdav allhanketööstus on Narva Kreenholmi näitel juba otsimas idast odavamat tööjõuturgu . Eesti on jõudnud oma arengus investeeringute faasi , kus majandusse toodav lisaraha peab looma eeldused üleminekuks innovatsioonifaasi , milles peamiseks eesmärgiks on uute ja turusuutlike tehnoloogiate ning toodete evitamine . See esitab kõrgeid nõudeid spetsialistide kvalifikatsioonile , süvendab ettevõtete omavahelist koostööd ning koostööd ülikoolidega , millega <arv>. aastal liideti enamik endisi Teaduste Akadeemia instituute ja harukondlikke uurimisasutusi . Samas tuleb rõhutada , et nii teadlastel kui riigil on innovatsioonis põhiliselt toetav roll - vabaturu tingimustes on tegelikuks innovatsioonimootoriks kasumit taotlev ettevõtlus ! Paraku näitavad uuringud , et meie tööstuse uus struktuur on küll välja kujunenud , kuid selle peamiseks suundumuseks ei ole teadmistepõhise majanduse arendamine . Tootlikkuse ning ekspordi tase ei ole piisav , sest kaubad on valdavalt lihtsad ja odavad ning madala konkurentsivõimega . Väheneb spetsialiseerumine tehnoloogilise arengu võtmesuundadele , ei jätku spetsialiste ega oskustöölisi . Selle taha , et oskustöölisi ja spetsialiste ei piisa , on juba jäänud mitmed olulised investeeringud - pole spetsialiste ega investeeringuid , pole ka raha , mida ümber jagada , millest maksta toetusi ja rajada uusi kultuuriehitisi . Kuidas oleme jõudnud sellise paradoksaalse olukorrani , kus napilt <arv>,<arv> miljoni elaniku kohta on nelikümmend seitse üli- ja kõrgkooli ? Mõningatel andmetel isegi seitsekümmend üheksa kõrgharidust tõendavaid diplomeid väljastavat haridusasutust ? On aeg lõpetada genofondi arutu raiskamine ning tõdeda , et üliliberaalne hariduspoliitika on meid viinud tupikusse : koolitame massiliselt kahtlase kõrgharidusega töötuid olukorras , kus napib kvalifitseeritud töökäsi . Sama temaatikaga haakub riiklik koolitustellimus ülikoolidele , mis baseerub suuresti seisukohal , et tähtis polevat , mis erialal noori inimesi koolitatakse , vaid see , kui hea hariduse nad saavad . Kui kõik tõesti nii lihtne oleks , võiksime piirduda vaid mõne populaarse eriala õpetamisega meie rahvusülikoolis . Seepeale oleks vägagi huvitav jälgida , kuidas näiteks hästi koolitatud humanitaarid ja kõrgelt tasustatud juristid käitavad kõrgtehnoloogilisi tootmisliine ning tagavad soojuse ja valguse vastvalminud kodudes ja tootmishoonetes . Kuuldavasti on see väga lihtne : sooja annab radiaator , elekter tuleb seinakontaktist ja vesi voolab kraanist ! Innovaatiline areng nõuab koostööd ja süvenevat vastastikust usaldust ettevõtete ja ülikoolide vahel . See on paraku järgmine pudelikael , sest ettevõtted pole väidetavalt valmis teadmismahukaks tootmiseks ning enamik teadlasi eelistab praktiliste probleemide lahendamise asemel tegelda vaimse eneserahuldamisega - elatakse eri maailmades , kus üks osapool ei tea ega soovigi teada , mida teine teeb . Tulemuseks on pidevad kraaklemised ja vastastikused süüdistused teadusringkondades , sest <arv>,<arv>% vägagi tagasihoidlikust siseriiklikust koguproduktist ( Rootsis <arv>,<arv>% , Soomes <arv>,<arv>% , ELi keskmine <arv>,<arv>% ) teadus- ja arendustegevuse ( T &amp; A ) rahastamiseks on viimas meid olukorrani , kus Eesti teadlaskond tuleb väljasureva liigina kanda Punasesse Raamatusse . Samas on arenenud riikide kõrge T &amp; A rahastamise protsent suuresti mitte riigi- , vaid ettevõtete- poolse panustamise tulemus . Ent võib mõista ka Eesti ettevõtete vähest toetust , sest teaduse praktiline väljund on enam kui kesine . Eurostati andmetel kulub teadmistepõhise majandusega riikides uute toodete ja tehnoloogiate väljatöötamisele ehk tehnoloogilisele arendustegevusele umbes kaks kolmandikku T &amp; A kogumahust - meil napp kümnendik . Kui arenenud riikides on alus- ja rakendusuuringute ning arendustegevuse proportsioonid <arv> : <arv> : <arv> , siis Eestis <arv> : <arv> : <arv>. Mul on ehitusinsenerina eelöelduga seonduvalt tekkinud kuvand majast , mille ehitamisel läheb põhiline aur ja vile vundamendile , seinad ei taha aga kuidagi kerkida ning sarikapeost pole mõtet unistadagi . Sel foonil tundub suisa kohatuna osa teadusringkondade pidev hala sellest , kuidas meil alusuuringuid ahistatakse . Teaduspublikatsioonide arvukusega ja tsiteeritavuse indeksiga manipuleerimise asemel tuleks pöörata suuremat tähelepanu uurimistulemuste rakendamisele . Teisisõnu , lisaks bibliomeetriale on terve rida kvaliteedikriteeriume , mida annab erinevate teadusvaldkondade spetsiifikat arvestavalt rakendada . USAs ongi T &amp; A tulemuslikkuse kriteeriumina bibliomeetriat välja vahetamas konkurentsipõhine raha - vabaturu tingimustes pole oluline , kas maksjaks on riik või ettevõtlussektor . Kui on vaid , mille eest maksta ! Samas on selge , et nii riigi kui tema ettevõtete arengutase piirab T &amp; Asse kaasatava raha hulka . Seetõttu on paljudes edumeelsetes postsotsialistlikes riikides ( Sloveenia , Tšehhi , Ungari jt ) suunatud eelarvelisi vahendeid eelistatult nendesse T &amp; A valdkondadesse , kus nad võimalikult kiirelt riigi üldist jõukust kasvatavad . Näiteks kulub eelnimetatud riikides tehnikavaldkonna rahastamisele umbes <arv>% kogu riiklikust teadusrahast Eesti <arv>% vastu . On mille üle mõelda ja mille järgi atra seada ! On ka teada , et nii Teise maailmasõja peksupoiste Jaapani ja Saksamaa kui ka paljude edukate väikeriikide teadmistepõhine majandus on saanud jalad alla tänu rahvusvahelisele tehnosiirdele . Neid , kes arvavad , et pidevad ponnistused oma jalgratta leiutamisel on edu ainsaks eelduseks , tuleks korraks saata Hannoveri messile . Kümnete hektarite kaupa kõrgtehnoloogiast pungil näitusehallide nägemine peaks lõpetama tehnosiirde kontekstis ilkumise á la jänesena innovatsioonirongil sõitmisest ja tõstatama küsimuse nähtut evitada suutvate kõrgtasemel spetsialistide olemasolust . Selleks et teadmistepõhine majandus Eestis saaks skolastilisest targutamisest tegelikkuseks , tuleb tõhustada rahvusvahelistele nõuetele vastavate inseneride ja muude ettevõtlusega seotud spetsialistide koolitamist , tõsta seda protsessi tagava infrastruktuuri taset ja uuringute rahastamise mahtu . Samuti tuleb luua vajalikud eeldused uute kõrgtehnoloogiliste , nimetamisväärse ekspordimahuga Eesti ettevõtete tekkimiseks . Kuid vaid sellele ei saa loota , sest ka Soome edu taga ei ole mitte ainult kõrgtehnoloogiaettevõtted , sh Nokia , vaid traditsioonilistes majandussektorites saavutatud uus innovaatiline tase . Arvo Toomsalu , TTÜ arvutitehnika instituut Personaalarvuti põhieesmärk - informatsiooni juhtimine mõttetöö toetamiseks . Bill Gates Pea kolmkümmend aastat tagasi leidsid aset sündmused , mis avaldasid mõju mitte ainult arvutitehnika , vaid ka kogu inimühiskonna edasisele arengule . Kahekümnenda sajandi seitsmekümnendate lõpu- ja kaheksakümnendate algusaastate tormilised muudatused arvutitehnikas peegeldusid nii majanduse , kultuuri kui ka sotsiaalse keskkonna sfäärides . Ilmselt oli see üheks põhjuseks , miks <arv>. aastal valis rahvusvahelise mainega ajakiri Time aasta tegelaseks mitte mõne kuulsa poliitiku , teadlase , ärimehe või kunstiinimese , vaid ARVUTI . Neil aastail võeti arvutitehnikas kasutusele lausintegraallülitused , ilmusid mikroprotsessorid ja suure mahuga kiired pooljuhtmälud . Loodi uudne tehnoloogiline baas , mis võimaldas hakata massiliselt valmistama odavaid , piisava jõudlusega kvaliteetseid personaalarvuteid . Personaal- arvutite ootamatult kiire ja laialdane levik andis tunnistust infoühiskonna tekkest . See oli aeg , kui toimus elektronarvutite “ demüstifitseerimine ” , s.t arvutid muutusid “ imeasjadest ” inimeste tavapärasteks töövahenditeks . Seda , et selliseid arvuteid vajati ning oldi valmis neid kasutusele võtma , kinnitavad muudatused maailma arvutiturul . Kui aastal <arv> müüdi maailmas ligikaudu <arv> personaalarvutit , siis aastaks <arv> kasvas müüdud arvutite kogus <arv>,<arv> miljonini , <arv>. aastaks <arv> miljonini ning <arv>. aastal ületas müüdud personaalarvutite hulk juba <arv> miljoni piiri . International Data Corporation'i analüütikute hinnangul müüdi ainuüksi aastatel <arv>- <arv> kogu maailmas umbes <arv> miljonit personaalarvutit ( <arv> ) . Euroopa Liidu riikides oli <arv>. aasta lõpus kasutusel ümmarguselt <arv>,<arv> miljonit personaalarvutit . Kui aastatel <arv> - <arv> kasvas Euroopa Liidus personaalarvutite arv aastas keskmiselt <arv>% võrra , siis aastatel <arv> - <arv> suurenes juurdekasv juba <arv>%-ni , kusjuures ligikaudu <arv>% vastselt kasutusele võetud arvuteist leidsid rakenduse koduarvutitena . Muidugi erinesid esimesed personaalarvutid oma tänapäevastest järglastest samavõrra kui omaaegne Henry Fordi rahvaauto Ford T moodsast Ford Focus WRCst . Mida aga kujutasid endast tänapäevaste personaalarvutite “ esiisad ” , seda teavad võrdlemisi ähmaselt isegi paljud nooremapoolsed arvutiinsenerid . Järgnevalt tutvuks lähemalt neist ühe huvitavamaga - arvutiga Altair <arv> , mida sageli peetaksegi esimeseks personaalarvutiks . Mida olulist toimus siis kolmkümmend aastat tagasi ? Väga tabavalt on <arv>. aastal toimunud sündmusi iseloomustanud tuntud arvutiajaloo uurija Paul E. Ceruzzi . Oma raamatus “ A History of Modern Computing ” nimetab ta seda aastat väga poeetiliselt - annus mirabilis . Tõepoolest , kui lähtuda arvutitehnika arenguloo vaatevinklist , siis toimus sellel aastal rida olulise tähtsusega sündmusi . Aasta algul , jaanuaris , tutvustas firma Hewlett-Packard oma esimest programmeeritavat teaduskalkulaatorit HP-<arv> , suvel ilmusid turule Intel Corporation'i <arv>bitised mikroprotsessorkiibid <arv> , ajakirja Radio-Electronics Magazine juulinumbris kirjeldati üksikasjaliselt Inteli mikroprotsessorile <arv> tuginevat iseehitatavat lihtsat arvutit Mark-<arv> . Juba artikli pealkiri oli väga kõnekas - “ Build the Mark-<arv> : Your Personal Minicomputer ” . Kui loetelusse lisada veel Edward H. Roberts - või nagu teda enamasti tavatsetakse nimetada Ed Roberts - , siis ongi vahest nimetatud olulisemad “ eeldused ” , mis aitasid kaasa personaalarvutite ajastu esiklapse Altair <arv> sünnile . KUIDAS VALMIS ALTAIR ? <arv>. aastal oli USA õhujõudude endine ohvitser Ed Roberts asutanud Albuquerque'is ( New Mexico ) väikese elektroonikafirma MITS ( Micro Instrumentation Telemetry Systems ) , mis tegeles põhiliselt raadio teel juhitavate mudellennukite raadioaparatuuri postimüügiga . Seitsmekümnendate aastate alguses hakkas MITS müüma , esialgu võrdlemisi edukalt , kokkupandavate kalkulaatorite komplekte . Kuid juba <arv>. aastal vähenes nõudlus nende järele märgatavalt , sest kui konkurendid müüsid valmiskalkulaatoreid hinnaga <arv> dollarit , siis MITSi kokkupandav komplekt maksis ligi <arv> dollarit . Firmal tekkisid tõsised majandusraskused , võlg pangale oli ligi veerand miljonit dollarit , ja et firmat elus hoida , tuli leida kiiresti mingi hea äriidee . <arv>. aasta aprillis oli Intelis tootmisesse jõudnud uudse arhitektuurse lahendusega kiire ( taktsagedus <arv> MHz ) mikroprotsessorkiip <arv>. Ligikaudu <arv> transistorit sisaldavat mikrolülitust valmistati eesrindlikus <arv>mikronilises nMOS-tehnoloogias . Mikroprotsessori käsustik oli oma võimalustelt lähedane tolleaegsetele miniarvutitele . Vastilmunud mikroprotsessor ja Radio-Electronics Magazine'is avaldatud Mark-<arv> kirjeldus viisid Ed Robertsi mõttele hakata valmistama ja müüma lihtsaid odavaid arvutikomplekte . Kuna MITSil oli kogemusi kauplemisel kokkupandavate kalkulaatorite komplektidega , siis aitasid need kaasa uue äriidee elluviimisele . Plaan oli seda ahvatlevam , et Intel oli nõus müüma Ed Robertsile protsessorkiipe mitte nende tavahinnaga , <arv> dollarit tükk , vaid palju odavamalt , kõigest <arv> dollari eest . Seda fakti püüti hiljem mõnede MITSi konkurentide poolt ära kasutada , süüdistades Ed Robertsit selles , nagu ta oleks MITSi arvutikomplektides kasutanud mittekvaliteetseid protsessorkiipe . Kõik taolised süüdistused lükkas Ed Roberts aga kategooriliselt tagasi . Põhjus , miks tal õnnestus mikroprotsessoreid nii odavalt saada , oli lihtne - nimelt kasutati arvutikomplektides n.-ö kosmeetiliste defektidega mikrolülitusi . Protsessorkiipidel esines mitteolulisi väliseid defekte , mis vähimalgi määral ei avaldanud mõju nende talitlusele . <arv>. aasta augustiks oli MITSis Ed Robertsi juhtimisel ja koostöös William Yates'i ja Jim Bybee'ga , valminud arvutikomplekti esmamudel . Et kindlustada uuele tootele küllaldast ostjaskonda , oli seda vaja eelnevalt reklaamida ja siin tuli Robertsile appi ajakiri Popular Electronics . Nimelt oli ajakiri Radio-Elecronics Magazine <arv>. aasta suvel avaldanud artikli , kus kirjeldati Jonathan Tituse lihtsat arvutikomplekti Mark-<arv> . Selles kasutati Inteli varasemat , <arv>. aastal valminud <arv>bitist mikroprotsessorit <arv> , mille arhitektuurses lahenduses järgiti <arv>bitistes mikroprotsessorites <arv> ja <arv> rakendatud põhimõtteid . Soovida jättis mikroprotsessori <arv> töökiirus ( talitles taktsagedusel <arv> kHz ) ja käsustiku koosseis . Et mitte alla jääda Radio-Electronics Magazine'le , otsustas Popular Electronics'i tehniline toimetaja Leslie ( Les ) Solomon avaldada oma ajakirjas parema , kiirema ja võimsama iseehitatava arvuti kirjelduse . Seetõttu oli Ed Robertsi ettepanek tutvustada ajakirjas äsjavalminud originaalse lahendusega lihtsat ja odavat , mitteprofessionaalsele kasutajaskonnale orienteeritud iseehitatavat arvutikomplekti igati teretulnud . Les Solomon aitas igati kaasa , et arvuti kirjeldus saaks võimalikult ruttu avaldatud . Muidugi ei unustatud seejuures ära ka ajakirja huve . Materjali ettevalmistamisel pöörati erilist tähelepanu sellele , kuidas veenda lugejaid uue arvuti paremuses , võrreldes Mark-<arv>ga . Seda polnud just eriti raske teha , sest esitletavas “ miniarvutis ” , nagu seadet esialgu nimetati , kasutati moodsamat ja täiuslikumat mikroprotsessorit <arv> ning arvuti struktuuris oli rakendatud efektiivset universaalset <arv>-liinilist süsteemisiini . Esialgu nimetati süsteemisiini lihtsalt “ Altairi siiniks ” , kuid hiljem võeti kasutusele nimetus siin S-<arv> . Miks arvutit nimetati aga “ miniarvutiks ” , saab selgeks , kui tuletame meelde , et tollal kasutati tavaliselt <arv>- ja <arv>bitise sõnapikkusega arvutite kohta üldist nimetust “ miniarvuti ” . Tänapäevases kontekstis oli Ed Robertsi arvuti ikkagi klassikaline “ mikroarvuti ” . Samas polnud väär nimetada arvutit ka miniarvutiks , sest Robertsi arvuti suutis täita enam-vähem kõiki neid põhiülesandeid , mida tollased lihtsamad miniarvutidki . <arv>. aastal toimunud reklaamikampaania käigus pakkus Ed Roberts uue arvutiklassi tarvis välja nime “ personaalarvuti ” ( personal computer ) . Arvuti mugavamaks reklaamimiseks oli sellele vaja leida lihtne , kuid hästi meeldejääv nimi . Algselt oli MITSis arvutit nimetatud lihtsalt PE-<arv> ( Popular Electronics <arv>-bit ) , vähemalt nii väidab oma mälestustes Les Solomon . Nimekuju “ Altair ” olevat välja pakkunud Les Solomoni tütar , suur “ Star Treki ” fänn , numbrikombinatsiooni “ <arv> ” lisas nimesse aga Ed Roberts , pidades silmas vajadust eristada üksteisest arvuti tulevasi variante . Nii moodustuski lõpptulemusena üldtuntud arvutinimi Altair <arv>. Arvuti Altair <arv> ainus töötav eksemplar otsustati saata ajakirja Popular Electronics toimetusse . Kuid et firmas Railway Express , mis pidi näidise New Yorki toimetama , toimus samal ajal streik , siis läks Altair selles segaduses teepeal kaduma . Vaatamata Altairi kaotsiminekule , jätkas Les Solomon , tuginedes vaid Ed Robertsi käsikirjale , artikli avaldamise ettevalmistamistöid . Kohe , kui MITSis saadi teada arvuti kaotsiminekust , valmistati kiiresti uus , täielikult komplekteeritud esipaneeliga arvutikorpus , et ajakiri saaks vähemalt sellegi pildi avaldada . Kuid juba <arv>. aasta <arv>. detsembriks valmis MITSis Altairi teine täiustatud ja töötav komplekt . Ajakirja Popular Electronics <arv>. aasta jaanuari avanumbri esikaant ehtis Altairi pilt ja pilkupüüdva kujundusega tekst : World's First Minicomputer Kit to Rival Commercial Models ... ” ALTAIR <arv> ” SAVE OVER $ <arv>. Artiklis<arv>anti põhjalik ülevaade arvutikomplektist , nii riist- ja tarkvarast kui ka konstruktsioonist . Lugejaile anti teada , et peagi hakkab MITS arvuteid müügiks valmistama , ostja poolt kokkupandava arvutikomplekti müügihind saab olema <arv> dollarit , valmisarvutil <arv> dollarit . Kirjelduses rõhutati , et arvutis kasutatakse mikroprotsessorit <arv> , mida toetab <arv>baidine pooljuhtmuutmälu . Arvuti programmeerimine toimus aga masinakoodis . Avaldati andmeid isegi eeldatava tootmismahu kohta , nimelt kavatses MITS valmistada aastas umbes <arv> arvutikomplekti . Suureks ootamatuseks kõigile asjaosalistele oli aga lugejate tohutu huvi Altairi vastu . Kui esialgu oli firmas planeeritud ja ette valmistatud müüa aastas mitte üle paarisaja arvutikomplekti , siis esines päevi , kus ette müüdi ära kogu aastaks kavandatud arvutite kogus . Inimesed olid valmis maksma arvuti eest ette , isegi seda nägemata . Kui seni esines MITSil raskusi oma toodete müügiga , siis nüüd muutus olukord vastupidiseks - firma ei suutnud arvuteid nii palju toota , kui neid nõuti . Esimene müügiks valmistatud Altair <arv> komplekt valmis <arv>. aasta aprillis . Arvutikomplekti , mis oli varustatud <arv>kilobaidise mäluga , müüdi <arv> dollari eest . Ed Roberts on hiljem meenutanud , et Altairi tollane ostjaskond oli väga kirev . Nii oli üheks esimeseks tellijaks Chicagos elav hambaarst , kes vajas arvutit oma mudelraudtee juhtimiseks . Suurt huvi arvutikomplektide vastu ilmutasid ka isikud , kes töötasid sellistes USA riigiasutustes nagu FBI ja CIA . Tiivustatuna müügiedust , asus Ed Roberts Altairi kohe täiustama , luues mitmeid uusi , erineva konfiguratsiooniga arvutimudeleid . Altairi üheks oluliseks puuduseks oli tarkvaralise külje nõrk lahendus . Arvuti programmeerimine toimus masinakeeles , informatsiooni ( käske , andmeid ) sisestati arvutisse kahendkoodis , samas koodis väljastati ka töötlusel saadud tulemid . Õige pea selgus , et taoline keeruline , aeglane ja kergesti vigu tekitav suhtlusvorm ei sobinud enamikule arvutikasutajatele . Arvuti vajas hädasti lihtsamat , universaalsemat ja kasutajasõbralikumat suhtlusvahendit - kõrgema taseme programmeerimiskeelt . Ajal , kui Ed Roberts tegeles Altairi täiustamisega , sai ta Seattle'st kirja , kus tehti ettepanek võtta arvuti programmeerimisel kasutusele keel Basic . Kirja autoriteks olid tollal veel kaks tundmatut noort inimest Paul Allen ja Bill Gates . Kuna ettepanek oli asjalik , siis leppis Ed Roberts kirja autoritega kokku , et nad töötavad Altairi tarvis välja lihtsa Basic-keele interpretaatori . Lisaks interpretaatorile koostasid P. Allen ja B. Gates veel ka programmid , mis võimaldasid mikroprotsessoris töödelda ujukomavormingus esitatud informatsiooni . Et lihtsustada Basic-programmide sisestamist arvutisse , koostas P. Allen eriprogrammi , mille abil sai programme sisestada perfolindiriiderilt . Basic-interpretaatori esimene variant valmis <arv>. aasta veebruaris . Sama aasta juulis saadi töökorda interpretaatori teise versiooni programmid , mis olid ette nähtud salvestamiseks statsionaarselt juba arvuti püsimällu ( <arv>kilobaidise ja <arv>kilobaidise interpretaatori variandid ) . Taas ilmnes uus ebameeldiv tõsiasi : et toime tulla keerukamate ülesannetega , oli vaja suurendada arvuti mälumahtu . Kiiresti töötati MITSis välja uued , erineva infomahutavusega mälukaartide variandid , mida sai ühendada Altairi süsteemisiini standardseisse laienduspesadesse . Lisaks täiustati arvuti sisend-väljundlülitusi , kasutusele võeti jada- ja rööpportide moodulid ( laienduskaardid ) . Erilist tähelepanu pöörati sellele , kuidas muuta inimese suhtlus arvutiga lihtsamaks ja töökindlamaks . Malli võeti tolleaegsetelt miniarvutitelt , mis enamasti kasutasid sisend-väljundseadmena teletaipi ASR <arv>. Teletaip võimaldas informatsiooni sisestada kirjutusmasina klaviatuuriga sarnaselt sõrmistikult ja väljastada tulemeid prindituna rullpaberile . Teletaipide ASR <arv> laialdasemat kasutamist piiras seadmete kõrge hind , mis ületas tunduvalt Altair <arv> komplekti maksumuse . Hiljem loodi veel ka spetsiaalne terminalseade , kuid siiski kõige populaarseimaks osutusid laiatarbe-kassettmagnetofonile tuginevad välissalvestid . Innustatuna MITSi kiirest edust personaalarvutite turul , hakkasid peagi nii mitmedki teised firmad valmistama analoogilisi arvuteid ( arvutikomplekte ) . Tõsisemat konkurentsi pakkusid MITSile firmad IMS Associates Inc. personaalarvutiga IMSAI <arv> ( <arv> ) ja PolyMorphic Systems arvutiga , mida esialgu nimetati Micro Altairiks , kuid peagi asendati see nimega Poly-<arv> ( <arv> ) . Viimase oluliseks uuenduseks , võrreldes Altairiga , oli spetsiaalse klaviatuuri- ja videofunktsioone juhtiva kaardi kasutamine . Mis puutub personaalarvutisse IMSAI <arv> , siis selles rakendati mikroprotsessori <arv> modifitseeritud varianti <arv>A . Arvuti oli varustatud <arv>kilobaidise mäluga . Informatsiooni sisestamine ja väljastamine toimus nagu Altair <arv> puhulgi arvuti esipaneelil paiknevate lülitite ja valgusdioodindikaatorite abil . Selleski arvutis kasutati süsteemisiini S-<arv> , soovi korral võis aga arvuti riistvaralisi ressursse laiendada ( süsteemisiinil olid laienduspesad <arv> laienduskaardi tarvis ) . Erinevalt Altair <arv>st valmistati IMSAI <arv>-t ainult valmisarvuteina . Järjest teravnev konkurents personaalarvutite turul sundis MITSi pidevalt tegelema arvutite arendamisega . Lisaks Intel-protsessori põhistele komplektidele töötati välja arvutikomplektid , kus kasutati firma Motorola Inc. mikroprotsessorit M<arv> . Esimeseks Motorola mikroprotsessoriga Altairiks oli <arv>. aasta oktoobris välja töötatud Altair <arv> . Selle protsessoriga arvutikomplekti hind ( <arv> dollarit ) oli veidi madalam kui Altair <arv>-l . <arv>. aasta jaanuaris valmis teinegi M<arv>-põhine personaalarvuti variant Altair <arv>b . Hoolimata uue arvutikomplekti valmimisest , oli <arv>. aasta MITSile ebasoodne . Firma positsioon personaalarvutite turul halvenes märgatavalt , turuliidri koht tuli loovutada . Siiski ei tähendanud see veel seda , et turul oleks lakanud nõudlus Altairide järele . Kui <arv>. aasta detsembri lõpuks oli MITS müünud ligikaudu <arv> Altair <arv> komplekti , siis järgmise aasta detsembriks kasvas nende arv <arv> <arv>ni . Järgnevatel aastatel hakkas firma majandustegevus pikkamisi , kuid järjekindlalt allamäge veerema . <arv>. aasta juunis lõpetati Altairide tootmine ning järgmisel , <arv>. aastal , kuulutati välja MITSi pankrot . PERSONAALARVUTI ALTAIR <arv> KONSTRUKTIIVSEST LAHENDUSEST Altairi esimeses variandis koosnes arvuti neljast moodulist . Konstruktiivselt kujutasid moodulid standardsete mõõtmetega trükiplaate ( arvutikaarte ) , kuhu monteeriti integraallülitused ja diskreetsed raadiokomponendid . Üksikud moodulid olid omavahel ühendatud traatmontaažiga . Alates Altairi teisest mudelist loobuti kohmakatest traatühendustest ning võeti kasutusele universaalne arvutikaarte ühendav süsteemisiini S-<arv> liine kandev krossmontaaži- ehk nn ühendusplaat . Arvutikaardid ühendati ühendusplaadil paiknevaisse pistikupesadesse analoogiliselt sellega , kuidas tänapäevastes personaalarvutites ühendatakse laienduskaarte emaplaadil olevatesse laienduspiludesse . Altairi süsteemisiini S-<arv> omapäraks võib pidada seda , et kasutati kahte ühesuunalist <arv>bitist andmesiini ja üht kahesuunalist <arv>bitist aadressisiini . Algselt oli ühendusplaat varustatud vaid nelja pistikupesaga , kuigi Altairi korpus oli piisavalt suur , et sellesse võinuks mahutada kuni <arv> arvutikaarti ( moodulit ) . Altairide hilisemates variantides oligi ühendusplaadil <arv> pistikupesa . Arvuti süsteemisiini tehniline lahendus osutus sedavõrd õnnestunuks , et see võeti de facto standardina kasutusele mitmete teiste firmade ( IMSAI , Dynabyte , Cromemco Inc. , Vector Graphic jt ) personaalarvuteis . Arvuti keskseks mooduliks oli protsessormoodul , mille põhilülituseks oli Inteli mikroprotsessorkiip <arv>. Omaette moodulina valmistati samuti arvuti mälu . Esialgses variandis kasutati <arv>baidist staatilist muutmälu ( RAM ) , kuid peagi veenduti , et isegi lihtsa arvuti tarvis osutus mälumaht ebapiisavaks . Õnneks oli arvuti mälusüsteem projekteeritud piisavalt paindlikuna ja nii ei tekkinud raskusi mälumahu suurendamisel <arv>kilobaidini . Hiljem kasvasid Altair-arvutite mälumahud veelgi , muutmäludes hakati kasutama energiasäästlikumaid dünaamilisi mälukiipe . Arvuti muutmälu toetas püsimälu ( ROM ) , kus kasutati Inteli <arv>baidise infomahutavusega mälulülitusi <arv>. Püsimälus säilitati lihtsat väikesemahulist alglaadurit , mille abil laeti perfolindilt arvutisse erinevaid tööprogramme . Kui arvutite programmeerimisel võeti kasutusele Basic-keel , siis hakati püsimälus säilitama selle talitlemiseks vajalikku translaatorit ( interpretaatorit ) . Sedamööda kuidas täiustati interpretaatorit , suurenes ka vajatava püsimälu infomahutavus . Algselt oli interpretaatori maht <arv> kilobaiti , kuid õige ruttu asendati see <arv>kilobaidise variandiga . Hilisemad Altairi variandid varustati välismäluga , esialgu kasutati mäluseadmena tavalist kassettmagnetofoni . Odavate kettaseadmete ilmumisel vahetati kassettmagnetofon välja esmalt <arv>- ja seejärel <arv>,<arv> tollise disketiseadme vastu . Välise disketiseadme ühendamiseks arvutiga töötati välja spetsiaalne kontrollerlülitus , mis mahutati kahele arvutikaardile . Andmevahetus välismäluga toimus kiirusega <arv> <arv> bitti sekundis , disketiseadmena kasutati Pertec FD <arv>. Laiendatud võimalustega Basic-interpretaatorit ( <arv>kilobaidist Extended BASICut ) ei salvestatud enam mitte arvuti püsimällu , vaid seda säilitati disketil . Esimestes Altairides suheldi arvutiga esipaneelil asunud juhtpuldi vahendusel . Kogu informatsioon ( programm , andmed ) sisestati arvutisse kahendkoodis juhtpuldi tumblerlüliteilt . Töötlusel saadud tulemused väljastati samuti kahendkoodis valgusdioodindikaatoreile . Kui hinnata Altair <arv> juhtpuldi disaini , siis torkab silma , et see meenutab firma Data General arvuti Nova <arv> oma , nii juhtorganite ( tumblerlülitite ) kui ka indikatsioonielementide ( valgusdioodide ) paigutuse poolest . Arvuti küllaltki askeetlikul , kuid ergonoomiliselt korrektselt kujundatud , juhtpaneelil oli <arv> tumblerlülitit ja <arv> valgusdioodindikaatorit ( vt lisatud fotot ) . Hea ruumilis-dünaamilise pildi Altair <arv> väliskujundusest leiab võrguleheküljelt : <hyperlink> Muidugi oli selline suhtlusviis arvutikasutajaile ebamugav , sageli esines eksimusi nii informatsiooni sisestamisel kui ka tulemuste interpreteerimisel . Vähetähtis polnud seegi , et suurem osa tollaseid arvutihuvilisi ei omanud piisavaid teadmisi ega oskusi arvutitehnika vallas , raskusi oli kahend- ja kuueteistkümnendkoodide kasutamisega .  Arvuti Altair <arv> üldvaade ( vaade esipaneelile ) Esimeseks sammuks arvuti kasutajasõbralikkuse tõstmisel oli masinakeele hülgamine ja üleminek lihtsamale , loomulikule keelele lähedasemale suhtluskeelele Basic . Analoogiliselt tollaste mini- ja suurarvutitega hakati Altairides kasutama spetsiaalseid sisend-väljundseadmeid . Neist esimeseks oli eelnevalt juba mainitud , firmas Teletype Corporationi <arv>. aastal välja töötatud populaarne teletaip ASR <arv>. Teletaip tagas andmeedastuskiiruseks <arv> bitti sekundis ehk umbes <arv> sümbolit sekundis . Siiski polnud teletaip sobiv kõigile arvutikasutajaile , sest seade oli suhteliselt kallis . Uus teletaip maksis keskmiselt <arv> dollarit , kasutatud oli aga <arv> kuni <arv> dollarit . Välisseadmetest kasutati Altairides veel arvutiterminali Comter II , reaprinterit Altair <arv> Line Printer ja püsimälukiipide programmaatorit . Terminal Comter II oli varustatud ASCII koodi kasutava sõrmistiku ja <arv> sümbolit kuvava üherealise kuvapaneeliga . Kuvapaneelile väljastatava informatsiooni ajutiseks säilitamiseks oli terminalis spetsiaalne <arv>-baidise infomahutavusega puhvermälu . Kuigi terminali abil oli arvutiga suhelda palju mugavam , piiras nendegi laiemat levikut seadmete kõrge hind ( <arv> dollarit ) . Reaprinter Altair <arv> Line Printer printis ritta kuni <arv> tähemärki , maksimaalne prindikiirus küündis <arv> reani minutis . Printer kasutas <arv> erinevat tähemärki , mida esitati rastris <arv> x <arv> punkti . Lisaks originaaldokumendile võis samaaegselt printida veel kolm koopiat . Arvutil oli küllaltki võimas elektritoitesüsteem , mis tagas seadme normaalse talitluse ka täiendavate lisamoodulite olemasolul . Arvuti toiteplokk väljastas pingeid +<arv>V ja -<arv>V , üksikuis mooduleis formeeriti neist juba konkreetsed toitepinged nii integraallülituste kui ka standardliideste ( näiteks RS-<arv>C ) tarvis . Altair <arv> korpus mõõtmetega <arv> x <arv> x <arv> tolli ( laius x sügavus x kõrgus ) koosnes kahest osast . Põhielemendiks oli alusplaat , mis ühtlasi täitis arvuti esipaneeli ülesannet . Alusele kinnitati arvuti mooduleid ühendav ühendusplaat , aga samuti elektritoitesüsteemi komponendid . Ühendusplaadil paiknesid standardsed pistikupesad arvuti põhi- ja laiendusmoodulite tarvis . Alust kattis ülalt ja külgedelt Ð-kujuline kattepaneel . Arvuti Altair <arv> <arv> dollarit maksvasse kokkupandavasse komplekti kuulusid põhimoodulid ( kaardid ) , toiteplokk , abikomponendid ( valgusdioodid , tumblerlülitid ja teised vajalikud raadiokomponendid ) , korpus ja juhend arvuti kokkupanekuks , häälestamiseks ning kasutamiseks . Firma pakkus samuti juba eelnevalt kokkumonteeritud ja häälestatud arvuteid , kuid nende hind oli veidi kõrgem - <arv> dollarit . Kokkupandava arvutikomplekti tellija pidi aga arvestama , et arvuti töökorda viimiseks pidi ta selle ise kõigepealt kokku panema ja häälestama . Seega oli vajalik , et arvutihuviline omaks vähemalt minimaalseid teadmisi ja oskusi elektroonikaseadmete montaaži ja häälestamise vallas . Kuna standardsete arvutikomplektide üheks suurimaks miinuseks oli äärmiselt piiratud mälumaht , siis esmajärjekorras püüti seda korvata täiendavate mälukaartide lisamisega arvutisse . Need polnud aga mitte eriti odavad . Näiteks <arv>-kilobaidine mälumoodul , mis sõltuvalt sellest , kas tegemist oli eelnevalt kokkumonteeritud häälestatud mäluga või ostjale anti vaid trükiplaat ja elektroonikakomponendid , maksis vastavalt kas <arv> või <arv> dollarit . Mälumahu suurendamine oli vältimatu , kui arvutis taheti käitada Basic-programme . Odavad polnud teisedki lisamoodulid . Nii maksis jadaliidese moodul kas <arv> dollarit , kui osteti kokkumonteerimata detailide komplekt , või <arv> dollarit , kui tegemist oli valmismooduliga ; rööpliidese moodulite hinnad olid vastavalt <arv> dollarit ja <arv> dollarit . ALTAIR-ARVUTITE ERINEVAID VARIANTE Altair-arvuteid valmistati mitmes variandis - Altair <arv> , Altair <arv>a , Altair <arv>b , Altair <arv> , Altair <arv>b . Arvutid Altair <arv>b ja Altair <arv>b ei olnud mitte arvutikomplektid , vaid valmisarvutid . Arhitektuurselt ja konstruktiivselt lahenduselt olid Altairide variandid enam-vähem ühesugused , suuremaid erinevusi esines arvutite struktuursetes lahendustes ja väliskujunduses . Huvipakkuvamateks neist on vahest Altair <arv>b ja Altair <arv> erinevad versioonid . Altair <arv>b Personaalarvuti Altair <arv>b ( valmis <arv>. aasta augustis ) esindas Altairide teist põlvkonda . Arvutis kasutati Inteli mikroprotsessorit <arv>A , kuid ülejäänud osas järgiti prototüübis ( Altair <arv> ) rakendatud põhimõtteid . Nii riist- kui ka tarkvaraliselt ühildus Altair <arv>b oma eelkäijaga . Mõnevõrra parandati arvuti laiendamise võimalusi : ühendusplaadil suurendati pistikupesade ( laienduspilude ) arvu kaheksateistkümneni , ühtlasi suurendati toiteploki väljundvõimsust . Skeemitehnilises lahenduses hakati kasutama Inteli mikroprotsessorkomplekti MCS-<arv>sse kuuluvat taktigeneraatorit ( kiip <arv> ) ja siinivõimendeid ( <arv> ) . Altair <arv>b baasil loodi personaalarvuti Altair <arv>bt ( Altair <arv>b Turnkey ) , mida tutvustati <arv>. aasta oktoobris . Tehnilistelt näitajatelt ( mikroprotsessor <arv>A , põhikonfiguratsioonis üks kilobait muut- ja üks kilobait püsimälu , jada- ning rööppordi kaardid ( moodulid ) , süsteemisiin S-<arv> , residentne assembler ) ei erinenud see prototüübist . Põhiliseks ja silmatorkavaks erinevuseks oli Altair <arv>le iseloomuliku juhtpaneeli puudumine . Arvuti Altair <arv>bt pingestamisel anti juhtimine automaatselt üle disketiseadmes paiknevale juhtprogrammile , mis korraldas arvuti edasist tööd . Altair <arv> <arv>. aasta novembris tõi MITS avalikkuse ette firma Motorola <arv>bitisel mikroprotsessoril M<arv> põhineva personaalarvuti Altair <arv>. Arvutite tootmine algas siiski alles järgmisel aastal . Sedagi arvutit valmistati kahes versioonis - kokkupandava komplektina ( hinnaga <arv> dollarit ) ja valmisarvutina ( hinnaga <arv> dollarit ) . Altair <arv>s kasutatava mikroprotsessori taktsagedus oli madalam ( <arv> kHz ) kui Intel-protsessoriga arvuteis . Arvuti mälusüsteemi struktuur järgis varasemaid lahendusi , põhivariandis <arv> kilobait RAMi ja <arv> kilobait ROMi . Suhtlus arvuti ja väliskeskkonna vahel toimus jadaliidese RS-<arv>C abil . Altair <arv>s kasutati <arv>kilobaidist Basic-interpretaatorit . Arvuti väliskujundus järgis traditsioonilist lahendust , kuid selle korpus oli veidi väiksem : <arv> x <arv> x <arv>,<arv> tolli . Ka Altair <arv>le töötati välja lihtsustatud juhtpaneeliga variant Altair <arv>b ( <arv> ) . Juhtpaneelil piirduti vaid paari tumblerlüliti ja mõne valgusdioodindikaatoriga . Põhivariandis varustati arvuti Altair <arv>b <arv>kilobaidise RAMiga ja <arv>baidise ROMiga , viimast võis laiendada kuni ühe kilobaidini . Suhtlus väliskeskkonnaga toimus jadaliidese abil , mis võis talitleda kas RS-<arv>C tüüpi liidesena või teletaibiliidesena . Arvuti süsteemisiinil olid laienduspesad kuni kolme lisamooduli tarvis . Mälumahu suurendamiseks töötati välja spetsiaalne <arv>kilobaidine mälumoodul . Mis puutub Altair-arvutite tarkvarasse , siis see oli tolle aja kohta küllaltki mitmekesine . Pakuti erineva keerukusastmega süsteemseid ja rakendusprogramme , alates lihtsatest alglaaduritest kuni keerukate interpretaatoriteni . Kui suurte mälumahtudega opereeris seitsmekümnendate aastate personaalarvutite tarkvara , võib küllaltki tõepäraselt hinnata Altairi näite varal : <arv> ) süsteemimonitor - <arv> , <arv> kB , <arv> ) tekstiredaktor - <arv> kB , <arv> ) assembler - <arv> kB , <arv> ) silur - <arv> kB , <arv> ) Altair Basic - <arv>,<arv> kB , <arv> ) Altair Extended Basic - <arv>,<arv> kB , <arv> ) Altair Disk Extended Basic - <arv> kB , <arv> ) Altair DOS - <arv> kB . Nii tagasihoidliku mahuga tarkvara puhul võis arvutite mälusüsteemides piirduda tõesti vaid paari- kuni paarikümnekilobaidiste mälumahtudega . Ei pea olema mingi asjatundja , et aduda , kuivõrd piiratud olid tollaste personaalarvutite võimalused , võrreldes kaasaegsetega . KAS ALTAIR <arv> OLI ESIMENE PERSONAALARVUTI ? Personaalarvutite arengut käsitletavates materjalides võib tihti kohata väidet , et esimeseks personaalarvutiks oli Altair <arv>. Kui väga Altairide tulihingelised fännid seda seisukohta ka ei püüaks kaitsta , räägivad faktid siiski midagi muud . Ammu enne seda , kui ilmus Edward Robertsi artikkel Popular Electronicsis , oli trükis avaldatud mitmeid materjale ja ehitatud töötavaid arvuteid , mida võib lugeda kuuluvaiks personaalarvutite klassi . “ Džinni päästis pudelist välja ” Edmund C. Berkeley , kes oma <arv>. aastal ilmunud raamatus “ Gigant Brains , or Machines That Think ” kirjeldas ülilihtsat releearvutit Simon . See arvuti , kasutades vaid nelja arvu ( <arv> , <arv> , <arv> ja <arv> ) , suutis sooritada liitmist , loogikalist inversiooni , selekteerimist ja teha kindlaks , kumb kahest operandidest on suurema väärtusega . Aastatel <arv> - <arv> avaldati ajakirjas Radio Electronics Magazine Simoni kohta tervelt <arv> artiklit . Kuna Simon esindas siiski pigem personaalarvuti kontseptsiooni kui reaalset arvutit , mistõttu võib selle pretendentide nimistust välja jätta , siis jääb ikka terve rida arvuteid , mis loodi enne kui Altair <arv>. Üheks tuntumaks neist oli Kenbak-<arv> , mida tutvustati ajakirja Scientific American <arv>. aasta septembrinumbris . Tegemist oli firmas Kenbak Corporation<arv>välja töötatud arvutiga Kenbak-<arv> , mida müüdi hinnaga <arv> dollarit . Kenbak-<arv>s , projekteerija John V. Blankenbaker , ei talitlenud muidugi veel mitte mikroprotsessor , vaid arvuti moodustati trükiplaadile monteeritud TTL-loogika integraallülitustest . <arv>bitise sõnapikkusega Kenbak-<arv> iseärasuseks oli informatsiooni jadatöötluse rakendamine . See võimaldas küll minimeerida arvutis lülituste arvu , kuid samas muutis selle talitluse väga aeglaseks . Nii kulutati Kenbak-<arv>s kahe <arv>bitise arvu liitmiseks ligi paar millisekundit . Arvuti arhitektuuri omapäraks on seegi , et mäluna kasutati kaht <arv>bitist nihkeregistrit . Arvuti protsessor ei sisaldanud registreid , mälu baasil oli korraldatud nii tööregistrite A ja B kui ka indeksregistri , sisend-väljundregistri ning käsuloenduri töö . <arv> Arvuti käsustik nägi ette küll nelja erinevat adresseerimise viisi , samas puudus aga toetus katkestustele . Informatsioon sisestati arvutisse kahendkoodis , kasutades arvuti esipaneelil olevat klaviatuuri , tulemused väljastati kahendkoodis indikaatorelementidele . Arvatakse , et arvuteid Kenbak-<arv> valmistati umbes <arv> eksemplari , põhiliselt kasutati neid õppearvutitena koolides ja kolledžites . Vähem teatud-tuntud on <arv>. aastal Intelis ehitatud lihtne mikroarvuti SIM<arv>-<arv> , mida aga siiski ei loeta personaalarvutite klassi kuuluvaks . Tegemist oli üheplaadiarvutiga , kus kasutati Inteli esimest , <arv>. aastal turule ilmunud <arv>bitist mikroprotsessorit <arv>. <arv>. aastal kasutas Compu-Sultants , Inc. täiustatud Inteli <arv>-bitist mikroprotsessorit <arv> oma arvutikomplektis Micro <arv> . Mikroarvuti oli varustatud väikese <arv>baidise mäluga . Laiemat levikut ei saavutanud seegi arvutikomplekt . Oluliselt kaalukamat rolli personaalarvutite arenguloos etendas arvuti Micral . Arvuti ehitati <arv>. aastal Prantsusmaal firmas Realisations Etudes Electroniques S. A. ( REE ) ehk R<arv>Es . Micrali väljatöötamist juhtis François Gernelle , kes kasutas arvutis mikroprotsessorkiipi <arv>. Tegemist polnud mitte arvutikomplekti , vaid valmisarvutiga , mida müüdi hinnaga <arv> dollarit ( teistel andmetel <arv> dollarit ) . Arvutis kasutati <arv>kilobaidist muutmälu , programmeerimine toimus masinakoodis . Hiljem , <arv>. aastal , loodi Micralile assembler , kuid hoolimata täiustustest , jäi arvuti levik piiratuks . Samal aastal tutvustati firmas Xerox välja töötatud arvutit Alto . Arvuti projekteerimist juhtis Charles P. Thacker . Mitte just eriti kompaktne Alto koosnes neljast seadmest : protsessorist , kettaseadmest , graafilisest kuvarist ja klaviatuurist koos hiirega . Protsessorina kasutati spetsiaalset <arv>bitist tellimuskiipi . Alto tugevaks küljeks oli hea graafikaliides . Arvutil oli individuaalne operatsioonisüsteem ning soovi korral võis arvuteid ühendada arvutivõrguks . Võrreldes konkurentidega , oli Alto oma arhitektuurilt , seadmete koosseisult ja programsetelt võimalustelt märksa lähemal kaasaegseile personaalarvuteile kui mis tahes teine tollane arvuti . Kuid Altol oli väga oluline puudus , mis takistas tal saamast sama populaarseks kui Altairid - selleks oli personaalarvutile lubamatult kõrge hind ( <arv> <arv> kuni <arv> <arv> dollarit ) . Ilmselt peitus kõrges hinnas üks põhjusi , miks Alto ei jõudnud kunagi tootmisse . Esimeste personaalarvutite hulgast ei tohi välja jätta <arv>. aastal firmas Scelbi Computer Consulting , Inc. Nat Wadsworthi ja Robert Findley poolt välja töötatud arvutit Scelbi-<arv>H . Arvutis kasutati Inteli mikroprotsessorit <arv> , mida toetas <arv>kilobaidine mälu . Scelbi-<arv>H toodeti nii kokkupandava komplektina ( hinnaga <arv> dollarit ) kui ka valmisarvutina . Kuigi aasta hiljem ilmus isegi Scelbi täiustatud variant Scelbi-<arv>B , lõpetas firma õige pea arvutite valmistamise . Mis puutub juba nimetatud arvutisse Mark-<arv> , siis erinevalt mitmetest teistest varasematest personaalarvuteist saavutas J. Tituse arvuti kiiresti suure populaarsuse arvutite iseehitajate seas . On avaldatud arvamust , et arvutihuviliste poolt ehitatud Mark-<arv>te arv võib ulatuda kuni sajani . Mark-<arv> menust annab tunnistust fakt , et neil aastatel tekkisid isegi vastavad klubid , kuhu koondusid arvutihuvilised , kes soovisid ise endale arvutit ( personaalarvutit ) ehitada . Varsti pärast Mark-<arv> kirjelduse avaldamist Radio-Electronics Magazine'is , alustas isegi üks firma spetsiaalselt Mark-<arv> tarvis trükiplaatide komplekti valmistamist ja müüki . Eriti populaarne oli trükiplaatide komplekt väheste kogemustega arvutiehitajate seas . Kõrvuti Intel-põhiste protsessoritega töötati välja arvutikomplekte , milles kasutati Motorola mikroprotsessorit M<arv> . Neist tuntuimaks on vast Mike Wise poolt firmas Sphere Corporation loodud Sphere <arv> . Arvutikomplekt sisaldas <arv>kilobaidist muutmälu ja maksis <arv> dollarit . <arv>. aastal valmis firmas Southwest Technical Products ( SWTPC ) arvutikomplekt SWTPC <arv> . Selle arvuti omapäraks oli püsimällu talletatud laadurprogrammi ja spetsiaalse minioperatsioonisüsteemi olemasolu . LÕPETUSEKS Kui hinnata Altairi kohta personaalarvutite arenguloos tänapäevasest vaatevinklist , siis võib nentida , et : <arv>. Kuigi Altair <arv> ei olnud küll esimene personaalarvuti , oli ta siiski esimeseks majanduslikult õnnestunud arvutiks , mis pani aluse personaalarvutite tööstuslikule tootmisele . Altairi näol õnnestus Edward Robertsil luua piisavalt lihtne , odav ja universaalne arvutimudel , mille ehitamine ja kasutamine oli jõukohane isegi väheste oskustega huvilistele . Teisalt innustas MITSi ootamatu majanduslik edukus aktiivsemalt tegutsema teisi firmasid ning sisenema uude tulutoovasse arvutituru segmenti . Altairid käivitasid möödunud sajandi seitsmekümnendatel aastatel permanentse “ personaalarvutite revolutsiooni ” , mille vilju naudime tänini . <arv>. Altair-arvutite edukusele aitas oluliselt kaasa see , et asudes uue arvuti väljatöötamisele , võttis Edward Roberts eesmärgiks luua mitte mingi järjekordne “ mänguasi ” , vaid korralikult töötav täisväärtuslik arvuti , mis suudaks täita samu funktsioone kui tolleaegsed miniarvutid . Lähtudes püstitatud eesmärgist , ehitati Altair üles avatud arhitektuuri printsiibil , tagades seeläbi arvuti edasise laiendatavuse ja struktuurse arendatavuse . Põhimõttelise tähtsusega oli efektiivse ja paindliku süsteemisiini S-<arv> rakendamine . <arv>. On oluline , et suhtlusel arvutiga loobuti ebamugavast masinakeelest ning hakati kasutama kergesti õpitavat ja loomulikule keelele lähedasemat programmeerimiskeelt Basic . Kuna enamiku personaalarvutite kasutajate oskused ja teadmised programmeerimises olid tollal tagasihoidlikud , siis lõi see soodsa pinnase arvutitehnika uue haru - tarkvaratööstuse tekkeks . Järgnevail aastail kujunes tarkvaratööstusest arvutitehnika kõige kiiremini arenev ja tulutoovaim haru . Seitsmekümnendate aastate lõpul kaotasid universaalarvutid palju oma müstilisest imidžist . Tänu personaalarvuteile muutusid arvutid inimeste igapäevaelu lahutamatuteks kaaslasteks . Hinnates Altair <arv> kohta arvutiajaloos , on Bill Gates tabavalt märkinud , et “ ... Altair <arv> oli tänapäevase personaalarvuti esiisa ” ( <arv> , lk.<arv> ) .  Mihkel Tagel , TTÜ arvuti- ja süsteemitehnika magistrant SISSEJUHATUS Väliprogrammeeritavate loogikamaatriksite ( FPGA ) kasutusala on viimaste aastate jooksul tublisti kasvanud . Suurimad FPGAde tootjad , nagu Xilinx ja Altera , pakuvad võimaluse osta täislahenduse , n-ö arenduskomplekti , mis sisaldab prototüüpimisplatvormi kõrval ka kogu vajaminevat arendustarkvara ( kiibi projekteerimisest kuni binaarse laademooduli loomiseni välja ) . Prototüüpimisplatvorm sisaldab tavaliselt kõrgjõudlusega FPGAd , millega on kaasas kas pehme või kõva protsessortuum . Realisatsioonide jaoks on kasutusel mõisted “ süsteem programmeeritaval kiibil ” ( System on a Programmable Chip - SoPC ) või selle sünonüüm “ süsteem ümberprogrammeeritaval kiibil ” ( System on a Reprogrammable Chip - SoRP ) . FPGAde dünaamiline ümberkonfigureerimine on muutnud nende kasutusala veelgi paindlikumaks ja atraktiivsemaks . Dünaamiline ümberkonfigureerimine võimaldab suurema skeemi , mis tervikuna FPGAsse ei mahu , tükeldada järjestikuliselt täidetavateks sammudeks . Sammude vahepeal toimub signaalide puhverdamine ning FPGA ümberkonfigureerimine . Disainerid saavad kasutada dünaamilist ressursside jaotamist ning kiirendada sünteesiprotsessi ( sest sünteesida pole vaja tervet skeemi , vaid muudatusi ) . Artikli põhieesmärk on tutvustada konkureerivate tootjate Xilinxi ja Altera pehmet protsessortuuma , mis on arenduskomplektide üheks huvipakkuvamaks osaks . Alustuseks toon välja lühidalt ASIC- ( rakendusspetsiifilise kiibi ) ja FPGA-tehnoloogia erinevused , et anda aimu FPGA ja protsessortuumade vajalikkusest . ASIC versus FPGA Valdav enamik masstoodangu jaoks sobivad kiipe , sh protsessorid , valmistatakse tänapäeval endiselt ASIC-tehnoloogias . ASICute kasuks räägib FPGAdega võrreldes suurem töökiirus , väiksem kiibi pindala , madalam voolutarve ning odavam tooteühiku hind masstootmisel . Samas süsteemide keerukamaks muutumisel ( suurem pindala , jõudlus ) tõusevad oluliselt ASICute projekteerimiskulud ning -aeg . Need kaks olulist parameetrit on olnud tõukeks ümberkonfigureeritava loogika osatähtsuse tõusmisel . FPGA ei ole mitte ainult prototüüpimis- , vaid ka otstarbekas realiseerimisplatvorm , lüües ASICut lühema projekteerimisajaga ning seeriatoodangus madalama lõpphinnaga , olles eriti sobiv sardsüsteemide valmistamiseks . Tüüpiline sardsüsteem sisaldab ühte või mitut protsessortuuma , kiibisisest mälu , perifeerseadmeid ning süsteemisiini ja seob kõik need seadmed tervikuks . Sardsüsteemide projekteerimiseks ning prototüüpimiseks sobivate toodete valmistajatena tuntakse eelkõige Xilinxit ja Alterat . FPGA-de kasutamine toimub kaasajal platvormdisaini paradigmat järgides . See tähendab virtuaalse liidesega intellektuaalomand-plokkide ( IP ) kasutamist , mis teeb kiibi projekteerimise “ löö-ja-laula ” ( PnP - Plug in and Play ) lähenemise sarnaseks . IP on kellegi looming - looja omab intellektuaalset omandit ( Intellectual Property - IP ) . Kõik IP-plokid omavad standardiseeritud liidest ning nende kiibile integreerimine tähendab ainult IP-vaheliste ühenduste trasseerimist . IPd võivad olla signaaliprotsessorid , mälud jms. Viimastel aastatel on FPGA tootjad täiendanud oma tooteid ühe või rohkema sisseehitatud protsessortuumaga , riistvaraliste kiirete korrutitega ( oluline signaaliprotsessoritele ) , faasihõivesüsteemiga ( PLL ) , programmeeritava sisend/väljund-süsteemiga ning FPGA dünaamilise ümberkonfigureerimisega . FPGAde jõudluse tõus ja lisakomponendid on muutnud nende kasutusala veelgi laiemaks ja paindlikumaks . PEHMED PROTSESSORTUUMAD Pehme protsessortuum on parametriseeritav IP-komponent , mis on realiseeritud sünteesitaval kujul riistvara kirjelduskeeles või ahelanimistu ( netlist ) formaadis . Milleks kasutada pehmeid protsessortuumi ? Peaaegu iga rakenduse võib realiseerida rakendus- spetsiifilise kiibina ( ASIC ) . Valmis ASICu funktsionaalsuse muutmine on võimatu , kui selle integreeritud komponendina ei kasutata muudetava programmimäluga protsessortuuma või -tuumasid . Protsessortuumade kasutamise eelised : kui osa süsteemi funktsionaalsusest on tarkvaraline , lihtsustub süsteemi arendamine ja lühenevad projekteerimisajad ; tarkvara muudatuste , versiooniuuenduste sisseviimine on muudetava programmimälu korral lihtne . Pehme protsessortuum lisab veel ühe eelise : parametriseeritavus - vastavalt süsteemi ( rakenduse ) iseloomule saab seadme projekteerimisel paika panna sobivaima protsessortuuma seadistuse ( vastavalt kiibi pindala piirangutele , jõudluse ja funktsionaalsuse nõuetele ) . MICROBLAZE 'I PEHME PROTSESSORTUUM MicroBlaze'i <arv>bitine pehme protsessortuum on standardne RISC-käsustikuga protsessor . See sisaldab kolmeastmelist konveierit eraldi andme- ja käsusiiniga ( Harvardi arhitektuur ) , toetab nii kiibisisest kui ka kiibivälist mälu . Protsessori lisajõudlus saavutatakse Virtex-II FPGA kiirete riistvaraliste korrutite kasutamisega . Omadused : <arv> <arv>bitist registrit , kasutaja poolt muudetav käsu- ja andmevahemälu suurus , <arv> MB/s otseliides ( FSL ) kasutajaloogikaga , <arv> sisend/väljundit FSLi , kiire riistvaraline korrutamine ja jagamine , trummelnihuti , väike pindalanõudlus FPGAl ( ~<arv> loogikarakku Virtex-II FPGAl ) , ühilduvus Xilinx Virtex ja Spartan FPGA peredega , jõudlus - ~<arv> Dhrystone MIPS <arv> MicroBlaze'i protsessori kohta . ALTERA NIOS E PROTSESSORTUUM Altera Nios II protsessoripere koosneb kolmest protsessortuumast : Nios II/f - f tähistab inglise keeles kiiret ( fast ) ehk tegu on kiirusele optimeeritud tuumaga . Omab seetõttu ka kõige rohkem seadistamisvõimalusi . Nios II/s - tegu on standardse Nios II protsessortuumaga . Nios II/e - “ economy ” klassi kuuluv tuum . Väike pindalanõudlus , limiteeritud käsustik . Käsu ja andmevahemälu puudub . Nios II/s tuuma omadused : muudetav käsuvahemälu suurus , kuni <arv>GB väline aadressiruum , <arv>-astmeline konveier , staatiline hargnemiste ennustamine , kuni <arv> “ kasutaja ” käsku , jõudlus ~<arv> Dhrystone MIPSi , pindala ~<arv> loogikaelementi , ühilduv teiste Altera FPGAdega , JTAG silumismoodul . XILINX MICROBLAZE 'I ARENDUSKOMPLEKT ( MDK ) Xilinx MicroBlaze'i arenduskomplekt sisaldab arendusplaati Xilinx Virtex-II FPGAga ning MicroBlaze'i arendusvahendeid . MicroBlaze'i arendusvahendite komplekt ( MDK ) on kärbitud versioon Xilinxi täisversioonist EDKst ( Embedded Development Kit ) . MDK sisaldab EDK vanemat versiooni ning väiksemat arvu perifeerseadmeid , mida annab MDK abil kasutada . MDK sisaldab tarkvara loomiseks Xilinx-tarkvara IDE ja GNU tarkvaralisi vahendeid C lähtekoodi kompileerimiseks - mb-gcc programm , mis kutsub välja kompilaatori , mb-as assembleri , mb-ld linkuri/laaduri . Riistvara sünteesiks on kasutada Xilinx IDE vahendeid . Joonisel <arv> on esitatud tüüpiline MDK arendusvoog terve MicroBlaze-süsteemi loomiseks . MicroBlaze-süsteem koosneb järgmistest komponentidest : MicroBlaze'i pehme protsessortuum , kiibisisene RAM ( On-chip block RAM ) , siiniliidestus , OPB perifeerseadmed ( On-Chip Peripheral Bus peripherals ) . OPB on MicroBlaze-süsteemi põhisiiniks , kasutades IBMi poolt välja töötatud CoreConnect standardit . MicroBlaze'i protsessortuum on master perifeerseade OPB siinil . MicroBlaze-süsteemi projekteerimisvoo põhisammud : <arv>. Defineerida MicroBlaze'i riist- ja tarkvarasüsteem , kasutades MHS ( Microprocessor Hardware Specificatio n ) ja MSS ( Microprocessor Software Specification ) konfiguratsioonifaile . Riistvarasüsteemi kirjeldusfail sisaldab infot järgmiste riistvara komponentide kohta : kasutatavad perifeerseadmed , protsessortuum - kõva/pehme protsessortuuma valik , ühte kuuest MicroBlaze'i siini konfiguratsioonist , üldine süsteemiliidestus , aadressruum .  Joonis <arv>. Xilinx MicroBlaze-süsteemi projekteerimisvoog Toimub pehme protsessortuuma parametriseerimine . <arv>. Tarkvaravoo esimese sammu jooksul loeb teegigeneraator riistvara konfiguratsiooni ja loob vastavad C teegid ja draiverid . Pärast seda toimub tarkvara kodeerimine ning lähtekoodi kompileerimine mb-gcc kompilaatoriga . Võimalus on kirjutada programm ka MicroBlaze-assembleris . <arv>. Pärast riistvarasüsteemi konfiguratsioonifaili loomist ning tarkvara kompileerimist toimub riistvara ja tarkvara disainivoogude ühendamine . Platvormi generaator ( Platform Generator ) kasutab MHS konfiguratsioonifaili , et luua järgnevad riistvarafailid MicroBlaze-süsteemi jaoks : IP ja MicroBlaze'i ahelanimistu , BlockRAM mälude konfiguratsioon ( programm ) , sünteesifailid , HDL simulatsioonifailid . Platvormi generaator seob tarkvara-riistvara süsteemi , luues ühetasemelise ahelanimistu , või kasutades VHDL wrapper faile hierarhilise ahelanimistu . <arv>. Viimasteks sammudeks on binaarse laademooduli loomine Xilinx FPGA IDE vahenditega ja FPGA konfigureerimine . Xilinx FPGA IDE on eraldi keskkond , mis ei ole integreeritud MDK või EDKga . Silumiseks on kasutada GNU tarkvaraline silur . See võimaldab siluda nii riistvara kui ka käitatavat tarkvara . Simuleerimine toimub ModelTech'i ModelSim-simulaatoriga . ALTERA NIOS II ARENDUSKOMPLEKT Altera Nios II arenduskomplekt sisaldab Stratix EP<arv>S<arv>F<arv> FPGAd , Nios II pehmet protsessortuuma , Nios II integreeritud arenduskeskkonda ning Altera Quartus II disainitarkvara . Altera Quartus II on täislahendus SoPC disainiks . See sisaldab vajaminevaid arendusvahendeid skeemi tükeldamisest kuni binaarse laademooduli loomiseni välja . MicroBlaze'i arenduskeskkonnaga on võrreldav Nios II integreeritud arenduskeskkond , mis on mõeldud rakendustarkvara arenduseks , kasutades Niose pehmet protsessortuuma ja Niose arenduskomplekti . Joonisel <arv> on näha Niose protsessorsüsteemi riist- ja tarkvara arendusvoog . Sarnaselt MicroBlaze-protsessorsüsteemi arendusvooga tuleb Niose puhul läbida kindlad projekteerimissammud : <arv> ) eeldisain ( jõudlusanalüüs ) - süsteemi läbilaskevõime , arvutuslik jõudlus ; <arv> ) pärast eeldisaini võivad tarkvaraarendajad alustada C/C++ funktsioonide kirjutamist ning riistvaradisainerid Niose riistvarasüsteemi kirjeldamist , kasutades SoPC Builderit ; <arv> ) SoPC Builder loob n-ö tarkvararaamistiku SDK ( Software Development Kit ) , mis on aluseks tarkvaraarenduse voole ; <arv> ) SDK alusel saab alustada tarkvara kirjutamist , mis suhtleb riistvara komponentidega . SDK defineerib programmisti mudeli , andmetüübid , andmestruktuurid ning funktsioonid standardperifeerseadmetega ( UART , PIO , DMA kontroller ) suhtlemiseks ; <arv> ) GNUPro tööriistade abil toimub C/C++ funktsioonide ja SDK lähtekoodi kompileerimine ning linkimine ; <arv> ) pärast Niose protsessortuuma prototüüpimist Niose arendusplaadil saab sellel prototüüpida riist- ja tarkvara koostööd ; <arv> ) vajadusel saab sisse viia muudatused ning uuesti prototüüpida .  Joonis <arv>. Niose protsessorsüsteemi riist- ja tarkvara arendusvoog NIOS E JA MICROBLAZE 'I PROTSESSORTUUMA VÕRDLUS Nii MicroBlaze kui ka Nios on <arv>bitised RISC-käsustikuga protsessortuumad . Mõlemal on <arv>bitine andmesiin ja <arv> üldkasutatavat registrit . Kasutaja saab muuta käsu- ja andmevahemälu suurusi . MicroBlaze'i protsessortuum sisaldab <arv>-astmelist , Nios sõltuvalt tuumast <arv>-<arv>-astmelist konveierit . Jõudluse ja pindala suhe on enam-vähem võrdne ( vt tabel <arv> ) . Tabel <arv> MicroBlaze'i ja Niose pehmete protsessortuumade parameetrid  MicroBlaze Nios Pindala FPGA-l ~<arv> LUT-i , <arv> Virtex-II CLB-d ~<arv> loogikaelementi Jõudlus <arv> Dhrystone MIPS <arv> Dhrystone MIPS Käsu konveier <arv>-astmeline <arv>-<arv>-astmeline Kasutajakäsud - kuni <arv> Muudetav käsu - ja andmevahemälu suurus jah jah JTAG silumismoodul jah jah R iistvaralised korrutid jah jah Kõik MicroBlaze'i protsessorkäsud täidetakse <arv>taktiga , välja arvatud load/store , korrutamis- ja hargnemiskäsud . Niose puhul on võimalik load/store-käskude täitmine <arv>taktiga , kasutades spetsiaalmälu . Silumiseks on mõlemal protsessortuumal olemas JTAG liides ning vastav PC rakendustarkvara . Niose arhitektuuris on silumiseks , lisaks programmi sammhaaval käitusele , võimalus seada ka riistvaralisi katkestuspunkte , analüüsida registrite ja mälu sisu ning koguda reaalajas programmi käitusandmeid . Erinevalt MicroBlaze'i protsessortuumast saab Niose protsessortuumale lisada ka “ kasutaja ” käske ( operatsioone ) . Vastav loogika on otse ühendatud ALUga - “ kasutaja ” -käskude täitmine toimub samamoodi kui tavakäskude puhul . Osas Niose protsessortuumades on võimalus emuleerida korrutamise ja jagamise käske tarkvaras . See vähendab vajaminevat FPGA pindala . ALTERA NIOS E JA XILINX MICROBLAZE 'I ARENDUSKOMPLEKTI DE VÕRDLUS Niose arenduskomplekt sisaldab graafilisi arendusvahendeid terve Niose protsessorsüsteemi loomiseks . MicroBlaze'i arenduskomplekti puhul tuleb riistvarasüsteemi kirjeldusfail luua tekstifailina käsitsi . Vastav graafiline vahend on Xilinxi täisversioonis EDK . IBM CoreConnect siini kasutamine muudab MicroBlaze'i protsessorsüsteemi vähem paindlikumaks , sest siinikonfiguratsioon on fikseeritud ( valitakse protsessorsüsteemi loomise esimeses etapis ) . Materjalide kättesaadavus on Altera Niose arenduskomplekti puhul tunduvalt parem kui Xilinx MicroBlaze'i arenduskomplekti puhul . Näiteks Xilinxi veebileht ei anna mingit infot , millise arendusvahendite komplektiga Virtex-II arenduskomplekt saadetakse ( MDK või EDK ) . MicroBlaze'i protsessortuuma kohta leidub vähe avalikult kättesaadavat infot . Niose protsessortuuma kohta on käsustiku , programmistimudeli jne dokumentatsioon allalaaditav otse Altera koduleheküljelt . KOKKUVÕTE Altera ja Xilinxi arenduskomplektid on piisavalt võimsad ja paindlikud nii ASICute arendamisel prototüüpimisplatvormina kui ka sardsüsteemi loomisel . Altera Niose ja Xilinx MicroBlaze'i arenduskomplektid on võrreldavad tooted . Altera Niose kasuks räägib parem tehnilise info kättesaadavus ning integreeritum arenduskeskkond . Protsessortuumadega prototüüpimisplatvormide lülitamine riist- ja tarkvara koosdisaini või kiipsüsteemi ainetesse annab tudengitele võimaluse õpitud meetodeid ka praktikas rakendada . MicroBlaze'i või Niose arenduskomplekt toetab erineva keerukusega ja sisult erinevate koosdisaini ülesannete lahendamist . Tarkvaraarenduse meetodite sissetoomine rõõmustab kindlasti tudengeid , kes pole VHDL riistvarakirjelduskeele ja riistvaradisainiga varem süvendatult kokku puutunud .  Indrek Kruusa , Mainori Kõrgkooli kolmanda kursuse infotehnoloogia üliõpilane SISSEJUHATUS Juba pikemat aega on kõigis levinumates protsessorites kasutusel spetsiaalne nn multimeediakäsustik . Nagu nimigi ütleb , on need lisakäsud mõeldud just multimeedia töötlemiseks või suvaliste spetsiaalsete arvutusmahukate ülesannete lahendamiseks . Tõuke sellise käsustiku kasutuselevõtuks andis fakt , et järjest enam muutus tavalise lauaarvuti põhikoormuseks just graafika , video ja muusika töötlemine ning oli selge , et olemasolevate üldotstarbeliste protsessorite arhitektuur ei pakkunud selleks efektiivset moodust . Võrdlusmomendiks olid siin kindlasti juba ammu turul eksisteerinud signaaliprotsessorid , mis olid ja on spetsiaalselt mõeldud digitaalsignaali töötlemiseks . Need sisaldavad teatud mikroarhitektuuri laiendusi [ <arv> ] ning üheks selliseks on võime teostada mingit kindlat tehet mitme sõltumatu operandipaariga ühe käsutakti jooksul ehk tegelikult tehakse mitut ühesugust tehet paralleelselt . See muudab ka programmeerimistehnika komplitseeritumaks ning vastavad programmid ühe kindla platvormiga rohkem seotuks , kuid arvutusvõimsus kasvab kordades ning efektiivsus avaldub enim just digitaliseeritud meedia töötlemisel . Sellise kontseptsiooni - üks käsk , mitu tehet - valis ka Intel , kes esimesena töötas välja ja lisas oma Pentium-protsessoritele MMX-käsud . Nende abil on võimalik pakkida mitu täisarvu ühte protsessori registrisse ning teostada seejärel ühe käsuga tehe - näiteks liitmine - teises registris sarnaselt pakitud arvudega ning tulemuseks on mitu resultaati üheaegselt . Tulemus tuleb veel loomulikult spetsiaalsete käskudega registrist lahti pakkida , kuid vaatamata vajalikele lisatoimingutele , võib saavutatav jõudluse kasv olla kuni neljakordne . Protsessoritootjad on usinalt taolisi käsustikke kasutusele võtnud ning edasi arendanud ( Inteli SSE , SSE<arv> , SSE<arv> ) , kuid nende abil tavaprogrammide optimeerimine on läinud visalt . Põhjuseks on siin seotus protsessoriga : näiteks Pentium <arv> protessori jaoks optimeeritud programm ei pruugi enam töötada Pentium <arv>-ga , kuid viimaseid on veel väga palju kasutuses . Samas võib selguda , et olemasolevate programmide andmestruktuurid ning programmi ülesehitus on niivõrd ebasobivad uute käskude rakendamiseks , et targem oleks uus programm kirjutada , kuid see võib olla majanduslikult ebasobiv . Teisest küljest võib öelda , et tegemist on siiski uue tehnoloogiaga ning selle rakendamine on esialgu kulukas ja aeganõudev , sest programmeerijad vajavad väljaõpet ning uusi töövahendeid . <arv>. MULTIMEEDIAKÄSUSTIKUD <arv>.<arv>. MMX-LAIENDUS MMX on esimene üldotstarbelisele protsessorile lisatud spetsiaalsete käskude kogumik , mis on mõeldud multimeedia efektiivsemaks töötlemiseks . Uuenduse turuletoojaks oli loomulikult Intel , kes pakkus MMX-laiendusega Pentium-protsessoreid ning seda reklaamiti kui revolutsioonilist pööret . MMX-laiendus tõi kaasa järgmised uuendused : kaheksa uut virtuaalset <arv>-bitist MMX-registrit , mis baseeruvad ujukomaprotsessori ( x<arv> FPU ) registritel , kolm uut <arv>-bitist MMX-andmetüüpi , <arv> uut spetsiaalset käsku nende registrite ja andmetüüpidega opereerimiseks : andmete kopeerimine , aritmeetikafunktsioonid , võrdlemine , andmetüüpide teisendamine , loogikaoperatsioonid , MMX-andmetüüpide loomise ( pakkimise ) ja lahtipakkimise käsud .  Joonis <arv>. MMX <arv>-bitised pakitud andmetüübid MMX-käsud hõlmavad baasfunktsioone , mida multimeedia töötlemisel kõige tihedamini kasutatakse . Põhinemine ainult täisarvarvutustel on samuti seletatav reaalse olukorraga - pildi , video ja muusika digitaliseerimisel on tulemus peaaegu alati esitatud täisarvude abil . Just selliste täisarvuliste andmemassiivide töötlemisel tuleb esile MMX-laienduse põhiomadus - võimalus pakkida näiteks kaheksa pikseli <arv>-bitist heledusinfot ühte registrisse ning ühe liitmistehtega muuta kõigi kaheksa väärtust üheaegselt !  Joonis <arv>. MMX liitmistehe kahte registrisse pakitud andmetega Single Instruction Multiple Data ( SIMD ) - üks käsk , mitu tehet - ongi MMXi põhiidee ning just sellepärast nimetatakse seda laiendust ka DSP-laienduseks või DSP-funktsiooniks , sest neis on kasutusel just samasugune võte arvutusvõimsuse tõstmiseks . MMX-laiendus on ligipääsetav kõigis IA-<arv> arhitektuuri töörežiimides ( protected mode , real address mode , virtual <arv> ) ning sellega ei lisandunud ühtegi uut töörežiimi . Inteli soov oli ka säilitada maksimaalne ühilduvus operatsioonisüsteemidega ning see saavutati , kuid paratamatult pidi see tähendama mingi olemasoleva protsessoriressursi maskeerimist MMX-laienduse osaks , mida tuli edaspidi jagada kahe funktsionaalsuse vahel . Intel valis külg-külje kõrvale pakitud andmetega opereerimiseks ujukomaprotsessori “ pikad ” ujukomaoperatsioonideks mõeldud registrid . Kuigi Intel leidis hea lahenduse , kuidas kõige valutumalt protsessori arhitektuuri uute võimalustega laiendada , kaasnesid sellega mitmed ja väga olulised takistused , mis piiravad MMX-käsustiku kasutamist . Intel defineeris MMX- laienduse kasutamise järgmiselt : kasututatakse uusi MMX-registreid mm<arv>-mm<arv> , mis tegelikkuses on ujukomaprotsessori registrid ; kuna toimub taoline ressursi ( ka staatuse ning kontrollregistrite ) jagamine , siis ei tohi kasutada MMX-käske ja ujukomaprotsessori käske ( ehk teisisõnu tehteid ujukoma- arvudega ) programmi koodis vahetult järjestikku - tekivad ennustamatud vead ning olukorrad ehk teisisõnu - programm võib kinni joosta ; MMX-laienduse hulka kuulub ka spetsiaalne assembleri käsk EMMS , mis tuleb alati käivitada pärast MMX-koodi täitmist - see seab ujukomaprotsessori jälle normaalsesse töökorda . MMX-koodi kasutamise esimeseks märgatavaks kitsenduseks oli fakt , et pärast selle kasutamist võib ujukomaprotsessori seisundi taastamine võtta aega kuni <arv> takti [ <arv> , ptk. <arv>.<arv>.<arv> ] ( NB ! olukord on teine AMD Athlon ja P<arv> puhul ) . Seega , kui selgub , et mingi koodi asendamisel MMX-käskudega võidetakse täitmiskiiruses <arv> takti ja kui pärast seda tuleb arv pkorrutada <arv>,<arv> -ga , siis suundumine MMX® ujukomaarvutusele nullib ära kogu saavutatud ajavõidu . Kõigi kaasaegsete MMX-laiendust toetavate protsessorite programmeerimisel tuleb lähtuda järgmistest soovitustest [ <arv> , vol. <arv> ] : kui ujukomaarvutustele järgneb MMX-kood , siis : ujukomaprotsessori staatuse , andmete- ja kontrollregistrite sisu , mida võidakse kasutada peale MMX-koodi kasutamist , tuleb eelnevalt salvestada FSAVE- või FXSAVE-käskudega ; kui MMX koodile järgnevad ujukomaarvutused , siis : salvestada FSAVE- või FXSAVE-käskudega MMX-registrite sisu ( kui seda läheb edaspidi vaja ) ; käivitada EMMS-käsk , mis puhastab ujukomaprotsessori MMX staatusest . Järgmisena selgitatakse joondatud andmete ( aligned data ) [ <arv> , vol. <arv> ] mõistet - selle olulisust on raske üle hinnata : suvalise protsessori SIMD-laienduse kasutamise puhul on andmete joondamine kriitilise tähtsusega . <arv>.<arv>.<arv>. Andmete joondamine IA-<arv> arhitektuuriga protsessorid adresseerivad füüsilist mälu kui järjestikku asetsevaid baite [ <arv> , vol. <arv> ] , s.t igal üksikul baidil on oma aadress . Kuna protsessori arhitektuur on tegelikkuses vähemalt <arv>-bitine , siis kõik andmete lugemised toimuvad samuti vähemalt <arv> biti kaupa ( võib öelda , et selline ongi mälupesade tegelik suurus ) . Sellest asjaolust johtuvalt on mõistlik paigutada andmed mälus nii , et igas mälulugemis oleks võimalikult palju meid huvitavat infot . Paigutus mälus sõltub aadressist ning selliste sobilike mäluaadresside arvutamist andmete jaoks nimetatakse andmete joondamiseks ( ingl. data alignment ) .  Joonis <arv>. Info paiknemine <arv>-bitistes mälupesades Joondamata andmete puhul on üsna tõenäoline , et protsessor peab nende kättesaamiseks tegema ( see toimub kasutajale nähtamatult ) mitu mälust lugemise operatsiooni - andmed on jaotatud mitme füüsilise mälupesa vahel . Kui nüüd selliseid andmeid on palju ning neid tarvitatakse tihti , siis on selge , et tänu mälu kallal tehtavale topelttööle on nii kirjutatud või kompileeritud programmi jõudlus kesine . Tänapäeva protsessorites on kasutusel andmetüübid , mille pikkus on kuni <arv> bitti ning on iseenesestmõistetav , et nende puhul on andmete paigutamine mälus veel tähtsam . Kõrgkeelte kasutamisel peab selle töö ära tegema tavaliselt kompilaator kas automaatselt või eelnevalt määratud spetsiaalsete kompileerimistingimuste järgi . Seda tuleb alati kompilaatori dokumentatsioonist kontrollida . On olemas ka mooduseid , kuidas kõrgkeeles saab defineerida sobilikku andmete joondamist [ <arv> , ptk <arv>.<arv>.<arv> ] . Muutuja aadressi käsitsi määramisel on soovitatav parima tulemuse saavutamiseks järgida sellist reeglit : muutuja aadress mälus peab olema paarisarvuline ning täpselt jaguma tema andmetüübi suurusega - sellisel juhul tunnistab protsessor andmed joondatuks ning need saadakse mälust kätte minimaalse hulga lugemisoperatsioonidega . Niisiis , et erinevad andmetüübid oleksid joondatud , peavad need asuma paarisarvulistel aadressidel ning : sõna ( <arv> bitti , C-keeles short int ) aadress peab täpselt jaguma <arv>-ga ( olema lihtsalt paarisarvuline ) . Kui seda tüüpi muutuja asub paarituarvulisel aadressil , kuid jääb ühe mälupesa piiridesse , siis loetakse see joondatuks ; topeltsõna ( <arv>bitti , C-keeles int ) aadress peab täpselt jaguma <arv>-ga ; neliksõna ( <arv>bitti , C-keeles long long int ) aadress peab täpselt jaguma <arv>-ga ; topelt neliksõna ( <arv>bitti , C-keeles __m<arv> ) aadress peab täpselt jaguma <arv>-ga . <arv>.<arv>.<arv>. Andmete struktuurid Iga protsessoriga käivad peaaegu alati kaasas ka valmistajafirma poolt antud juhised efektiivse programmikoodi kirjutamise kohta . Nende abil on võimalik tagada protsessori maksimaalne jõudlus programmi täitmisel . Seoses SIMD-laiendustega tõusis eriti teravalt päevakorda nn mälusõbralik kood . Järgnevalt on seda selgitatud C-keelse näite põhjal [ <arv> , ptk <arv>.<arv>.<arv> ] . Punktide massiivi , mis sisaldab asukoha infot <arv>D objekti kohta , saab säilitada mitmeti . Klassikaline moodus selleks on järgmine : /** Defineeritakse ühe punkti struktuur , mis võib sisaldada lihtsalt x , y , z koordinaatide infot . Tähelepanu tuleb pöörata muutujale junk . See kindlustab , et struktuuri tervikuna on võimalik mälus joondada , sest tema suurus ( <arv> asemel <arv> baiti ) ning arvutatav aadress on siis <arv>-ga jaguv **/ typedef struct ] short x , y , z ; short junk ; } Point ; /** Seejärel luuakse taolistest punktidest N-elemendiline massiiv , mida saab kasutada mingi <arv>D objekti asukoha kirjeldamiseks . Sellist konstruktsiooni nimetatakse Array of Structures ( AoS ) **/ Point pt[N ] ; /** Ütleme , et meil on massiivis mingi objekti andmed ning nüüd on vaja terve objekt nihutada kolme pikseli võrra ekraanil ülessepoole . Selleks peame iga punkti y koordinaati kasvatama <arv> võrra **/ for ( i=<arv> ; i &lt; N ; i++ ) pt[i ] . y += <arv> ; Tulenevalt sellest , et punktide Y väärtused ei asu mälus järjestikku ( vaid parimal juhul x , y , z , x , y , z ... ) ning protsessor küsib alati kõigepealt vahemälust vajalikke andmeid , tekib suure tõenäosusega vahemälu viga ning edasi küsitakse andmeid põhimälust . Kuna koordinaadid on defineeritud lühikese täisarvtüüpi muutujatena ( <arv>bitti ) , siis tegelikult võib neid ühte <arv>-bitisesse mälupessa paigutada topelt , aga see on praeguses situatsioonis vähetõenäoline ning igat väärtust tuleb mälust lugeda eraldi . Nagu näha , ei ole me eriti “ mälusõbralikud ” ning programmi kiirus kannatab selle all tugevasti . Et olukorda parandada , tuleb andmete säilitamiseks kasutada teistsugust moodust . /** Luuakse punkti struktuur , milles iga koordinaadi jaoks on eraldi massiiv . Sellist konstruktsiooni nimetatakse Structure of Arrays ( SoA ) **/ typedef struct ] short ptx[N ] , short pty[N ] , short ptz[N ] ; } Points ; /** Aktiveerime struktuuri **/ Points pt ; /** Suurendame kõigi punktide y-koordinaati <arv> võrra **/ for ( i=<arv> ; i &lt; N ; i++ ) pt.pty[i ] += <arv> ; Nüüd võime suure tõenäosusega oletada , et iga koordinaadi massiiv asub mälus järjestikku , mälupöörduste arv on minimaalne ning vahemälu kasutamine on maksimaalselt efektiivne . <arv>. <arv>. <arv>DNow ! laiendus See oli esimene <arv> × <arv> arhitektuuri laiendus , mis lubas kasutada ujukoma SIMD operatsioone . Tähelepanuväärne on see , et selle loojaks ei olnud mitte Intel , vaid tema rivaal Advanced Micro Devices . AMD litsentseeris Inteli käest MMX-tehnoloogia ning laiendas seda omaltpoolt ujukomakäskudega , andes sellele koondnimetuse <arv>DNow ! Lõpptulemus nägi lühidalt välja selline : loodi <arv> uut SIMD-ujukomakäsku ; MMX-reþiimis olid nüüd saadaval ka ujukoma operatsioonid - MMX-laienduse rakendamise kriteeriumid olid tänu sellele tunduvalt leebemad kui Inteli protsessorite puhul ; lisati käsud vahemälu tarkvaraliseks kontrollimiseks ning parandati ujukomaprotsessori ja MMX-vaheliste lülituste mehhanisme - ühest käsustikust teise siirdumine ei võtnud nii kaua aega kui Intelil ning see parandas tunduvalt võimalusi SIMD-tehete kasutamiseks ; <arv>biti suurusesse registrisse mahtus kuni <arv> tavatäpsusega ujukomaarvu ; AMD täiustatud arhitektuur võimaldas täita kuni <arv> MMX/<arv>DNow ! operatsiooni ühe käsutsükli jooksul , mis andis arvutusvõimsuseks kuni <arv> ujukomatehet takti jooksul [ <arv> , lk.<arv> ] . Originaal-Inteli MMX piirdus <arv> tehtega . Kuigi <arv>DNow ! oli tähelepanuväärne areng protsessorite arhitektuuris , hakkab selle kasutamine siiski taanduma , sest kõik uuemad <arv>-bitised AMD-protsessorid toetavad uusi Inteli SSE ja SSE<arv> laiendusi [ <arv> ] ning nende kasutamine on palju efektiivsem . Seda soovitab arvestada ka AMD [ <arv> , lk. <arv> ] . <arv>.<arv>. SSE-LAIENDUS Kui MMX võimaldas teostada operatsioone pakitud täisarvudega <arv>-bitistes registrites , siis SSE laiendas SIMD-arhitektuuri veelgi ning lisas võimaluse opereerida ujukomaarvudega nii pakitud kui pakkimata kujul , mis asuvad <arv>-bitistes registrites või põhimälus [ <arv> ] . Esimesena ilmus see laiendus Pentium <arv> protsessorites ning sisaldas järgmisi uuendusi ja täiendusi : <arv> uut <arv>-bitist füüsilist registrit , nimetusega XMM-registrid ; <arv>-bitine MXCSR register , mis sisaldab XMM-registritega seotud operatsioonide staatust ning kontrollinfot ; uus <arv>-bitine andmetüüp : pakitud tavatäpsusega ujukomaarv ; eriolukordade tekitamine vigade puhul ( v.a. pakitud täisarvude operatsioonid ) ; uued käsud : <arv>-bitine pakitud ja pakkimata ujukomaarvudega ( mis asuvad uutes XMM- registrites ) opereerimise käsud [ <arv> , vol.<arv> ] ; andmete kopeerimine ; aritmeetikakäsud ; loogikaoperatsionid ; võrdlusfunktsioonid ; käsud pakitud andmete ümberkujundamiseks ( shuffle ) ; andmetüüpide teisendamine ; mõned käsud oskavad opereerida ainult XMM-registri madalamas osas asuvate operandidega - sellisel juhul on tegemist tavalise e. pakkimata ujukomaarvuga ja käsu kohta öeldakse , et see on skalaarkäsk ( ingl. scalar instruction ) [ <arv> , <arv>-<arv> ] ; <arv>-bitised SIMD-käsud , mis täiendavad võimalusi opereerida MMX- registrites asuvate täisarvuliste muutujatega ; käsud MXCSR-registri oleku salvestamiseks ja taastamiseks ; käsud , mille abil optimeerida mälupöördumisi ning tõsta vahemälu efektiivsust ( eelvõtt ja streaming store - andmevoo talletamine ) ja kontrollida andmetalletusoperatsioonide järjestamist .  Joonis <arv>. SSE : uus <arv>-bitine SIMD andmetüüp Viimati nimetatud käskudega saab programmeerija näiteks tarkvaraliselt kontrollida , millise taseme vahemällu andmeid laadida enne , kui neid tarvitama hakatakse . Selline vahemälu käsitsi juhtimine võimaldab märgatavalt tõsta andmete töötlemise kiirust . SSE-laiendusega protsessor on täielikult ühilduv eksisteerivate operatsioonisüsteemidega , mis laiendust ei kasuta , kuid erinevalt MMX-laiendusest tuleb SSE kasutamiseks teha spetsiaalseid muudatusi operatsioonisüsteemis . See tähendab , et operatsioonisüsteem peab [ <arv> , vol.<arv> ] : oskama protsessorit nii initsialiseerida , et laiendus oleks kasutatav , kasutama FXSAVE- ja FXRSTOR-käske SSEx oleku salvestamiseks ja taastamiseks , oskama käsitleda SIMD-ujukomatehete veateateid . SSE on kasutatav kõigis IA-<arv> töörežiimides - protected mode , real address mode ja virtual-<arv> - ning seda võib kasutada vabalt koos x<arv>/x<arv> FPU/MMX-arvutustega , sest kasutatakse eraldi registreid . Lisaks pakitud andmetega opereerimisele saab kasutada SSE-laiendust ka tavalisteks ujukomaarvutusteks - sel juhul asuvad XMM-registrites pakkimata tavatäpsusega ujukomaarvud ning sellisel moel teostatud arvutused omavad teatavaid eeliseid tavalise ujukomaprotsessori ees [ <arv> , <arv>-<arv> ] : kuna SIMD-käsud kasutavad lihtsat XMM-registrimudelit ( ujukomaprotsessori registrid moodustavad nn stacki ) , siis ei pea kasutama fxch-käsku , mille täitmine Pentium <arv> protessori puhul on aeglane ; saab kasutada vabalt MMX-koodi ; nn Flush-to-zero mode , mille puhul ebapiisava täpsusega ujukomaarv taandatakse nulliks ; kiirem käskude täitmine kui ujukomaprotsessori puhul . Väga tähtis on tähelepanu pöörata andmete joondamisele mälus ( vt ptk <arv>.<arv>.<arv>. Andmete joondamine ) - paljud SSE-käsud annavad veateate , kui neile antakse ette operande , mis pole mälus joondatud . <arv>.<arv>. SSE<arv>-LAIENDUS SSE<arv> ilmus koos Pentium <arv> protsessoritega . Tänu SSE-le olid operatsioonisüsteemid juba läbinud vajaliku uuenduskuuri ning edasiarendus SSE<arv> näol võeti tunduvalt sujuvamalt kasutusse . Uuendused olid järgmised [ <arv> , vol.<arv> ] : lisati tugi pakitud ning pakkimata topelttäpsusega ujukomaarvudele ; , loodi <arv>-bitised SIMD-versioonid kõigist täisarvarvutuse käskudest , mis olid eksisteerinud MMX- ja SSE-laiendustes ; defineeriti <arv> uut <arv>-bitist andmetüüpi ; eriolukordade tekitamine vigade puhul , v.a. pakitud täisarvude operatsioonid ; lisati uued käsud uute andmetüüpidega opereerimiseks ning laiendati manipuleerimisvõimalusi olemasolevate andmetüüpidega : käsud pakitud ja pakkimata topelttäpsusega ujukoma-operatsioonideks ; uued käsud <arv>- ja <arv>-bitiste pakitud täisarvudega opereerimiseks ; täiendati tarkvaralist vahemälu kontrolli ning käskude järjestamise võimalusi . SSE<arv> üheks tähtsaks võimaluseks , millele tuleks tähelepanu pöörata , on asjaolu , et kõik SIMD täisarvarvutuse käsud on nüüd olemas ka XMM-registrite jaoks ning kogu senine MMX-kood on võimalik kirjutada ümber SSE<arv>-koodiks . Enamgi veel : programmikoodi osad , kus ei olnud MMX-käskude kasutamine optimaalne seoses vajadusega kasutada ka ujukomaarvutusi , võib nüüd SSE<arv>-te kasutades ära optimeerida . <arv>.<arv>. SSE<arv>-LAIENDUS Koos HyperThreading ( lõimtöötluse ) tehnoloogiaga lisas Intel oma Pentium <arv> protsessorile veel <arv> uut käsku , nimetades seda SSE<arv>-laienduseks [ <arv> , vol.<arv> ] . Kümme käsku nendest <arv>-st on mõeldud SIMD-tüüpi operatsioonideks , üks käsk pakub kiiret andmetüübi konverteerimist ning kaks ( MONITOR ja MWAIT ) aitavad kiirendada programmilõimede sünkroniseerimist . Veel lisandusid uued moodused , kuidas SIMD-tehete puhul algandmeid käsitletakse ning kuidas resultaat moodustatakse . SSE/SSE<arv> puhul on tegemist peamiselt nn. Vertikaalsete operat- sioonidega ( Z<arv> = X<arv> + Y<arv> ) , kuid SSE<arv> mõnede käskude puhul ei lange resultaadi positsioon registris kokku argumentide positsiooniga : Z<arv> = X<arv> + X<arv> . Toimub horisontaalne ümberpaigutus . Samuti võib ühe käsu jooksul realiseeruda mitu erinevat tehet - toimub asümmeetriline andmetöötlus , nt ADDSUBPD-käsu puhul ühed argumendid liidetakse ning teised lahutatakse . Lõimtöötluse tõhusam raudvaraline toetus Hyperthreading-tehnoloogia ning SSE<arv> koosseisu kuuluva kahe käsu näol on tegemist uue ning jätkuva arengusuunaga protsessoritööstuses - megahertside suurendamise asemel suurendatakse lõimtöötluse paralleelsust [ <arv> ; <arv> ] . Selline arvutusvõimsuse tõstmise tehnoloogia annab suurepärase tulemuse minimaalse tootmiskulude kasvu juures [ <arv> ] . Lähtudes arvamusest , mille järgi ollakse nimetatud tehnoloogia puhul alles esimese verstaposti juures [ <arv> ] , võib eeldada , et ka Inteli järgmiste käsulaiendite hulka kuulub mitmeid lõimtöötlusega seotud uusi käske . <arv>.<arv>. ALTIVEC-LAIENDUS Lisaks <arv> × <arv> käsustikuga protsessorite valmistajatele on ka konkureeriva arhitektuuriga protsessorite tootjad võtnud kasutusele SIMD-laiendusi . Üheks selliseks on AltiVec-nimeline laiendus , mis töötati välja IBM-i ja Motorola poolt [ <arv> ] . Esimesena hakkas seda kasutama Motorola oma laialt tuntud PowerPC G<arv> protsessorites , IBM seevastu lisas selle alles üsna hiljuti oma uuele <arv>-bitisele protsessorile PowerPC <arv>. Nimetatud protsessori SIMD-arvutusvõimsus ujukomaarvudega on kuni <arv>.<arv> GFLOPS @ <arv>.<arv> GHz [ <arv> ] . Lühidalt AltiVec'i iseloomustus [ <arv> , ptk <arv>.<arv> , <arv>.<arv>.<arv> , <arv>.<arv>.<arv> ] : selle kasutamiseks ei pea protsessor tööreþiimi vahetama ; SIMD käskude töötlemiseks lisati eraldiseisev <arv>-bitine konveier , mis töötab paralleelselt täisarv- ja ujukomakonveieritega ; kasutusel on <arv> eraldiseisvad <arv>-bitist registrit ( <arv> korda rohkem kui Intelil ) ; <arv>-bitisesse registrisse võib olla pakitud bait , sõna ning topeltsõna ; ujukomaarvutustes toetatakse ainult tavatäpsusega arve ; kõik andmed peavad olema mälus joondatud ; vahemälu tööd saab tarkvaraliselt juhtida ; vea puhul on resultaadiks vaikeväärtus : erandolukordi ei tekitata ; PowerPC-mäluhalduse mooduseid ei muudetud ega täiendatud ; register VSCR AltiVec-operatsioonide staatuste säilitamiseks ; käsk VRSAVE AltiVec-hetkeseisundi salvestamiseks . Nagu näha , on AltiVec üldjoontes sarnane Inteli SSEx-laiendustega , kuid pakitud andmetega opereerimise võimalused on siiski erinevad . <arv>. NÄIDISPROGRAMM Multimeedialaiendused on tarkvaramaailmas siiski veel uudne teema ning näiteks avatud lähtekoodiga GNU C ( gcc ) kompilaatorisse jõudis nende uute käskude tugi alles mõni aasta tagasi . Automaatset programmide optimeerimist laienduste abil sellegipoolest ei toimu - ainus , mida automaatselt tehakse , on lihtsalt ujukomaprotsessori käskude asendamine SSEx-skalaarkäskudega ehk teisisõnu tehakse tavalisi ujukomaarvutusi võimalikult palju XMM-registrites pakkimata kujul . Peagi ilmuv GCC versioon <arv>.<arv> on aga suur samm edasi - kui kasutaja soovib , siis analüüsib kompilaator kõiki programmikoodis esinevaid tehteid massiividega , milliseid täidetakse tsüklites ( for , while ) , ning võimaluse korral kasutab paralleelset töötlust lubavaid käsustikke ( sõltuvalt määratud protsessorist ) . Järgnev programm illustreerib moodust , kuidas tuleb defineerida muutujad , et nendega saaks efektiivselt uute käskude abil opereerida . Programm kasutab Inteli defineeritud intrinsics makrosid ning on mõeldud Linux-platvormi jaoks , millel on vähemalt gcc versioon <arv>.<arv>. #include &lt; stdio.h &gt; #include &lt; xmmintrin.h &gt; /* Kompileerimine : * * gcc -O<arv> -march=pentium<arv> -mfpmath=sse -o proge_nimi proge_nimi.c * */ // __m<arv> : see on spetsiaalne <arv>-bitine andmetüüp __m<arv> a , b , c ; // Joondatud muutujate defineerimine float inp_sse<arv>[<arv> ] __attribute__ ( ( aligned ( <arv> ) ) ) = ] <arv>.<arv> , <arv>.<arv> , <arv>.<arv> , <arv>.<arv> } ; float inp_sse<arv>[<arv> ] __attribute__ ( ( aligned ( <arv> ) ) ) = ] -<arv>.<arv> , <arv>.<arv> , <arv>.<arv> , -<arv>.<arv> } ; float out_sse[<arv> ] __attribute__ ( ( aligned ( <arv> ) ) ) ; int main(void) ] int i ; // esimese pakitud operandi laadimine mälust xmm registrisse a = _mm_load_ps ( inp_sse<arv> ) ; // teise pakitud operandi laadimine mälust xmm registrisse b = _mm_load_ps ( inp_sse<arv> ) ; // pakitud operandide liitmine ühe tehtega c = _mm_add_ps ( a , b ) ; // pakitud tulemuse salvestamine registrist mällu _mm_store_ps ( out_sse , c ) ; // üksikute tulemuste väljaprint for ( i = <arv> ; i &lt; <arv> ; i++ ) ] printf ( “ Result %d : %.<arv>f ” , i , out_sse[i ] ) ; } return <arv> ; } KOKKUVÕTE Protsessoritootjad on lisaks taktsageduse pidevale kasvatamisele loonud ka uusi mooduseid , kuidas tõsta digitaliseeritud meedia töötlemise jõudlust . Iga selline moodus seab ka hulga piiranguid , kuidas peab olema programm kirjutatud , et uutest võimalustest kasu saada . Eelkõige peab programmeerija hoolitsema andmestruktuuride ülesehituse eest , sest nagu eelnevast nähtus , nendest vanamoodi mõtlemine ei sobi . Samuti peavad just kompilaatorid olema vastavalt häälestatud , et operandide mäluaadressid oleksid täpselt arvutatud andmete joondamise saavutamiseks . Üldiselt võib öelda , et programmide optimeerimine uute laienduste abil on ja jääb suuresti käsitööks , sest kompilaatoril on automaagiliselt seda raske teostada . Enne multimeedia laienduste kasutamist soovitatakse läbida järgmised sammud : selgitada programmis välja tõenäoline koht , mis vajab optimeerimist , s.t koht , kuhu langeb suur osa andmete töötlemise võimsusest ; uurida , kas vaatlusalune programmilõik sisaldab tsüklilisi operatsioone massiividega ; kas olemasolevaid andmestruktuure on võimalik vähese ajakuluga muuta SIMD töötlusele sobivaks . SIMD-käskude mõte on lihtsalt pakkuda võimalust andmeid paralleelselt töödelda . Kui programm tegeleb operatsioonidega või andmetega , mis oma iseloomult ei ole järjestikulised ning neid ei saa massiivina kirjeldada , siis pole võimalik SIMD-käskude abil jõudlust tõsta . Eksisteerivate programmide lihtsalt uuesti kompileerimisest SIMD-optimeerimist toetava kompilaatoriga võib küll mingit kasu tulla , kuid mitmekordset kiirusekasvu ei tasu oodata . Vastavalt optimeerimata programmidele ei “ näe ” protsessori multimeedialaiendusi ning viimaste olemasolu ei anna kiiruse mõttes vähimatki efekti , kuid uute arvutusmahukate rakenduste väljatöötamisel on soovitatav arvestada kõiki võimalusi , mida protsessorid tänapäeval pakuvad . KASUTATUD KIRJANDUS [ <arv> ] Choosing a DSP Processor . Berkeley Design Technology , <arv>. <hyperlink> [ <arv> ] IA-<arv> Intel Architecture Software Developer's Manual . Volume <arv>-<arv>. <hyperlink> [ <arv> ] Intel ® Pentium ® <arv> and Intel ® Xeon Processor Optimization : Reference Manual . Order Number : <arv>-<arv>. <hyperlink> [ <arv> ] PowerPC Microprocessor Family : AltiVec Technology Programming Environments Manual . July <arv> , <arv>. <hyperlink> [ <arv> ] Intel Architecture Optimization Manual . Order Number <arv>-<arv> , issue date : <arv>. <hyperlink> [ <arv> ] AMD Athlon <arv> Processor Data Sheet . <arv> Rev <arv>.<arv> April <arv>. <hyperlink> [ <arv> ] Software Optimization Guide for AMD Athlon <arv>and AMD Opteron Processors . Publication : <arv>. Revision : <arv>.<arv> , September <arv>. <hyperlink> [ <arv> ] <arv>DNow ! Technology Manual . <arv>G/<arv> March <arv>. <hyperlink> [ <arv> ] IBM trims Power<arv> , adds AltiVec . Tom R. Halfhill . //Microprocessor report <arv>/<arv>/<arv> . <hyperlink> [ <arv> ] UltraSPARC IV Processor : Datasheet . <hyperlink> [ <arv> ] MIPS® MT ASE : the multithreading extension . <hyperlink> [ <arv> ] A multithreaded PowerPC processor for commercial servers . // IBM Journal of Research and Development <arv> ( <arv> ) <arv> , p. <arv>. <hyperlink> Andres Laidvee , Tallinna Tehnikaülikooli raadio- ja sidetehnika instituudi doktorant SISSEJUHATUS Üks viimaste aastate telekommunikatsioonisektori jututeema on UMTS ehk kolmanda põlvkonna mobiilsidesüsteem ( nn <arv>G ) . Küll peetakse seda ajast ees olevaks ( tehnika ei suuda veel tagada süsteemi korrektset funktsioneerimist ) , küll loetakse ta ajale jalgu jäänuks ( teised andmeside tehnoloogiad pakuvad paremat tulemust ) . Kuid arvestades kulutatud aega , pingutusi ja mis seal salata - ka raha , võib arvata , et küll see UMTS ka tuleb ! Heidame põgusa pilgu ühele <arv>G olulisele osale : selle raadioliidesele . Käesolev artikkel baseerub autori poolt esitatud ettekandel Eesti Elektroonikaühingu korraldatavas Sideklubis . Kui NMT ja GSM on siiski kõneedastusele orienteeritud süsteemid ja andmesideteenused tulid hiljem juurde , milleks paljuski mugandati olemasolevat süsteemi , siis UMTSis on kõne pigem üks andmeside rakendus . Seoses sellega räägitakse UMTSi kontekstis teenusekandjatest , mille parameetrid ( hilistused , andmesidekiirused jms ) sõltuvad teenuse iseloomust ja teenuse toimimiseks peavad kõik süsteemi osad need parameetrid tagama . Süsteemi “ pudelikaelaks ” on raadioliides ( ehk teisisõnu , süsteemi osa , mis hoolitseb kasutajaseadme ja võrguvahelise raadiolainetega sidepidamise tõrgeteta toimimise eest ) oma piiratud sagedusressursi , kasutajasignaalide interferentsi , väga kõikuvate parameetritega levikeskkonna ning liikuva kasutajaseadme tõttu . Kõik see on tinginud raadioliidesele väga kõrgete nõudmiste esitamise . Mida peab siis üks korralik raadioliides tegema ? Edastama kasutajasignaali kvaliteetselt ( piisav signaalitugevus , aktsepteeritav hilistus , tajutavate sidekatkestuste puudumine ) Võimaldama kasutajal sidet , sõltumata tema asukohast ( parima teenindava tugijaama valik , aktiivse sideseansi tugijaamalt tugijaamale edastamine ilma tajutavate sidekatkestusteta ) Minimeerima kasutajate üksteise häirimise Tagama kasutajale piisava informatsiooni süsteemi sisenemiseks ( s.t telefoni sisselülitamisel vajalike võrguparameetrite edastamine ja nn registreerimisprotseduur ) ja ooterežiimis kärje valiku Võimaldama võrgul ooterežiimis oleva kasutajaseadme leidmise võrgu poolt side alustamiseks ( nn paging ) ning kasutaja poolt side alustamise Mitte häirima teisi raadiotehnilisi süsteeme Tarbima vähe energiat ( eriti kasutajaseadmed ) . UMTSi tehniliste tingimuste ( sealhulgas ka raadioliidese ) väljatöötamise koordineerimisega tegeleb initsiatiivgrupp <arv>GPP ( <arv>. Generation Partnership Project ) , mis ühendab erinevate riikide ja piirkondade sidesüsteemide standardiseerimisega tegelevaid organisatsioone , seadmete tootjaid , sideoperaatoreid ja sideregulaatoreid . UMTSi raadioliidese üldnimetuseks on UTRAN : “ UMTS Terrestial Radio Access Network ” . UTRANisse on koondatud kõik sõlmed ja funktsioonid , mis tagavad kasutajaseadme ja teenindava võrgu vahelise ühenduse loomise ning püsimise . UTRANi nurgakiviks on kasutatav ühenduse meetod WCDMA - lairibaline kooditihendusega juurdepääs . Võrdleme seda tehnikat esimese ja teise põlvkonna mobiilsidesüsteemide sagedusressursi kasutusega . Esimene põlvkond : NMT , AMPS , TACS :  Joonis <arv>. Sagedustihedus Kasutatakse sagedustihendust ( FDMA - Frequency Division Multiple Access ) . Iga aktiivne kasutaja saab endale lõigukese kasutatavast sagedusspektrist . Teine põlvkond . GSM , PDC , D-AMPS :  Joonis <arv>. Aegtihedus Kasutatakse aegtihendust ( TDMA - Time Division Multiple Access ) . Kasutajad jagavad sama sagedusressurssi , kasutades seda kordamööda . Täpsustuseks tuleb siiski märkida , et näiteks meil kasutatavas GSMis mahutatakse ühele sagedusele maksimaalset <arv> kasutajat , mis on ilmselt ebapiisav , seetõttu on ka siin süsteemile eraldatud sagedusspekter jagatud <arv> kHz laiusteks kanaliteks , millest igaühele saab paigutada kuni <arv> erinevat kasutajat . Kolmas põlvkond : WCDMA , CDMA-<arv> , IS-<arv> :  Joonis <arv>. Koodtihedus Kasutatakse kooditihendust ( CDMA - Code Division Multiple Access ) . Kõik kasutajad paiknevad samas sagedusribas ja töötavad üheaegselt , nende eristamine toimub ortogonaalsete koodide kasutamisega või ortogonaalse sagedushüplemise kasutamisega . UTRAN kasutab ortogonaalseid koode . Nimetuses WCDMA sisaldub omadus “ wideband ” - laiaribaline . Määratlus tuleneb sellest , et kasutatava signaali spektri laius on suhteliselt suur : <arv>MHz . Laia sagedusriba kasutamine annab parema kaitse segavate signaalide suhtes , kuna viimased on üldjuhul kitsaribalised , samuti signaali levimisel peegelduvas keskkonnas ( näiteks majad ) mitmeteelisusest põhjustatud signaali nõrgenemise vastu erinevates ruumipunktides . Joonisel <arv> on toodud punase joonega kanali kvaliteedi sõltuvus sagedusest , tulpadega on esitatud erinevatel sagedustel asuvad kasutajasignaalid . Kitsaribalise signaali juhtum :  Laiaribalise signaali juhtum :  Joonis <arv>. Signaali ribalaiuse ja kanali kvaliteedi vastastikune mõju Tulpade pindala iseloomustab ülekantava signaali energiat , seega on näha , et kanali kvaliteedi sõltumine sagedusest avaldab laiaribalise signaali energiale oluliselt vähem mõju . LÜHIDALT : WCDMA TEHNOLOOGIAL RAADIOLIIDESE EELISED JA PUUDUSED Eelised <arv>. Väike tundlikkus kitsaribalise häire suhtes . Enamiku häireallikate signaali energia on kitsaribaline . Lähtudes WCDMA tehnoloogias kasutatava võimsuse hajutamise ja koondamise põhimõttest korreleerivate koodide abil , ilmneb , et nendega mittekorreleeruvate signaalide energia “ hajub ” ribalaiuse mõttes vastuvõtjal laiali ja selle võimsuse spektraaltihedus langeb , mis omakorda vähendab interferentsi korreleeruvate signaalidega . <arv>. Väike võimsustihedus . Osaliselt seotud p.<arv>-ga. Et signaali energia on raadioeetris laia sagedusvahemiku peale “ laiali määritud ” , siis mingi kitsa sagedusvahemiku kaotsiminek ei mõjuta summaarset energiat oluliselt . <arv>. Lihtne sagedusplaneering . Et WCDMAs kasutatakse kärgede koodidega eraldamist , siis sagedusplaneering võib lihtsamal juhul üldse puududa , s.t kõik tugijaamad kasutavad sama sagedust . ( Võrgu poolt teenindavate klientide arvu suurendamiseks kasutatakse siiski mitut sagedust . ) <arv>. Efektiivne sagedusspektri kasutus . Puuduvad sellised mõisted nagu naaberkanal ning selle kasutuse piirang , sest kanaleid eraldatakse koodidega ja raadioliidese seadmetele on esitatud väga kõrged nõudmised lineaarsuse suhtes , mis vähendab oluliselt signaali sagedusspektri laie- nemist naaberkanalite sagedustele . <arv>. Süsteemi mahu jäiga piiri puudumine . Kuna kasutaja kanalite eraldamiseks kasutatavaid koode on miljoneid ( <arv>) , siis ühe kärje poolt teenindatavate kasutajate arv on piiratud tugijaama poolt vastuvõetava signaali ja segaja võimsuste suhtega , mis väheneb kasutajate arvu kasvades sujuvalt . <arv>. Pehme kärjevahetuse võimalus . Et WCDMA võrku saab ehitada ühel sagedusel , siis on võimalik kasutaja signaali vastuvõtmine mitme tugijaama poolt korraga ja seega puudub järsk kärjevahetus . Puudused <arv>. Võrdse infoedastuskiirusega kasutajate signaalide võimsused tugijaama sisendil peavad olema võrdsed . Kuna kasutajad jagavad sama võimsusspektrit , siis vältimaks seda , et üks kasutaja “ karjuks ” teised üle , peavad kõikide kasutajate signaalid tugijaama sisendil olema võrdsed . <arv>. “ Pehme ” kärjevahetus võib võrgu mahtu vähendada , sest üks kasutaja hõivab korraga mitme tugijaama ressurssi . WCDMA KANDJA SIGNAALI KIRJELDUS Joonisel on esitatud sagedusalad , mida kasutatakse WCDMAs . TDD - Time Divided Multiplexing FDD - Frequency Divided Multiple Access TDD - Time Divided Multiple Access UL - Uplink ( suund kasutaja terminalist tugijaama poole ) DL - Downlink ( suund tugijaamast kasutaja terminali poole )  Joonis <arv>. UMTS-süsteemile eraldatud sagedusribad FDD kasutuseks antud sagedusalade paar täpsemalt :  Joonis <arv>. FDD duplekssagedused FDD korral on kasutusel kaks duplekssagedusriba ribalaiusega <arv> MHz , dupleksvahemik on <arv> Mhz . TDD korral on vaid üks <arv> MHz sagedusriba , mida kasutatakse vaheldumisi UL ja DL suunas .  Joonis <arv>. UMTS-signaali lubatud spekter <arv> MHz riba sees on spektrilaiused defineeritud järgnevalt : signaalile jääb <arv>,<arv> MHz , mõlemasse äärde on jäetud <arv>,<arv> MHz nn ohutusribad , et oleks võimalik kasutada sageduse kõrvalkanaleid . TDD :  Joonis <arv>. TDD , UL ja DL ajalise jaotuse näide TDD korral toimub saade ja vastuvõtt samal sagedusel , simpleksside põhimõttel , s.t vaheldumisi , kusjuures ULi ja DLi kestused võivad vastavalt vajadusele varieeruda . SIGNAALI HAJUTAMINE Hajutamise selgituseks mõningad punktid : <arv> bitt infot = “ <arv> ” või “ <arv> ” , “ <arv> ” või “ -<arv> ” ( energeetilises plaanis on viimast parem kasutada ) Kasutajainfo bitt hajutatakse hajutamiskoodiga korrutades mitme nn killu peale ( Kild - chip ) Hajutustegur on killukiiruse ja bitikiiruse suhe ( SF - Spreading Factor ) Killukiirus on <arv>,<arv> Mchip/s Info koondamiseks kasutatakse korrutamist sama koodiga , millega hajutati . Kasutajainfo bitikiirus sõltub info tüübist : nt tavalise kõne edastuskiirus on väiksem kui HIFI tasemel helil jms. Samas , WCDMA jagatud ressurss on võimsus . Erineva hulga bittide ülekandmiseks kulub erinev hulk võimsust , järelikult peab kuidagi need erinevad hulgad raadioliidesel võimsuse suhtes võrdsustama . Selleks kasutatakse kasutajainfo bitijada korrutamist erinevate hajutamiskoodidega , mille tulemusena raadiosagedusel ülekantav bitikiirus on sõltumata teenusest konstantne . Tabel <arv> Kasutaja bitikiiruse ja hajutamisteguri seos  Kasutaja bitikiirus ( kbit/s ) Hajutamistegur Killu kiirus ( Mbit/s ) <arv> <arv> <arv>,<arv> <arv> <arv> <arv>,<arv> ... ... ... <arv> <arv> <arv>,<arv> <arv> <arv> <arv>,<arv>  Joonis <arv>. Signaali hajutamine ja koondamine HAJUTAMISKOODIDE GRUPID Kanalikoodid Pseudomürakoodid Kanalikoode ( ka Ortogonaalsed Muutuva Hajutamisteguriga Koodid - OVSF ) kasutatakse kasutajate eristamiseks samal tugijaamal ja ka teenuste eristamiseks samal terminalil . Kanalikoodid on üksteise suhtes ortogonaalsed , et minimeerida omavahelist interferentsi ( sellised koodid on näiteks Walshi koodid ) .  Joonis <arv>. Koodipuu Kanalikoodide valiku aluseks on koodipuu : Koodipuu on koostatud nii , et igal järgmisel hargnemisel on ühes harus eelnev kood <arv> korda järjest , teises harus aga lisatakse eelneva koodi osale selle inversne kujutis . Konkreetse koodi valik sõltub vajalikust hajutamistegurist , mis omakorda sõltub kasutatava teenuse bitikiirusest , teenuse bitijada ja hajutamiskoodi korrutis peab andma bitikiiruse <arv>,<arv> Mb/s . Koodide ortogonaalsuse nõudest lähtuvalt saab kasutada vaid selliste harude koode , millel pole koodi hierarhias all- ega ülasuunas ühtegi koodi kasutatud . Siit lähtudes on erinevate bitikiirustega teenuste samaaegsete kasutajate arv tugijaama piires erinev , s.t väikese hajutusteguriga teenus blokeerib kogu temast hargneva koodipuu osa . Näiteks SF = <arv> kasutav teenus blokeerib pool koodipuust ; kui samas tugijaamas on veel teine SF = <arv> nõudva teenuse kasutaja , siis on kogu koodipuu blokeeritud ja rohkem kasutajaid ei ole võimalik tugijaamas teenindada . Samas , SF = <arv> kasutajaid mahub juba <arv> tugijaama piiresse jne.Teisiti , mida väiksema bitikiirusega teenuse kasutajad on , seda rohkem neid ühe tugijaama piiresse mahub .  Joonis <arv>. Erinevate hajutamisteguritega koodide kasutus Ortogonaalsete koodide kasutamisel tuleb tagada vastuvõtja kanalikoodi sünkroonsus saatja kanalikoodiga , sest ajaline nihe nende vahel võib anda vastuvõtjas signaali koondamisel prognoosimatu tulemuse . Pseudomürakoodid Peale kanalite eristamist kanalikoodidega korrutatakse signaal läbi spetsiaalse binaarkoodiga , mis võimaldab identifitseerida tugijaamu ja terminale . Selliseid koode nim pseudomürakoodideks ( Kasai koodid , Gold'i koodid jne ) . Neil on tugev autokorrelatsioon ja nõrk ristkorrelatsioon . Samas pole ristkorrelatsioon päris null , seega tekitavad erinevad koodid omavahel korrutudes siiski nullist erineva väljundsignaali , mis avaldub mürana vastuvõtjal . Siit kerkib üles WCDMA süsteemide puhul vajadus koodi planeerimise järele . Suunal terminal ą tugijaam on kasutusel <arv>erinevat koodi , suunal tugijaam ą terminal aga <arv> , sest terminali sisselülitamisel peab terminal leidma tugijaama poolt kasutatava koodi , et oleks võimalik ühenduse loomist algatada ja suure arvu koodide kasutamisel võib õige koodi otsimine palju aega võtta .  Joonis <arv>. Signaali korrutamine kanali- ja pseudomürakoodidega Hajutatud spektri ja jagatud võimsuse kasutamine :  Joonis <arv>. Hajutatud spektri kasutamine MODULATSIOON WCDMA raadioliideses kasutatakse QPSK modulatsiooni ( QPSK - Quadrature Phase Shift Keying ) . Et QPSKs kirjeldavad nelja <arv>kraadise sammuga kandesignaali faasi väärtust kaks järjestikuse sisendbiti väärtust ( joonisel toodud teljestikul ) , siis jagatakse sisendbittide jada kaheks ( X(t) ja Y(t) ) . Nende jadadega juhitakse faasimodulaatoreid , mille tugisignaalid on üksteise suhtes <arv> faasinihkega . Liites selliste modulaatorite väljundsignaalid , saadaksegi QPSK moduleeritud signaal . Hajutamine toimub WCDMAs pärast sisendbiti jada kaheks jagamist .  Joonis <arv>. QPSK modulaator : fc - tugisignaali allikas , hübriid - seade , mille väljunditevaheline faasinihe on <arv> kraadi , SUM - liitmisseade KÄRJEVAHETUS UMTSs UMTS kasutab sarnaselt teiste mobiilsidesüsteemidega leviala tekitamiseks kärgstruktuuri , kus levi tekitatakse paljude tugijaamade süsteemiga , milles iga tugijaam vastutab mingi väiksema ala piisava signaaliga varustamise eest . Kui kaetav maa-ala oleks ideaalselt sile , kasutajad paikneksid sellel ühtlaselt , tugijaamade vahekaugused oleksid konstantsed ning kõikide tugijaamade saatevõimsused oleksid võrdsed ja nende saateantennide suunadiagrammid ringikujulised , tekiks naabertugijaamade võrdsete signaalitugevuste punktidesse tõmmatavatest joontest kärjekujuline joonis . Reaalses elus kujuneb joonis sellest küll tunduvalt erinevaks , kuid siiski saab välja joonistada igale tugijaamale tema poolt teenindatava ala , mida siis kärjeks kutsutakse . Joonisel on tugijaamad paigutatud kärje keskele , praktikas on otstarbekam paigutada tugijaam kolme kärje lõikumispunkti ja formeerida kärjed sama tugijaama aparatuuri abil kolme erineva antenni abil . Sel juhul kutsutakse kärge ka tugijaama sektoriks .  Joonis <arv>. Kärgstruktuur Kärjevahetuse ehk handoveri eesmärgiks on tagada terminalide liikuvus süsteemi levialas . Ideaalse handoveri korral jääb kasutajale selle toimumine märkamatuks . UMTSs on kaks peamist kärjevahetuse tüüpi : handover samal sagedusel töötavate kärgede vahel ja eri sagedustel töötavate kärgede vahel . Samal sagedusel töötavate kärgede vaheline handover jaguneb omakorda “ pehmeks ” ja “ pehmemaks ” : “ Pehme ” handoveri korral toimub ühenduse üleandmine erinevates tugijaamades asuvate sektorite vahel .  Joonis <arv>. “ Pehme ” kärjevahtus “ Pehmema ” handoveri korral toimub ühenduse liikumine sama tugijaama erinevate sektorite vahel . Sel juhul võib kasutada ühenduse kvaliteedi parandamiseks mitme sektori signaali terminali vastuvõtjas .  Joonis <arv>. “ Pehmem ” handover Jäik kärjevahetus : <arv>. Liikumine erineva sagedusega kärgede vahel . <arv>. “ Jäik ” handover . Liikumine erinevate RNC-teenindusalades olevate kärgede vahel , kui RNCde vahel puudub Iur-liides , mille kaudu kontrollerid saavad üksteisele edastada UE kasutuses oleva kanali parameetreid .  Joonis <arv>. “ Jäik ” handover Eraldi võib vaadelda veel ka süsteemidevahelist handoverit WCDMA ą GSM , GSMą WCDMA .  Joonis <arv>. Süsteemidevaheline handover RAKE VASTUVÕTJA Mobiilsidesüsteemide signaali levikeskkond on komplitseeritud tänu peegeldustele , mis võivad põhjustada signaali mitmekordse saabumise vastuvõtjale ja sõltuvalt eri teed saabunud signaalide omavahelisest faasist signaali liitumise või lahutumise vastuvõtjal . WCDMA terminali vastuvõtjas on kasutusel mitu paralleelset haru , kus sisendsignaal korrutatakse erinevate viidetega PN-koodiga . Kui koodi hilistus võrdub signaali hilistumisega , tekib sõrme väljundisse tugev signaal . Liites tugeva väljundsignaaliga sõrmede väljundid , saavutatakse vastuvõetud signaali kvaliteedi paranemine .  Joonis <arv>. Signaali multiteeline levi ja RAKE vastuvõtja Lisaks sellele saab vastuvõtja “ sõrmi ” kasutada näiteks naabertugijaamade skaneerimiseks , et tagada parima signaaliga tugijaama valik . VÕIMSUSE KONTROLLIMINE Et WCDMA jagatud ressurss on võimsus , peab ta omama mehhanismi selle ressursi haldamiseks , sest : Terminalid saadavad signaale samaaegselt Kasutatakse sama sagedust Liiga tugev signaal tugijaama sisendil “ varjab ” kõik teised signaalid ära Võimsuse kontrollimisel on sõltuvalt ühenduse faasist kasutusel järgnevad algoritmid : Open-loop Kasutatakse ühenduse algfaasis : <arv>. UE mõõdab vastuvõetud signaali võimsuse . <arv>. UE loeb tugijaama broadcast-kanalilt tugijaama saatevõimsuse väärtuse . <arv>. UE arvutab p. <arv> ja <arv> saadud tulemuste järgi levikao tugijaamalt terminalile ja oma vajaliku saatevõimsuse ning saadab ühenduse loomise soovi tugijaamale . <arv>. Kui tugijaamalt vastust ei saabu , suurendab UE saatevõimsust <arv> dB võrra ja saadab uuesti ühenduse loomise soovi . Inner-loop Toimub ühenduse jooksul : ( SIR - Symbol-to-Interfere nce Ratio - Interferents-sümboli ja häire võimsuste suhe ) <arv>.Tugijaam võrdleb UElt vastuvõetud signaali võimsust ja nõutava SIRi väärtust . Kui vastuvõetud võimsus ei vasta soovitud SIR väärtusele , saadab tugijaam UEle käsu muuta saatevõimsust <arv> dB ( s.t kui võimsus vastab väiksemale SIRile kui nõutav , siis +<arv> dB , kui suuremale , siis - <arv> dB ) . <arv>. Reguleerimine toimub <arv> korda sekundis . Outer-loop Soovitud SIRi väärtuse määramine : ( FER - Frame Error Rate - vigaste kaadrite määr ) <arv>. Tugijaam mõõdab FERi . Kui FER on alla lubatud väärtuse , vähendatakse SIRi väärtust . Kui FER on lubatud väärtusest suurem , suurendatakse SIRi väärtust . Reguleerimine toimub <arv> kord sekundis .  Joonis <arv>. Saatevõimsuse reguleerimine ( UE - User Equipment - kasutaja terminal ) KÄRJE “ HINGAMINE ” Võimsuse reguleerimise aluseks olev SIRi väärtus sõltub tugijaama sisendil olevast müravõimsusest ja segavate signaalide võimsusest . Segavate signaalide ehk interferentsi võimsus sõltub tugijaama poolt teenindatavate terminalide arvust ( iga terminali P-kood põhjustab interferentsi ) . Seega , terminalide arvu suurenedes tuleb suurendada nende väljundvõimsust , et saavutada nõutud SIRi väärtust , sellega kaasneb aga kaugemate terminalide reguleerimine maksimumvõimsusele ja edaspidisel interferentsi suurenemisel ei suuda nad enam piisavalt tugevat signaali saata ning “ mattuvad ” teiste terminalide signaalide alla , seega , kärje teenindusala justkui hingaks vastavalt terminalide arvule .  Joonis <arv>. Kärje “ hingamine ” UTRANI LOOGILINE STRUKTUUR Tugijaamad ( Node B ) Tugijaama lisad ( antennid , toiteseadmed ) Raadiovõrgu kontrollerid ( RNC ) WCDMA RAN funktsioonid ( NodeB ja RNC tarkvara ) RAN funktsioneerimise tugisüsteem RANOS Raadiovõrgu manageerimise vahendid TRAN . Erinevad süsteemi osad on ühendatud liidestega Iub , Iu ja Iur .  Joonis <arv>. UTRANi struktuur Signaali kodeerimine , võimsuse reguleerimine toimub tugijaamas , RNC vastutab handoverite ja tugijaamade ressursi haldamise eest , tuumikvõrk teostab kasutajalt-kasutajale ühendused ning kasutaja ja välisvõrgu vahelised ühendused ja vastutab arveldusandmete kogumise ja haldamise eest . RANOS koondab tarkvara , mis on vajalik tugijaamade ja kontrollerite installeerimiseks ja haldamiseks . TRAM koondab tarkvara võrgu planeerimiseks ( näiteks tugijaamade paiknemine , koodid , sektorite arv jms simulatsioonid ) , raadiovõrgu töö monitoorimiseks ( kõnede katkemine , kvaliteet , handoverite arv ja suunad , tugijaamade ressursi piisavus ) ja kvaliteedi haldamiseks ( koodide ümberjagamine , võimsuse reguleerimine vastavalt reaalsele situatsioonile , handoverite ülekülluse vähendamine ) . KOKKUVÕTE Toodud UTRANi omadused ja võimalused on vaid väike osa UTRANi osistest . Lisaks on veel kanalite loogiline jaotus , kärjevaliku otsustamise algoritmid , ühenduse loomise ja lõpetamise tingimused ja algoritmid , diversit y-probleemid , kärgedevahelise interferentsi ohjeshoidmine , vigade korrigeerimise meetodid jpm. Omaette huvitav teema on veel UTRANi tehnoloogiad , mis pole veel rakendusse jõudnud , nt asümmeetriline TDD , mis annaks andmesidekiiruseks kuni <arv> Mb/s praeguse FDD <arv> kb/s asemel , UMTS HSDPA , mis annaks DL suunas kiiruseks juba kuni <arv> Mb/s , ning muidugi kõikvõimalikud kombineeritud süsteemide kasutused : UMTS+WLAN , UMTSW+DVB-T jne.  Uuno Vallner , Majandus- ja kommunikatsiooniministeerium i , riigi infosüsteemide osakonna arendustalituse juhataja KAIDO KIKKASELT ILMUS “ PINGVIINIAABITS ” Õpiku alapealkiri on “ Linux töölauaarvutis ( Fedora Core <arv> näitel ) ” . Õpiku sihtrühmaks võiks autori hinnangul olla inimesed , keda huvitab Linux kui võimalik alternatiiv kallitele kommertssüsteemidele , kuid kes kogemuste puudumise tõttu ei ole seni söandanud nii riskantset sammu astuda . Kui paljud peavad Linuxit eeskätt serveritele mõeldud süsteemiks , siis see raamat keskendub just töölauarakendustele , Windows + MS Office + Internet Explorer + ... edukale asendajale . Võib tekkida küsimus : milleks üldse Linux , kui on olemas Windows ? Ehkki kirjutamise hetkel on jäme ots endiselt tarkvaramaastikul Windowsi käes , on alternatiivid hakanud üha enam pead tõstma . Raamatu autor toob välja mõned põhjused , mis seda tingivad . Paljud tarbijad ei soovi olla seotud ühe firma toodanguga ja ühe kindla riistvaraplatvor- miga , mis annab tootjale liiga suured võimalused olukorda kontrollida . Tarkvara patenteerimise buum lääneriikides ( eriti USAs ) on kõige rängemalt tabanud just Windowsi , olles oluliseks piduriks uute lahenduste väljatöötamisel . Lugeja võiks korraks ette kujutada , milline oleks praegune Interneti olukord , kui veebi looja sir Tim Berners-Lee oleks <arv>. aastal oma loomingu patenteerinud - väga tõenäoliselt ei oleks meil praegu ei veebipõhist ajakirjandust , kaubandust , pangandust ega koolitust , vähemalt mitte tänasel massilisel moel . Viimased arengud patentide vallas aga ähvardavad pea sarnaste stsenaariumidega . Tegelikult on patenteeritud ka näiteks hiire topeltklõps ... Viiruste ja muu kahjuliku tarkvara levik on kohati väljunud kontrolli alt - tegemist on praktiliselt <arv>% osas vaid Windowsi puudutava probleemiga . SecurityFocuse spetsialist Scott Granneman väitis <arv>. aasta augustis The Register'is , et paigaldatud ja uuendamata Windows XP-ga arvuti “ kaaperdatakse ” <arv> minuti jooksul pärast võrku ühendamist ( kusjuures <arv> minutit ei ole piisav aeg uuenduste ja turvatarkvara paigaldamiseks - ainus võimalus on lisada need enne võrku ühendamist CD-lt või muult kohalikult andmekandjalt ) ... Vabalt levivad viirused Linuxis praktiliselt puuduvad ( tõsi , oma e-posti tuleb siiski kontrollida , et mitte saadud Windowsi viirusi kogemata edasi saata ) . Windowsi ja sealse tarkvara hinnad on endiselt küllalt kõrged , samal ajal on ebaseaduslik kasutamine ( “ tarkvarapiraatlus ” ) muutunud mõnevõrra raskemaks - lõhkise küna ette satuvad eelkõige vaesemad riigid ning paljudes kohtades haridus- ja mittetulundussfäär . Linux võimaldab arvutioskuste andmist ka vaesemates piirkondades - pole juhus , et suur osa Lõuna-Ameerika riikidest eelistab riikliku poliitikana vabatarkvara , sealhulgas Linuxit . Microsofti stiilis “ tarkvara tükikaupa müümise ” kõrval on eluõigust võitmas mitmed alternatiivsed tarkvaraäri viisid - enamik Linuxiga tegelevaid firmasid müüb vabalt levivale tarkvarale tasulisi täiendteenuseid ( tootetoetus ja garantii ) . RAHVUSARHIIV VEEBIS Eelmise aasta lõpus avatud arhiivi elektrooniline infosüsteem ( AIS ) sai juba esimestel päevadel kokku sama palju päringuid kui tavaliselt aasta jooksul rahvusarhiivi külastatakse - veebikasutajad sisestasid AISi ligi <arv> <arv> märksõna . Rahvusarhiiv on riigi arhiivide süsteem , millesse kuuluvad riigi- , ajaloo- ja filmiarhiiv , samuti maa-arhiivid . Mõningaid fakte AISist : AIS hõlmab rahvusarhiivi ligi <arv> miljonist arhivaalist <arv> miljoni andmed . Mass-sisestamise viis läbi <arv> inimest <arv>. aasta riigieelarvest eraldatud ligi miljoni krooni eest . Tänaseks sisaldab AIS eelkõige andmeid enimkasutatavate arhivaalide , sh kiriku- ja personaalraamatute , hingeloendite , kohtutoimikute , elanike nimekirjade kohta . Ülejäänud arhivaalide andmete sisestamine jätkub vastavalt riigieelarvest selleks eraldatavate summade suurusele . Andmebaasi aadress on / . LENOVO OMANDAS IBM PC ARVUTITE TOOTMISE Arvutimüügi kasv hakkab tasapisi vähenema . <arv>. aasta edukaim arvutimüüja oli Dell , kes suutis müüa <arv> miljonit raali . HP tulemus oli tervelt <arv>,<arv> miljoni võrra kehvem . Järgnesid IBM , Fujitsu-Siemens ja Acer . Edukuselt kolmas arvutitootja IBM otsustas hiljuti personaalarvutite tootmisest loobuda ning müüs oma sülearvutiseeria ThinkPad ja lauaarvutiseeria ThinkCentre tootmise Hiina valitsuse osalusega firmale Lenovo . IBM müüs neljandas kvartalis <arv>,<arv> miljonit arvutit . Ka Dell ja HP arvutite enamik toodetakse Hiinas . USA Kongressi vabariiklastest liikmed on väljendanud kartust , et IBMi kavandatav personaalarvutitootmise müük Hiina Lenovole ohustab riigi julgeolekut , ja on kutsunud Kongressi üles seda tehingut põhjalikult läbi vaatama . Nad hoiatavad , et see võib soodustada USA sõjalise tehnoloogia sattumist Pekingi kätte . KEELEVEEBI TAASSÜND <arv>. aastal Avatud Eesti Fondi toel avatud mitmekülgne keeleandmebaas KeeleWeb suleti aasta algusest rahapuuduse tõttu . Tasu eest saab Internetis erinevaid sõnastikke kasutada . Keelevara Entusiastid avasid aasta alguses suletud keeleveebi asemel uue tasuta sõnastikke pakkuva Internetikeskkonna aadressil <hyperlink> , kus pakutakse kümmekonda eesti keele sõnastikku , lisaks veel eri keelte tõlkesõnastikke , võõrkeelseid sõnastikke ning mitmesugust eesti keele alast tarkvara . Eesti keele sõnastikest on uues keeleveebis praegu väljas sünonüüme ja antonüüme sisaldav tesaurus , sünonüümisõnastik , eesti vanasõnade andmebaas , kõnekäändude ja fraseologismide andmebaas ja muud . Sõnastikesse saab teha ka ristpäringuid , näiteks uurida ühe sõna kohta kas või kõigist erinevatest sõnastikest korraga . Uue tasuta sõnastikulehe tegijad rõhuvad rohkem spetsialiseeritud ja terminoloogiasõnastikele , viimaseid on Eestis välja antud paarsada . INFOÜHISKONNA ARENDAMISSE SUUNATI <arv> MILJONIT KROONI Valitsus otsustas <arv>.<arv>.<arv> kinnitada “ Eesti riikliku arengukava Euroopa Liidu struktuurifondide kasutuselevõtuks - ühtse programmdokumendi <arv>-<arv> ” meetme <arv>.<arv> “ Infoühiskonna arendamine ” investeeringuteks ette nähtud toetuse kasutamise kava põhi- ja lisanimekirja . Põhinimekirja koostamisel on lähtutud meetme eelarvest ja esitatud objektide hindamise tulemusena saadud paremusjärjestusest , järgides projektide tervikuna rahastamise printsiipi . Põhinimekirja kohaselt kinnitatava toetuse kasutamise kava rahalised vahendid on <arv> <arv> krooni ega välju meetme eelarvest , mis on <arv> <arv> <arv> krooni . Projektid , mis ei mahu põhinimekirja meetme eelarve tõttu , on kantud lisanimekirja . Kui põhinimekirjast jääb rahalisi vahendeid üle , mis selgub pärast riigihangete läbiviimist , on võimalus toetada lisanimekirjas olevaid projekte vastavalt lisanimekirja pingereale . Vt . täpsemalt <hyperlink> VALITSUS JÄTKAB KOOSTÖÖD MICROSOFTIGA <arv>. detsembril <arv> toimunud valitsuskabineti nõupidamisel arutas Vabariigi Valitsus Eesti riigi ja Microsofti vahelist koostööd , kuid ei võtnud vastu lõplikku otsust raamlepingu sõlmimiseks . Valitsus tutvus raamlepingu uue versiooniga ning jätkab arutelu jaanuaris . Raamlepingu sõlmimise tulemusena planeeritakse <arv>. aasta kevadel tuua turule Interneti- ja tarkvaralahendused , mis võimaldavad kodukasutajal maksta igakuist renti tarkvara ja Internetiühenduse kasutamise eest . Riik on ja jääb seejuures avatuks - leping oleks avasamm rendimudeli rakendamiseks ka teiste tarkvaratootjatega . Koostöölepingu raames on Eesti riigil võimalus liituda ka Microsofti valitsuse turvalisuse programmiga . Turvaprogrammi peamiseks eeliseks on ligipääs Microsofti operatsioonisüsteemide lähtekoodile , mistõttu riik saab luua turvalisi ja oma vajadustele vastavaid tarkvaralahendusi . Koostöölepingu projekt on kättesaadav aadressil <hyperlink> . TERVISHOIU INFOSÜSTEEM KÄIVITUB Tervishoiu infosüsteemi loomise eesmärk on elektrooniliste tervisekaartide ja retseptide ühtse andmebaasi kujundamine , kogudes selleks andmeid erinevatest tervishoiuasutustest . Loodav süsteem võimaldab edastada tervishoiuasutuste andmed elektrooniliste tervisekaartide ja digitaalsete retseptide näol ühisesse infoserverisse . Ühtne süsteem vähendab seni käsitsi tehtud tööd erinevate statistiliste aruannete koostamisel ja töötlemisel ning võimaldab saada kvaliteetset ja kiiret tervishoiustatistikat . Samuti tagab tervishoiu infosüsteemi käivitumine tervishoidu puudutavate andmete kiire kättesaadavuse , mõistetavuse ja usaldusväärsuse . Vt : <hyperlink> TASUTA KÄSIRAAMAT ABIKS LINUXILE KOLIMISEL IBM andis välja abistava raamatu neile , kes soovivad Microsofti Windowsi kasutamisest loobuda ning selle asemel Linuxile üle kolida . Linux on viimaste aastatega küpsenud tasemeni , mis lubab probleemide käes vaevleva Windowsi ka tööjaamades avatud lähtekoodiga ja vabavaraliste lahenduste vastu välja vahetada . Juhendis käsitletakse põhjalikult võimalikke probleeme ja küsimusi , mis võivad tekkida Linuxi-arvutite lisamisel olemasolevasse Windowsi-põhisesse arvutisüsteemi . Raamatus toodud stsenaariumid võimaldavad otsustada , kui palju võiks operatsioonisüsteemi vahetus maksma minna ja milliseid sääste see ettevõttele pakub . Raamatus on toodud mitmeid praktilisi näiteid , kuidas häälestada Linuxi tööjaamad ja serverid nii , et need kasutusele jäävate Windowsi-arvutitega probleemideta koos töötaksid . Ingliskeelne raamat on tasuta allalaetav aadressil : <hyperlink>