kirjak	tea_AA_02_1.tasak.ela	Intervjuu Hansapanga IT-juhi Olli Heinoneniga Seekord on meie “ VIPi artikkel ” vormistatud intervjuuna Olli Heinoneniga . Olli Heinonen - sündinud <arv>. aastal Soomes . Lõpetanud <arv>. aastal Helsinki Technical College'i bakalaureusekraadiga , täiendanud ennast tippjuhtide koolitusel INSEAD-is ( Prantsusmaa ) . Aastatel <arv>-<arv> töötas Olli Heinonen Hewlett-Packardis , seejuures aastatel <arv> - <arv> Hewlett- Packardi Baltimaade juhina . Alates <arv>. jaanuarist <arv> on ta Hansapanga Grupi IT-juht . Paul Leis : Alustame Hansapanga IT eesmärkidest , IT missioonist . Olli Heinonen : Hansapanga Grupi eesmärk on saada <arv>. aastaks juhtivaks finantsasutuseks igas Balti riigis . Selle eesmärgi saavutamiseks peab IT realiseerima Hansapanga äriüksuste konkurentsieelised . Tänapäeval on konkurentsieelised seotud peamiselt kanalitega , st võimalustega , kuidas klient saab pangaga suhelda . Kliendi võimalused peavad olema parimad nii pangaautomaadi , telefonipanga , internetipanga kui ka mobiilpanga kasutamisel . Oluline on kliendivajaduste selgitamine , kliendi soovide maksimaalne arvestamine pangatoodete häälestamisel . Tuleb rõhutada , et missiooni tunnetamine on Hansapanga IT-töötajatele äärmiselt oluline , igaüks peab mõistma , milleks me üldse olemas oleme . P.L. : Kuidas seda missiooni realiseerida ? Missugused on kõige üldisemas plaanis vahendid ja meetodid IT eesmärkide realiseerimiseks ? O.H. : Hansapangal on ühtne pangasüsteem kõigis kolmes Balti riigis , mis tagab arendustegevuse efektiivsuse - arendus- ja ülalhoiukulude kokkuhoiu . Hansapangal on kõrgtaseme tehnoloogiale tuginev paindlik ja võimas pangasüsteem , mis on hästi skaleeruv - kuigi me oleme Baltimaades suurendanud oluliselt klientide arvu , pole pangasüsteemi jõudlusega probleeme olnud . P.L. : Millisel määral on ühtne lahendus kolme Balti riigi jaoks otstarbekas ? Kas kultuurilised ja seadusandluse erinevused pole siin takistuseks ? O.H. : Selle üle , kuivõrd erinev panganduskultuur Balti riikides on , võib lõpmatult vaielda . Sageli väidavad nii lätlased kui ka leedulased , et erinevused võrreldes Eestiga on suured . Kas aga ikka on ? Teeme väikese võrdluse : toitlustamiskultuur ja -tavad on tõepoolest Balti riikides väga erinevad , aga ikkagi on kõigis neis edukas MacDonald's , mis on hoopis ameerika toitlustuskultuuri kandja . Loomulikult arvestame me pangatoodete väljatöötamisel erinevusi , kuid oluline on , et igal hommikul ei püütaks avastada sama jalgratast igas Balti riigis . Me töötame välja üldistatud IT-lahenduse , mida on hõlbus kohandada vastavalt konkreetse riigi lokaalsetele tingimustele . Kuigi kliendiliidesed on erinevad , näiteks internetipangas , siis neile vastavad äriloogika ja protsessid peavad olema samad . Me üldse kipume liialt rõhutama Balti riikide erinevusi - pangakaardid on siin heaks näiteks . Hansapanga Grupp kasutab otse või partnerite kaudu <arv> erinevat kaardisüsteemi . Võtame “ pisut ” suurema finantsgrupi Citigroup , millel on vaid üks pangakaardisüsteem , millega korraldatakse Cit i group i kaardimajandust kogu maailmas . Pealegi ei asu Citigroupi kaardikeskus mitte USAs , vaid Bangalore's Indias ! P.L. : Kui pangasüsteemid on Hansapanga Grupi pankades juba samad , kas võib siis oletada , et kavas on luua ühtne Hansapanga IT-keskus , näiteks Tallinnas ? O.H. : Siin pole mingit saladust , see on minu suur unistus . Kuid praegu me seda teha ei saa , seadusandlus on Balti riikides erinev . Me oleme sunnitud hoidma iga riigi andmeid selles riigis olevates andmebaasides , sellest sõltub panga litsents . Kui mitte varem , siis päeval , mil kõik Balti riigid on saanud Euroopa Liidu liikmeks , luuakse Hansapanga ühtne IT-keskus . Seejuures pole mitte niivõrd oluline Euroopa Liit , kuivõrd seadusandluse harmoniseerimine Balti riikides . Need süsteemi osad , mille ühendamist seadusandlus ei takista , näiteks finantsarvestus/ raamatupidamine , ongi juba ühendatud . Ühistöö valdkond on tegelikult hoopis laiem kui Hansapanga Grupp . Heaks näiteks on siin Hansapanga ja Eesti Ühispanga mitmed ühised edukad projektid . Niisugust koostööd oleks vaja laiendada kogu Baltikumi finantsasutustele . P.L. : Hansapanga strateegiliste eesmärkidena on rõhutatud kliendivajaduste igakülgset rahuldamist . Missugune on IT tugi selle eesmärgi saavutamisel ? O.H. : Kliendivajaduste selgitamiseks ja nendele paindlikult reageerimiseks on juurutatud kliendisuhte juhtimissüsteem ( Customer Relationship Management , CRM ) . Meil on kliendiandmed erinevatest allikatest ( pank , liising jne ) koondatud ühtsesse süsteemi . Vajadusel saame CRMi kasutada personifitseeritud lähenemiseks kliendile ( reklaam , isegi tooted jne ) , siinjuures on aga oluline kokkulepe kliendiga : me ei saa koormata klienti kõikvõimalike pakkumistega , kui ta pole selleks soovi avaldanud . Klient peab ise otsustama , missuguseid lisateenuseid , ülevaateid , reklaame jmt ta soovib pangasüsteemi vahendusel saada . Kliendikesksuse tähtsaks momendiks on täieliku informatsiooni koondamine kliendi seisundi kohta - näiteks internetipangas saab klient infot oma laenude , deposiitide , väärtpaberite jmt kohta . Samuti fikseeritakse kliendi pöördumised suvalisest kanalist ( telefonikõne , e-post , teller jmt ) Hansapanga Grupi ettevõtete poole ja jälgitakse reageerimist kliendi pöördumistele . Ükski kliendiprobleem ei jää lahenduseta . Kokkuvõttes - nii tagamegi kliendikeskse teenindamise . P.L. : Missugused tehnoloogiad tagavad Hansapanga IT-eesmärkide saavutamise ? O.H. : Põhiandmebaasisüsteem on Oracle , tehniline realisatsioon tugineb EMC , SUNi ja Hewlett-Packardi tehnoloogiatele . P.L. : Iga panga IT-strateegias on oluline koht andmeturbel . Mida võib esile tuua Hansapanga andmeturbest ? O.H. : Oluline on IT varukeskuste olemasolu kõigis Balti riikides . Kui põhikeskus hävib või muutub kasutamiskõlbmatuks , siis <arv> minuti jooksul võtab varukeskus põhikeskuse funktsioonid üle . See peaks olema Baltikumi tingimustes piisav - kõrgema valmiduse tagamine oleks liiga kulukas . Me oleme reorganiseerinud andmeturbe IT - riskide haldamiseks . See tähendab , et me ei käsitle mitte ainult tehnilisi/tehnoloogilisi riske , vaid ka personaliga seotud riske jne. Näiteks jäävad pangasüsteemi kasutamisest ( teller vaatab mingit kontot , aga operatsiooni ei teosta ) jäljed , igasuguseid ebaharilikke toiminguid leitakse mustrite ( patterns ) järgi , “ leide ” kajastavad vastavad aruanded . Kõikide uute toodete kohta tehakse turvaanalüüs . Nii minimeeritakse turvaaukude tekkimise võimalus . Oluliseks turvaprobleemiks on viirused . E-posti süsteemid - peamine viiruste levimise allikas - sisaldavad tõkkeid , mis välistavad viirustega teadete sattumise panka . Ka on e-posti süsteem panga põhisüsteemidest isoleeritud . P.L. : Kas Hansapangas on rakendatud nn. ründetõrjesüsteeme ( intrusion detection systems ) ? O.H. : Neid süsteeme on mitmeid . Me jälgime pidevalt , kas ei esine mingi ründemuster ( intrusion pattern ) ja oleme valmis vastavalt reageerima . Siinkohal tahaks rõhutada , et turvaküsimustes teeme me koostööd kõikide teiste finantsasutustega - turvavallas pankade vahel konkurentsi pole ! Mida tahaks siiski rõhutada : kogu ühiskonna suhtumine häkkimisse peaks olema märksa hukkamõistvam , nö . poisikesetempudel võivad olla äärmiselt tõsised tagajärjed . P.L. : Panga strateegia realiseerimisel on oluliseks vahendiks panga sisemised tööprotseduurid . Tööprotseduuride kvaliteedi alusel võib otsustada , kas panga toimimine vastab üldtunnustatud ja sertifitseeritavatele nõuetele . Tööprotseduuride kvaliteet annab kliendile kindluse , et panka mingid ootamatused ei taba . Kuidas sa hindad Hansapanga protsesside kvaliteeti ? O.H. : Hansapanga IT-l on olemas korrektsed tööprotseduurid , kuid kuna maailm muutub kiiresti , siis on neid loomulikult vaja aeg-ajalt modifitseerida/täiendada . Praegu ongi käimas järjekordne protsesside korrastamine . P.L. : Kuidas on korraldatud uute IT-lahenduste väljatöötamine ? Kas äripool esitab IT-le tellimuse mingil formaliseeritud kujul , näiteks UML-vahenditega ? O.H. : Seni veel mitte . Kuid on olemas mehhanismid , mis tagavad äripoole soovide adekvaatse esitamise IT-le . P.L. : Missugune on Hansapanga IT-personali poliitika ? O.H. : Personal on meie kõige olulisem ressurss . Hansapanga Grupi IT-s ( kogu Baltikumis ) on <arv> töötajat . Meie inimesed peaksid olema rahul Hansapangast saadava “ kompensatsiooniga töö eest ” - see sisaldab enam kui palka . Äärmiselt oluline on ka töö haaravus - töö Hansapangas peab olema väljakutseks , mis innustab oma professionaalseid võimeid maksimaalselt arendama/kasutama . Et tagada meie töötajate kvalifikatsiooni pidev areng , on vajalik töötajate osalemine koolitustel . Selleks et võimaldada töötajate osalemine koolitustel , on meie IT komplekteeritud “ teatava liiaga ” , st. meil on täiendavaid inimressursse . Tõepoolest , kui inimesi on täpselt nii palju , kui tööülesannete täitmiseks vaja on , polegi võimalik kedagi koolitustele saata . Ka võib ekstreemolukordades mõne spetsialisti koormus osutuda talle ülejõu käivaks . Et välistada “ panga sõltuvust üksikisikust ” püüame tagada , et iga spetsialist “ oleks vähemalt dubleeritud ” - see on üks IT riskihaldamise olulisi lõike . P.L. : Kas on võimalik , ilma ärisaladusi reetmata , öelda midagi Hansapanga IT/ Hansapanga Grupi IT tulevikukavatsuste kohta ? O.H. : Loomulikult on äriplaanid ärisaladus , aga eks mobiilteenuste arendamine ole üheks oluliseks lõiguks . P.L. : A &amp; A on Tallinna ülikoolide IT-ühisajakiri , kas sa tahaksid midagi öelda tudengitele , tulevastele IT-spetsialistidele ? O.H. : Esiteks , liialt palju kohtab tehnoloogiate absolutiseerimist . Samal ajal peaks enam mõtlema sellest , mis on organisatsioonile antud momendil otstarbekam . Pole vaja teha parimat kogu maailmas , oluline on teha parim Eesti jaoks . Teiseks , enam oleks vaja pöörata tähelepanu teenuste , mitte terviklahenduste pakkumisele . See avardaks nii isikute ( miks teenida vaid ühte peremeest ? ) kui ka organisatsioonide võimalusi . P.L. : Mis oleksid need omadused/oskused , mis avaksid noorele inimesele Hansapanga IT ukse ? O.H. : Keegi ei usu seda , aga ma pean väga oluliseks suhtlemisoskust . Pole haruldane , et IT spetsialistid on sulgunud tehnoloogiamaailma . Kõigepealt , täites äripoole ülesandeid , peavad IT-spetsialistid olema võimelised suhtlemiseks äripoolega . Peale selle on IT-spetsialistidel vaja nii praegu , veelgi enam aga tulevikus osaleda ühisprojektides nii Hansapanga Grupis kui ka väljaspool seda ( mõnikord ka koos konkurentidega - näiteks Eesti Ühispangaga ) . Üksikisik pole võimeline lahendama firma IT ees seisvaid probleeme . Veel on oluline lai baasharidus ja silmaring - me elame kiiresti muutuvas maailmas , igasuguse spetsiifilise teadmise/oskuse iga on üürike . Iga IT alal tegutseja peab olema valmis pidevalt juurde õppima ( life long learning ei tohiks IT-spetsialistile olla vaid tühipaljas loosung ) , ja mitte ainult õppima , vaid ka õpitut oma töös rakendama . Tarmo Robal , TTÜ arvutitehnika instituut Veebirakenduste loomine karkassmetoodika Rational Unified Process abil SISSEJUHATUS Veebirakenduste loomisel on palju ühist tavapäraste tarkvaralahendustega , kuid sama palju on ka erinevusi . Veebiarendajate ülesandeks jääb ühendada juba kasutada olevad meetodid ja tehnoloogiad uutega , moodustades neist ühtse terviku . Veebirakenduste modelleerimine vajab laiendatud metoodikat , mis hõlmab nii traditsiooniliste tarkvaratoodete arendamist kui ka kunstilist külge . Tähelepanu ei tule pöörata ainult visuaalselt vastupandamatule kasutajaliidesele , aga ka stabiilsele ja vastupidavale arhitektuurile . Interneti-rakenduste kasutajad on kannatamatud , seda eriti kehvalt disainitud veebilehtede puhul , olgu siis tegu kas visuaalselt nõrga disainiga või halvasti modelleeritud arhitektuuriga . Piisab vaid hetkest , ning kasutaja ei pöördu enam kunagi veebisaidile tagasi . Kiirelt muutuvas tarkvaramaailmas on oluline kvaliteet , efektiivsete lahenduste kiire leidmine , samas vähendades riski ning luues paindlikke arhitektuure . Vaatleme siin tarkvara arendamise protsesse , veebirakenduste modelleerimise põhimõtteid UMLis , veebisaidi navigatsiooni korraldamise ja kasutajaliidese disainimise probleeme . TARKVARA ARENDAMISE PROTSESSIDEST Tänapäeval on kasutusel mitmeid erinevaid tarkvara arendamise protsesse : Capability Maturity Model ( CMM ) , Rational Unified Process ( RUP ) , Personal Software Process ( PSP ) , Team Software Process ( TSP ) ja paljud teised . RUP ja CMM vaatlevad tarkvara arendamist organisatsiooni tasemel , TSP meeskonna ning PSP üksikisiku tasemel . Protsessid nagu RUP ja TSP on mõeldud meeskondadele ja organisatsioonidele , mistõttu nad on fokuseeritud töö organiseerimisele meeskonna tasemel , välja on jäänud juhtnöörid meeskonnaliikmetele oma töö korraldamiseks . Selle tulemusena on suuremal või vähemal määral töötaja enda otsustada ja leida see viis , kuidas oma tööd parendada , kuidas juhtida ning kontrollida konkreetset tarkvara arendamise protsessi . RATIONAL DEVELOPMENT PROCESS Rational Development Process 'i rakendamisel on tarkvara elutsükkel jaotatud juhtimise seisukohalt viieks etapiks , mis läbitakse iteratiivselt . Need viis etappi on : Idee , mõte ( Inception ) - visioon lõpp-produktist ; projekti ulatuse , määramispiirkonna defineerimine . Antud etapis määratakse , mida ja kuidas tegema hakatakse . Püstitatakse funktsionaalsed ja mittefunktsionaalsed nõuded , valitakse kasutatav tehnoloogia , ideed arhitektuuri loomiseks ning leitakse süsteemi kasutusjuhud . Väljatöötamine ( Elaboration ) - vajalike tegevuste ja ressursside planeerimine ; omaduste spetsifitseerimine ning arhitektuuri disainimine . Etapi eesmärk on sügavamalt uurida probleemi valdkonda , määrata kindlaks arhitektuur , uurida riske , luua plaan järgmiseks kaheks etapiks . Defineeritakse kõrgema taseme kasutusjuhud ning esitatakse ülesande dekompositsioon . Etapi lõpus antakse vastus küsimusele , kas jätkata või lõpetada . Ehitamine ( Construction ) - toote valmistamine ning visiooni , arhitektuuri ja plaanide arendamine , kuni toode on evitamisvalmis . Antud etapp on jagatud erinevateks iteratsioonideks vastavalt ülesande dekompositsioonile . Etapp hõlmab analüüsi , disaini , programmeerimise , testimise ning dokumentatsiooni loomise . Üleminek ( Transition ) - toote üleviimine kasutaja keskkonda . Etapp hõlmab tootmise , kohaletoimetamise , väljaõppe , toetuse ja hoolduse nii kaua , kuni lõppkasutajad jäävad süsteemiga rahule . Areng ( Evolution ) - tugeva arengu tagamiseks on kogu protsess rekursiivne , kõiki etappe alustatakse järjest algusest peale , tehes läbi kogu tsükli . Etappe läbitakse korduvalt , kuni tarkvara elutsükli lõpuni . Arenguetapp hõlmab ka turustuse , pakenduse , installeerimise , konfigureerimise , kasutajatoe ning hoolduse .  RATIONAL UNIFIED PROCESS ( RUP ) Rational Unified Process on UMLi täiendus , ta ei ole konkreetne metoodika , vaid arendusmetoodikate karkass , mida saab rakendada erinevatele iteratiivsetele metoodikatele . Tarkvaratoodet disainitakse ja arendatakse kasvavate iteratsioonide järjestuses . See võimaldab disainiideid testida ja valideerida , aga ka riski vähendada elutsükli varajases järgus . RUP kirjeldab selliseid protsessi elemente nagu töötajad , tegevused , tooted , mida omavahel õigesti kombineerides on organisatsioonil võimalik tarkvaraprojekte üsna tõhusalt ellu viia . Protsess ise ei anna mingeid “ maagilisi ” lahendusi . Võtmeküsimuseks on ikkagi inimressurss . RUP pakub vastuseid küsimustele : “ Kuidas ? Mida ? Millal ? Kes ? ” . RUP-meetodist on organisatsioonil kasu vaid siis , kui inimressurss on kompetentne ja piisavalt kogenud . KUUS TARKVARA LOOMISE PÕHITÕDE RUPis VEEBI MODELLEERIMISEKS <arv>. Arendada iteratiivselt Iteratiivne arendamine põhineb pideval avastamisel , leiutamisel ja rakendamisel . Projekti riskid on nähtavad juba elutsükli arendamise faasi varajases järgus , mis võimaldab nendega kiirelt ja asjakohaselt ümber käia ning võimalusel need elimineerida . Veebirakendused vajavad kiireid ja lühiajalisi tootmistsükleid , seda võimaldab juhitud iteratiivne arendamine . <arv>. Juhtida nõudmisi Nõudmiste juhtimine on süstemaatiline lähenemine , et välja tuua , organiseerida , korraldada ning juhtida muutuvaid nõudmisi , mida rakendusele esitatakse . Teades , et veebirakendustele esitatavad nõudmised muutuvad sama kiiresti kui trendid turul , muutub nende arengu juhtimine läbi kogu elutsükli veelgi olulisemaks . <arv>. Kasutada komponentidest koosnevat arhitektuuri Arhitektuur kirjeldab rakenduse komponentidest koosnevat struktuuri just nii , nagu komponendid omavahel seotud on , ning komponentide funktsioneerimise põhilisi mehhanisme . Teades , et veebirakendused on avatud ja laiendatavad ning võivad muutuda käitumise pealt , muutub just oluliseks komponentidest koosneva arhitektuuri kasutamine . <arv>. Modelleerida visuaalselt Mudel on reaalsuse lihtsustus , et paremini mõista keerukaid süsteeme , probleemi olemust , aga ka võimalusi probleemi lahendamiseks . Sellest , kuidas süsteem kirjeldatud on , sõltub suurel määral arusaamine süsteemist ja tema toimimisest . Süsteeme saab kirjeldada tekstiga , mis on inimesele mõistetav , kuid tekst ei süstematiseeri erinevaid fakte , mistõttu siit info leidmine on keeruline , veel enam , tekst ei ole ülevaatlik ning aja kujutamine tekstiga on raskendatud . Süsteemi on võimalik kirjeldada tabeliga , kus informatsioon on lahterdatud ja selle leidmine mingi tunnuse alusel kiire . Tabel annab küll hea ülevaate , kuid read ning veerud peavad olema seejuures selgelt defineeritud . Keerulist infot on kõige parem esitada skemaatiliselt . Joonised hõlbustavad süsteemi struktuuri , dünaamika , seisundite kajastamist , annavad pildi suurustest , seega loovad lisainformatsiooni . Samas ei saa skeemil olla liiga palju elemente . Veebiarhitektuurid , mis on hajusad , võivad olla keerukad modelleerida , arendada ja töös hoida . Sellisel tasemel keeruka süsteemiga tegelemisel on vajalik läbimõeldud arhitektuuri ja disaini olemasolu . Visuaalsed modelleerimisvahendid , mis baseeruvad UMLil , võimaldavad esitada süsteemi arhitektuuri ja disaini visuaalselt . <arv>. Verifitseerida kvaliteeti Kvaliteet on seotud nii arendusprotsessi kui ka toote endaga . Veebirakendused on enamjaolt üldkasutatavad ning läbikukkumine võib väga valusalt kätte maksta . Nõrga jõudluse ja usaldatavuse korral on raske säilitada kliente . Arvestades veebisaitide kasutusse laskmise sagedust , on testimine varases arengufaasis elutähtis . <arv>. Juhtida muutusi Veebirakendused koosnevad paljudest objektidest ja komponentidest , mida võivad luua ja muuta paljud inimesed , sagedasti ja paralleelselt . Ülimalt oluline on säärases pidevas arendusprotsessis saavutada kontroll muutuste üle . PERSONAL SOFTWARE PROCESS ( PSP ) Personal Software Process on , nagu nimigi ütleb , suunatud meeskonna üksikliikmele . PSP on juhend , kuidas parendada tarkvara arendamise protsessi üksiku töötaja korral . Meetodika , mille on loonud Watts Humphrey <arv>. aastal , annab arendajale meetrika , protsessi sammud ja vormingud , mille läbi saab arendusprotsessi parendada . PSP sisaldab protsessi parendamise kontseptsioone , mis on pärast mõningast kontekstide kohandamist edukalt kasutatavad RUPi karkassmetoodika korral . Põhilised eelised PSP kaasamisel RUPi on järgmised : ülesannete ja ajakava planeerimise vorming ( template ) - RUP ei taga eriti suurt toetust sellele , kuidas töögrupp peaks iteratsiooni jooksul tööd jaotama . RUPis võivad iteratsioonid kesta nädalast kuudeni , mille jooksul projektijuht annab ülesandeid ning kohustusi meeskonna liikmetele . Meeskonna üksikliikme töö planeerimist pakub PSP ning seeläbi saab ka projektijuht adekvaatset tagasisidet ja on võimeline tegema vajalikke korrektiive kontrollnimistud vigade otsinguks vormingud heade ideede ülestähendamiseks meetrika protsessi edasiviimiseks . ARENDUSMETOODIKATE KOKKUVÕTTEKS Rational Unified Process sisaldab palju kaasaegseid tarkvara arendamise praktikaid , mis on sobilikud paljude projektide ning organisatsioonide tarbeks . Need oleksid : tarkvara iteratiivne loomine nõudmiste juhtimine , korraldamine komponentidel põhinevad arhitektuurid tarkvara visuaalne modelleerimine tarkvara kvaliteedi pidev verifitseerimine kontroll muutuste üle tarkvaras . VEEBIRAKENDUSTE ARHITEKTUURI MODELLEERIMINE UMLis MODELLEERIMINE Mudelite ülesanne on aidata paremini mõista süsteeme neid teatud määral lihtsustades . See , mida modelleerimiseks valitakse , mõjutab probleemist aru saamist ning määrab rakendatavad lahedused . Veebirakendusi esitatakse tüüpiliselt läbi järgmise mudelikomplekti : kasutusjuhtude mudel ( Use Case Model ) teostamismudel ( Implementation Model ) dekompositsioonimudel ( Deployment Model ) turvalisuse mudel ( Security Model ) navigatsioonidiagramm kasutajaliidese mudel ... Kõige lihtsam on modelleerida süsteemi kindla otstarbega osasid - need on reaalse maailma objektid , mis luuakse lõpliku toote saamiseks . Veebiserveri või brauseri töö modelleerimine ei lihtsusta disainerite ja süsteemiarhitektide tööd , pigem muudab selle keerukamaks ja segasemaks . Oluline on disainida lehekülgi , nendes sisalduvaid linke , dünaamilist sisu nii serveri kui ka kliendi poolel . Milliste elementide abil ja kuidas veebilehte kirjeldada ? Tüüpiliselt on seosteks elementide vahel hüperlingid , mis esitavad navigatsioonilise tee kahe objekti vahel . Leheküljed peaksid sellisel juhul olema loogilise vaate klassid , lehekülje muutujad aga klassi atribuudid ning skriptid oleksid meetodid . Ainus probleem on , kuidas eristada kliendis ja serveril käivitatavaid operatsioone . Lihtsalt lehekülgede kujutamine klassidena ei aita oluliselt tõsta süsteemist arusaadavust . Probleemile pakub lahenduse stereotüüpide ( stereotype ) , siltväärtuste ( tagged values ) ning tõkete ( constraints ) kasutamine . Veebirakenduste põhiline arhitektuur koosneb brauserist , veebiserverist ja võrgust . Igal leheküljel on sisu ning selle formaatimise juhiseid , väljendatuna HTMLis . On ka lehekülgi , mis sisaldavad skripte ( nt JavaScript ) , mida töödeldakse kliendi poolel , lisades leheküljele dünaamilisust . Samas on ka lehekülgi , mille dünaamilisus asetseb serveri poolel , kus veebileht kasutajale kuvamiseks komplekteeritakse . Veebirakenduse modelleerimisel kirjeldatakse ära kõik süsteemi kuuluvad veebilehed ja nende omavahelised seosed ( st hüperlingid nende vahel ) . Teatud tasemel on veebisüsteemi komponentdiagramm justkui veebisaidi kaart . Kuna komponentvaade esitab vaid füüsilisi liideseid , ei sobi ta leheküljesiseste funktsioonide modelleerimiseks . See abstraktsioonitase on oluline just disaineri ja programmeerija seisukohast . Disainietapil kujutatakse veebilehti klassidena ning hüperlinke seostena klasside ( lehekülgede ) vahel . Et lehekülg omab nii atribuute kui ka operatsioone , mis võivad olla käivitatavad nii kliendi kui ka serveri poole peal , siis on otstarbekas kasutada nende eristamiseks stereotüüpe . Mõttekas on jagada leheküljed kahte erinevasse gruppi stereotüüpidega &lt; &lt; server page &gt; &gt; ja &lt; &lt; client page &gt; &gt; ehk serveril ja kliendis “ käivitatavad ” leheküljed . Nii loome juba mudelis kindla ettekujutuse , millist tüüpi leheküljega tegu on . Lehekülgi kujutavad klassid seostatakse omavahel samuti stereotüpiseeritud relatsioonidega . Näiteks kui serverileht loob kliendilehe , kasutatakse stereotüüpi &lt; &lt; build &gt; &gt; . Iga dünaamiline veebileht on ehitatud serverilehe poolt , kusjuures üks serverileht võib produtseerida mitu kliendilehte . Suhted , mis algavad alati kliendilehelt ja lõppevad kas teise kliendilehega või serverilehega , on hüperlingid ning nende jaoks oleks otstarbekas kasutada liigitit &lt; &lt; link &gt; &gt; . Siinkohal märkigem , et kasutatavate liigitite hulk ei ole piiratud . Iga disainer võib luua enda jaoks uusi stereotüüpe , millega sarnaselt kujutatavaid , kuid sisult erinevaid objekte kirjeldada . Siltväärtusi kasutatakse parameetrite defineerimiseks , mida edastatakse üle veebipäringute . Nii on liigitiga &lt; &lt; link &gt; &gt; assotsiatsiooni siltväärtused loetelu parameetrite nimedest ja võimalikest väärtustest , mida serverilehele töötlemiseks edastatakse . Põhiline andmesisestusviis veebirakenduste korral on kasutada vorme . Vorme modelleeritakse samuti klassidena , märkides stereotüübiks &lt; &lt; form &gt; &gt; . Operatsioone sellisel klassil ei ole , sest vorm asub leheküljel ja kõik operatsioonid , mida HTML-sildi &lt; form &gt; sees välja kutsutakse , kuuluvad tegelikult leheküljele . Vormi sisendid on kõik stereotüpiseeritud atribuudid , mis kuuluvad klassi liigitiga &lt; &lt; form &gt; &gt; . Soovituslikud vormi atribuutide stereotüübid on : &lt; &lt; button &gt; &gt; &lt; &lt; checkbox &gt; &gt; &lt; &lt; file &gt; &gt; &lt; &lt; hidden &gt; &gt; &lt; &lt; radio &gt; &gt; &lt; &lt; reset &gt; &gt; &lt; &lt; select &gt; &gt; &lt; &lt; submit &gt; &gt; &lt; &lt; text &gt; &gt; &lt; &lt; textarea &gt; &gt; Kuna vormid sisalduvad täielikult HTML-dokumendis , siis on nad kliendileheküljega seotud üle tugeva agregatsioonisideme . Lisaks sellele on iga vorm seotud serverilehega , mis töötleb edastatavaid andmeid . Säärast seost vormi ja serverilehe vahel on soovitav määratleda stereotüübiga &lt; &lt; submit &gt; &gt; . Üsna sageli kasutatakse veebisaitide realiseerimiseks raame , mis võimaldavad üheaegselt etteantud raamistruktuuriga kuvada kasutajale mitut veebilehekülge . Raamide modelleerimiseks kasutatakse stereotüüpe &lt; &lt; frameset &gt; &gt; ning &lt; &lt; target &gt; &gt; ja seoste jaoks &lt; &lt; targeted link &gt; &gt; . Klass liigitiga &lt; &lt; frameset &gt; &gt; , mis on analoog HTML-sildile &lt; frameset &gt; , koosneb sihtmärkidest , klassidest stereotüübiga &lt; &lt; target &gt; &gt; , HTML-sildile &lt; frame &gt; vastav stereotüüp oleks &lt; &lt; frame &gt; &gt; . Seega on kirjeldatud raam ja tema sihtmärgid , mille sisuks võib olla mis tahes kliendilehekülg . VEEBISAIDI NAVIGATSIOONI MODELLEERIMINE Üks kõige olulisemaid asju veebisaidi disainimise juures on navigatsiooni projekteerimine . Hea navigatsioon tagab kasutajale kiire ja arusaadava liikumise läbi kogu informatsioonivõrgustiku , näidates ka ära , kus kasutaja antud hetkel informatsioonistruktuuris asub ning kuhu tal on võimalik edasi liikuda . Üldjuhul on navigatsioon hierarhiline , mis võimaldab kasutajal liikuda tasemete vahel ning samal tasemel . Lisaks tavapärasele hierarhilisele navigatsioonile kasutatakse saidikaarte ( sitemap ) , indeksloendeid ning otsimisfunktsioone . Navigatsiooni eesmärgiks on näidata kasutajale , missugust informatsiooni veebisaidilt on võimalik leida ja kuidas see informatsioon organiseeritud on . Organiseeritus peaks olema kasutajale vähemalt osaliselt nähtav kogu aeg , see annab talle tagasisidet kohast , kus ta parasjagu asub . Kasutusel on mitmeid erinevaid navigatsioonimustreid ning nende kompositsioone . Millist navigatsioonivormi valida , sõltub juba konkreetsest loodavast rakendusest . Allpool on toodud lühiiseloomustused ning soovitused erinevate navigatsiooniviiside kasutamiseks . PÄISNAVIGATSIOON Üldlevinud navigatsioonivorm on omada horisontaalset menüüjaotust lehekülje alguses . Selline navigatsioon koosneb üldjuhul horisontaalsest ribast , millele on paigutatud lingitavad jaotised . Menüüjaotus jääb muutumatuks kogu saidi jaoks . Tavaliselt on hetkel valitud jaotis mingil viisil teistest eristatud , kas muutes esile tõstetud teksti värvi , rasvasust või jaotise taustavärvi või mõnel muul viisil . Lisaks sellele kuvatatakse tavaliselt veel valitud jaotise alajaotised . Siinkohal tuleb arvestada järgmisi piiranguid : Maksimaalne jaotiste arv on <arv>-<arv>. Säärane piirang tuleneb eelkõige lehitsejaakna laiusest , teksti suurusest ning keskmisest sõnapikkusest jaotise nimetuses . Kui on ette näha , et jaotiste arv võib tulevikus suureneda , tuleks sellega eelnevalt ka arvestada . Esitatavate tasemete arv on <arv>-<arv>. Tasemed tuuakse üksteise all ja seega peab arvestama , et iga lisanduv tase lükkab lehekülje tegelikku sisu allapoole . Esimese taseme jaotised peavad olema alati nähtaval , samas kui järgmistelt tasemetelt kuvatakse vaid eelneva taseme poolt määratud valikud . Seega , tasemel N kuvatakse vaid need jaotised , mis on määratud N-<arv> tasemel tehtud valikuga . Kui tasemete arv läheb suureks ( <arv>-<arv> ) , peaks kasutajale kindlasti kuvama tema asukoha viite . Antud navigatsioonitüübi eeliseks on see , et ta ei hõlma leheküljel vertikaalset pinda , mistõttu edastatavat informatsiooni saab kuvada kogu lehekülje laiuses . Üsna sageli jaotatakse navigatsioonialune pind kaheks : tulp , milles kuvatakse põhiinformatsiooni ehk lehekülje tegelikku sisu , ja tulp lisateabe kuvamiseks . Selline tulpadeks jaotus on küllaltki mõjus - inimsilmal on parem tabada teksti , mis ei ole liiga laial alal . Lisaks päisnavigatsioonile kasutatakse üsna sageli ka navigatsiooni kordamist lehekülje lõpus , et ei oleks vaja uuesti üles kerida . Alternatiiv oleks kasutada linki lehekülje alguses . VERTIKAALNE NAVIGATSIOON Vertikaalse navigatsiooniskeemi korral on lehekülg jaotatud vähemalt kaheks tulbaks , millest vasakpoolset kasutatakse navigatsioonimenüü esitamiseks ning parempoolset sisu kuvamiseks . Menüüde esitamisel on kasutusel erinevaid metoodikaid , vaatleme kolme levinumat . Variant I Esitatud on vaid esimese taseme jaotised . Järgnevate tasemete esitamiseks kasutatakse kas viiterida või päisnavigatsiooni kombinatsiooni . Variant II Esitatud on esimese taseme jaotised , mille valimisel tuuakse ära ka järgmise taseme menüü . Variant III Esimesel tasemel on esitatud vaid menüü nimetus ning alles järgmisel tasemel klikitavad jaotised . Antud navigatsiooniskeemi ainsaks suureks puuduseks võib pidada asjaolu , et jaotised on asetatud üksteise alla ja mida rohkem neid on , seda suurem vajadus tekib kasutajal kerimise järele . Eelisteks on aga hea skaleeritavus , mis tahes arvu menüüjaotiste lisamise võimalikkus ning lehekülje sisu kuvamise võimalus veebilehekülje algusest peale . Päisnavigatsiooni ja vertikaalse navigeerimise põhimõtteid ja erinevusi kujutab joonis <arv>. PÄIS-VERTIKAALNE NAVIGATSIOON Üks paindlikumaid ja kõige sagedamini kasutatavaid navigeerimisskeeme on päis-vertikaalne , sest ei vertikaalne ega ka päisnavigatsioon üksi suuda alati pakkuda lahendusi kõikidele esitatud nõuetele ja vajadustele . Võimalused tasemete jaotamiseks päises ja lehekülje vertikaalmenüü vahel : esitada esimese taseme jaotised horisontaalse menüüna ning kõik tema alajaotised , tasemed <arv>...N , vertikaalses menüüs esitada kaks esimest taset horisontaalse menüüna ning tasemed <arv>...N vertikaalses menüüs . Säärast lahendusviisi on eriti hea kasutada juhul , kui on oluline rõhutada nii esimese kui ka teise taseme jaotisi esitada esimese taseme jaotised vertikaalse menüüna ning kõik tema alajaotised , tasemed <arv>...N , päismenüüs . Selline lahendusviis ei ole eriti soovitatav , sest üldjuhul on esimese taseme menüü jaotiste arv väiksem kui teisel tasemel . NAVIGEERIMINE , KASUTADES VIITADE RIBA Navigatsiooni korraldamine , kasutades ainult viitade riba , on viis , mille korral kasutajale kuvatakse täpselt nii palju viitasid , kui ta on alates esimesest tasemest edasi liikunud . Igalt tasemelt on seega kasutajale korraga näha vaid üks jaotis . Viimane osutub antud lahendusviisi olulisemaks puuduseks suure tasemete arvu korral . Viitade riba - olgu siis horisontaalse või vertikaalse - kasutamise poolt räägib aga tema hea skaleeritavus . LÕHESTATUD NAVIGATSIOON Lõhestatud navigatsioon on hädavajalik , kui saidi suurus ületab mahu , mida on võimalik mõistlikult esitada päis-vertikaalse navigatsiooniga . Lõhestatud navigatsiooni korral on esimese taseme jaotised eraldatud järgmistest tasemetest . Juhul kui esimene tase on defineeritud kui N , siis lõhestatud navigatsiooni korral muutub pärast tasemel N valiku tegemist esimeseks tasemeks N+<arv> . Tekib olukord , mida võib nimetada “ saidiks saidi sees ” . Selline lähenemine vähendab navigeerimise keerukust veebisaidil . HORISONTAALNE NAVIGATSIOON Juhul kui lehekülg võib kujuneda pikaks ja puudub mõistlik tunnus , mille järgi teda struktureerida , on otstarbekas kasutada horisontaalset navigeerimist , mille korral jagatakse lehekülg väiksemateks osadeks . Põhilisteks navigeerimiselementideks kujunevad “ eelmine ” - “ järgmine ” tüüpi viited . Tüüpiliseks näiteks on otsimootori tulemused või slaidiesitlus veebilehel . On arusaadav , et üksühest vastust küsimusele , millist navigatsioonimeetodit kasutada , ei ole olemas . Kõik sõltub edastatava informatsiooni mahust ning veebisaidi eesmärgist . Seega , enne kui asuda valima konkreetset navigatsioonimeetodit , tuleks läbi mõelda kõikide versioonide eelised ja puudused ning seejärel valida optimaalne variant , pidades silmas ka süsteemi laiendamise võimalust tulevikus . VEEBIRAKENDUSE KASUTAJALIIDESED Seni oleme vaadelnud veebirakenduste modelleerimiseks sobilikke tarkvara arendamis- metoodikaid , disaini UMLi abil ning navigeerimise erinevaid tüüpe , kuid veebirakenduse kasutajaliidese väljanägemisest ning selle modelleerimisest oleme osavalt kõrvale hiilinud . See , milline näeb välja kasutajaliides , on üks põhilisi kriteeriume , mille alusel kasutaja otsustab , kas veebisait talle meeldib ja kas ta sinna ka naaseb . Seega , esmamulje on ülitähtis . Kui varem olid kasutajad justkui pealtvaataja rollis - nad installeerisid programmi , töötasid sellega , ja neil ei olnud valikuvõimalusi - siis veebirakenduste puhul on olukord teistsugune . Kasutajad sirvivad võrgus informatsiooni ning otsused veebisaidi meeldivuse ja sobilikkuse kohta langetatakse kohe . Kord juba hukka mõistetud saidile enam tagasi ei kiputa . Seega , üheks edu saladuseks on visuaalselt atraktiivne veebisait . See tähendab , et koos veebisaidi modelleerimisega tuleb intensiivselt tegeleda veebiliidese disainiga . Liidese disain jagatakse tinglikult <arv> etapiks . Vaatleme neist igaüht veidi lähemalt . <arv>. Kasutajaliidese ülddisain ( Creative Design Brief ) - antud etapil kirjeldatakse üldiseid juhtnööre kasutajaliidese disainiks . Need juhtnöörid määravad : veebisaidi üldmeeleolu - kas lehekülg on formaalne , ametlik , mänguline , teenustele orienteeritud , konservatiivne või provotseeriv kuidas veebisaiti kasutama hakatakse rakendatavad võrgubrauserid kas kasutatakse raame piirangud värvikasutusele nõuded graafikale milliseid lisavidinaid kasutada - JavaScript , animatsioonid , multimeedia . <arv>. Navigatsioonidiagramm ( Navigation Map ) - ülevaade veebirakendusest , saidi kasutamis- ja navigeerimisvõimalustest . Navigatsioonikaart esitatakse tavaliselt puudiagrammina . Skeemi iga tase näitab , mitu klikki peab kasutaja tegema soovitud tasemele jõudmiseks . Tähtsamad piirkonnad peavad alati olema vaid ühe kliki kaugusel , seega annab navigatsioonikaart meile parima ülevaate olukorrast . Navigeerimisskeemi loomine projekti varajases arendamisfaasis on kasuks nii tellijale kui ka arendajapoolele : kasutajatel on parem ülevaade , kuidas veebisaiti hakatakse kasutama , ja arendajatel on lihtsam mõista saidi funktsionaalsust . Navigatsioonikaart on tuletatav kasutusjuhtude kirjeldusest , viimane määrab ju , milliseid teenuseid süsteem lõpptarbijale pakkuma hakkab . Just sel põhjusel tuleks navigatsioonikaart luua kohe pärast esialgsete kasutusjuhtude loomist . Navigatsioonikaardi loomine algab põhiliste akende või veebilehtede defineerimisega iga kasutusjuhu tarvis . Antud juhul on tegu loogiliste lehekülgedega , sest pole veel teada , kuidas leheküljed tegelikult välja hakkavad nägema , millised on nende täpsed parameetrid ja neile esitatavad nõuded . Navigatsioonikaarte võib luua nii kogu veebisaidi tarvis kui ka üksikute funktsionaalsete üksuste või kasutajate kaupa . Suuremate süsteemide korral koostatakse tavaliselt üks navigatsioonikaart iga kasutaja kohta . <arv>. Kasutajaliidese kompositsioon ( Creative Design Comps ) - eesmärgiks on pakkuda tellijatele erinevaid visuaalseid lahendusi nende poolt tellitud veebirakendusele . Kasutajaliidese väljavalimine on iteratiivne protsess , mille jooksul pidevalt kahandatakse valikute hulka , kuni jõutakse lõpliku disainilahenduseni . Lahendusvariante peaks kindlasti olema rohkem kui üks . Sobiva lahenduse valimiseks vajatakse tavaliselt kolme iteratsiooni . Kompositsioon realiseeritakse harilikult lihtsate piltidena , mis ümbritsetakse brauseriakna kujutisega . Säärane lähenemine on tunduvalt odavam kui HTMLis prototüüpide loomine , sest konkreetne graafiline lahendus on veel selgitamisel . Teisalt aitab lihtsate kompositsiooniliste piltide loomine vältida väärarusaama , et veebisaidi prototüüp on juba valmis . <arv>. Veebisaidi disaini elemendid ( Web Design Elements ) - graafika , so . mitmesugused pildid , millest saidi disain kokku pannakse . Veebisait peaks olema ühtse disainiga - ühe veebisaidi piires on soovitatav kasutada sarnaseid graafilisi komponente . Need graafilised komponendid tuleks luua projekti algfaasis koos nende kasutamise üldpõhimõtete kirjeldusega , tagades , et kõik projekti osapooled saavad üheselt aru , kus ja millal antud disainielemente kasutatakse . Graafiliste komponentide hulka kuuluvad mitmesugused nupud , kujutised , logod , taustad , jooned . Tähelepanu tuleks pöörata ka graafika kvaliteedile , hilisem ümbertegemine on tunduvalt kulukam . Disaini graafilised elemendid luuakse samaaegselt veebisaidi algse prototüübiga . Antud etapi sisendiks on kasutajaliidese kompositsioon , millest saadakse graafilised komponendid prototüüpide jaoks . <arv>. Algne kasutajaliidese prototüüp ( Initial Web UI Prototype ) - areneb välja kasutajaliidese disaini kompositsioonist . Prototüüp tagab vaid osalise süsteemi teostuse , sest esitatakse üksnes peamised ja kõige vajalikumad kasutusjuhud . Kui prototüüp on valmis ja heaks kiidetud , on õige aeg luua kindlad juhtnöörid kasutajaliidese disainiks . Määratakse kasutuselevõetavad graafilised elemendid , värvid , kirjastiilid , kaskaadsed stiililehed ning navigatsiooniliste elementide käitumine . <arv>. Täielik veebisaidi kasutajaliidese prototüüp ( Full Web UI Prototype ) - on esialgse prototüübi laiendus selliselt , et kogu veebisaidi funktsionaalsus on kaetud . Prototüüp peaks sisaldama täieliku navigeerimise ja kõiki visuaalseid komponente . Kasutatakse kas reaalseid või testandmeid . Antud etapi eesmärgiks on saavutada üksmeel tellijaga iga konkreetse kasutajaliidese kohta - iga leht vaadatakse üle ja hinnatakse tema skoopi , sobivust ja iseloomu . <arv>. Täielik navigeerimiskaart ( Full Navigation Map ) - luuakse pärast täieliku prototüübi valmimist . Täielikul navigeerimiskaardil tuuakse ära kõik teadaolevad leheküljed kasutajaliideses . KOKKUVÕTTEKS Nagu veenduda võisime , on pealtnäha lihtsana näiv veebirakenduste loomine küllaltki mahukas tööprotsess . Juba kasutajaliidese enda disain hõlmab seitset erinevat etappi . Oluline on luua vastupidav ja paindlik komponentidest koosnev arhitektuur , mis koos läbimõeldult disainitud kasutajaliidesega annaks soovitud lõpptulemuse , tagades veebisaidi külastajate rahulolu . gap desc='references'&gt; Tõlkinud Vello Hanson I.Hannula , R.Linturi - sada nähtust <arv> - <arv> / Virtuaal-Helsingi ja kübermutt <arv> Sea aasta Islami aasta <arv> Maailma rahvaarv endiselt <arv> miljardit Taliolümpia Erimaterjalide äriline tootmine kosmoses on alanud Virtuaalorganisatsioonide osa maailma majanduses on <arv>% . Suur ühtsusteooria on loodud Nähtamatu pilli võlu Mets maailma geenipangaks Kaabelparv alustab liiklust Helsingi ja Tallinna vahel Aistingpüünised - Peetruse kalasaak või kogu kalapüügi lõpp ? Nada üritas hävitada vananemistõrje uuringute faile Küberhotellid on ohtlikud südamehaigetele Ja Jumal ütles : “ Maast tärgaku noor rohi üles , rohud , mis seemet kannavad , viljalised puud , mis vilja kannavad , oma soo järele , kus nende seeme sees on maa peal . ” Piibel . Esimene Moosese raamat , <arv>. peatükk Muusikaarvustus CompuMedias - <arv>.<arv>.<arv> NäHTAMATU PILLI VõLU Passport Ltd korraldatud “ nähtamatu pilli ” kontsert Dallases pakkus unustamatut elamust Ümbrus oli maaliline : linna endine tööstuskeskus , mis nüüd pärast vananenud tootmise lõpetamist on täis pitoreskseid varemeid . Kontsert oli erandlikult mittevirtuaalne ja seda ei edastatud võrkudesse . Põhjus on selles , et Passport Ltd pole veel saanud mõnedele kontserdi elementidele hologrammvasteid . Eeskava oli maitsekalt koostatud kahe eri ajastu originaalsalvestistest . Kontserdi esimeses osas oli kaks näidet möödunud sajandi muusikast , teine osa koosnes tänapäeva muusikaautorite toodetest . Kontserti alustas publiku taha ilmunud ruumiline mets , kust hakkas salvestisena kõlama <arv>. sajandi teisel poolel elanud Pjotr Tšaikovski loodud viiulikontsert . Nooremaile lugejaile olgu öeldud , et tollal kirjutati heliteosed algul paberile ja seejärel mängis neid suur sümfooniaorkester füüsiliselt . Tõelist viiulit mängis samuti füüsiline isik , praegusel juhul Oleg Kagan . Teos oli salvestatud väga vana tehnikaga , kuid kahtlemata oli metsa keskelt tulvavas muusikas omalaadset võlu , ehkki muusika ja salvestise iga olid selgesti tajutavad . Meeldivat muljet lisas Steven Playbergi museaalne hologrammballett oma nümfide ja faunidega . Teisena esitati vanast muusikast <arv>. sajandi teise poole lemmikansambli The Beatles pala “ Michelle ” , mis koos temaga ühendatud , publiku peade kohal keerleva abstraktse ruumilise vaatemänguga oli magnetiliselt kütkestav , ja seda oli märgata ka publiku reageerimisest . Olen selle pala fragmente aeg-ajalt kuulnud süntetiseeritud variantidena multimeediumreklaamides , kuid nüüd sain seda esimest korda nautida originaalsalvestisena . Kontserdi teine osa algas sellega , et vasakule seinale ja pea kohale ilmus taevas Marsi pinnalt vaadatuna . Taevast hakkas kostma Space Girls'i pikk kontsert “ I Wanna Make Love To You On That Red Planet ” . Tüdrukud laskusid Marsi taeva keskpunktist otse publiku südametesse . Nende peibutav tehisihu-show ( kui see ikka oli tehisihu ! ... ) kutsus esile tõelise aplausitormi , mis viivitamatult salvestati muusikateaduse instituudi keskmällu ja tõstis selle ansambli turuindeksit kaheksa punkti võrra . Enne viimast pala tutvustas “ nähtamatu pilli ” väljatöötaja Jack Michaelson oma muusikariista . Selle instrumendi nähtava karkassi moodustavad heligeneraatorid , mis tekitavad teatavaid ultrahelist ehitatud seinu või tiibpaneele . Ultraheli toimib ühtaegu nii kandelainetena , mida moduleerides luuakse heli , kui ka seintena , mille vahelt tundub tulevat heli . Seinte kuju ja kaldeid muutes pannakse hääl tulema kas või kilomeetri kõrguselt . Kui ta oma “ nähtamatuga ” mängis “ Virtuaalunelmaid ” , mille ta algselt lõi käsiinstrumendiga , tundus heli kostvat uskumatutest kohtadest ja suundadest . Ka ruumimuljed olid mitmekihilised . Vapustavaim oli hetk , mil heli näis ühtaegu tulevat otse kõrva juurest ja kilomeetri kõrguselt taevast ning kajad vastasid mitmest eri suunast . Nii põnevat ruumikogemust pole mul kunagi varem olnud . Seda võiks ehk võrrelda nn. tajuplahvatusega , mis tekitatakse psühhoserveritega . Kogemus tervikuna oli ülimalt meeldiv . See ületas peaaegu kõiki seni kogetud virtuaalelamusigi . Ütleksin , et “ nähtamatul pillil ” on ees suur tulevik - eriti , kui ta suudetakse muundada virtuaalelamusteks ja kui suurfirmad suudavad temast kujundada sobivalt lihtsa , kompaktse ja äriliselt väärtusliku toote . Uudis NetWebis - <arv>.<arv>.<arv> NADA üRITAS HäVITADA VANANEMISTõRJE UURINGUTE FAILE Loomuliku arengu organisatsiooni Nada löögirühm üritas möödunud ööl Quebecis hävitada BioMechanics Ltd faile Löögirühm oli salaja toimetanud firma infokeskusesse hulga nanolutikaid , mis olid programmeeritud otsima teed infokeskuse hologrammiplokkidesse , tungima alumiiniumoksiidide juurde ja neid õgima . Hologrammilaserite rubiinid on korundid , st. alumiiniumoksiidid . Tulemuseks oleks olnud kõigi mäluhologrammide kustumine ja failide hävimine . Firma juhtkond kinnitab , et failid polnud siiski ohus , sest osa neist oli graveerkujul ja enamikust olid peale selle olemas varukoopiad USA-s kontserni tütarfirma infokeskuses , kus neid värskendatakse kord nädalas . Nada teatas täna , et rünne oli tema kätetöö . See organisatsioon peab igasugust geneetilist ja tehislikku inimese täiustamist ebainimlikuks ja loomuvastaseks ning võitleb selle vastu . BioMechanics Ltd on juba aastaid püüdnud lahendada seda geneetilist koodistikku , mis põhjustab vananemist . Ta on suutnud nende koodide toime välja selgitada niisuguses ulatuses , et firma teatel lahendataks vananemise probleem mõne aastaga . Juba seninegi uurimistöö on andnud paljulubavaid tulemusi . Praegu geeniravikatsetes osaleva <arv> inimese oodatav eluiga on pikenenud hinnanguliselt umbes kümne aasta võrra . Rahvastiku struktuur variseb Firma uuringutel on siiski rohkesti vastuseisjaid . ÜRO-s on paljud maad nõudnud uuringute lõpetamist , kuid teistsugustel põhjustel kui Nada . Kui inimese iga saab pikemaks venitada , tähendab see paljusid ülemaailmseid probleeme . Kõigepealt , geneetiline ravi oleks kallis ja seda suudaksid endale lubada ainult rikaste maade elanikud . Sellest tuleneks vältimatult olukord , kus arengumaades lisanduks rahvastik sünnituste , rikastes maades aga vananemise teel . BioMechanics Ltd teadlased ütlevad , et inimese keskmise eluea saab tõsta <arv> aastani . Kui aga - nagu nad väidavad - seejuures pikeneb inimese fertiilne iga ja <arv>-aastased on võimelised sünnitama , tähendab see suurt vapustust kõigis sotsiaalsetes struktuurides . Lapsel võib näiteks olla vanavanaema-ealine õde . Rahvastiku ea kasvamisel on raskustes ka pensionisüsteemid . Eluea kasv lisab haigusi Üks suurimaid probleeme oleks aga raviteenuste vajaduse kasv . Ehkki vananemishaigused siirduvad hilisemasse ikka , sagenevad vähktõbi , nakkushaigused ja muud keskkonnast tulenevad haigused , sest koos vananemisega kumuleerub ka vastuvõtlikkus keskkonnamõjuritele , näiteks kantserogeensetele ainetele . Selle tulemusena oleks inimesel eluea jooksul senisega võrreldes keskmiselt palju rohkem haigusi . See omakorda kukutaks kogu tervishoiusüsteemi ja selle rahastuse . Hoolimata kõigist vastuväidetest on BioMechanics Ltd teatanud , et jätkab oma uuringuid , sest firma arvates toovad need inimkonnale pigem kasu kui kahju . Nada seevastu teatab , et tal on mitmeid nanolutikate variante ja et ta kavatseb neid kasutada oma eesmärkide saavutamiseks . Nanolutikad on sajandikmillimeetri suurused robotid , neid on välja töötanud ka kaitsejõud vastase sideühenduste ja sõjatehnika hävitamiseks . Internet Now - <arv>.<arv>.<arv> KüBERHOTELLID ON OHTLIKUD SüDAMEHAIGETELE EL-i meditsiinikomisjon soovitab riskirühmadel vältida küberhotelle . Tänavu on neis juba <arv> inimest surnud südamerabandusse . Arstide üldine arvamus on , et surmajuhtumid tulenevad ebaharilikust pingest ja organismi intensiivistunud talitlusest . Komisjoni arvates ei tohiks riskirühmadesse kuuluvad inimesed mingil juhul kasutada küberhotelle üksi . Peale selle tuleks neil täielikult vältida pingestavaid ja ahistavaid küberkeskkondi . Eriti ohtlikeks on muutunud küberülikonnad , sest nad võimendavad emotsioone ja nende jõulisust . Küberhotellide populaarsus on viimasel ajal kiiresti kasvanud eeskätt eakate inimeste hulgas ning paljud virtuaalbüroode kompleksid on muudetud küberturistide hotellideks . Virtuaalturismile on küberturismi näol tekkinud arvestatav konkurent , ehkki küberturism on veel suhteliselt kallis . Küberhotelli sisustus on luksuslik . Kõiki seinu saab muuta liikuvaks pildiks . Peale selle tugevdavad emotsionaalsed mõjurid , puute- ja lõhnaaistingud ning küberülikond reaalsuse muljet veelgi ja sellisel viisil , nagu seda ei suuda tavaline kodudes üsna levinud virtuaalvarustus . Tubades on lisaks ülikondadele ka virtuaalkiivrid näiteks allveeseikluste või muude elamuslike olukordade tarbeks . Seikleja võib sel juhul kogeda oma kaaslase ettevõtmisi virtuaalmaailma kaudu . Helsingi , <arv>.<arv>.<arv> Soomes kinnitab Finnair , et vähemalt esialgu ei ole küberturism veel vähendanud lennureise . Finnairi teatel on küberhotellide hinnatase veel nii kõrge , et lennukeile piisab reisijaid . Firma ei usu ka , et küberturism tekitaks lennureiside sellise järsu languse , mis tabas ärireise videonõupidamiste levimisel . Finnair ütleb , et eraturism on tegelikult hakanud kasvama . Põhjuseks arvatakse olevat töö ja vaba aja mõistete muutumine . Kaugtöö korral ei ole inimene enam seotud kindla aja ega kohaga . Paljud reisivad seetõttu praegu pidevalt ja teevad oma tööd eri aegadel maailma eri nurkades . Finnair usub , et see tendents tugevneb veelgi . Martti Allingu , Maksuamet WAP-protokolli turvaprobleemid SISSEJUHATUS Viimastel aastatel on toimunud plahvatuslik Interneti levik ning kiire mobiilside areng . Mobiiltelefonist on saanud üldkasutatav tarbeese , mitte luksuskaup , nagu ta oli seda veel kümmekond aastat tagasi . Vastavalt Rahvusvahelise Elektriside Liidu ( International Telecommunication Union ) ennustustele ületab mobiiltelefonide kasutajate arv juba aastaks <arv> tava- telefonide kasutajate arvu [ <arv> ] . On selge , et mõlema tehnoloogia kasvupotentsiaali arvestades peaks parima tulemuse andma nende kahe arengusuuna integratsioon , st. mobiilne Internet . Firmadele , klientidele ja teenuse pakkujatele ei piisa enam lihtsalt Interneti kasutamisest . Nad vajavad teenuseid , nagu pangandus , kaubandus , meditsiin , mobiilne kontor , mis nõuavad väga tugevat turvalisust . Selge on see , et turvalisust nõutakse ka mobiilse andmeedastuse puhul . MOBIILSIDE TURVALISUSE SPETSIIFIKA Mobiilse andmeside turvaliseks muutmine nõuab veel rohkem pingutust kui tavalise , traadiga andmeside turvamine . Mobiilsed seadmed võivad kergesti kaotsi minna ja neid on kerge varastada . Mobiilsidekanal on avatud kanal ja temale ligipääs on lihtsam kui traadiga sidekanalile ( nii pealtkuulamiseks kui segamiseks ) . Info liikumine traatsidevõrgust mobiilsesse võrku ning vastupidi nõuab protokollide ja andmete konverteerimist . Mobiilsed seadmed omavad tavaliselt palju vähem ressursse sertifikaatide , võtmete , viirusetõrjete ja muude turvalisusfunktsioonide käsitlemiseks kui statsionaarsed seadmed . Mobiilsetelt seadmetelt oodatakse suuremat kasutamismugavust kui statsionaarsetelt . Turvameetmed aga kipuvad tihti kasutamismugavust kahandama . Nagu näha , eksisteerib mobiilside puhul mitmeid turvalisuse probleeme , mida tavalistes traadiga sidevõrkudes ei eksisteeri . Ükski nendest probleemidest ei ole aga ületamatu . Tuleb lihtsalt arvestada mobiilseadmete ja mobiilsidevõrkude spetsiifikat ja luua sellele vastav kindel turvapoliitika . Peale selle arenevad pidevalt mobiilsete seadmete ja sidevõrkude võimalused ning mitmed organisatsioonid , nagu näiteks WAP-Foorum , töötavad pidevalt mobiilside protokollide ja nende turvalisemaks muutmise kallal . WAP-PROTOKOLL Üks mobiilside protokoll , mis üritab pakkuda turvalist mobiilset andmesidet , on WAP-Foorumi poolt välja töötatud “ Wireless Application Protocol ” ehk WAP-protokoll . WAP-protokoll on avatud ülemaailmne standard , mis lubab mobiilseadmetele lihtsat ja vahetut juurdepääsu Internetile ja teistele arenenud telefoniteenustele [ <arv> ] . WAP-protokoll on leidnud väga suurt toetust paljude mobiilsidega tegelevate firmade hulgas . Hoolimata sellest , et paljud peavad WAP-protokolli liiga algeliseks ning siiani ei ole ta täitnud kõiki temale pandud ootusi , kasvab WAP-protokolli toetavate mobiilsete seadmete arv väga kiiresti Uute tehnoloogiate , nagu GRPS ( General Packet Radio Service ) ja EDGE ( Enhanced Data rates for GSM Evolution ) , turule jõudmisega ning uute WAP-protokolli spetsifikatsioonide ilmumisega peaks WAP-protokoll saama veelgi tuult tiibadesse ja lunastama paljud temale pandud ootused . TRAADITA VÕRGU TRANSPORDIKIHI TURVALISUSE PROTOKOLL WAP-protokolli turvalisuse eest vastutab “ Traadita võrgu transpordikihi turvalisuse protokoll ” ( WTLS ) . WTLS ( Wireless Transport Layer Security ) tagab WAP-protokolli kliendi ja WAP-lüüsi vahelise ühenduse turvalisuse transpordikihi tasemel . WTLS-protokoll põhineb Interneti TLS-protokollil ( Transport Layer Security protocol ) [ <arv> ] , kuid on optimeeritud kasutamiseks kitsa ribalaiusega sidekanalites . WTLS on loodud funktsioneerima ühendusega edastuse ja/või datagramm-transpordiprotokollide peal . WTLS-kiht on valikuline ja algseadistuses on WAP-protokolli turvalisus tagatud ainult kandja turvalisusega . Selge on see , et paljudel juhtudel aga ainuüksi kandja poolt pakutavast turvalisusest ei piisa . WTLS-protokoll ei ole aga iga kord kasutusel , kuna kõik turvalisuse tagamise võtted nõuavad ressursse , mis on aga mobiilsete seadmete puhul tugevalt piiratud . Seepärast luuakse turvaline ühendus ainult sideseansi osapoolte soovil . WTLS tagab : Sõnumite terviklikkuse , et olla kindel sõnumite andmeterviklikkuses . Sõnumite krüpteerimise ja dekrüpteerimise , et ühendust ei oleks võimalik pealt kuulata kolmanda osapoole poolt . Serveri ja kliendi autentimise ja salgamise vääramise ( digitaalsertifikaadid ja digitaalallkirjad ) . WAP-PROTOKOLLI HAAVATAVUS [ <arv> ] [ <arv> ] Kuigi WAP-protokolli on üritatud teha väga turvaliseks , on seoses traadita võrgu eripärade ja TLS-protokolli ( Transport Layer Security protocol ) tehtud muudatustega WTLS-protokolli tekkinud mõned potentsiaalset ohtu kujutavad turvaprobleemid . Puudub otspunkt-otspunkt krüpteerimine . WAP-protokoll defineerib kahe osapoole , WAP-protokolli kliendi ja WAP-teenust pakkuva serveri vahelise infoliikluse läbi kolmanda osapoole - WAP-lüüsi . Siiski katab WAP-protokolli spetsifikatsioon vaid ühenduse WAP-protokolli kliendi ja WAP-lüüsi vahel . Ülejäänud ühenduses loodetakse olemasolevatele , Internetis kasutusel olevatele protokollidele ( enamjaolt kasutatakse küll turvalist soklikihti ( Secure Socket Layer - SSL ) ) . Üldjuhul töötab see lahendus hästi , kuid esineb ka kõrget turvalisust nõudvaid rakendusi , mille puhul sellisest lahendusest ei piisa . Informatsioon asub WAP-lüüsi mälus mingit aega krüpteerimata kujul ja on nii potentsiaalselt pealtkuulatav . Kuna kasutatakse kolmanda osapoole WAP-lüüsi , peab see kolmas osapool olema täiesti usaldatav . Otspunkt-otspunkt turvalisus peaks järgmiste WAP-protokolli spetsifikatsioonide kinnitamisel paranema . Juba praegu on WAP-Foorumi koduleheküljel avaldatud ( kuid mitte veel kinnitatud ) spetsifikatsioonid täieliku otspunkt-otspunkt turvalise ühenduse loomiseks . Esialgses versioonis eeldavad need küll seda , et täieliku turvalise otspunkt-otspunkt ühenduse loomiseks peab WAP-lüüs asuma teenuse pakkuja sisevõrgus . Kui teenuse pakkuja oma isiklikku WAP-lüüsi ei oma , peab ta jätkuvalt usaldama kolmanda osapoole WAP-lüüsi , kus informatsioon on mingil ajahetkel krüpteerimata kujul . Kõigi kliendi ja serveri vaheliste ühenduste samaaegne hõivamine . Kuna enamik tänapäeva WAP-lüüse lubavad vaid teatud arvu samaaegseid ühendusi ( sõltuvalt litsentside arvust ja serveri ressurssidest ) , annab salgamise vääramise rünnakuid organiseerida veel hõivates kõik võimalikud ühendused kliendi ja serveri vahel . Seda on näiteks võimalik teha , ujutades WAP-lüüsi üle kliendi tervitussõnumitega . Sellise rünnaku ohtu on küll võimalik vähendada , lubades ühelt IP-aadressilt vaid ühe ühenduse korraga , kuid täielikult see rünnaku ohtu siiski ei elimineeri . Rünnakud tervitussõnumite saatmisega . Kui WAP-ühenduse loomisel on kasutusel datagramm-transpordiprotokoll , ei ole võimalik sellelt saada adekvaatset informatsiooni ühenduse oleku kohta antud hetkel . Ainuke viis seda informatsiooni saada on ülemistelt kihtidelt tulevad lõpetamisteated . Kui kliendipoolne lõpetamisteade aga WAP-lüüsini ei jõua , tekib olukord , kus WAP-lüüs ei suuda kindlaks teha , kas järgnev kliendi tervitussõnum on tulnud osapoolelt , kellega hetk tagasi ühenduses oldi , või hoopis mingi kolmanda osapoole poolt . Hoiatusteadete saatmine lihtteksti kujul . Kuna WTLS-protokollis saadetakse mõned hoiatusteated üle võrgu lihtteksti kujul , siis eksisteerib võimalus kasutada seda ära salgamise vääramise rünnakute korraldamiseks . Kuigi kasutatakse kontrollsummasid , eksisteerib vähemalt üks veateade , mille kontrollsumma , järjekorranumber ja sisu on teada . See on ChangeCipherSpec . Kui server või klient nüüd selliste hoiatusteadetega üle ujutada , muutub turvalise side loomine võimatuks . Väljaarvutatavad algvektorid . Sümmeetriliste võtmete kaitsmiseks kasutatakse WTLS-protokollis CBC plokkšifreid , mis omakorda kasutavad algvektoreid ( IV ) . Algvektorite kasutamine peab tagama , et jagatud saladust ei saa toore jõuga lahti murda . Algvektorid hoiavad selle võimaluse ära , kuna paketi lihtteksti plokk on vastava algvektoriga XOR tehtega ühendatud . See peab garanteerima , et lahtimuukimisel ei ole kasu ka algse paketi sisu tundmisest . Kuna WTLS-protokoll toetab mitteloodetavaid datagramme , mis võivad kaduma minna , saabuda dubleeritult või vales järjekorras , vajab CBC iga paketi krüpteerimiseks uut algvektorit . Kasutatav algvektor saadakse paketi järjekorranumbri ja originaalalgvektori XOR-tehtega ühendamisel . Originaalalgvektor arvutatakse käepigistuse käigus kokkulepitud väärtuste alusel . Kõik need kokkulepitavad väärtused , nagu client_random , server_random ja järjekorranumber , saadetakse aga üle võrgu krüpteerimatult , nii et neid on võimalik pealt kuulata . Nimetatud andmeid teades on võimalik välja arvutada kõik kasutatavad algvektorid , mis omakorda võimaldab kasutada toorest jõudu avaliku saladuse lahtimurdmiseks . XOR MAC šifrid . WTLS-protokoll toetab teiste seas ka <arv>-bitist XOR MAC algoritmi . XOR MAC algoritmi tööpõhimõte on järgmine : sõnum täidetakse nullidega , jagatakse <arv>-baidisteks plokkideks ja siis pannakse need kokku XOR tehet kasutades . XOR MAC šifrid ei paku jada numbrite ( stream ciphers ) kasutamise korral , olenemata võtme pikkusest , mitte mingisugust sõnumiterviklikkuse kaitset . Kui šifritekstis inverteeritakse bitt n , siis MAC-koodi ( Message Authentication Code ) saab sellega vastavusse , inverteerides ka seal ühe biti ( n MOD <arv> ) . Siit tulenedes õnnestub sõnumiterviklikkuse test ka juhul , kui sõnumi teksti on tegelikult muudetud . Kuigi ka WAP-protokolli spetsifikatsioonid hoiatavad , et XOR MAC algoritm ei taga kõrget turvalisust ja seda peaks kasutatama vaid juhul , kui mobiilsel seadmel on väga väike protsessori jõudlus , kujutab see endast siiski märkimisväärset turvalisusriski . <arv>-bitine DES krüpteerimine . <arv>-bitine DES ( Data Encryption Standard ) krüpteerimine kasutab WTLS-protokolli korral võtme materjaliks <arv> baiti . Kuna DES võti sisaldab igas baidis paarsusbitti , on <arv>-bitise DES krüpteerimise korral efektiivne DES võtme pikkus tegelikult ainult <arv> bitti ( <arv>x<arv>=<arv> ) . Selle probleemi lahendamise kallal WAP-Foorum töötab ja tulevikus soovitatakse kasutusele võtta <arv>-bitine DES , mis WAP-protokolli puhul annab reaalselt <arv>-bitise võtme pikkuse . PKCS rünnak . Kui süsteem annab sissetungijale mingilgi moel teada , kas pakutud võti on õige või mitte , öeldakse , et süsteemis on oraakel . Kasutades sellist oraaklit , võib sissetungija üritada leida õiget võtit , proovides läbi kõik võimalikud võtmed ja uurides süsteemi vastust nendele katsetele . RSA ( Rivest-Shamir-Adleman algorithm ) allkirjad ja krüpteerimine tehakse vastavalt PKCS ( Public-Key Cryptography Standards ) versioonile <arv>.<arv>. On tõestatud , et kui protokoll sisaldab oraaklit , mis võimaldab öelda , kas pakett omab õiget PKCS täidist ( padding ) , on RSA teated võimalik toore jõuga dekrüpteerida . WTLS-protokollis võivad mõnede rakenduste puhul sellisteks oraakliteks osutuda veateated ( bad_certificate ja decode_error ) . Selle turvalisusriski vältimiseks tuleks PKCS versiooni <arv>.<arv> asemel kasutusele võtta versioon <arv>.<arv>. Kirje tüübi väli saadetakse krüpteerimatult . Pealtkuulajal võimaldab see kindlaks teha , kas parajasti toimub võtmete vahetus või saadetakse veateateid ( veateate täpset tüüpi see siiski ei paljasta ) . Diffie-Hellmanni võtmete vahetus . WTLS-protokollis on eeldefineeritud väärtused , mille põhjal Diffie-Hellmanni võtmed arvutatakse ette antud . Grupi järjestus korrutatavate ( multiplicative ) alamgruppide jaoks on aga jäetud välja . Selle grupijärjestuse väljajätmine teeb võimatuks kontrollida , kas etteantud avalik väärtus ( public value ) kuulub õigesse korrutatavasse alamgruppi või mitte . Seda ei loeta küll väga suureks probleemiks , kuid võib siiski mõjutada autentimise loodetavust . Kuigi WTLS-protokoll põhineb tihedalt TLS-protokollil , tundub et ta on rünnakutele palju vastuvõtlikum . Osaliselt on see muidugi põhjustatud mobiilside eripärast , kuid selge on ka see , et arenguruumi jätkub . KOKKUVÕTE WAP-Foorum on koostanud hulgaliselt spetsifikatsioone ja ettekirjutusi , mis peaksid tagama WAP-protokolli kasutajatele võimaluse turvalise side kasutamiseks . Praegune WAP-protokolli turvalisus ei ole aga veel siiski sellisel tasemel , nagu ta olla võiks . Kuigi WTLS-protokoll ei sisalda väga kriitilisi turvaauke , vajab see veel siiski mitmeid parandusi ja muudatusi . WTLS-protokoll on valikuline ja seda kasutatakse vaid ühenduse osapoolte soovil . See jätab võimaluse , et side võib jääda potentsiaalselt kaitsmata ning kasutaja ei pruugi alati teada , kas loodud ühendus on turvaline või mitte . Kuigi WAP-Foorum soovib lähitulevikus pakkuda ka turvalist otspunkt-otspunkt ühendust , siis praegu kasutusel olevate WAP-seadmetega on turvalise otspunkt-otspunkt side loomine ( ilma kolmanda osapoole WAP-lüüsi usaldamata ) võimatu . Üks WAP-protokolli kõige suurematest puudustest on veel see , et kuigi on võimalik kasutada ka tugevaid turvalisuse algoritme , laseb WAP-protokoll kasutajatel või teenuse pakkujatel tihti valida väga nõrku turvalisuse algoritme : XOR MAC šifreid , mis ei taga täielikku sõnumiterviklikkuse kontrolli <arv>-bitist DES krüpteerimist , kus võtme tegelik pikkus on vaid <arv> bitti PKCS versiooni <arv>.<arv> , mis sisaldab oraaklit ja sellega lubab RSA-algoritmiga krüpteeritud teateid toorest jõudu kasutades lahti murda Diffie-Hellmanni võtmete vahetus Kuigi WAP-Foorumi soovitustes on kirjas , et kasutajaid peaks teavitama ühenduse turvalisuse tasemest , on karta , et seda soovitust alati ei jälgita . Selletõttu ei pruugi kasutaja teada saada , kui turvaline on parajasti tema käsutuses olev ühendus . Nagu juba mainitud , on WAP-protokoll tundlik ka salgamise vääramise rünnakutele . Need ohud tulenevad peamiselt mobiilse sidekanali avatusest . WAP-Foorum on küll pannud kirja hulga soovitusi , mis peaksid aitama kaasa WAP-protokolli turvalisuse tõstmisele , vaid soovitused ja nende täitmine ei ole kohustuslik . Iga uue WAP-protokolli spetsifikatsioonide versiooniga paraneb WAP-protokolli turvalisus pidevalt . WAP-protokolli versioon <arv>.<arv> esitles näiteks kõrgema turvalisuse tagamiseks mitut uut lahendust : kaitstud WIM-moodulit ( Wireless Identity Module ) krüptograafiliste operatsioonide jaoks vajamineva salajase informatsiooni hoidmiseks ja WML ( Wireless Markup Language ) -skripti krüptofunktsioonide teeki , mis võimaldab transaktsioonide allkirjastamist rakendustasemel ( SignText ( ) ) . Veel on WAP-Foorum välja töötanud WPKI ( Wireless Public Key Infrastructure ) spetsifikatsiooni , mis peaks võimaldama WAP-protokolli kasutajatel PKI infrastruktuuri kasutuselevõttu , ning sellega seoses pakkuma head ning mugavat digitaalsete allkirjade ja sertifikaatide kasutuselevõtu võimalust . WPKI spetsifikatsioonid peaksid kuuluma varsti ilmuva WAP-protokolli versiooni <arv>.<arv> koosseisu . Kuna mobiilsidekanal on avatud kanal ja mobiilsetel seadmetel on vähem ressursse kui statsionaarsetel seadmetel , ei küüni WTLS-protokolli turvalisus päris TLS-protokolli tasemele . Sellest hoolimata võib öelda , et kui täpselt järgida kõiki WAP-Foorumi soovitusi , kontrollida kasutusel olevate protokollide turvalisuse astet ja kasutada usaldatava WAP-lüüsi teenuseid , on turvalise WAP-protokolli põhise ühenduse loomine võimalik . Siiski nõuab see tänapäeval palju vaeva ja väga kindlat turvapoliitikat . gap desc='references'&gt; Ants Kukrus , TTÜ professor Tarkvara õiguskaitse küsimusi tänapäeva infoühiskonnas TARKVARA KUI INTELLEKTUAALOMAND Intellektuaalomand on õiguste kompleks ja see koosneb varalistest ning isiklikest ( moraalsetest ) õigustest . Arvutid on tekitanud meie elus põhjaliku pöörde . Neist on saanud hädavajalikud töövahendid riigijuhtimises , panganduses , hariduses , transpordis , meditsiinis , ettevõtetes , rääkimata teadusest . Tarkvara tähtsus võrreldes teiste inimintellekti väljendusvormidega , nagu leiutised , tööstusdisainilahendused , kirjandus , muusika ja kunst , kasvab päev-päevalt . Arvutitarkvara all mõistetakse üldjuhul arvutiprogramme ja teisi materjale , mis on valmistatud seoses arvuti kasutamisega . Siia kuuluvad programmi kirjeldused ja programmi kasutamist puudutavad materjalid , näiteks kasutusjuhend ja probleemi kirjeldus . Arvutiprogrammid on siiski tarkvara kõige tähtsam osa . Nad juhivad arvutioperatsioone vastavalt saavutatavale tulemusele ( näiteks tootmisprotsessi kontrollimine jne. ) . Arvutiprogrammide kaitse küsimus kerkis päevakorrale <arv>. aastatel , kui USA kohtus ei suudetud otsustada , millise õiguse alla peaksid need kuuluma . Tegelikkuses ei ole arvutitarkvara üheselt mõistetav objekt , nii nagu näiteks mõni kunsti- või kirjandusteos . Konkreetsemalt võttes hõlmab arvutitarkvara mitmeid alaosi , mis kõik kuuluvad iseseisvalt kaitsmisele . Võtame näiteks tuntud tarkvaratootja Microsofti . Tema pakutav toode Windows <arv> on küll iseseisev operatsioonisüsteem ( sisuliselt programm ) , kuid sellegipoolest kaitstakse autoriõigusega programmi ennast , selle lähtekoodi , kogu dokumentatsiooni jne. Arvutiprogrammi definitsioon . Pärast <arv>. aastal toimunud vaidlusi USA autoriõiguse seaduse ( AutÕS ) üle , leiti , et tuleb täpselt määratleda , mille all ja kuidas kaitsta arvutiprogramme . <arv>. aastal lisati Copyright Act' i ( autoriõiguse seadus ) mõiste : “ Arvutiprogramm on kogum käske ja juhiseid , mille abil arvuti otseselt või kaudselt toob esile mingid kindlad tulemused . ” Seda mõistet kritiseeriti palju , sest see olevat liiga kitsapiiriliselt määratletud ega kaitse arvutiprogrammi täielikult igas vormis , mida programm võib omandada . Hiljem lisati punkt , mis kaitseb arvutiprogrammi kui kirjandusteost ( samal põhimõttel toimib ka Eesti AutÕS ) . Autoriõiguse seaduses on aga selgesõnaliselt punkt “ Autoriõigusega ei kaitsta : ideid , mõisteid , teooriaid , protsesse , süsteeme , meetodeid , kontseptsioone , printsiipe , avastusi , leiutisi jms. intellektuaalse tegevuse resultaate , mis on kirjeldatud , selgitatud või muul viisil väljendatud ” . Selliste piirangute tõttu on raske määratleda , mil viisil kaitsta arvutiprogrammi . Euroopa Nõukogu arvutiprogrammide õiguskaitset käsitleva direktiivi <arv>½<arv>/EMÜ <arv>. maist <arv> kohaselt “ hõlmab termin arvutiprogramm mis tahes vormis programme , kaasa arvatud riistvarasse inkorporeeritavaid ; kõnealune termin hõlmab ka arvutiprogrammi väljaarendamisele suunatud ettevalmistavat väljatöötust tingimusel , et ettevalmistava töö laad on selline , et töö hilisemal astmel võib selle tulemuseks olla arvutiprogramm ; kriteeriumidena , mida kasutatakse , et kindlaks määrata , kas arvutiprogramm on või ei ole algupärand , ei tohiks kasutada arvutiprogrammi kvalitatiivsetest või esteetilistest omadustest tulenevaid eeliseid . ” Lähtekood vs . objektkood . On olemas kaks erinevat meetodit , kuidas arvutiprogramm võib eksisteerida - lähtekood ja objektkood . Seaduse definitsioon kirjandusteoste kohta on piisavalt lai , et neid mõlemat mõistet endasse haarata . USA-s on teada mitmeid kohtuasju , kus ei suudeta leida lahendust lähtekoodi ja objektkoodi kaitseks . Seadus annab õiguse kaitsta “ kirjutisi ” , kuid mida teha siis , kui tegu pole seaduse kohaselt kirjutisega . Seaduse järgi puuduvad objektkeelel omadused , mis laseks teda kirjutiseks pidada . Apple Computer , Inc. vs . Franklin Computer Corp kohtuasjaga seoses jõuti otsusele , et seadust tuleb täpsustada . <arv>. aasta USA autoriõiguse seaduse muudatusse kirjutati kohtupraktika põhjal punkt : “ Arvutiprogramm , ükskõik , kas objektkoodina või lähtekoodina esitatult , on 'kirjandusteos' ja kaitstud autoriseerimata kopeerimise eest , olenemata tema objekt- või lähtekoodi versioonist ” . Hilisemad juriidilised otsused on kinnitanud seda väidet . Ka Eesti AutÕS-is on määratletud , et autorikaitse laieneb arvutiprogrammi mis tahes väljendusvormile . Intellektuaalomandi õiguste kaubandusaspektide lepingu ( TRIPS lepingu ) artikli <arv> kohaselt kaitstakse arvutiprogramme kas lähtetekstina või objektkoodi näol nagu kirjandusteoseid vastavalt Berni konventsioonile . Mikrokood . Mikrokood koosneb paljudest “ juhistest ” , mis käsivad mikroprotsessoril oma tuhandete transistoridega täita “ makrojuhistega ” etteantud ülesandeid . NEC Corp vs . Intel Corp kohtuasjas leidis kohus , et mikrokood on samuti 'arvutiprogramm' . NEC üritas vaidlustada mikrokoodi kaitstavust autoriõigusseadusega , kuna väitis , et see on osa arvutist . Kohus lükkas selle argumendi tagasi , sest lähtus Apple vs . Franklin'i kohtuasjast , mille käigus otsustati : “ Ei ole ühtegi seadusesätet , mis väidaks , et erinevat tüüpi arvutiprogramme , sõltuvalt funktsioonist , mida ta täidab arvutis , peaks kaitsma erinevalt . ” Dokumentatsioon . Arvutiprogrammi dokumentatsioon jaotub üldjuhul kaheks liigiks . Esimene liik on kirjeldus , mida kasutatakse programmi arendusel . Programmi kirjeldus võib olla nii jutustavas vormis kui ka skemaatiliselt või loogiliselt esitatud diagramm programmi funktsioonidest . Sellises vormis kirjeldusi saab selgelt kaitsta kirjandusteostena . Teine dokumentatsiooni liik on toetav materjal , st. igasugune materjal programmi kasutaja abistamiseks . Selle alla kuuluvad kõik kasutusjuhendid , “ probleemilahendajad ” ( troubleshooters ) , “ kasulikud nõuanded ” ( tips ) jne. Ka siin on ilmselge , et neid saab kaitsta vaid kirjandusteostena . Arvutiprogrammide loomine nõuab suurte inim- , tehniliste ja finantsressursside investeerimist . Samal ajal kulub nende kopeerimisele tühiselt vähe , võrreldes nende loomisele tehtavate kulutustega . Arvutustehnika algaastatel olid kulutused riistvarale palju suuremad kui tarkvarale , käesoleval ajal on pilt kardinaalselt muutunud : tarkvarakulutused ületavad palju kordi riistvarakulutusi . Et arvutiprogrammide väljatöötamine nõuab suuri materiaalseid kulutusi , siis on vaja luua efektiivne kaitsesüsteem . Arvutiprogrammide ebaseaduslik kasutamine ja kopeerimine on tõsiseks probleemiks tänapäeva arvutitööstuses . Maailmas ei eksisteeri ühtset ja efektiivset tarkvara õiguskaitsemehhanismi , hoolimata sellest , et probleemi kallal töötavad juristid , matemaatikud , majandusspetsialistid ja paljud rahvusvahelised organisatsioonid , nagu WIPO , UNESCO ja Euroopa Liit . Vastavalt oma spetsiifikale on kõik arvutiprogrammid kaitstud . Enne personaalarvutite ilmumist said patendi- ja autoriõigus oma ülesannetega suurepäraselt hakkama . Probleem tarkvara õiguskaitsest muutus aktuaalseks <arv>. aastatel . Tarkvara õiguskaitse muutus tootjatele olemuslikuks probleemiks , seda koos plahvatusliku arvutite levikuga - personaalarvutite leiutamisega . Praegu on situatsioon oluliselt muutunud ja tekkinud on uued mõisted , nagu tehisintellekt , automaatne andmekäitlus , ning infovahetus on saavutanud hoopis uue taseme . Tarkvara ei ole seotud enam materiaalse kandjaga , sest vastav tööstus on kolinud Internetti , mille turustuslikes eelistes ei kahtle enam keegi . Käesoleval ajal kasutatakse tarkvara kaitseks järgmisi õiguslikke kaitsevahendeid : patendiõigus autoriõigus oskusteave ( know-how ) ärisaladus ( trade secret ) lepinguõigus lipiklitsents ( “ shrink wrap ” licence ) kaubamärk ( trademark protection ) . WIPO andmetel kasutatakse patendiõigust <arv>% juhtudest tarkvara kaitseks , autoriõigust <arv>-<arv>% juhtudest ja oskusteavet ( know-how ) ning äriseadust ( trade secret ) <arv>% tarkvara kaitseks . Peab kohe märkima , et tarkvara õiguskaitsega on seotud palju probleeme , sest puudub spetsiaalne efektiivne kaitsesüsteem ja olemasolevate alla tarkvara täielikult ei sobi . Alljärgnevalt vaatleme neid lähemalt . PATENDIÕIGUS JA TARKVARA Patendiõigus oli esimene õiguslik institutsioon , mida püüti rakendada uue intellektuaalse produkti kaitseks . Seda võib põhjendada asjaoluga , et arvutustehnikat tootvad firmad olid patendindusega hästi kursis . Aastate jooksul muutus nii riistvara kui ka tarkvara ning tohutult kasvas tarkvara efektiivsus ja osatähtsus iseseisva intellektuaalse produkti ja kaubana . Vahelduva eduga toimus ka tema patendikaitse . Sellega on seotud küllaltki suur hulk patendivaidlusi ja kohtuprotsesse , eriti Ameerika Ühendriikides . Patendikaitse vastaste põhilised argumendid on järgmised : patentidega kaitstakse tehnilisi lahendusi , tarkvara seda ei ole programmjuhitavate tehniliste lahenduste puhul on tegemist tuntud tehnilise osaga , millele annab uudsuse ja uue efekti programm , kuid et tehnilises osas leiutist ei ole ning programmiline osa patendikaitsele ei allu , siis on kogu lahenduse kaitse välistatud tarkvarale kui mittemateriaalsele produktile ei ole võimalik teha ekspertiisi leiutised , mis on seotud matemaatilist algoritmi või teisi teaduslikke printsiipe sooritava programmiga , ei ole patenditavad . Sellised leiutised ei ole midagi muud kui abstraktsed ideed riistvara või tarkvara seotus leiutisega ei ole reeglina oluliseks faktoriks patentsuse määramisel , v.a. arvutiprogrammid , mis on tihedalt seotud arvuti juhtimisega uudse ja mitteilmse tehnilise protsessi läbiviimisel puudub ühtne tarkvara andmebaas , mistõttu pole võimalik uut lahendust võrrelda olemasolevatega , hinnata selle uudsust jne. Nende probleemid on suurel määral samad , mis on mitmel korral juba kerkinud patendisüsteemi ette igasuguste uute patendikaitse objektide sisseviimisel ( näiteks mõõtmismeetodid , keemilised protsessid , mikroorganismid , taimesordid ) , kuid on leidnud iga kord lahenduse . Probleemi üheks võimalikuks lahenduseks oleks tarkvara jaotamine kolmeks õigusobjektiks : materiaalseks kandjaks , sisuks ja vormiks . Sel juhul esimest kaitstakse omandiõiguse , viimast aga autoriõiguse alusel . Tarkvara sisu tuleks kaitsta uue õigusliku institutsiooni alusel . Patendiõiguse kohaldatavuse olemuslikele põhimõtetele , ka Euroopas , pandi alus USA kohtukaasuses Diamond versus Diehr , <arv>. märtsil <arv>. aastal . Ameerika patendiseaduse kohaselt võib patendi saada igaüks , kes leiutab või avastab uue ja kasuliku protsessi , masina , tootmisviisi või tehisaine . Vaadeldes arvutiprogrammi kui “ kodeeritud käskude hulka digitaalse arvuti jaoks ” , mis sellisel juhul ei ole midagi muud kui idee väljendus , ei saaks arvutiprogramme kunagi patentseks pidada , sest nad ei ole masin , tootmisviis ega tehisaine . Samal ajal võib arvutiprogramm kujutada erinevaid protsessi samme . “ Protsessi ” defineeritakse kui objektile sooritatavat tegevust või tegevuste seeriat eesmärgiga muuta tema olemust või olekut . Protsess nõuab , et teatud asjad peaksid olema tehtud teatud tähenduses ja teatud järjestuses , kuid kasutatavad vahendid omavad teisejärgulist tähtsust . Seda definitsiooni ongi kasutatud eespool mainitud kohtuprotsessi otsuses . USA Ülemkohus leidis , et arvutit kasutav uudne kummi kuumutamise protsess on patentne , ja fakti , et uudsus seisnes matemaatilise algoritmi ja arvutiprogrammi kasutamises ( mis kumbki ei ole iseseisvalt patentne ) , peeti mitteoluliseks . Seoses kõnealuse kohtuotsusega muutis ka Ameerika Ühendriikide Patendiamet oma poliitikat programmleiutiste patentsuse kohta . Töötati välja ka ekspertiisijuhendi standard otsustamaks , kas programmleiutis on patentne või mitte . Selleks kasutatakse kaheastmelist testi . Esimesel sammul määratakse , kas patendinõudlus sisaldab otseselt või kaudselt matemaatilist algoritmi . Eitava vastuse puhul ei ole selles osas patendiõiguse rakendamiseks mingeid takistusi . Jaatava vastuse puhul jätkatakse testimist ja teisel sammul määratakse , kas matemaatilist algoritmi kõrvale jättes leidub allesjäänud osas midagi patenditavat , st. kas patendinõudlus sisaldab protsessi , masinat või mingit muud seaduses ettenähtud objekti . Aparaati puudutava nõudluse puhul analüüsitakse , kas aparaadi töö põhineb täielikult matemaatilisel algoritmil . Kui jah , siis tähendaks see algoritmi eelisomadust , mistõttu patendiõigust ei saa rakendada . Samalaadsed põhimõtete muutused kajastuvad ka Euroopa Patendiameti korralduses <arv>. märtsist <arv>. a. ekspertiisieeskirjade muutmise kohta ning Saksamaa Patendiameti teadaandes nr. <arv>/<arv> <arv>. detsembrist <arv> täienduste kohta ekspertiisijuhendis arvutite programme ja reegleid sisaldavate leiutistaotluste osas . Selliseid muudatusi küllaltki jäigas patendisüsteemis võib pidada tõepoolest revolutsioonilisteks . Tõenäoliselt kutsuvad need esile veel terve seeria uusi muudatusi patendieeskirjades , uute objektide tunnistamist patentseteks , ekspertiisi liberaliseerumist ning uute riikide haaramist nende muudatustega . Maailma suurimad tarkvaratootjad võimaldavad järgmist patendi- seadusest lähtuvat arvutite tarkvara kaitset : arvutiprogrammid kui sellised ei ole patenditavad , nad ei ole tehnilist laadi leiutised . Enamikus arenenud maade patendiseadustes on vastu võetud eranditena arvutitarkvaraga seotud leiutistele patendi andmise eeskirjad , kuid suures osas lähtutakse arvutitarkvara õiguskaitsel siiski omandiseadusest leiutised , mis on seotud matemaatilist algoritmi või teisi teaduslikke printsiipe sooritava programmiga , ei ole patenditavad . Sellised leiutised ei ole midagi rohkemat kui abstraktsed ideed . Fakt , et leiutisega on seotud arvuti riistvara või tarkvara , ei mõjuta üldjuhul leiutisele patendi andmist arvutiprogrammid , mis on tihedalt seotud arvuti juhtimisega uudse ja mitteilmse tehnilise protsessi läbiviimisel , on patenditavad . Arvatakse , et programmi poolt juhitav arvuti on lihtsalt masin , mis sooritab tehnilisi protsesse teatud järjekorras patendiseadust võib lugeda sobivaks , kui arvutiprogrammidega seotud leiutiste puhul püütakse kaitsta konkreetset kasutamise vormi ja mitte selle aluseks olevaid ideid . Analoogiliselt USA eeskirjadele andis ka Euroopa Patendiamet <arv>. aastal välja arvutiprogrammide patentimisel läbiviidava analüüsi juhtnöörid , millede põhiülesandeks on välja selgitada , kas tegemist on matemaatilise meetodi-algoritmiga või tehnilise protsessiga . AUTORIÕIGUS JA TARKVARA Tänapäeval on enamikus tööstuslikult arenenud riikides tarkvara õiguskaitse vormiks autoriõigus . Kui piirduda vaid tähtsamate riikidega , siis selliselt kaitstakse programme näiteks Austraalias , Brasiilias , Prantsusmaal , Saksamaal , Ungaris , Indias , Indoneesias , Jaapanis , Malaisias , Mehhikos , Filipiinidel , Lõuna-Koreas , Hispaanias , Inglismaal ja Ameerika Ühendriikides . Nende riikide hulka kuulub ka Eesti Vabariik . Kuna autoriõigus kaitseb vaid teose vormi , mitte aga selle aluseks olevat ideed , siis ei blokeeri see tehnilist progressi . Autoriõigus tagab ka rahvusvahelise intellektuaalomandi õiguskaitse , lähtudes Berni kirjandus- ja kunstiteoste kaitse konventsioonist ( Berne Convention for the Protection of Literary and Artistic Works ) ning Ülemaailmsest autoriõiguse konventsioonist ( Universal Copyright Convention , UCC ) . Autoriõigus , mis kujunes välja kunsti- , muusika- ja kirjandusteoste autorite õiguste kaitseks , võimaldab järgmisi õiguslikke samme : fikseerida autorsust fikseerida prioriteeti keelata igasugune teksti muutmine autori loata keelata antud teose kopeerimine ( kommertseesmärkidel ) , sealhulgas ka kirjandusteose tõlkimine . Üldreeglina on lubatud kopeerida teaduslikel , õppe- ja meditsiinilistel eesmärkidel . Praktikas on realiseeritud tarkvara kaitsmist autoriõigusega kolmel viisil : kehtiva seadusandluse muutmise ja täiendamise teel ( USA-s <arv> , Prantsusmaal <arv> , Jaapanis <arv> jm. ) kehtivas seadusandluses autoriõigusega objektide loetellu uue objekti “ arvutiprogrammid ” lülitamisega ( Saksamaal <arv> , Suurbritannias <arv> jm. ) eraldi õigusakti vastuvõtmisega , mis aga oma põhimõtetes tugineb autoriõigusele ( näiteks Korea Vabariik ja Brasiilia ) . Osas riikides piirdutakse justiitsorganite selgitustega , et arvutiprogrammid on kaitstavad kehtiva autoriõigusega , selle institutsiooni ühe objektina ( kirjalik teos ) , viimast muutmata ( Rootsis <arv> , Itaalias <arv> jm. ) . Enamikus riikides on tarkvara kuritarvitamise eest ette nähtud küllaltki ranged tsiviil- ja kriminaalmeetmed . Võib öelda , et autoriõiguslik kaitse on tarkvara ebaõige kasutamise vältimise põhialus , sest autoriõigused ei ole üksnes kahjunõude alus või õigusrikkumise koosseisu määratlus , vaid autoriõigus kannab endas kogu tarkvara kui intellektuaalomandi kaitse väärtust , st. see on loomulik side autori ja teose vahel . Autoriõigus on levinuim õiguskaitse vorm , mida praktikas tarkvara kaitseks kasutatakse . Sama teed on läinud ka Eesti positiivne õigus , lisaks autoriõiguse seaduse vastavatele sätetele reguleerib antud valdkonda ka Berni kirjandus- ja kunstiteoste kaitse konventsioon ( Berne Convention for the Protection of Literary and Artistic Works ) ning Ülemaailmne autoriõiguse konventsioon ( Universal Copyright Convention , UCC ) . Vastavalt Berni konventsioonile kaitstakse arvutiprogramme kas lähtetekstina või objektkoodi näol nagu kirjandusteoseid . Tekib küsimus , kas kaitstud on ainult programmi inimloetav osa või ka juba arvuti jaoks käivitatavaks muudetud ( kompileeritud ) programmi- ehk objektkood . Arvutiprogrammide lähtetekstid on küll üsna lähedal kirjaliku teose tavapärasele definitsioonile , kuid programmide lähtetekstide ja hilisema kompileeritud programmi käitumise vahel ei ole ranget üksühest seost - samasugust käitumist võib saavutada tekstiliselt väga erinevate lähtetekstidega . Eesti autoriõiguse seadus kaitseb kirjandus- , kunsti- , ja teadusteoseid , täpsemalt , nende mingisugust objektiivset väljendusvormi , mis on originaalse loomingulise tegevuse tulemus . Tarkvara sobib nende näitajate alla , on originaalse loomingulise tegevuse objektiivne väljendusvorm . Autoriõiguse seadus sätestab teosed , millele tekib autoriõigus - § <arv> lg. <arv> p. <arv> - arvutiprogrammid , mida kaitstakse nagu kirjandusteoseid , kaitse laieneb arvutiprogrammi mistahes väljendusvormile . See tähendab , et autoriõigus kaitseb ka programmi ja programmi väljanägemist ( look-and-feel ) või muud disainiga seotud aspekti . Kõigest hoolimata võib autoriõiguse kui õiguse instituudi kohaldamist tarkvarale pidada mõneti sobimatuks . Probleem seisneb selles , et kuna autoriõigus kaitseb vaid teose vormi , mitte aga selle aluseks olevat ideed , siis ei blokeeri see tehnilist progressi . Nimelt , kui tarkvara defineerida kui seeriat kodeeritud instruktsioone digitaalsele arvutile , laieneb autoriõigus küll instruktsioonidele , aga üksnes selle vormilisele kujule . Instruktsioonide kandev osa - idee , algoritm - jääb juriidilise kaitseta . Järelikult ei laiene autoriõigus tarkvara sisule , selle loogilisele ülesehitusele , vaid pelgalt vormile , milles tarkvara kasutajale tajutav on . Autoriõigus kaitseb objektkoodi ja lähteteksti otsese kopeerimise eest . Autoriõiguslik kaitse ei laiene ideedele ja põhimõtetele , millele rajanevad arvutiprogrammi elemendid , kaasa arvatud programmi kasutajaliidese aluseks olevad ideed ja põhimõtted ( Vt . AutÕS § <arv> , lg. <arv> ) . Kui teine isik jõuab samasugusele või väga sarnasele tulemusele iseseisvalt töötades , siis ei ole tegemist teise autori loodud teosega , see tähendab , et kaks programmi , mis on pealt näha väga sarnased või isegi identsed , võivad kasutada täiesti erinevaid algoritme ja olla erinevad ning iseseisvad teosed . Paljud tänapäevased programmid toodetakse meetodil , millega programmid koostatakse olemasolevatest komponentidest ( valmisprogrammidest või programmiosadest ) , tootmine põhineb väga suures osas olemasolevate tarkvaratükkide tasakaalustamisel ja kokkuühendamisel . Enamik arvutiprogrammidest ei ole iseseisvalt ühe autori või autorite kollektiivi loominguna sündinud teos , vaid kasutatakse teiste isikute poolt kirjutatud tekste . Samuti ei pruugi käivitamise ajal kõik programmi tööks vajalikud komponendid arvutis olemas olla - need laetakse töö käigus arvutivõrgu vahendusel arvutisse , kus programm töötab . See tekitab omakorda ebaselgust autoriõiguste kuuluvuse üle , pole isegi selge , kus teos tegelikult asub ja kas seda kasutatakse eemal asuvas serverarvutis või lõppkasutaja juures , kus laetud komponendid käivituvad . Autoriõiguse seaduse mõttes on teose kopeerimine , igasugune reprodutseerimine tegevus , mille tulemusena saadakse teosest mitu füüsilist eksemplari . Tarkvara kopeerimise all võib mõista ka programmi laadimist arvuti kõvakettale , mis teatavasti on vajalik programmi käivitamiseks . Jääb ebaselgeks , mida mõista tarkvara kopeerimise all , kui tegemist on mitte arvutiprogrammi , vaid mingi muu tarkvaraosaga , mida programm tööks kasutab . Sellisteks objektideks võivad olla näiteks funktsioonide teegid ( library ) , kellegi poolt loodud alusmoodulid , mille peale arendajad loovad teised kihid , mis ongi mõeldud selleks , et teised programmid saaksid kasutada neis olevaid funktsioone ja objekte . Kui kirjutatav programm kasutab mõnda teegis olevat funktsiooni , siis programmi lähtetekstide arvuti jaoks käivitatavasse vormi teisendamise käigus kopeeritakse ka teegis olevad funktsioonid programmi koodi . Selliste teiste programmide poolt kasutatavate funktsiooniteekide kaitsmisel tekivad mõningad õiguslikud probleemid , mis tuleks litsentsi andmisel reguleerida . Arvutiprogrammi inimese jaoks loetav tekstiline esitus on programmi lähtetekst , mis võimaldab programmi taas luua . Kui avaldada arvutiprogrammi lähtetekst , on konkurentidel väga lihtne välja selgitada funktsioonid ja tööpõhimõtted ning saadud ideid kasutada oma programmides . Mõnes riigis saab autoriõigust registreerida . Spetsiaalselt arvutiprogrammide registreerimiseks on USA-s eraldi reeglistik , mille alusel tuleb programmist eraldada mitte kogu lähtetekst , vaid ainult esimesed ja viimased <arv> lehekülge lähtetekstist ja kogu programm masinkoodi ehk käivitamisvalmis programmina . Avaldamiseks loetakse ka tarkvara Internetis või mistahes üldsusele avatud arvutisüsteemis avaldamist . Seejuures on kaitse suhtes oluline , mis riigis avaldamine toimus , sest õiguskaitse sõltub sellest , kas riigil , kus kaitset soovitakse , on vastavad siduvad kokkulepped . Pöördprojekteerimine tähendab masinkoodiks kompileeritud programmi tõlkimist tagasi inimesele loetavaks programmi lähtetekstiks , mille tulemusena saab võimalikuks programmi tööpõhimõtete ja käitumise analüüs . Selline tegevus võimaldab välja selgitada programmi aluseks olevad algoritmid ja ideed . Et autoriõigus kaitseb üksnes otsese kopeerimise eest , siis programmi puhul on küsitav , kas näiteks alamprogrammide või üksikute käskude ümberpaigutamist võib lugeda kopeerimiseks või on tegemist juba iseseisva teosega . Teksti muutmise ja täiendamise keeld ei ole arvutiprogrammide puhul praktikas alati rakendatav ( mõne programmi kasutamine eeldab ka selle edasikirjutamist , uute käskude lisamist ) . Samuti on kopeerimisena käsitletav olukord , kus arvutikasutaja , maha laadides mõnda Interneti faili , salvestab selle automaatselt oma arvuti kõvakettale . Salvestamine toimub kasutaja tahtluseta . Sellist kopeerimist sooritavad pea kõik üldlevinud Interneti brauserid . Eesmärk on selles , et kasutaja saaks hiljem samasid faile kiiremini kasutada , aga ometi on tegemist AutÕS-i mõttes reprodutseerimisega . Tarkvaratööstus on väga kiiresti arenev valdkond ning autori eluiga pluss <arv> aastat ( olenevalt siseriiklikust regulatsioonist ) on autoriõiguste kestuseks ilmselgelt liiga palju . Nii kaua ei ole tavaliselt ükski arvutiprogramm käibel , autori õiguste , eriti varaliste õiguste kaitsmine on nii pikal perioodil mõttetu . Ka seab see kahtluse alla traditsioonilise autoriõiguse rakendamise põhjendatuse tarkvara õiguskaitsevormina . Hoolimata eelnimetatud vastuoludest on autoriõigus maailmas enim praktiseeritav intellektuaalomandi õiguskaitsevorm . Autoriõiguse populaarsust õiguspraktikas tarkvara kaitsel võib põhjendada järgmiselt : puudub tarkvara spetsiifilisusele vastav õiguse instituut , võrreldes tööstusomandi õiguskaitsega on autoriõiguse teke lihtsam , odavam ja kiirem programmeerijad ( tarkvara autorid ) ise leiavad palju ühist programmi ja kirjaliku teose vahel , süüvimata õiguslikku konflikti mitmekümneaastased katsed lahendada probleem teiste õiguslike institutsioonide baasil on olnud vähem tulemuslikud avalik-õiguslik reguleeritus on vältimatu , autoriõiguses on haldusorganitel olemas vastavad õigusaktid ja kogemused . Tarkvara universaalsus , kõrge kaubanduslik väärtus ja laiaulatuslik levik kõikides inimtegevuse valdkondades ning riikides nõudis autoritelt ja firmadelt pikaleveninud probleemi lahendamist , autoriõiguse seadus võlus oma ettevalmistamise ja töölerakendamise lihtsusega , kaitse tekke suure kiiruse ja odavusega . Seoses autoriõiguse kasutuselevõtmisega tekkisid paljud seadusandlikud lahknevused Euroopa riikide seadusandluses , selle ühtlustamiseks kiitis Europarlament <arv>. mail <arv>. aastal heaks direktiivi ( <arv>½<arv>/EEC ) arvutiprogrammide õiguskaitse kohta . Selle tähtsamateks seisukohtadeks on : arvutiprogramme kaitstakse autoriõiguslikult kirjalike teostena kui kirjandus- ja kunstiteoseid Berni konventsiooni tähenduses mõistega “ arvutiprogramm ” haaratakse ka tema loomise lähtematerjali , kui see võimaldab programmi hilisemat taasloomist ( definitsiooni ei anta , sest kardetakse , et see jääb progressile jalgu ) kaitse laieneb arvutiprogrammide kõigile avaldumisvormidele , aga programmi mingi elemendi aluse moodustavaid ideid ja põhimõtteid ei kaitsta arvutiprogramme kaitstakse individuaalsete teostena kui autori isikliku vaimse töö tulemust , mingeid lisatingimusi kaitstavuse määramisel ( näiteks registreerimis- või deponeerimis- kohustust ) ei rakendata arvutiprogrammi autoriks võib olla nii füüsiline isik , füüsiliste isikute grupp kui ka juriidiline isik õiguste valdaja ainuõigused sisaldavad õigust teostada või lubada järgmisi toiminguid : arvutiprogrammi igal viisil ja igas vormis kestev või ajutine , osaline või terviklik reprodutseerimine arvutiprogrammi tõlkimine , kohendamine , sobitamine jm. ümbertöötamine originaalse arvutiprogrammi või selle koopia igas vormis avalik levitamine , ka laenutamine erandina on lubatud seaduslikul omanikul õiguste valdaja loata , kui see on vajalik programmi kasutamiseks : lepinguliste eritingimuste puudumise korral eelmisest loetelust kahe esimese toimingu teostamine , kaasa arvatud vigade parandamine varukoopia tegemine , kui see on vajalik programmi kasutamiseks vaadelda , uurida või testida programmi funktsioneerimist , selgitamaks välja programmelemendi aluseks olevaid ideid ja põhimõtteid õiguste valdaja nõusolekut ei vajata aga koodi reprodutseerimiseks või tõlkimiseks , kui see on vajalik informatsiooni saamiseks sõltumatult loodud arvutiprogrammi koostalitlusvõime ( interoperability ) tagamiseks teiste programmidega ( real tingimustel , samuti kehtivad piirangud saadud informatsiooni kasutamisel ) kaitse kestuseks on kehtestatud ( Berni konventsiooni mõjul ) autori eluiga pluss <arv> aastat pärast tema ( või viimase elava autori ) surma . Märkigem , et tekkis tõsine kahtlus autoriõiguse efektiivsuses antud spetsiifilise kaitseobjekti suhtes , kuid alternatiivi puudumine ning võimalus kiiresti saada kasvõi mingisugune kaitse sundis kuni parema lahenduse leidmiseni kasutama seda moodust . Tavaliselt on enamikus riikides tarkvara kuritarvitamise eest ette nähtud küllaltki ranged sanktsioonid - rahatrahvid , konfiskeerimised ja vabadusekaotus . Avaliku võimu nii tugevat sekkumist võib põhjendada mitte ainult autorite õiguste kaitsega , vaid mittesekkumine mõjub pärssivalt kogu riigi majandusele . OSKUSTEAVE ( KNOW-HOW ) Arvutitarkvara õiguskaitset võib rakendada ka läbi oskusteabe ( know-how ) instituudi . Oskusteabe põhimõtteks on hoida ranges saladuses oma eriteadmisi , tehnoloogilisi võtteid , tootmissaladusi ja muud . Oskusteave võib sisalduda tootes , olla selles nähtav või olla tootmisprotsessi osaks . Oskusteabe , nagu ka patendi ja autoriõiguste üleandmine toimub lepinguõiguse alusel . Õigusliku süsteemina sisaldab see ka juriidilisi norme , mis kaitsevad oskusteabe kuritarvitamise vastu - tsiviilvastutus , mis väljendub kahju hüvitamises . Oskusteave on käsitletav iseseisva õigusinstituudina pärast selle edasiandmist . Isiku teadmised ja oskused on käsitletavad oskusteabena alles siis , kui need edasi antakse ning lepinguliste kohustustega seotakse . Oskusteave on praktikas leidnud palju kasutamist , ja seda rakendavad peamiselt tarkvarafirmad , ostes oskusteavet vastava eriala spetsialistidelt . Rahvusvahelises praktikas kujutab oskusteave enamikul juhtudel põhiobjektide kasutamiseks või realiseerimiseks vajalikku lisainfot , mida võib üle anda erilepinguga , näiteks oskusteabe üleandelepinguga . Arvutitarkvaraalane oskusteave on põhiliselt seotud tarkvara disainiga . Selline oskusteave on kõigile selgelt nähtav ja lihtsalt kopeeritav . Samas võib disaini esialgne tootmine olla väga kulukas . Seda sorti oskusteabe näiteks võiks olla interaktiivsetes programmides kasutatavad kasutajaliidesed ( so . programmi nii öelda kasutaja poole suunatud nägu , selle võimaluste loogiline struktuur jms ) ja tegevuse kujutamiseks kasutatavad metafoorid , mis määravad ära , kuidas kasutaja teostab programmi abil mingeid ülesandeid . Oskusteave võib olla ka mitte otseselt tajutav , peituda programmi algoritmides või andmestruktuurides , milles seisnebki tarkvara põhiväärtus - info esitusviisides ja töötlusalgoritmides . Viimati nimetatud nn. peidetud oskusteabe võib omandada programmi lähtetekstide litsentseerimisel , aga seda on võimalik kätte saada ka programmi pöördprojekteerimise teel . Siiski on oskusteabel õiguskaitsevahendina järgmised puudused : et kaitstava objekti fikseerimine on komplitseeritud , siis on õigusrikkumiste tuvastamine ja vastutusele võtmine raskendatud , pealegi on kaitseobjekt sageli ranges saladuses oluline osa programmides sisalduvast oskusteabest on juba üsna pinnapealse uuringu tulemusena kättesaadav ( disain ) , olemasoleva programmi käitumise imiteerimine on võrreldes esialgse väljatöötamisega mitu korda odavam et õiguskaitse on sätestatud lepinguõigusega , saab vastutust oskusteabe kuritarvitamise eest eeldada üksnes lepingupooltelt . Kolmandate isikute vastutus piirdub taolisel juhul vaid süülise tsiviilkahju hüvitamisega , kusjuures kahjunõuet ei saa esitada isikule , kes polnud teadlik oskusteabe levitamise keelust . Isikud , kes ei ole oskusteavet hõlmava lepinguga seotud ning kes pahauskselt või juhuslikult on saanud juurdepääsu oskusteabe olemusele , ei vastuta viimase levitamise eest lepingulistel alustel et oskusteave on immateriaalne vara ( eriteadmised ) ja seda on ilmselt võimatu detailselt fikseerida , siis on kuritarvitanud isikule nõuete esitamine komplitseeritud , sest kahjunõue peab olema selgelt väljendatav ja omama kindlat rahalist väärtust . Erand on lepingus määratud kohustise tagamise vahend . Põhiliselt on õigusnormid siduvad ainult firmateenistujate ja lepingupartnerite suhtes . Raske on ka esitada pretensioone töölt lahkunud isikule , kes kasutas oskusteavet , sest ta ei viinud kaasa mingit materiaalset eset ( seadet , infokandjat , dokumentatsiooni ja muud ) , vaid ainult oma teadmisi . Oskusteabe põhiline kitsaskoht seisneb selle abstraktsuses , õiguskaitse eeldab aga konkreetset ja tajutavat väljendust . Õiguste ja kohustuste fikseerimine lepingus on põhjendatud juhul , kui rikkumiste korral on kahju reaalselt tõendatav . ÄRISALADUS ( TRADE SECRET ) Tarkvara erinevatele osadele tekib autoriõigus alles kogumist eraldamisel ehk autoriõigus laieneb tarkvarale tervikuna , mitte osadele ükshaaval . Ärisaladus aga võib eksisteerida koostisosade üksikutel elementidel iseseisvalt . Näiteks võib olla ärisaladusena kaitstav programmi algkood , samas kui programmeerimiskeel on avalik . Kui autoriõigus väljendab eraõiguslike huvide kaitse kõrval ka avaliku võimu omasid , siis ärisaladus on keskendunud eelkõige eraõiguslike huvide kaitsele . Ärisaladus on segu erinevatest õiguslikest teooriatest ning põhineb peamiselt avalikustamise suhtes tundlike ideede ja informatsiooni arendamise , levitamise ja kasutamisega kaasnevate selgesõnaliselt või kaudselt väljendatud piirangute või lepingu objektil . Ärisaladus tagab õiguskaitse ainult juhul , kui objektiks olev informatsioon on tõepoolest saladus . Ärisaladuse funktsionaalsus on tagatud , kui ta näib ärisaladusena ja seda koheldakse kui ärisaladust . Ärisaladuse õiguse peamine toime väljendub õiguses keelata teisel isikul kaubanduslikku väärtust omava salajase informatsiooni kasutamist või avalikustamist , keelab info edasiandmise kolmandatele isikutele . Et aga isikul tekiksid ärisaladuse suhtes kohustused ja/või õigused , tuleb need lepinguga sätestada . Ärisaladus on harilikult fikseeritud dokumentides ja avaldub lepingulises kohustuses . Tõendamiskohustus ärisaladuse hoidmise kui juriidilise kohustuse kohta lasub isikul , kes esitab hagi lepingu rikkumise kohta . Erinevalt patendiõigusest ei keela ärisaladuse institutsioon isikul ärisaladuse objektiks oleva info kasutamist sõltumata selle saamise viisist . Ärisaladuse valdajal ei ole õigust takistada teisel isikul iseseisvalt välja töötada ja kasutada ärisaladuse objektiks olevaid tehnoloogiaid . Ärisaladus hõlmab üksnes saladuses oleva info hankimist , mis on vastuolus sellise info kasutamise ja avalikustamise reeglitega . Kui patent kaitseb seda objekti ka pärast leiutamist , avastamist - patendi omanik omab ainuõigust oma leiutisele - , siis ärisaladuse valdaja ei saa kellelegi pretensioone esitada , viidates asjaolule , et säärane objekt juba eksisteerib . Kui autoriõiguse rakendamisel tekivad autori õigused ja kohustused teose loomise hetkest , siis ärisaladuse puhul tuleb õigused ja kohustused fikseerida lepinguga . Juhuslik , st. heauskne ärisaladuse teadasaamine ei tekita kellelegi mingeid kohustusi . Süüline tegutsemine loob aluse vähemalt tsiviilvastutuse kohaldamisele . Samuti erineb ärisaladus selle poolest , et viimasega võib kaitsta tarkvara mõnda üksikut funktsiooni , struktuuri , ideed , loogikat ja valemeid , sest autoriõigus kaitseb teost tervikuna . Kui ärisaladus laieneb ka tarkvara ideelisele ülesehitusele ( sisule ) , siis autoriõigus kaitseb juriidiliselt üksnes tarkvara kui otseselt tajutavat teost , selle vormi , mitte sisu . Maailma suurima tarkvaratoodanguga riigis USA-s kasutatakse ärisaladuse määratlemiseks järgmist definitsiooni : ärisaladus võib endas sisaldada iga valemit , mustrit , võtet või informatsiooni kompilatsiooni , mida isik kasutab ettevõtluses ja mis võib talle anda konkurentsieelise nende konkurentide ees , kes selle objekti ei tea . Sellel määratlusel on ka mõningad piirangud : sellist infot , mis on kõigile teada mõne firma kohta , ei peeta ärisaladuseks ( ärisaladusena ei ole käsitletavad ainulaadsed , kuid kasutajale kättesaadavad programmikäsud , nt. arvutiprogrammi Linux algkood ) informatsiooni , mille põhjal on võimalik vigu vältida , ei peeta ärisaladuseks ( nt. negatiivne kogemus , veateateid põhjustavad asjaolud ) . Nagu oskusteabe juures , on ka ärisaladuse kui õiguskaitsevormi suurimaks puuduseks õigus iseseisvalt välja töötada õiguskaitse all olev objekt , st. ärisaladuse õigus ei keela selle objektiks oleva infoga identse info väljatöötamist . Iseseisvat väljatöötamist ei saa õiguslikult keegi takistada . Teatavasti on tarkvara võimalik välja töötada ka , kasutades tagurpidi arendamise ehk dekompileerimise ehk pöördprojekteerimise meetodit ( reverse engineering ) , selle käigus analüüsitakse olemasolevat tarkvaralist toodet ning tulemusena leitakse programmi aluseks olevad ideed . Eestis sätestab AutÕS § <arv> lg. <arv> : õiguse selgitada välja programmielemendi aluseks olnud ideed ja põhimõtted juhul , kui isik teeb seda programmi laadimise , esitamise , käitamise , ülekandmise või talletamise käigus , mille tegemiseks ta on õigustatud . Ärisaladuse rikkumisena on tegevus tõlgendatav juhul , kui see on lepingus sätestatud . Et ärisaladuse jõustumine ja tingimused on määratletavad lepinguõigusega ning dispositiivsed õigusnormid ei takista lepinguga sätestada tagurpidi väljatöötamise keeldu , on põhimõtteliselt ärisaladusega võimalik keelata tagurpidi arendus . Siiski ei laiene selline lepinguline keeld kolmandate isikute suhtes ning lepingulist vastutust neile kohaldada ei saa . Ärisaladuse kuritarvitamisena ei ole tõlgendatav selliste toodete kopeerimine , mille puhul kopeerimise aluseks olev info on saadud seaduslikul teel . Et vältida eelkirjeldatud olukorda , tuleb ärisaladust hoida ja käsitleda saladusena . Isik , kes on saanud ärisaladuse heauskselt enda käsutusse , võib selle kasutamist ilma piiranguteta jätkata . Peamine on , et iga uus ärisaladuse valdaja on lepinguliselt seotud kohustusega saladust hoida . Lähtuvalt eeltoodust lakkab ärisaladus eksisteerimast , kui see muutub avalikuks , ükskõik millisel moel ( sh. õnnetusjuhtum , loodusõnnetus ) . Tarkvara- arendajad peavad järelikult rakendama piisavaid julgeolekumeetmeid ja personalile pandavaid piiranguid selleks , et nende ärisaladused püsiksid saladuses ja säilitaksid kaitstuse . Seega , kui muidu võiks ärisaladust pidada vähekulukaks , siis saladuse säilitamise kulud on reeglina üsna suured . Üldiselt võib ärisaladuse objektiks olla iga väärtuslik info , mille hankimiseks peab huvitatud isik kulutama üsna suuri ressursse . Samas võib ärisaladuse enda eksistents või funktsioneerimise kirjeldus olla ärisaladuseks , kuna see võib omada strateegilist tähendust . Praktikas kasutatakse ärisaladusõigust peamiselt süsteemi dokumentatsiooni kaitsmiseks , sest see sisaldab sageli kogu programmi loogikat . See sätestatakse lepingus tavaliselt dokumentide ja nendes sisalduva informatsiooni levitamise keelus . Õiguskaitse maksimeerimiseks oleks mõttekas selline keeld siduda leppetrahviga . Vahel koheldakse ka kasutusjuhendeid kui ärisaladust , sidudes ka need levitamise keeluga . Seda on mõistlik teha juhul , kui instruktsioonidest on nähtuv või tuletatav liiga palju infot ning see seab ohtu terve programmi ärisaladuse kaitse . Vaieldav on tarkvara enda käsitlemine ärisaladuse objektina . See praktika ei pruugi olla alati õigustatud , sest ärisaladuseks peetakse hoopis nende aluseks olevat disaini loogikat ja toimimist . Teisest küljest võivad mõned programmid olla niivõrd komplitseeritud , et nende kohta levitatavale infole võib panna lisapiiranguid isegi siis , kui toode on juba turule jõudnud . Enamiku tarkvaratootjate jaoks on ärisaladuse ja autoriõiguse kombinatsioon osutunud kõige efektiivsemaks vahendiks arvutiprogrammide volitamata kasutamise , kopeerimise või levitamise vältimisel . LEPINGUÕIGUS Tarkvara õiguskaitsel on laialdast kasutamist leidnud ka lepinguõigus . M. Kindermani järgi on tarkvara üleandelepingul kaks funktsiooni : ta fikseerib mingisuguste õiguste üleandmise partnerile lepingus näidatud tarkvara kasutamise osas tagab nimetatud tarkvara õiguskaitse kuritarvitamise eest lepingupartnerite vahel kooskõlastatud meetmete abil . Firmade ja autori ( -te ) õiguste kaitseks tuleks tarkvara üleandelepingutes kajastada järgmised tingimused : keelata üleantavate programmide igasugune tiražeerimine lubada tiražeerimist ainult oma tarbeks keelata koopiate ja muude materjalide üleandmist kolmandatele isikutele kohustada igasugustes publikatsioonides ( teaduslikud artiklid , reklaamprospektid , näituste referaadid ja muud ) , kus on kirjeldatud või nimetatud tarkvara või sellega varustatud riistvara , obligatoorselt viitama tarkvara tegelikule väljatöötajale ja autorile sama nõuda ka igasuguse tehnilise dokumentatsiooni osas viia programmi teksti ja eraldi kinnitada kandjale väljatöötaja ja autorite rekvisiidid ( näiteks : programmi nimetus , valmimise aasta või prioriteedi kuupäev , autoriõiguse märk © , autorite nimed ) ning nõuda lepingupartnerilt nende säilitamist ja ülekandmist kõikidele koopiatele varustada programm ja kandja asutuse kaubamärgiga ning anda selle kasutamisõigus üle täiendava lepinguga , pidades samuti obligatoorseks iga koopia varustamist antud kaubamärgiga . Lisaks loetletule on veel rida olulisi momente , mida tuleb kajastada tarkvara üleandelepingus : õigus ( või keeld ) muuta või täiendada programmi lubada viia programmi muudatusi ja/või täiendusi , seejuures aga näha ette tarkvara loojate viivitamatut informeerimist kooskõlastada teatud muudatuste ja täienduste määr ( mitmel pool peetakse selleks <arv>% ) , millest alates tuleb seda programmi lugeda juba uueks iseseisvaks versiooniks . Siin aga tekib ka mõningaid küsimusi : millest arvestada <arv>% , kas algoritmist , millel põhineb programm , programmi üldmahust , käskude arvust või muust ? Kes ja kuidas seda määrab ? uue versiooni puhul nõuda , et selles viidatakse algallikale ja selle autorile on vaja põhimõtteliselt otsustada , keda lugeda uue versiooni autoriks ja kas esialgse tarkvara autor on uue versiooni kaasautor kas uue versiooni loomisel ja selle edasimüümisel on selle valdaja kohustatud oma esialgsele lepingupartnerile maksma osa müügitulust . Oma loomult on lepinguõigus küllalt sarnane oskusteabega ning tal on samad puudused . Enamikul juhtudel sõlmitakse leping kahe poole vahel , kuid lepinguga sidumata kolmandad isikud ei kanna sellisel juhul mingit vastutust tarkvara kuritarvitamise eest . Lepinguõigusel on ka omad eelised tarkvara kaitsel , sest ta võib haarata laiemat objektide hulka ( programmi , selle kirjeldust , instruktsioone , abimaterjale jne. ) , mis on praktiliselt välistatud teistes õiguslikes institutsioonides . Lepingu sisu võib puudutada nii tarkvara välist esitust ( nagu autoriõiguses ) kui ka tema ideed , kontseptsiooni ( nagu patendiõiguses ) . Lepinguõigus mängib rolli kõikide eelkirjeldatud tarkvara õiguskaitse vormide ( patendiõigus , autoriõigus , oskusteave , ärisaladus ) puhul . Lepinguga saab üle või kasutada anda autoriõigusi , patenti , oskusteavet , ärisaladust ning kaubamärki . Oskusteave ja ärisaladus on paratamatult seotud lepinguliste suhetega , need ei rakendu ilma selleta . Eesti seadusandluses laieneb tarkvarale automaatselt autoriõiguslik kaitse . Autoriõiguse seadus ( VII ptk. ) sisaldab selles osas konkreetseid sätteid . Paragrahv <arv> lg. <arv> annab autorilepingu legaaldefinitsiooni : autorileping on autori või tema õigusjärglase ja teost kasutada sooviva isiku vaheline kokkulepe teose kasutamiseks , mille alusel autor või tema õigusjärglane annab teisele poolele oma varalised õigused või loa teose kasutamiseks lepingu tingimustega ettenähtud ulatuses ja korras . Siiski tuleb lepinguõigust vaadelda ka eraldi , sest arvestades tarkvara spetsiifilisust on vaja sätestada palju kriteeriume , mida ühegi teise lepingu liigiga ei reguleerita . LIPIKLITSENTS ( “ SHRINK WRAP ” LICENCE ) Üleandelepingu eriliik on õiguste kasutada andmine lipiklitsentsiga . Erinevus tavalisest lepingust seisneb selle sõlmimise korras , kokkulepet ei saavutata läbirääkimiste teel , vaid ühele poolele on ette antud kindlad tingimused , millega nõustumisel tekivad vastavad õiguslikud tagajärjed . Lipiklitsentsi instituut näitab lepinguõiguse paindlikkust . Lipiklitsents on väga levinud , sest see teeb litsentsiaari olukorra lihtsaks - tagatud on kirjaliku lepingu nõue ja igasugune aktiivne tegutsemine , sh. tõendamiskohustus , lasub litsentsiaadil . Lipiklitsents on suunatud lõppkasutajale ja on seega tavaliselt lihtlitsents . Lipiklitsents erineb oma vormilt . See litsents on selgesõnaline , kergesti märgatav , nö . lipik arvutiprogrammi kandja pitseeritud pakendil . Et aktsept antakse erikorras , on oferdi esitamisel kindlad tarbijaõiguslikud kriteeriumid : lisaks tarkvara nimele peab teatis pakendil olema selge ja silmatorkav kirjutatud suurte kirjatähtedega ühes rahvusvaheliselt enamkasutatavas keeles sisu peab olema ühemõtteline . Lipiklitsentsi sisu sätestab ühemõtteliselt , et selle tarkvara mis tahes kasutamine või seda tarkvara sisaldava pitseeritud pakendi või konteineri avamine põhjustab kaasneva litsentsilepingu tingimuste aktsepteerimise ning et igaüks , kes saab selle tarkvara ega aktsepteeri kaasneva litsentsilepingu tingimusi , peab mõistliku aja jooksul tagastama tarkvara kasutamatult ja avamatult isikule , kellelt see oli saadud , kusjuures kulud hüvitatakse . Et lepinguline õigussuhe , tingimuste aktsepteerimine , toimub tarkvara kasutamise alustamisega , siis kasutatakse seda litsentsiliiki sageli ka Interneti kaudu levitatava tarkvara puhul , lepingu tekst kuvatakse kasutajale enne tarkvara installeerimist . Lipiklitsentsi instituut töötati välja Ameerika Ühendriikides Louisiana osariigis . Eesti seadused selle kasutamist ei keela . Lipiklitsentsi kasutamise eelduseks praktikas on välja kujunenud tarkvara masstootmine . KAUBAMÄRK Kaubamärgiks võivad olla kõik tähised , mida on võimalik graafiliselt kujutada , eelkõige sõnad , sh. isikunimed , kujutised , tähed , arvud ja kaupade kuju ning kujundus , kui need võimaldavad ühe ettevõtte kaupade ja teenuste eristamist teiste ettevõtete omadest . Selle definitsiooni järgi võib arvutiprogrammi kasutajaliidese osaks olevat eritunnust kaitsta kaubamärgina . Eesti kaubamärgiseaduse kohaselt võib kaubamärgiks olla tähis , mida isik kasutab või kavatseb kasutada majandus- ja äritegevuses . Enamasti kaitstakse kaubamärki ainult ühe riigi piires , mis tähendab , et kaitse saamiseks tuleb kaubamärk registreerida igas riigis eraldi . Erand on Euroopa Ühenduse kaubamärgisüsteem ( Community Trade Mark , CTM ) ja Madridi kokkulepe . Kaubamärgi kasutamist seostatakse materiaalse objektiga , mistõttu on keeruline kaitsta näiteks Interneti vahendusel kättetoimetatavat tarkvara , millel puudub materiaalne andmekandja ja millel pole üldse mingit kehalist esinemisvormi . Uuemate kaubamärgireeglite kohaselt saab tarkvarale kaubamärki registreerida arvutiekraanist tehtud foto alusel , sest sageli tarkvara kasutaja ei näe kaubamärki enne , kui see ilmub ekraanile programmi kasutamise käigus . Kaubamärk erineb teistest õiguskaitsevormidest selles suhtes , et kaubamärgi kui õiguskaitsevormi objekt on kaubamärk ise , mitte tarkvara . TRIPS lepingu art. <arv> lg.<arv> määratleb kaubamärgi kaitse objekti : iga märk või märgikombinatsioon , mille abil ühe ettevõtte kaupu või teenuseid võib eristada teiste ettevõtete omadest . Seega ei laiene kaubamärgiõigus tarkvarale kui sellisele . Kaubamärgi institutsioon ei hõlma tarkvara sisu ega vormi , vaid kaitseb õiguslikult üksnes selle tähistamist ja tähistuse kasutamise korda . Kaubamärgi reaalne toime väljendub selle seotuses konkreetse tootega ( arvutiprogrammiga ) . Kaubamärk hõlmab turustamise ja reklaamiga saavutatud immateriaalset väärtust . Lisades kaubamärgi programmi korduvalt ja niimoodi , et see ilmuks programmi töö jooksul ekraanile mitmeid kordi , võib tarkvara looja oma õigusi küllaltki edukalt kaitsta . Tarkvara tootja poolt arvutitarkvara lõppkasutajale antud vastava tarkvaratoote kasutusõigus ei anna lõppkasutajale mingeid õigusi ühelegi tootja kauba- või teenindusmärgile . Võib öelda , et kaubamärgi õiguskaitse tarkvarale sõltub selle tehnilisest väljendusest , st. kasutaja seostab talle ilmneva informatsiooni põhjal toote ja tootja . Tehniliselt tuleb teha nii , et kaubamärki oleks programmi tekstist võimalikult keeruline kõrvaldada , sest just tähise olemasolu on tootja identifitseerimise aluseks . Kaubamärgiõigus kaitseb tarkvaratootjat just selliste rikkumiste eest , kus illegaalseid koopiaid üritab müüa selleks õiguspädevust ( vastavasisulist litsentsi ) mitteomav isik . Eesti seadusandlus näeb ette autorsuse eeldamise , AutÕS § <arv> lg. <arv> : isiku , kes avaldab teose oma nime all või oma üldtuntud pseudonüümi või autorimärgi all , autorsust presumpeeritakse ( eeldatakse ) , kuni pole tõendatud vastupidist . Tõendamiskohustus lasub autorsuse vaidlustajal . Siit tulenevalt täidab tarkvaratootja kaubamärk autorimärgi funktsiooni , välistades kasutaja heausksuse selle koha pealt , kellele kuuluvad autori- ja kaubamärgiõigused . Kui tõlgendada juriidilise isiku ( varaliste autoriõiguste valdaja ) toote kaubamärki autorimärgina , annab see säte õigusliku aluse seostada konkreetset tarkvaralist toodet ja selle autoriõiguste valdajat . Teisisõnu annab kaubamärgi eksponeerimine programmis aluse pidada toote kaubamärgi omanikku arvutiprogrammi autoriks või varalisi autoriõigusi valdavaks isikuks . Et kaubamärk ei hõlma tarkvara sisu ega vormi , on seda praktikas mõttekas kasutada koos teiste õiguskaitse vormidega . Üksinda ei taga kaubamärk midagi muud kui õiguse vastutusele võtta sama ( analoogilise ) kaubamärgi kasutaja , kuid koos autoriõigusega on kaubamärk üsna tõhus kaitsevahend . See nähtub ka Eesti kaubamärgiseaduse § <arv> lg-s <arv> , mis sätestab kaubamärgi õigusliku režiimi garanteerituse avaliku võimu poolt : riik kaitseb õiguskaitse saanud kaubamärgi omaniku ainuõigust kaubamärgile . Tegelikult võib kaubamärgi kasutamine osutuda kasulikuks ega ole vastuolus teiste tarkvara õigus- või mehaanilise kaitse vormidega . Hans Põldoja , TPÜ informaatika magistrant , Mart Laanpere , TPÜ haridustehnoloogia lektor Veebipõhiste kursuste autorsüsteemidest SISSEJUHATUS Virtuaalõppe perspektiividest Eesti kõrghariduses on kirjutatud lennukaid visioone juba mitu aastat , paraku pole seni veel märgata Interneti-põhiste kursuste buumi . Põhjanaabrite ülikoolid on moodustanud ambitsioonikate eesmärkidega konsortsiumi Suomen Virtuaaliyliopisto , mida Soome riik suhteliselt heldelt finantseerib . Meil tegutseb iga ülikool virtuaalõppe vallas seni peamiselt omaette , kuid eeldused ühistegevuseks on ka Eesti ülikoolidel olemas . Nimelt on mitu suuremat ülikooli ( TÜ , TTÜ , TPÜ ja EBS ) otsustanud rajada oma Interneti-põhise õppe ühele ja samale platvormile - WWW-kursuste autorsüsteemile nimega WebCT . Tallinna Pedagoogikaülikooli kaugkoolitusnõukogu tegi vastava otsuse juba <arv>. aastal , kuid hiljutised muutused WebCT litsentsipoliitikas ( eelkõige iga-aastase litsentsi hinna tõusmine <arv> USD-ni ) ja WebCT keerukus on sundinud meid nüüd kaaluma ka alternatiivseid lahendusi . Hind ja kasutajasõbralikkus on sellise valiku puhul kahtlemata peamisteks kriteeriumideks - kuid mitte ainsateks . Käesolevas artiklis kirjeldame WWW-põhiste kursuste loomiseks mõeldud autorsüsteemide hindamise võimalusi nende ( pedagoogilise ) funktsionaalsuse aspektist . ÜLEVAADE WebCT VÕIMALUSTEST Briti Kolumbia ülikoolis välja arendatud keskkonda esitleti avalikkusele esmakordselt <arv>. aasta mais . Praeguse seisuga kasutab WebCT keskkonda üle <arv> institutsiooni <arv> riigis ( WebCT , <arv> ) . Seetõttu võtame selle keskkonna aluseks , mille põhjal tutvustame virtuaalse õpikeskkonna põhilisi funktsionaalsuseid . WebCT on lühend nimest Web Course Tools - keskkond koosneb suurest hulgast erinevatest moodulitest , millest õppejõud oma kursuse kokku paneb . Kasutajad jagunevad neljale tasemele : administraator , õppejõud , assistent ja õpilane . WebCT <arv>.<arv> pakub kursuse koostajale järgmisi mooduleid : Süllabuses saab avaldada kursust puudutava üldinfo , nagu loengute ja praktikumide ajad , õppejõu kontaktinfo , konsultatsioonid , kursuse eesmärgid , kasutatava kirjanduse loetelu jms. Kalender võimaldab lisada avalikke ja privaatseid sündmuseid . Vormistusvõimalusi avardavad HTML märgendite kasutamine ning lingid WebCT keskkonnasisestele ja väljaspool paiknevatele ressurssidele . Sõnumid võimaldavad saata kirju WebCT keskkonna sees . Pakutav funktsionaalsus sarnaneb tavalisele elektronpostile , sõnumitele on võimalik lisada ka manuseid . Saab määrata ka elektronpostiaadressi , kuhu kõik saabuvad WebCT-sisesed sõnumid edasi suunatakse . Foorum on WebCT keskne suhtluskoht , mis võimaldab nii erinevate teemade all saata , lugeda ja otsida teateid . Lisavõimalusena saab luua privaatseid foorumeid rühmatöö tarbeks . Sisumoodul on piirkond , kuhu saab lisada loengukonspekte , presentatsioone ja ülesandeid . Konspekte võib luua keskkonnasisese lihtsa hüpertekstitoimeti abil või valmis faile üles laadides , sisukorra genereerib WebCT automaatselt . Sisumooduli lisavõimalusteks on sõnastik , kus õppejõud saab lisada kursusega seotud mõistete seletused , ning eesmärgi moodul , mis võimaldab sõnastada oodatavad õpitulemused iga kursuse osa kohta . Sisu assistent pakub võimalust lisada valmis õppematerjale ( artikleid , pilte , videoid , simulatsioone jm ) WebCT e-raamatukogust e-Learning Hub . Testi moodul võimaldab õppejõul luua küsimuste andmebaasi ning koostada selle põhjal erinevaid teste . Testile saab määrata ajaperioodi , mille jooksul see on kättesaadav , kestuse , mille jooksul see tuleb lahendada , ning lubatud testi sisenemiste arvu . Valikvastustega testide puhul on võimalik ka tagasiside ja automaatne hindamine . Testi mooduli abil on võimalik läbi viia ka küsitlusi . Enesetest võimaldab koostada valikvastustega teste , mille kohta õpilased saavad lahendamise järel koheselt tagasiside ning mille tulemusi kusagile ei salvestata ega hinnata . Kursuse haldamise moodul võimaldab lisada kursusele õpilasi , neid rühmitada ja hinnata , muuta hinded õpilasele nähtavaks , jälgida õpilaste aktiivsust ( sisselogimised , vaadatud lehed , loetud ja postitatud foorumisõnumid ) . Samuti võimaldab administreerimismoodul lisada kursuse assistente ja jälgida nende tegevust . Kokkuvõtvalt võib WebCT vahendid jagada sisuvahenditeks , kommunikatsioonivahenditeks , hindamisvahenditeks ja haldusvahenditeks . ÕPIPROTSESSI PÕHIKOMPONENDID JA NENDE TOETAMINE ERINEVATES ÕPIKESKKONDADES B. Collis on õpiprotsessi uurides toonud välja selle <arv> põhikomponenti ning analüüsinud nendele kulutatud aja vahekorda erinevate õppimisvormide puhul . Need põhikomponendid on esitatud järgmisel leheküljel toodud tabelis ( Collis , <arv> ) . Tavapärase õppevormi puuduseks on see , et liiga palju aega kulub õppeprotsessi haldamisele ja liiga vähe aega jääb grupi tööle ja diskussioonile . Traditsioonilist õppeprotsessi võimaldaks ümber kujundada just kaasaegse info- ja kommunikatsioonitehnoloogia kasutamine , mis laiendaks õpikeskkonda väljapoole füüsilist klassiruumi . Seeläbi muutuks õppeprotsessi komponentide vahekord , avaneksid paremad võimalused rühmatööks ning väheneks tunnis õppeprotsessi haldamisele kuluv aeg . Täisfunktsionaalne õpikeskkond peab pakkuma vahendeid kõigi nimetatud õppeprotsessi komponentide tarbeks . Vaatleme üldisemalt , milliseid vahendeid selleks erinevates õpikeskkondades kasutatakse .  <arv>. Õpetajapoolne esitlus on veebipõhises õppekeskkonnas mõnevõrra komplitseeritud . Kui esitluseks kasutatakse heli või video ülekandmist , siis nõuab see kiiret ühendust õpilase ja serveri vahel . Lihtsamaks õpetajapoolse esitluse reaalajas läbiviimise võimaluseks on jututoa ja valge tahvli kasutamine . Samuti on olemas vahendeid , mille abil saab PowerPointi esitlusi koos lektori kõnega RealVideo formaadis esitada ( RealSlideshow Basic ) . <arv>. Õpetaja ja õpilase vahelist kommunikatsiooni võimaldab veebipõhise õppekeskkonna puhul keskkonnasisene privaatsõnumite süsteem ning foorum . Lihtsamate keskkondade puhul asendab privaatsõnumite süsteemi edukalt tavalise elektronposti kasutamine . Võrreldes klassiruumiga pakub veebipõhine õppekeskkond mitmekülgsemaid võimalusi õpetaja ja õpilase vaheliseks kommunikatsiooniks . Näiteks on õpilasel võimalik esitada küsimus privaatselt või vastata õpetaja poolt foorumis püstitatud küsimusele privaatselt . Klassiruumis on privaatset suhtlemist raskem saavutada . Samuti puudub õpetajal tunnis aeg , et kõigi õpilastega personaalselt suhelda . Veebipõhiste kursuste korraldamisel tuleb arvestada õpilaste arvuga - grupp ei tohi kasvada liiga suureks , muidu kannatab õpetaja ja õpilaste vaheline kommunikatsioon . Suurte gruppide korral osalevad õpilaste juhendamisel tuutorid . Võib tekkida küsimus keskkonnasisese privaatsõnumite süsteemi vajalikkusest , sest peaaegu kõik õpikeskkondade kasutajad kasutavad ka elektronposti . Keskkonnasisese privaatsõnumite süsteemi eelised e-maili ees on järgmised : sõnumi saatmiseks ei ole vaja sisse meldida teist veebisaiti või käivitada mõnda teist programmi sõnumi kohalejõudmine sõltub vähem välistest teguritest ( e-maili puhul võib saaja server näiteks ajutiselt maas olla ) sõnum ei “ upu ” saaja postkasti sadade e-mailide hulka keskkonnasisesele sõnumite süsteemile on võimalik programmeerida lisavõimalusi , mis e-mailil puuduvad ( näiteks teade sõnumi lugemise kohta , mis praegu töötab ainult mõnede e-maili programmidega ) , samuti saab määrata e-maili aadress , kuhu keskkonnasisesed sõnumid edasi suunatakse . <arv>. Grupidiskussiooni arendamiseks on veebipõhistes õppekeskkondades foorumid ning jututoad . S. Horton toob välja järgmised eelised foorumi kasutamisel : Tunniks ettevalmistumine - õpetaja võib anda ülesande enne tundi foorumil etteantud teemal diskuteerida . Selle läbi on õpetajal parem ülevaade õpilaste teadmistest ning võimalus tunni sisu vastavalt sellele planeerida . Tagasihoidlikud õpilased - veebipõhises foorumis võivad aktiivsemalt osaleda ka need õpilased , kes klassis oma tagasihoidlikkuse tõttu diskussioonidesse ei sekku . Et säilitada tavapärasele õppeprotsessile omast klassiruumi privaatsust , peaks ligipääs foorumile olema piiratud . Tundlikud teemad - tundlikel ja isiklikel teemadel vestlemine võib foorumil õnnestuda paremini kui klassiruumis . Sel puhul peaks õppekeskkond võimaldama varjunimede all kirjutamist . ( Horton , <arv> ) Foorumi puhul võib olla probleemiks vähene kasutamine . Horton toob välja selle järgmised põhjused : Community puudumine . Kui puudub aruteluks ja diskussioonideks sobiv õhkkond klassiruumis , ei teki seda ilmselt ka veebipõhises foorumis . Sobivaks grupi suuruseks kindlatel teemadel diskuteerimiseks on <arv>-<arv> inimest . ( Milligan <arv> ) Motivatsiooni puudumine . Kui õppejõud ei arvesta foorumil osalemise aktiivsust , ei vaevu õpilased osalema . Harjumatus . Õpilased , kellel puuduvad eelnevad kogemused veebipõhiste foorumite kasutamisel , võivad tunda võõristust uue tehnoloogia ees . Foorumi kasutamise innustamiseks peaks õppejõud samuti foorumi diskussioonides osalema ( või vastupidi , oma osalemist piirama - ka liigne õppejõu kohalolek ei mõju õpilastele innustavalt ) . Õppejõud peaks pakkuma ülesandeid , mis eeldavad tööd väiksemates rühmades ning selliste rühmade sisest diskussiooni . Õpilastele peaks olema kättesaadav kursusekaaslaste nimekiri koos elektronposti aadressidega , et oleks võimalik soovi korral diskussiooni privaatselt jätkata . Mitte alati ei ole foorum piiratud ligipääsuga . Sel juhul võib aruteludesse sekkuda ka inimesi väljastpoolt , kes võivad diskussioonile uusi ja huvitavaid suundi anda . Üheks näiteks avatud foorumist on Dartmouthi kolledûi ajalookursus . Üheks meediumiks , mida seni asünkroonse suhtlemise puhul veel liialt vähe on kasutatud , on audiosalvestised . Oleks ju paljudel võimalik oma tekst mikrofoniga lindistada , kasutada sobivat audiokompressiooni ( näiteks <arv> kbps Real Audio , mis annab kõne jaoks piisava kvaliteedi ) ja laadida õpikeskkonda üles helifail oma jutuga . Real Audio kompressiooni võimaldav Real Producer Basic on tasuta allalaaditav . Rühma kokkuhoiutunnet aitab tõsta lihtsa kodulehekülje loomise võimalus õpikeskkonna vahenditega . Eriti oluline on see juhul , kui õpperühma liikmed ei tunne teineteist piisavalt - kaugkoolituskursused , ülikooli esimene kursus jne. <arv>. Iseseisev lugemine . Veebipõhine õppekeskkond võimaldab panna õpetajal välja materjale iseseisvaks lugemiseks . Selleks on võimalik laadida üles arvutis koostatud HTML või muus formaadis dokumente või kasutada õppekeskkonda integreeritud lihtsat hüpertekstitoimetit . Eesti oludes tuleb eelistada süsteeme , mis võimaldavad õpetajal võimalikult suure osa materjale ette valmistada ilma Interneti-ühenduses olemata . <arv>. Iseseisev harjutamine ja ülesanded . Õppekeskkond võimaldab kasutajal kinnistada lugemise käigus omandatud teadmisi enesekontrolliülesannete abil . Lihtsama keskkonna puhul ei pea ülesannete koostamise vahendid ilmtingimata olema keskkonna osa . Näiteks programmi Hot Potatoes abil on võimalik koostada JavaScripti abil töötavaid ülesandeid ning need hiljem tavaliste HTML-failidena üles laadida ( vt. <hyperlink> ) . <arv>. Grupitöö läbiviimiseks peab olema võimalik moodustada kursuse kuulajatest väiksemaid gruppe , kellel oleks ligipääs ühistele failidele ning ühine teistest eraldatud piirkond foorumil . Grupitöö keskkonna kasutamisel muutub tuutori roll - õpetamiselt liigub rõhk õppeprotsessi juhtimisele . Oluline on koostööd eeldavad tegevused hoolikalt planeerida ning hoida silma peal diskussioonidel . Tihti ei tasu õppejõul foorumil esitatud ainealasele küsimusele kohe vastata . Parem on , kui õpilased ise teineteise küsimustele vastata proovivad . Loomulikult peab õppejõud siin vajaduse korral vastust täiendama/parandama . Grupitöö võimalusi pakkuvaks keskkonnaks on näiteks BSCW ( Basic Shared Collaborative Workspace , vt <hyperlink> ) . Keskkonda on võimalik kasutada Saksamaal asuvast serverist või installeerida oma serverisse . Haridusasutustele on keskkond tasuta . <arv>. Hindamine . Et õpiprotsess toimuks täielikult virtuaalses õppekeskkonnas , tuleb ka hindamine seal läbi viia . Selleks võimaldavad õppekeskkonnad koostada õpetajal teste ( Quiz ) ning seada erinevaid piiranguid nende täitmiseks . Interneti-põhiste testide koostamiseks sobivad eespool mainitud HotPotatoes ja kodumaine eFormular <arv>. Muu ( õppeprotsessi haldamine ja monitooring ) . Virtuaalsed õpikeskkonnad muudavad tunduvalt mugavamaks õppeprotsessi haldamise . Õpetajal on võimalik saada ülevaade õpilaste aktiivsusest , testisooritustest jms. Erinevate uurimuste ( Hazari <arv> , Collis <arv> ) põhjal võib väita , et WWW-põhise kursuse tulemuslikkus - eriti väljalangevuse vähendamise osas - sõltub suuresti kursuse pedagoogilisest ülesehitusest ehk õpidisainist , viimase juures on aga oluliseks eelduseks õpikeskkonna mitmekesisus ja õppetöö korralduse paindlikkus . Seega on meil uue WWW-kursuste autorsüsteemi valikul peamiseks kriteeriumiks lisaks hinnale ja kasutajasõbralikkusele ka autorsüsteemi poolt pakutava “ pedagoogilise arsenali ” mitmekesisus - see peaks katma kõik eespool kirjeldatud funktsionaalsused . Seadsime oma eesmärgiks võrrelda viimati mainitud aspektist WebCT-d konkureerivate autorsüsteemidega ja alternatiivsete vabavaral põhinevate lahendustega . Ruumi kokkuhoiu mõttes toome allpool esitatud tabelis välja üksnes neli tarkvarapaketti , mis esindavad nelja erinevat kategooriat : YahooGroups esindab tasuta rühmatööplatvorme ( siia kategooriasse kuuluvad veel näiteks Hot.ee Intranet , BSCW ja EUN Community ; LearnLoop esindab vabavara pakette , mis on loodud spetsiaalselt veebipõhiste õpikeskkondade arendamiseks ( selles kategoorias on veel näiteks soomlaste Future Learning Environment , vt. <hyperlink> ) ; BlackBoard esindab kommerts-autorsüsteeme , mille puhul tarkvara ei installeerita kliendi serverisse , vaid kursused hoitakse BlackBoardi enda serveris ( kui aus olla , siis tegelikult saab piisava raha eest BlackBoardi ka oma asutuse serverisse ) ; Kõiki eespool mainitud pakette võrdleme alljärgnevas tabelis nende pedagoogilise funktsionaalsuse mõttes WebCT-ga .  Nagu näha , on “ pedagoogilise arsenali ” mitmekesisus tõepoolest WebCT trumbiks ja probleemid selle autorsüsteemiga on seotud pigem hinnapoliitika ja kasutajasõbralikkusega ( vähesema arvutikogemusega õppejõududel kulub liiga palju aega WebCT kasutamaõppimiseks ) . BlackBoard tundub selles võrdluses olema WebCT-le küllaltki heaks alternatiiviks - eriti kui arvestada , et BlackBoardi serverile võib piiratud mahuga kursuse üles seada tasuta ja kasutajasõbralikkuse seisukohast on BlackBoard WebCT-st kindlalt parem . Samas on küllaltki atraktiivsed ka LearnLoopi sarnased tasuta keskkonnad , mille eeliseks on võimalus installeerida tarkvara oma serverile , eestindada kasutajaliides ja lisada omatehtud mooduleid . Alternatiiviks Internetis leiduvatele kommerts- ja vabavara-autorsüsteemidele jääb loomulikult ka analoogilise tarkvara programmeerimine kohapeal - juba konkreetselt Eesti ülikoolide õppekorraldust ja vajadusi arvestades . VIKO - VIRTUAALNE ÕPIKESKKOND EESTI KOOLIDELE Virtuaalseid õpikeskkondi uurides on TPÜ-s silmas peetud ka üldhariduskoolide vajadusi . On ju virtuaalõpe tähtsuselt teise prioriteedina välja toodud riiklikus arenguprogrammis Tiigrihüpe Pluss . Olles uurinud erinevaid virtuaalseid õpikeskkondi , jõuti järeldusele , et puudub selline õpikeskkond ( piisavalt odav , kasutajasõbralik ja mitmekesine ) , mis sobiks Eesti üldhariduskoolidele . <arv>. a. kevadel valmis TPÜ-s Hans Põldoja diplomitöö raames lihtsa virtuaalse õpikeskkonna VIKO prototüüp . Lihtsa ülesehitusega prototüüp pakkus olulisemaid funktsionaalsusi , mis on kõigi õpikeskkondade koostisosaks : kursuse info ( ehk ainekaart , analoog WebCT süllabusele ) ajakava ( analoog WebCT kalendrile ) õppematerjalide avaldamine failidena õpetaja poolt lõimedega foorumid ja linkide lisamine . Eesmärgiks oli , et keskkond oleks kergesti hallatav , võimalikult kiiresti omandatav ja lihtsalt kasutatav ka vähese arvutikasutusoskusega õpetajatel ja õpilastel . VIKO arendamine jätkub tänu Tiigrihüppe Sihtasutuse toetusele TPÜ Haridustehnoloogia Keskuses käesoleval õppeaastal , VIKO versioon <arv>.<arv> pilootkatsetused kolmes Eesti koolis on kavas veebruaris-märtsis <arv>. Esialgsele prototüübile lisanduvad VIKO uues versioonis mitmed olulised funktsioonid , et laiendada kasutatavust üldhariduskoolides ( kasutajate aktiivsuse monitooring , kasutajate failide hoidmine , hinnete moodul , keskkonnasisene privaatsõnumite süsteem ) . Üldhariduskoolides on virtuaalsel õpikeskkonnal eelkõige tavapärast õppeprotsessi täiendav ja laiendav roll , seetõttu võib leppida keskkonna mõnevõrra piiratud funktsionaalsusega , kui see pakub kergesti õpitavat eestikeelset kasututajaliidest . gap desc='references'&gt; Peeter Ellervee , , TTÜ arvutitehnika instituudi dotsent Kuidas mõjutab kiipsüsteem elektroonika-alast kõrgharidust ? Terve süsteemi kiibil realiseerimise eelduseks on mikroelektroonika tehnoloogia tormiline areng . Antud teemat on A &amp; A veergudel käsitlenud Arvo Toomsalu ja Kalle Tammemäe ( vt. näiteks [ <arv> ] [ <arv> ] ) . Siiani on olnud peaprobleemiks projekteerijate suutmatus efektiivselt käsitleda plahvatuslikult kasvanud keerukust - tehnoloogia areng on kiirem kui projekteerimismetoodikate ja -vahendite areng . Viimase aasta jooksul on hakatud rääkima ka sellest , et sama moodi on märgata ka õpetamise mahajäämust tehnoloogia arengust - tehnoloogia muutub kiiremini kui jõutakse värskendada õppematerjale . See probleem kummitab eelkõige väiksemaid ülikoole ja seda üle terve maailma . Väljapääsu nähakse ülikoolidevahelise koostöö tihendamises mitte ainult teadusliku uurimistöö alal , vaid ka erinevate ainete õpetamisel . <arv>.-<arv>. novembril Kista teaduspargis ( Stockholm ) [ <arv> ] toimunud NORCHIP konverentsi arutelu- sessiooni teemaks oligi sellest tulenevalt “ Kiipsüsteemialane koostöö ja haridus Põhjamaades ” ( SoC cooperation and education in Nordic countries ) . NORCHIP on iga-aastane ASIC projekteerimisalane IEEE konverents . Peamised osalejad on Põhjamaadest , kuid ka teistest Euroopa riikidest , nii ülikoolidest kui ka tööstusest . Põhiteemadeks on analoog- ja digitaalsüsteemide projekteerimise ja valmistamisega seotud küsimused . Kuigi enamasti on tegu kohalikule tööstusele orienteeritud uurimistöödega , on NORCHIP olnud aeg-ajalt ka testkeskonnaks innovatiivsete ideede esitamistele . Ka Eesti teadlased on mitme aasta jooksul aktiivselt osalenud konverentsi töös , nii osalejate kui ka korraldajatena . Kuigi poliitiliselt Eestit Põhjala osaks ( veel ? ) ei loeta , toimub ülikoolide vahel aktiivne koostöö nii teadus- kui ka õppetöö alal . Arutelu sessioon oli organiseeritud klassikaliselt - moderaator annab alguses lühiülevaate probleemi(de)st ja esitab mõned teemaga seotud ( intrigeerivad ) küsimused eesmärgiga arutelu käima panna . Seejärel esitavad paneeli liikmed oma nägemuse ja üritavad ühtlasi vastata ka tõstatatud küsimustele . Järgneb väitlus omavahel ja/või saalis istujatega . Arutelu modereeris professor Hannu Tenhunen Kuningliku Tehnoloogiainstituudi ( KTH / Royal Institute of Technology , Stockholm ) elektroonikasüsteemide disaini laboratooriumist . Paneeli liikmeteks olid nelja ülikooli esindajad : professor Jan Madsen Taani Tehnikaülikoolist ( Technical University of Denmark , Lyngby ) , professor Jari Nurmi Tampere Tehnoloogiaülikoolist ( Tampere University of Technology , Soome ) , dotsent Peter Nilsson Lundi ülikoolist ( Lund University , Rootsi ) ja allakirjutanu Tallinna Tehnikaülikooli esindajana . Põhiküsimusi oli viis : Kas kiipsüsteem on midagi kardinaalselt uut ja kas sellega edukaks tegelemiseks peab midagi erilist ette võtma ? Kuidas erineb kiipsüsteemialane teadustöö <arv>-ndate ja <arv>-ndate aastate VLSI või arvutitehnika alasest uurimistööst ? Kas ülikoolis on üldse võimalik tegeleda tõsise kiipsüsteemialase uurimistööga ? Kas on üldse vajadust integreerida kiipsüsteemi õpetatavasse materjali ? Kui jah , siis millisest tasemest alates : bakalaureuse- , magistri- , täiend- või doktoriõppest alates ? Kas on vajadust rõhutada seost uurimistöö ja õpetatava vahel ? Mil määral oleks see hallatav ja/või soovitatav nii ülikooli üksikute töötajate kui ka ülikooli kui terviku seisukohalt ? Suuri erinevusi paneeli liikmete arvamuste vahel ei olnud , detailides erinevusi siiski oli . Näiteks nõustusid kõik , et kiipsüsteemis pole põhimõtteliselt midagi uut . Tegemist on tuntud probleemidega , mis nüüd uues vormis esile kerkivad . Terviksüsteeme on ju ennegi projekteeritud ja valmistatud , seega peab keerukus olema põhimõtteliselt hallatav . Uus on see , et nüüd tuleks loodav süsteem paigutada ühele kiibile , mis ongi hädade allikaks - süsteemi disainer teab vähe kiibist/kristallist ja kiibidisainer on hädas süsteemi kui tervikuga . Sama kehib ka tehtava teadustöö kohta - põhimõtteliselt on tegemist tuntud probleemidega , kuid integratsioonitase on muutunud ja see nõuab omakorda efektiivsemaid meetodeid , mis võimaldaksid analüüsida süsteemi kui tervikut . Kõige olulisemaks osutus leida lahendus kolmandale probleemile - kiipsüsteemi kui produkti projekteerimine ja valmistamine on muutunud nii kalliks , et see võib osutuda rahaliselt võimatuks mitte ainult laborile või instituudile , vaid isegi ülikooli resursse arvestades . Üksikute võtmeprobleemidega tegelemisega pole muret , selleks resursse leiab . Kuid mis kasu on tehniliste lahendustega seotud uuringutest , kui neid pole võimalik praktikas kontrollida ? Ainuvõimalikuks väljapääsuks on väga tihe koostöö mitte ainult sama ülikooli eri laborite vahel , vaid ka eri ülikoolide uurimisgruppide vahel . Eesmärgiks loomulikult üksikute uurimissuundade tulemuste kontroll praktikas ilma kiibi valmistamise eest hingehinda maksmata ( hind jaguneks mitme labori vahel ) . Selline koostöö on hädavajalik ka õppetöös . Esiteks on vajalik tihedam side erinevate kursuste vahel , sest kuigi üldjuhul on kõik kiipsüsteemiga seotud kursused õppeprogrammis esindatud , puudub selge esitus omavahelistest seostest . Teisalt nõuab tehnoloogia ülikiire areng ka kursuste ühe kiiremat värskendamist või lausa asendamist . Kui siiani räägiti paariaastasest elueast , siis nüüd on mõningate kursuste elueaks ainult aasta , kui mitte veelgi vähem . Lahendust nähakse eelkõige rahvusvahelises koostöös - sama kursus peab olema kasutatav ( mõningate modifikatsioonidega ) erinevates ülikoolides . Vastasel korral kannatab õpetatava aine kvaliteet , sest ressursside arv on piiratud . Veelgi enam , suhteliselt ressurssid pidevalt kahanevad , st. ühe tudengi õpetamiseks on neid järjest vähem . See pole probleemiks mitte ainult Eestis , vaid ka ülikoolides üle terve maailma . Peamiseks põhjuseks loomulikult kiibi valmistamise tehnoloogia ning sellega seotud projekteerimisvahendite ja eksperimentaalse aparatuuri pidev kallinemine . Teisalt on piirajaks ka inimressursside vähesus - üksik labor suudab tõsiselt tegeleda ainult paari konkreetse uurimisteemaga tipptasemel . Seega pole ka vastavate tippteadmiste edastamine antud ülikooli tudengeile probleem . Kuid mida teha aladega , kus uurimistöid ei tehta ? Üks võimalus oleks loomulikult rakendada olemasolevaid õpikuid ja ka loengumaterjale . Kahjuks kaasneks sellega paariaastane mähajäämus tipptasemest . Oluliselt parem oleks kasutada õppejõude ülikoolidest , kus vastava teemaga tegeldakse aktiivselt , seega leidub veel üks põhjus ülikoolidevaheliseks tihedaks koostööks . Kõigi eeltoodud probleemidega on seotud ka igivana küsimus : kui palju õpetada tudengitele teoreetilisi ja kui palju praktilisi aineid ? Ikka ja jälle on üles kerkinud küsimus , et kas poleks hea õpetada mõningaid konkreetse erialaga seotud praktilisemaid aineid juba esimestel kursustel , sest vastasel korral jääb tudengeil nõrgaks seos teooria ja praktika vahel . Kiipsüsteemide tekkimine ühest küljest toetab sellist lähenemist , sest oleks ju vaja näha seoseid eri probleemide vahel . Teisest küljest peab praktiliste ainete õpetamisega esimestel kursustel olema ettevaatlik , sest toimuda saab see ainult teoreetiliste ainete arvelt . Sellisel juhul on aga ohuks ebapiisav üldistatud teadmiste hulk , mis osutub hädavajalikuks mõne aasta pärast , kui järjekordne muutus tehnoloogiates ja/või metoodikates nõuab neist aru saamist . Täiendõpe oleks väljapääs , kuid täiendõppe maht piirab seda puhtpraktiliselt - lühikese ajaga on võimalik õpetada uusi praktilisi teadmisi , kuid teoreetiline põhi peab eksisteerima varasemast ajast , ja mida põhjalikum see on , seda lihtsam on uusi teadmisi juurde saada . Rootsis , Soomes ja Taanis on juba käivitunud rahvuslikud kiipsüsteemialased programmid . Nende raames organiseeritakse nii inseneride uue põlvkonna väljaõpet kui ka täiendõpet . Loomulikult vajavad need programmid pidevat sobitamist tegeliku olukorraga , st. mikroelektroonikaturu nõudmise ja pakkumisega . Ühe uue ideena , ehk isegi kõige olulisemana , kerkis üles vajadus mikroelektroonikaalase hariduse paarikümneaastase arengusuundade kava järele . Loomulikult korrigeeritakse neid plaane pidevalt . Samuti ei hõlmaks sellised kavad mitte üksikuid ülikoole või ka riike , tegu oleks eelkõige tervet Põhja-Euroopat hõlmava kavaga . Kas ja kui palju vajaks selline arengukava sekkumist ja/või toetust riiklikul tasemel , on iseküsimus , kuid igal juhul aitaks kava olemasolu planeerida kõrghariduse arengut . A. Toomsalu , “ Protsessor mälus ” , A &amp; A <arv>/<arv> . K. Tammemäe , “ Kuidas saada kiipsüsteemi disaineriks ” , A &amp; A ½<arv> . Kista Science Park - <hyperlink> Toomas Adson , TTÜ magistrant Andmesidevõrkude projekteerimine Alustades oma tööd andmeside projektijuhina olin õnnelik ja enesekindel , sest teadsin , et minu töö seisneb kliendi vajadusi rahuldava tehnoloogilise lahenduse leidmises . See tähendas uute andmesidetehnoloogiate tundmaõppimist ja rakendamist . Pärast mõningaid õnnestunud arvutivõrgu projektide teostamisi sattusin ühe kasutajaga vestlema ning kuulsin üllatusega , et viimase jaoks pakub arvutivõrk niisama viletsat teenust nagu ennegi . Asja uurides selgus , et probleem seisnes siiski Interneti serveris , mille poole ta pöördus . See oli esimene kokkupuude kasutaja nägemusega arvutivõrgust kui ühest tervikust , mille “ tervise ” eest hoolitseb eraldi inimene ( kes praegusel juhul tegi halba tööd ) . Teine aspekt kasutaja nägemusest tekkis mahukamate ja keerukamate projektide käivitamisel , kui kasutajad muutusid oma soovide avaldamises üha üldsõnalisemaks ning süvenes arvamus “ Projektijuht on arvutivõrkude teemat õppinud , tema teab , milline peab meie arvutivõrk olema ” . Mõnes mõttes oli neil õigus - arvutivõrkude spetsiifika oli tõesti arusaadav ainult minule , aga kuidas siis luua lahendust , mis rahuldab kliendi vajadusi ? Alljärgnevalt kirjeldaksin metoodikat , mille abil andmesidevõrkude lahendusi luua . Seda metoodikat saab rakendada sõltumata sellest , kas tegu on lokaalvõrgu või laivõrgu lahendustega . Tavaliselt käsitletakse andmesidevõrgu loomist kui ühenduse loomist arvutite või arvutivõrkude vahel . Andmeside areng ning sellest tulenev pakutavate rakenduste mitmekesisus on tinginud olukorra , kus lõppkasutaja poolt tarbitava andmesideteenuse kvaliteet sõltub lisaks võrgule ja arvutile ( host ) veel kasutatavast rakendusest ja kasutajast endast . Kliendile pakutava andmesideteenuse lähteülesanne koosneb seega kasutaja , rakenduse , arvuti ( host ) ja arvutivõrgu poolt esitatavatest nõuete summast , kusjuures arvutivõrk võib veel koosneda mitmest alamkomponendist . Sellise metoodika järgi on hea luua nii uusi võrke kui ka lahendada olemasolevate võrkude probleeme , nimelt saab ühe süsteemi osa poolt tekitatud probleeme edukalt lahendada teisel tasemel . N. asutuse välisühendus on väga aeglane ja kasutajatel on seetõttu raskusi WWW-lehekülgede vaatamisega . Probleemi lahendamiseks paigaldatakse lokaalvõrku puhverserver ( proxy server ) , mis salvestab endasse kõik WWW-lehekülgede päringute vastused , mida siis järgmise päringu korral edastab kasutajale . Tulemusena tõuseb WWW-päringutele vastamise kiirus mitmekordselt . Lisaks ülaltoodud süsteemi nõuetele tuleb lahenduse loomisel arvestada rahaliste vahenditega . Kliendi vaatenurgast ei ole oluline andmesidevõrgu olemasolu , vaid organisatsiooni äriprotsessidele antav lisaväärtus ( kiirus , kulude vähenemine , parem kommunikatsioon ) . Kõiki kulutusi tuleb võrrelda lahendusest saadava tuluga või lahenduse puudumisest tuleneva kahjuga . ANDMESIDETEENUST ISELOOMUSTAVAD PARAMEETRID Andmesideteenust saab iseloomustada kolme parameetri kaudu - töökindlus ( reliability ) , maht ( capacity ) ja viide ( delay ) . Töökindlus on süsteemi omadus tagada andmete täpne ja õigeaegne edastus . Õigeaegse edastuse all mõeldakse andmete edastust kasutajale vajalikul hetkel ning kindlaksmääratud aja jooksul . Andmete täpne edastus seisneb süsteemi võimes tagada kõigi punktist A punkti B saadetud andmete kohalejõudmine . Maht on süsteemi andmete edastuse mõõt . Mahu puhul kasutatakse kahte terminit - ribalaius ( bandwidth ) ja edastuskiirus ( throughput ) . Ribalaius on süsteemi ühe või mitme komponendi teoreetiline andmeedastusmaht , mille puhul ei võeta arvesse kõrgemate kihtide poolt lisatava info mahtu ( nt. pakettide päised ) ja pakettide korduvsaatmisele kuluvat infot . Viide iseloomustab andmete edastusele kuluvat aega . Siin võetakse arvesse süsteemi erinevates kihtides tekkivaid viiteid , nt. aeg paketi kanalisse saatmisel , transmissioonil , puhverdamisel ja töötlemisel . NÕUETE ANALÜÜS Edasine töö on analüüsida kasutaja , rakenduse , arvuti ning võrgu nõudeid . Kasutaja nõuete analüüsi eesmärk on välja selgitada kasutamise mustrid ( patterns ) . Kasutusmustrid kirjeldavad kasutajate arvu iga rakenduse kohta , kasutamise sagedust , sessiooni kestust ning iga rakenduse üheaegsete kasutajate arvu . Kasutusmustri selgitamine on vajalik , hindamaks lahenduse skaleeruvust ja lihtsustada suhtlemist kliendiga . Lahendust tarbiva firma juhtkond ei oma teadmisi tehnoloogiast , küll aga firma arengust , mis muuhulgas sisaldab plaane töötajate arvu tõstmiseks ja rakenduste laiemaks kasutuselevõtuks . Viimaste alusel on kasutusmustrite baasil võimalik tuletada reaalsed hinnangud andmeedastuse mahtude kohta . Rakenduste nõuete analüüs peab sisaldama hinnanguid edastatavate andmete mahule , andmete ülekandesagedusele ja ülekandeks kuluvale ajale . Rakenduste poolt esitatavad nõuded võivad oluliselt piirata kasutatava tehnoloogia valikuid , seda mõnikord isegi uuemate tehnoloogiate kahjuks . Nt . GPRS ja GSM DATA teenuse testimisel selgus , et WWW-lehekülgi õnnestus GPRS-teenuse kaudu saada oluliselt kiiremini , TELNET oli GSM-teenuse puhul oluliselt kiirem . Põhjus oli TELNET-i teenuses , mis edastas iga sümbolit eraldi , edastustevahelised pausid olid aga liiga pikad , mistõttu GPRS-seanss jõuti iga kord ära katkestada ning uue sümboli saatmiseks tuli iga kord uut seanssi alustada . Rakendusi võib liigitada töökindluse , viite ja mahu alusel . Need on sellised rakendused , mille häired põhjustavad otsest kahju firmale ( nt pangaautomaaatide võrk ) või inimelule ( nt. lennujuhtimissüsteemid ) . Rakendusi , mis esitavad kõrgendatuid nõudeid mahule ( nt. garanteeritud ribalaius n kbit/s ) , nimetatakse kontrollitud mahuga rakendusteks ( controlled rate applications ) . Rakendusi , mis esitavad kõrgendatud nõudmisi viitele , nimetatakse vastavalt reaalaja- või interaktiivseteks rakendusteks . Sellise detailse liigituse vajadus on tingitud uute rakenduste turuletulekuga , nt. video- või heliedastus andmesidevõrgu kaudu . Arvutite puhul tuleb analüüsida , kas tegu on tööjaamade , serverite või muude seadmetega , kui suur on nende hulk ja kus need paiknevad . Olulisemate arvutite puhul peaks analüüs sisaldama ka nende riist- ja tarkvaralise konfiguratsiooni kirjeldust . Asukoha informatsioon aitab määrata süsteemi komponentide omavahelisi seoseid ning on vajalik hilisemal andmevoogude määramisel . Arvutivõrgu nõuete analüüsi puhul tuleb arvestada , et lahenduse nõuetes peavad sisalduma ka nõuded eksisteerivale võrgule , sest tavaliselt peavad olemasolevad lahendused alles jääma . Arvutivõrgu tasemel tuleb arvestada ka ühilduvusprobleemidega tehnoloogia , meedia ning ka tootja tasemel ning vastavalt sellele hoida süsteem võimalikult homogeenne . Kõige rohkem kehtib see soovitus lokaalvõrkude puhul , kusjuures tuleks kasutada ühe tootja ühte konkreetset aktiivseadme mudeli seeriat . On olnud juhus , kus ühe firma uus switch ei suutnud vahetada andmeid sama firma <arv> aastat vana hub-iga . Arvutivõrgu nõuete osas tuleb kirjeldada ka arvutivõrgu halduse ja turvalisusega seonduvaid nõuded . Nt . tuleb kasutada SNMP v. <arv> baseeruvat monitooringut ning tagada andmete turvalisus vastavalt firmasistele eeskirjadele ja andmekogude kaitsmise seadusele . JÕUDLUSE LÄVED Loodava lahenduse kvaliteedi hindamiseks on veel vaja määrata süsteemi jõudluse läved ( performance thresholds ) . Selleks vaatleme detailsemalt lahenduse töökindluse , mahu ja viite nõudmisi . Töökindluse puhul kasutatakse mõisteid kättesaadavus ( availability ) , taastatavus ( recoverability ) ja veamäär ( error rate ) . Kättesaadavuse puhul kasutatakse mõõtühikuna protsente , millest saab tuletada teenuse mittetoimimise ( downtime ) aja . Allpool toodud tabel esitab mittetöötamisaegasid erinevate kättesaadavusprotsentide korral .  Töökindluse määramisel tuleb arvesse järgmisi aspekte Töökindlust mõõdetakse lõpp-punktide ( end-to-end ) , mitte süsteemi alamkomponentide vahel . Nt . võrguseadme , ühenduse , arvuti või rakenduse töökindlus on erinev , kuid mõju on sama - kasutaja ei saa tööd teha . Süsteemi eri osade töökindluse määr võib olla erinev , nt. süsteemid , kus mitmed harukontorid kasutavad peakontoris paiknevat andmebaasirakendust . Taastatavus väljendab keskmist ( mean ) vea likvideerimisele kuluvat aega . Absoluutset aega ei saa vea parandamisel määrata , sest kõiki situatsioone ei ole võimalik ette näha ( kuigi paljusid on ) . Kasutatakse ka lühendit MTTR ( Mean Time To Recover ) . MTTR mõiste praktiline väärtus seisneb võimaluses defineerida selle kaudu andmesideteenuse lepingu reaalselt mõõdetavad nõudmised kvaliteedile . Viite puhul kasutatakse mõisteid lõpp-punktide viide ( end-to-end delay ) ning viite varieerumine ( delay variation , jitter ) . Erinevatele tegevustele vastab erinev viide , praktikas räägitakse enamasti kolmest - interaktsiooni viide ( interaction delay ) , vastus kasutaja tegevusele ( human response time ) ning võrgus levimise viide ( network propagation delay ) . Interaktsiooni viide hindab , kui kaua on kasutaja nõus interaktiivse rakenduse puhul ootama vastust süsteemilt ( aeg , mis kulub päringu esitamisest kuni vastuse kuvamiseni ) . Viite pikkus sõltub kasutaja tegevusest , keskkonnast ja kasutatavast rakendusest . Interaktsiooni viide on oluline nõue lahenduse loomisel , kui kasutatakse interaktiivset rakendust . Selle pikkus võib olla mõnest sekundist mõne minutini ja rohkemgi , kuid üldjuhul võiks vahemik jääda <arv> ja <arv> sekundi vahele . Vastus kasutaja tegevusele on aeg , mille jooksul kasutaja hakkab tunnetama viidet ( nt. aeg , mis kestab TELNET-i teenuse kasutamisel klahvi vajutamisest sümboli kuvamiseni ekraanil ) . Aktsepteeritav aeg on umbes <arv> ms. Võrgus levimise viide kirjeldab võrgus signaali leviku viidet . Levimise aeg on avaldatav valemiga leviaeg = distants/transmissiooni kiirus . Füüsikaseaduste järgi on maksimaalne transmissiooni kiirus valguse levikiirus vaakumis c = <arv> <arv> km/s . Tihedamas keskkonnas liigub elektri- või valgussignaal aeglasemalt , <arv>Base<arv> Etherneti kaablis on signaali transmissioonikiirus <arv>,<arv> c , <arv>Base<arv> puhul <arv>,<arv> c ja valgussignaal liigub fiiberoptilises kaablis kiirusega <arv>,<arv> c [ <arv> ] . Lisaks meedias levimise ajale tuleb arvestada võrgusõlmede läbimisele kuluvat aega , mis on reeglina pikem kui meedias levimise aeg . Viite varieerumise likvideerimine on oluline interaktiivsete reaalajas toimuvate rakenduste puhul nagu videokonverents või heliülekanne . Viide iseenesest ei kujuta selliste rakenduste puhul nii suurt ohtu , sest sekund-paar kestev viivitus vestluses võib jääda märkamatuks , viite varieerumisest tingitud pildi hüplemine aga häirib oluliselt . Mahu nõuete puhul kirjeldatakse andmeedastuskiirust ( data rate ) ja mahtusid . Siin on oluline eristada , kas rakendus vajab oma tööks garanteeritult mingit andmeedastuskiirust või üritab ta kasutada maksimaalselt suurt osa olemasolevast ühendusest . Nt . heli ülekannet teostava rakenduse tööks on vaja garanteeritud andmeedastuskiirust <arv>,<arv> kbit/s , samas FTP seanss töötab niisama kvaliteetselt nii ühenduskiiruse <arv> Mbit/s kui ka ühenduskiiruse <arv>,<arv> kbit/s korral ( kuigi aega kulub rohkem ) . Juhul kui tegu on viimati nimetatud rakendusega , on seda kergem kirjeldada edastatavate andmete mahu kaudu , nt <arv>-MB faili edastatakse <arv> korda päevas . VOOGUDE MÄÄRAMINE Voog ( flow ) on lõpp-punktide vahel toimuv andmeedastusprotsess , mida saab iseloomustada lõpp-punktide aadresside , andmete kulgemise suuna ning mahule esitatavate nõuete kombinatsiooni kaudu . Vood on tüüpiliselt tarbijate vahel ( nt. kliendirakenduse ja serverirakenduse vahel ) . Voogude analüüs on oluline , sest nende muude nõuete integratsioon võimaldab teha konkreetseid otsuseid tehnoloogia ning protokollide valikul . Voogude analüüs koosneb kolmest etapist - voogude mudeli(te) koostamine , voogude piiride ( boundaries ) määramine ja voogude jagunemise ( distribution ) määratlemine . Voogude mudeli koostamise eesmärk on voogude kulgemise üldistava kirjelduse koostamine . Nt . kliendi-serveri mudeli puhul on ühe ja mitme arvuti vahel . Voogude piiride määramisel selgitatakse , kas vood : on sama lokaalvõrgu piires ( LAN ) läbivad regionaalvõrku ( LAN/MAN ) läbivad kaugvõrku ( LAN/WAN ) Voogude jagunemise analüüs annab vastuse , millised on ühe või teise asutuse ühenduse reaalsed vajadused . Etherneti tehnoloogia algusaegadel kehtis reegel <arv>/<arv> , mille kohaselt <arv> % liiklusest käis lokaalvõrgus paiknevate arvutite vahel ja <arv> % väljaspool painkevate arvutite vahel . Interneti ja Intraneti areng on selle reegli tühistanud , tavaliselt vahetavad kasutajad infot just väljapool nende lokaalvõrku Internetis paikneva serveriga või firma peakontoris paiknevate rakendustega . Siin tuleb vaadelda iga allüksuse voogusid eraldi , sest ka sama asutuse eri allüksuste vajadused võivad tugevasti erineda . KOKKUVÕTE Nõuete analüüsi , jõudluslävede ning voogude määramise etappide läbimine ei pruugi olla ühekordne tegevus . Ülesande püstitamise eri etappides võib tekkida vajadus veel kord läbi vaadata eelnevate etappide tulemused ning neid korrigeerida . Ülesande püstitamise etappide tähtsust ei tohi alahinnata , sest siin tehtud otsused määravad kogu projekti õnnestumise . gap desc='references'&gt; Uudised valis ja pani kokku Uuno Vallner , Riigikantselei riigi infosüsteemide osakonna nõunik Uudised INFORMAATIKANÕUKOGU SOOVITAB VALITSUSELE <arv>. AASTAKS IT-ARENGU PRIORITEETE Informaatikanõukogu poolt <arv>. veebruaril <arv> valitsusele soovitatud prioriteedid järgnevaks aastaks on : kohalike omavalitsuste ja riigi poolt pakutavate teenuste odavamaks ja kättesaadavamaks muutmine , lähtudes ID-kaardist digitaalse asjaajamise ja arhiveerimise arendamine ja juurutamine infotehnoloogiaga vähem kokkupuutuvate inimeste “ e-kirjaoskuse ” arendamine . Eeltoodud prioriteedid peaksid olema aluseks <arv>. aasta riigieelarve infotehnoloogiakulude planeerimisel . Informaatikanõukogu märkis rahvaraamatukogude internetiseerimist käsitledes , et praeguseks on tekkinud oht , et <arv>. aasta lõpuks ei suudeta täita nõuet tagada rahvaraamatukogudes kodanikele interneti vahenditega ligipääs avalikule teabele . Informaatikanõukogu otsustas , et on otstarbekas valmistada ette Riigikogus menetlemiseks otsuse eelnõu “ Infopoliitika põhialused II ” ( “ Infopoliitika põhialused I ” võeti Riigikogu otsusega vastu <arv>. aastal ) ja et menetlus peaks toimuma Riigikogu praeguse koosseisu volituste ajal - otsuse eelnõu ettevalmistamist koordineerib Teede- ja Sideministeerium . Lisaks seadis Informaatikanõukogu eesmärgiks tulla välja seadusandliku initsiatiiviga reguleerida eesti domeeninimede registreerimise põhimõtteid . ANDMEKOGUDE POOLT OSUTATAVATE ELEKTROONILISTE TEENUSTE FINANTSEERIMISEST Eesti Informaatikanõukogu soovitab ( <arv>. <arv>. <arv> ) andmekogude elektrooniliste teenuste loomisel , nendega seotud protsesside korraldamisel ja õigusloomes lähtuda järgmistest printsiipidest . <arv>. Andmed riigi andmekogudest on elektroonselt tasuta kättesaadavad kõigile , kes on õigustatud neid saama , v.a. kui tasu küsimiseks on olulisi põhjendusi . <arv>. Andmekogude poolt osutatavad elektroonilised teenused on tasuta : avalikke ülesandeid täitvatele asutustele ja organitele ulatuses , mis on vajalik konkreetse seadusest tuleneva ülesande täitmiseks ; statistilistel ja teaduslikel eesmärkidel . <arv>. Andmekogude poolt osutatavad elektroonilised teenused võivad olla tasulised : andmete saaja poolt andmete ärilistel eesmärkidel kasutamisel kui andmeid tuleb eelnevalt täiendavalt töödelda kui teenuse osutamisega seotud kulusid arvestades on tasuta teenuse võimaldamisel ilmne oht ressursse ebamõistlikult kasutada . <arv>. Andmekogude poolt osutatavate elektrooniliste teenuste eest saadav tasu laekub otse andmekogu vastutavale või volitatud töötlejale või riigilõivudena saadav tulu on täpselt arvestatav andmekogude lõikes . Andmekogude finantseerimine riigieelarvest toimuks ulatuses , mis jääb puudu tasuliste teenuste osutamisel saadud tuludest . KODANIKU IT-KESKKONNA HANGE Teede- ja Sideministeerium kuulutas <arv>. novembril <arv> välja eelläbirääkimistega riigihanke kodaniku IT-keskkonnale ( KIT ) . KIT on kõigile kodanikele Interneti veebilehitseja kaudu kasutatav infotehnoloogiliste vahendite kogum turvaliseks suhtlemiseks riigiasutuste , kohalike omavalitsuste asutuste , eraettevõtete ja kolmanda sektori institutsioonide ( edaspidi asutuste ) infosüsteemidega . KIT-i kasutajate ringi peab olema võimalik laiendada mittekodanikega . KIT-i vahendid võib kasutajagruppide järgi kolmeks jagada : kodaniku osa , üldsüsteemne osa ja avalik osa ( teabeportaal ) . Hanke lõppfaasi jõudsid <arv>. jaanuaril <arv> IBM , BCS , WebMedia , Eesti Telefon ja Microlink . IBM EESTI KÄIVE KASVAS <arv> PROTSENTI IBM Eesti käive kasvas <arv>. aastal võrreldes <arv>. aastaga <arv> protsenti . Seejuures PC-de käive <arv> protsenti ning keskastme serverite ja tarkvara käive <arv> protsenti . Aastaks <arv> prognoosib IBM Eesti <arv>-protsendilist kasvu . KOLME MINISTEERIUMI KOOSTÖÖPROTOKOLL X-TEE KASUTAMISEKS Pidades silmas vajadust tõsta avaliku võimu teostamise efektiivsust , soovides parandada avalikku võimu teostavate asutuste vahelist kommunikatsiooni , lähtudes seejuures eesmärgist vähendada andmekogude poolt teenuste osutamiseks tehtavaid kulutusi , pidades oluliseks dialoogi edendamist riigi ja elanikkonna vahel ning riigivõimu lähendamist tavakodanikule , võttes arvesse loetletud eesmärkide saavutamise tehniliste eelduste realiseerumist X-tee näol , otsustasid osalised : Justiitsministeerium , keda esindab minister Märt Rask , Siseministeerium , keda esindab minister Tarmo Loodus , ning Teede- ja Sideministeerium , keda esindab minister Toivo Jürgenson <arv>. Avaldada toetust X-tee kui tehnoloogilise lahenduse , mille kaudu tagatakse asutustele ja kodanikele õiguspärane ja andmekaitse nõuetele vastav juurdepääs X-teega liitunud andmekogudesse kantud andmetele , käivitumisele . <arv>. Kinnitada valmisolekut korraldada andmevahetust osaliste haldusaladesse jäävate asutuste vahel X-tee raames , tagades sealhulgas juurdepääsu nende poolt peetavates andmekogudes töödeldavatele andmetele X-tee kaudu , arvestades seejuures seaduslikke piiranguid . <arv>. Ühendada koheselt X-teega Rahvastikuregister , Kohtute registriosakondade keskandmebaas ning võimalikult kiiresti ka Liiklusregister , samuti ühendada X-teega koheselt Politseiamet . <arv>. Teha ühiseid jõupingutusi X-tee raames toimuva andmevahetuse edendamiseks , liites X-teega võimalikult kiiresti ka ülejäänud osaliste valitsemisala andmekogud ning asutused . <arv>. Lähtuda käesoleva protokolli alusel toimuva koostöö korraldamisel X-tee reeglistikust . <arv>. Tagada käesoleva koostööprotokolli osalistele ning nende asutustele , samuti notaritele ja kohtutäituritele operatiivse ning tasuta juurdepääsu ja ristkasutuse võimaluse X-teega ühendatud andmekogudes töödeldavatele andmetele . <arv>. Luua võimalus eraõiguslike isikute ligipääsuks X-tee kaudu osaliste haldusalas peetavates andmekogudes töödeldavatele andmetele niivõrd , kuivõrd see ei ole õigusaktidega kitsendatud . <arv>. Algatada andmekogude seaduse muutmine , võttes eesmärgiks selle vastavusse viimine kaasaegse tehnoloogia pakutavate võimalustega , sealhulgas võtta suund mittedelikaatse iseloomuga andmete laialdasemale ristkasutamisele avalikku võimu teostavate asutuste poolt , ning jälgida edasises õigusloomes põhimõtet , mille kohaselt avalikku võimu teostavail asutustel on keelatud nõuda füüsilistelt ja juriidilistelt isikutelt andmete esitamist , mida asutused saavad ristkasutada . <arv>. Määrata osaliste kontaktisikuteks käesoleva koostööprotokolli täitmisel järgmised isikud : Justiitsministeeriumi Registrikeskuse direktor Sirje Rogova , e-post : <email> ; Siseministeeriumi sideosakonna juhataja Ain Järv , tel. <arv> , e-post : <email> Teede- ja Sideministeeriumi riigi infosüsteemide asekantsler Mait Heidelberg , tel. <arv> , e-post : <email> <arv>. Kutsuda üles ka teisi avalikku võimu teostavaid asutusi ühinema käesoleva koostööprotokolliga . ALUSTATI ID-KAARTIDE VÄLJAANDMIST ID-kaart on uue põlvkonna isikutunnistus , millega saab anda ka digitaalallkirja . Seega on võimalik oma isikut tõendada nii tavapäraselt kui elektrooniliselt . ID-kaart on kohustuslik siseriiklik isikut tõendav dokument üle <arv>-aastastele Eesti kodanikele ja elamisloa alusel Eestis viibivatele välismaalastele . Isikutunnistust annab välja Kodakondsus- ja Migratsiooniamet . ID-kaardile on kantud omaniku perekonnanimi , eesnimi , sugu , kodakondsus , sünniaeg , sünnikoht , isikukood , foto , allkiri , väljaandmis- ja kehtivusaeg ning dokumendinumber . Kehtiva elamisloaga välismaalase isikutunnistusel on ka elamis- ja tööloa andmed . Lisaks hulgale turvaelementidele on kaardil masinloetav kood ja kiip . Kiip on elektrooniline seade , millele on salvestatud kaardil nähtavad andmed , võtmed ja neid kinnitavad sertifikaadid isiku tuvastamiseks ja digitaalse allkirja andmiseks . Kaardi kiibil ei ole rohkem isikuandmeid , kui neid kaardi peale on trükitud . Vaata <hyperlink> JEREVANIS TÕSTETI ESILE EESTI IT-ARENGUT Jaanuari viimasel nädalal Jerevanis peetud nõupidamisel “ E-areng Euroopas ja Kesk-Aasias ” äratasid elavat tähelepanu Eesti tulemused info- ja kommunikatsioonitehnoloogia valdkonnas . Ettekandega Euroopa põhjadimensiooni arendusplaanidest ning Eestis tehtavast tööst infotehnoloogia rakendamisel esines Eesti Informaatikakeskuse direktor Imre Siil . Nõupidamise Armeenias korraldas Maailmapank koos Euroopa Komisjoni , USAID-i , Armeenia Välisministeeriumi ning Informaatikafondiga , osavõtjaid oli <arv> riigist . VALMIS DIGITAALALLKIRJA RIIGIASUTUSTES JUURUTAMISE STRATEEGILINE PLAAN Eesti riigiasutustes digitaalallkirja rakendamise strateegilise plaani koostamise eesmärgiks on tuvastada võimalikke digitaalallkirja kasutusviise ning sätestada ühtsed visioonid ja tegevuskava digitaalallkirja kasutuselevõtuks kogu avalikus sektoris . Strateegilise plaani väljatöötamine on esimeseks etapiks Justiitsministeeriumi , Rahandusministeeriumi , Siseministeeriumi , Teede- ja Sideministeeriumi , Majandusministeeriumi ning Riigikantselei vastavas ühisprojektis , mis käivitati <arv>. aasta maikuus . Selle initsiatiivi ajendiks oli vajadus ellu viia Riigikogu poolt <arv>. märtsil <arv> vastu võetud digitaalallkirja seadus ja <arv>. novembril <arv> vastu võetud avaliku teabe seadus ning Vabariigi Valitsuse <arv>.veebruari <arv> määrus nr <arv> “ Asjaajamiskorra ühtsed alused ” . Edasise strateegia väljatöötamiseks on analüüsitud digitaalallkirja kasutusstsenaariume ning digitaalallkirja rakendamisega seonduvaid probleeme nii digitaalallkirja elutsükli lõikes ( digitaalallkirja andmise , kontrollimise ja säilitamisega ning digitaalallkirja andmise vahenditega seotud probleemistikku ) , digitaalallkirja rakendamisel erinevates (infovahetus)suhetes kui ka digitaalallkirja rakendamisel erineva tekkeviisiga dokumentide puhul . On koostatud kokkuvõtlik ülevaade riigiasutustes digitaalallkirjaga seonduvatest probleemidest ning ohtudest ja antud ülevaade ka juba käivitatud ning digitaalallkirja rakendamist toetavatest initsiatiividest . Arvesse võttes riigiasutuste poolt sätestatud prioriteete , on koostatud strateegiline plaan , mis sisaldab riigiasutustes digitaalallkirja juurutamise võimalikke lahendusvariante ning vajalikke samme nende elluviimisel . Strateegilise plaani koostamisel on silmas peetud , et digitaalallkirja juurutamine riigiasutustes peab toetama riigiasutuste põhitegevusi ning muutma avalike teenuste osutamise protsessi kasutajatele/kodanikele mugavamaks ja kvaliteetsemaks alandama riigiasutuste teenuste osutamise protsessi omahinda ning muutma selle protsessi efektiivsemaks . Digitaalallkirja seadus kehtib Eesti Vabariigis juba ligi aasta , ent digitaalallkirja tegelik rakendamine ei ole veel märkimisväärselt käivitunud , sest nõuab küllalt põhjalikku eeltööd . Strateegilise plaani täistekst : <hyperlink> , <arv>