kirjak	tea_AA_03_1.tasak.ela	Tõnis Mäe - sündinud <arv>. mail <arv> Ida-Virumaal . Lõpetanud Tartu Riikliku Ülikooli <arv>. aastal füüsika erialal . Pärast ülikooli lõpetamist on töötanud teadurina Kalinini-nimelise tehase insti- tuudis pooljuhtide laboris . Aastast <arv> töötas Sideministeeriumi arvutuskeskuses Eesti esimeste andmesidesüsteemide loomise projektidega . Aastast <arv> töötas Lääne Kaluri elektroonikatsehhis unikaalsete arvutikomponentide loomise kallal . Aastast <arv> töötab firmas Abobase Systems . Osalenud firma ülesehitamisel erinevates ülesannetes . Hetkel firma juhataja . Paul Leis : “ Abobase ” on selle aasta Eesti TOP <arv>-sse jõudnud . Kahtlemata on see väljapaistev saavutus . Sina oled “ Abobase'iga ” olnud peaaegu algusest peale . Mis on teie tänavuse edu põhjuseks ? Kas võib seda õnnelikuks juhuseks pidada ? Tõnis Mäe : Me oleme alati teinud midagi niisugust , mida teised ei julge teha . Näiteks : alustasime Unixi evitamist Eestis . Hewlett-Packard'i mehed tulid meie juurde ja ütles : “ Poisid , mis te nende PC-dega jändate , võtke parem Unix . ” Algul tundus see mõte meile kummaline : kõik rääkisid PC-de maailmast , mis kohe-kohe pidi täienema Windowsiga - milleks veel see Unix ? Ja me võtsimegi Unixi . Ükski teine Eesti firma ei julgenud tollal Unixit võtta ! Ja see , et me seda tegime , andis väga suure tõuke meie arengule : me olime turul ainsad , kel oli Unixi oskusteave . Teiste sõnadega - me saime teatavaks ajaks ärieelise , saime teenida raha ja seda kasutada järgmise sammu astumiseks . Ja jälle tegime midagi niisugust , mida teised teha ei julgenud , teenisime jälle raha järgmise sammu astumiseks jne. Nii oleme olnud mitmete Eesti jaoks innovaatiliste tehnoloogiate “ maaletoojaks ” . PL : Kuidas tekkis firma “ Abobase ” ? TM : Firma loodi selleks , et müüa Viktor Abo loodud andmebaasisüsteemi Abobase . PL : Ma mäletan , et te olite selles tegevuses üpris edukad - hakkajad noored mehed võivad ikka edu saavutada . Kuid kas tagantjärele ei tundu sulle , et instrumentaalvahendite , s.o. operatsioonisüsteemide , andmebaasisüsteemide jmt. väljatöötamine Eestis pole otstarbekas . Nii töömahukate toodete loomiseks ja arendamiseks pole meil lihtsalt jõudu . Võrdluseks : ei hakka me ju Volvosid või Saabe ehitama , küll aga tasuks mingit nutikat pisividinat nende tarvis välja mõelda . TM : Sel ajal oli see kindlasti otstarbekas : turul polnud ühtegi andmebaasisüsteemi , mis oleks olnud turvaline , Abobase aga oli . Näiteks võis toitejuhtme välja tõmmata , toite taastumisel taastus ka Abobase . Aga loomulikult oli see vaid ühe kindla perioodi toode . Kui me siis Eesti Panka läksime pakkumist tegema , ütles Rein Minka , et enne kui teie pakkumine ei sisalda ühte korralikku relatsioonilist andmebaasisüsteemi , ei võta me teid üldse jutule . Selle nõudmise kaudu me Oracle'ini jõudsimegi . See aga mängis niivõrd olulist rolli “ Abobase'i ” kujunemises , et ma loen Rein Minkat “ Abobase'i ” ristiisaks . Kuid - sooviksime ka praegu , et “ Abobase'il ” oleks oma toode , niisugune toode , millega saab minna Eestist välja . Oma toote puudumine pole mitte ainult “ Abobase'i ” , vaid kõigi Eesti firmade probleem - kellelgi pole toodet , millega minna maailma vallutama . PL : Missugune on praegune “ Abobase ” ? Kuidas iseloomustada teie strateegiat ? TM : “ Abobase'is ” on praegu <arv> töötajat , nendest pisut üle poole , <arv> inimest , on tarkvara- arendajad . Firma tegevuse iseloomustamiseks kasutame “ koogimudelit ” : “ koogis ” on <arv> kihti ( strateegilist liini ) , mis ei muutu . Neist neli on meil olnud algusest peale , need on tugiteenused , infralahendused , tarkvaraarendus ja koolitus . Oskusteavet selles “ koogis ” kujutame “ marjana ” - kui turul tekib soodne seis , siis vastav “ mari ” muutub “ magusamaks ” . Kui turul on ebasoodne seis , siis muutub “ mari ” “ hapumaks ” . Seejuures võib “ mari ” lõikuda mitme kihiga . Näiteks Oracle lõikub tarkvaraarenduse , koolituse ja infralahenduste kihiga . Rational'i “ mari ” on aga ainult tarkvaraarenduses . Kui “ mari ” on “ magusamaks ” läinud , siis me suurendame seda , kui aga “ hapumaks ” - siis kahandame seda või eemaldame üldse “ koogist ” . Niisugune mudel kujutab firma dünaamilist seisundit : vastavalt turu vajadustele suuname ressursse kas ühte või teise strateegilisse liini . “ Marjad ” võivad olla tootepõhised ( Oracle ) , aga ka oskusteabepõhised ( telekommunikatsioon ) . PL : Turuvajaduste dünaamiline arvestamine firma strateegia ja taktika väljatöötamisel on muidugi õige , aga minu meelest on “ Abobase'il ” ka unikaalseid saavutusi Eesti infotehnoloogiaturu kujundamisel . Teie strateegia teine pool , “ julgus evitada tehnoloogiaid , mida teised ei julge ” , on üsna selge turukujundamise strateegia . Ma pole veendunud , et “ Abobase'i ” roll selles osas on olnud Eesti IT-maastikule tervikuna kasulik . Näiteks on tänu “ Abobase'ile ” Eesti riik , kus Oracle'i suhteline levik on suurem kui teistes riikides . Edukas algus tõi kaasa lumepalliefekti : teised järgnevad , seejärel veel teised jne. Nii ongi tekkinud olukord , kus vaieldamatult parim , aga ka kalleim andmebaasisüsteem Oracle on muutunud Eestis praktiliselt monopoolseks . Kas aga tillukesele Eestile on igas asjas ikka parimat/kallimat vaja ? Pooldan tuntud mõtet : parim on hea vaenlane . Ka minul on tulnud ( vastutahtsi ) nii mõnigi kord tillukesele Eesti pisifirmale soovitada Oracle'it , sest ( tänu “ Abobase'i ” hiilgavale tegevusele ) pole meil “ väiksemate ” ( loe : antud firmale sobivamate ) andmebaasisüsteemide oskusteavet . Tõsi küll , Microsoft SQL hakkab siin pisut turusituatsiooni muutma , aga ülejäänud - Sybase , Progress , Informix , DB<arv> - praktiliselt puuduvad Eesti IT-maastikult . TM : Me oleme tehnoloogiate/metoodikate valikul lähtunud printsiibist : et me valiku hetkel ei tea , mis on Eesti jaoks sobivaim tehnoloogia/metoodika , siis oleme võtnud parima . Andmebaasidest - Oracle , metoodikatest - Rational , salvestustehnoloogiatest - EMC . Arendame nendes oma oskusteavet ja hakkame neid siis Eesti turule pakkuma - nii ei tee me kindlasti viga , äriettevõttena me ei tohi teha vigu . Ja seni on meie valikud ka õnnestunud . Rational'i puhul on oluline see , et metoodika igale sammule on olemas ka seda toetav tööriist - metoodika ja instrumentaarium on seotud , mis pole tagatud teiste metoodikate puhul . Rational'i kasuks Eestis räägib veel üks oluline , strateegiline asjaolu : need Eesti firmad , kes teevad projekte väljapoole Eestit , on kasumis , aga need Eesti firmad , kes töötavad vaid Eesti turule , on kahjumis - Eesti turg on liialt väike . On ju kümnemeheline projekt Eesti tingimustes hiigelprojekt , enamik projekte tehakse ühe-kahe mehega . Tulemus - kui ei suudeta tungida rahvusvahelisele turule , siis Eesti tarkvarafirmad kaovad . Rahvusvahelisele turule aga kümmekonnamehelise tarkvaraarendusfirmaga ei lähe . Minu hinnangul on Eestis umbes <arv> tarkvaraarendajat , koos nad moodustaksid jõu , mis võiks konkureerida suurte projektide saamiseks väljaspool Eestit . Tähendab , oleks vaja leida suuri projekte , mida meie väikefirmad üheskoos teeksid . Selleks aga , et nende firmade tegevust koordineerida , on vaja arendusprotsessi toetavat , eri meeskondi integreerivat suhtlusvahendit , tarkvaraarenduse protokolli - selleks sobib suurepäraselt Rational Unified Process ( RUP ) koos oma “ tööriistakastiga ” . Siin võiks tõmmata paralleele Interneti-protokollide osast veebi kujunemisel . Niisuguse firmade ühistöövõimelise koosluse kujundamine ongi “ Abobase'i ” missiooniks , see aga on tunduvalt laiem kui “ Eesti heaolu vaid enda huvisid silmas pidades ” , nagu sa äsja ütlesid . PL : Nii kaunilt üleva missiooni kohta on võimalik vaid vaimustust avaldada ja soovida “ Abobase'ile ” ja ta tulevastele partneritele edu “ Eesti asja ajamises ” . TM : On veel üks oluline fakt : Venemaa ja teiste endiste sotsialismimaade firmad pakuvad tarkvaraarendusteenuseid tunnihinnaga <arv>-<arv> USD . Niisuguse tunnihinnaga Eesti firmad konkureerida ei saa , meie tunnihind on tunduvalt kõrgem . Meie üheks nišiks võikski olla tugeval metoodilisel alusel - RUP - endiste sotsialismimaade firmade töö müümine Euroopasse . Ehk teisiti , metoodika , RUP'i rakendamine võib osutuda meile oluliseks ekspordiartikliks : osta odavat ressurssi ja müüa lahendusi Euroopasse . PL : Tundub , et “ Abobase'ist ” oleme piisavalt rääkinud . Räägiks nüüd sinust . Kus ja mida sa õppinud oled ? TM : Lõpetasin TRÜ <arv>. aastal füüsikuna . PL : Ja kuidas sa aatomite ja elektronide tagaajamise asemel otsustasid hakata hoopis infotehnoloogiaga tegelema ? TM : Kolm aastat töötasin Kalinini-nimelise tehase instituudis füüsika alal , aga juba siis oli mul vaja palju töötada arvutitega pooljuhtseadmete modelleerimiseks - eks nii see algas . Hiljem töötasin Sideministeeriumi arvutuskeskuses . PL : Oled sa infotehnoloogiat ka süstemaatiliselt , “ koolipingis ” õppinud . TM : Ei ole . PL : Loed sa palju ? Missuguseid raamatuid ? TM : Peamiselt juhtimisalaseid raamatuid . Mõni aeg tagasi astusin ma Henley College'isse juhtimisvaldkonna oskuste arendamiseks . PL : Enda harituse eest hoolitsed sa piisavalt , aga kuidas on lood “ Abobase'i ” teiste töötajatega ? Mida arvestad töölevõtmisel ? TM : Eestis on probleemiks oskusteabega inimeste leidmine . Kui me hakkame mingi uue valdkonnaga tegelema , siis pole kvalifitseeritud inimesi kuskilt leida . Järelikult peame need inimesed ise välja koolitama . Seetõttu on meil töölevõtmisel kriteeriumiks , et inimene oleks terane , intelligentne , mõtlemisvõimeline , õppimisvõimeline , omaks infotehnoloogilist baasharidust . Tänapäeval on eriti oluline orienteeruda tohutus infohulgas , oskus sealt välja filtreerida olulist , teha üldistusi . Kui inimene on tööle võetud , siis järgneb erikoolitus : kõik meie tarnijad omavad häid koolitusprogramme ja kõigepealt suunamegi oma uued töötajad niisugustele koolitustele . See süsteem töötab suurepäraselt . Arvo Toomsalu , TTÜ arvutitehnika instituut Valdav osa nüüdisaegseid mikroprotsessorsüsteeme kuulub sünkroonse talitlusprintsiibiga süsteemide klassi . Sünkroonsetes mikroprotsessorsüsteemides kasutatakse keskset üle kogu süsteemi toimivat takteerimist . Ühest kesksest signaaliallikast lähtuvate taktsignaalidega määratakse , millal ja millise kiirusega lülituvad ümber süsteemi kuuluvad loogikalülitused . Sünkroonse süsteemi korrektseks talitluseks on vaja , et erinevaid sünkroniseerimisahelaid pidi levivate taktsignaalide omavahelised ajalised nihked ei ületaks lubatavaid piire . Mida kõrgemaks on tõusnud mikroprotsessorsüsteemide töökiirus , seda lühemaks on jäänud taktsignaalide kestus ja seda rangemaks on muutunud nõuded nende levikuaja lubatavatele hälvetele . Üha keerukamaks muutuvates sünkroonsetes süsteemides valitseb oht , et süsteemi üksikute osade talitluses tekib desünkronisatsioon , mille tagajärjel muutub kogu süsteem töövõimetuks . Eriti terav on see probleem moodsates kõrgjõudlusega mikroprotsessorlülitustes . Vaatleme kas või järgmist juhtu . Takteeritagu mingit keerukamat sünkroonset loogikalülitust taktsignaalidega sagedusel <arv> GHz . Läbigu taktigeneraatorist väljuv taktsignaal andmetee , milles on <arv> loogikalülitust . Kui eeldada , et kõigi loogikalülituste viiteaeg on võrdne <arv> pikosekundiga , siis selle aja jooksul , kui taktsignaal läbib andmeteel kõik loogikalülitused , jõuab taktigeneraator väljastada veel <arv> järgnevat taktsignaali . Tegelikult on generaatorist väljastatavate signaalide arv suuremgi , sest näites ei ole arvestatud nende viidetega , mis tekivad loogikalülitusi ühendavates liinides . Kõrgel taktsagedusel talitlevate keerukate sünkroonsete mikroprotsessorkiipide projekteerijate raskeks ülesandeks on tagada , et protsessori loogikalülitused , mis peavad üheaegselt ümber lülituma , suudaksid seda ka tegelikult teha . Üha raskemini lahenduvad probleemid , mis tekivad moodsate sünkroonsete mikroprotsessorsüsteemide loomisel , on tõstnud uurijate huviorbiiti asünkroonsed loogikalülitused , eriti aga asünkroonsed (mikro)protsessorid . Tegelikult kasutati asünkroonset juhtimisprintsiipi ja asünkroonseid loogikalülitusi juba siis , kui ilmusid esimesed elektronarvutid . Meenutagem kas või Illinois'i ülikoolis ehitatud arvutit ORDVAC või Princetoni ülikoolis von Neumanni juhtimisel valminud IAS'i , mis alustasid tööd aastatel <arv> - -<arv>. Et aga asünkroonsete arvutite jõudlus osutus oodatust madalamaks , siis peagi kahanes huvi nende edasise arendamise vastu ning põhitähelepanu koondus sünkroonsete , tsentraalse takteerimisega arvutisüsteemide uurimisele ja valmistamisele . Nüüd on arvutustehnika areng aga taas jõudnud punkti , kus tuleb otsustada , kuidas edasi minna , kas iga hinna eest arendada sünkroonseid süsteeme või loobuda neist asünkroonsete kasuks . Järgnevalt vaatlemegi lühidalt neid eeliseid , mida kõrgjõudlusega protsessorlülitustes pakuvad asünkroonsed (loogika)lülitused sünkroonsetega võrreldes . Lühidalt tutvustatakse ühe tuntuma asünkroonse mikroprotsessori AMULET arhitektuurset lahendust ning peatutakse ka asünkroonsete protsessorite edasistel arengusuundadel . <arv>. SÜNKROONSED JA ASÜNKROONSED LOOGIKALÜLITUSED <arv>.<arv>. SÜNKROONSETE LOOGIKALÜLITUSTE PUUDUSED Kui lühidalt loetleda sünkroonsete loogikalülituste ja nendel põhinevate sünkroonsete süsteemide , sh. protsessorlülituste põhilisi puudusi , siis tuleks nimetada järgmisi : <arv>. Taktsageduse tõusuga kaasneb nii üksikute loogikalülituste kui ka kogu süsteemi energiatarbe märgatav kasv . <arv>. Et vältida süsteemis taktsageduse tõusuga kaasnevat desünkronisatsiooniohtu , mis tuleb pidevalt täiustada sünkroniseerimisahelate struktuuri , see omakorda suurendab riistvara keerukust ja süsteemi energiatarvet . <arv>. Sünkroonsete süsteemide talitluskiirust piirab ja määrab süsteemi kõige aeglasemate komponentide töökiirus . <arv>.<arv>. ASÜNKROONSETE LOOGIKALÜLITUSTE TALITLUSE PÕHIMÕTTED . ASÜNKROONNE LOOGIKA Sünkroonses süsteemis muutub iga allsüsteemi või loogikalülituse olek ranges vastavuses globaalse taktsignaali oleku muutusega . Asünkroonses süsteemis toimub allsüsteemide ( loogikalülituste ) olekute muutumine nende omavahelise infovahetuse tulemusena ilma , et see oleks seotud mingi välise globaalse (takt)signaaliga . Asünkroonne süsteem toetub infovahetuse korraldamisel lokaalseile koordineerivaile loogikalülitustele . Viimased väljastavad signaale , mille alusel tuvastatakse loogikalülitustes teatavate tegevuste lõppemist . Nende signaalidega tagatakse , et igas allsüsteemis ( loogikalülituses ) käivitatakse infoteisenduse protsess vaid siis , kui selle protsessi toimumiseks vajalikud andmed on kasutamiskõlblikud . Infovahetuse ohjel kasutatakse kahte tüüpi koordineerivaid loogikalülitusi : <arv>. Randevuulülitusi ( rendez-vous circuit ) ; <arv>. Arbiterlülitusi e. arbitere . Randevuulülituse ülesandeks on fikseerida ning teavitada teisi loogikalülitusi , et temasse on sisenenud viimane kahest või enamast sisendsignaalist . Asünkroonsetes süsteemides kasutatakse randevuulülitusi selleks , et tuvastada , millal teatavad asünkroonsed rööpselt toimuvad tegevused on mingis allsüsteemis , sõlmes või loogikalülituses lõppenud ning võib alustada järgmist tegevust ( tegevuste kompleksi ) . Üheks tuntuimaks randevuulülituseks on nn. Mulleri C-element . Mulleri C-element ( joonis <arv> ) on loogikalülitus , millel on kaks sisendit ( A ja B ) ja üks väljund ( F ) . Et Mulleri C-element funktsioneeriks korrektselt , on vajalik , et elemendi sisendeil olevad signaalid ei muutuks ( oleksid stabiilsed ) seni , kuni elemendist pole väljastatud väljundsignaali . Seevastu arbiterlülitus on nagu ristmikul olev liikluse reguleerija , kes lähtuvalt liiklussituatsioonist otsustab , kuidas paljude liiklejate korral oleks parem ristmiku ületamist korraldada . Arbiterlülitus , saanud süsteemi kuuluvalt allsüsteemilt nõudluse mingi tegevuse käivitamiseks , otsustab , kas anda selleks luba või viivitada loa andmisega seni , kuni on lõppenud süsteemis eelnevalt käivitatud tegevused . Kui arbiterlülitusse siseneb üheaegselt aga kaks või enam nõudlust , siis otsustab lülitus , millises järjekorras neid rahuldatakse . Arbiter peab tagama , et samaaegselt ei käivitataks kahte teineteist takistavat tegevust .  a b  A B F <arv> <arv> <arv> <arv> <arv> F F <arv> <arv> <arv> c Joonis <arv>. Mulleri C-element ( a - tingtähis , b - lülitusskeem , c - olekutabel ) Et enamasti tuleb arbiteril väga kiiresti otsustada , millist tegevust süsteemis lubada , siis eeldab suure arvu samaaegsete nõudluste korrektne arbitraaž väga kiireid arbiterlülitusi . Parimatel praegu kasutatavatel arbiterlülitustel kulub arbitraažiks kuni mõnisada pikosekundit . Arbiterlülituste kasutamisel ei tohi unustada aga veel ühte iseärasust . Nagu trigereil , on ka arbiterlülituste väljundil kaks stabiilset olekut , millega määratakse , kas mingi tegevuse toimumist lubada või mitte . Kahe stabiilse oleku vahel esineb aga lühiajaline nn. metastabiilne olek . Kui arbiterisse siseneb lühikeste vahedega järjestikku kaks nõudlust , siis siirdub arbiteri väljund metastabiilsesse olekusse seniks , kuni lülitus on suutnud otsustada , kumb nõudlustest rahuldada . Kiirete asünkroonsete süsteemide arbiterlülituste projekteerimisel ongi üheks keskseks probleemiks , kuidas neis minimeerida metastabiilse oleku kestust . Asünkroonsetes süsteemides saab infotöötlust korraldada erinevatel põhimõtetel , kuid põhiliselt rakendatakse siiski järgmisi juhtimisviise : <arv>. Viitemittetundlik juhtimine . Kiirusest sõltumatu juhtimine . a. Viitemittetundliku juhtimisviisi korral ei võeta arvesse viiteid ( signaalide hilistumisi ) , mis tekivad loogikalülitustes ning lülitustevahelistes ühendusliinides . Viitemittetundlik juhtimisviis eeldab keerukate lülituselementide kasutamist . b . Kiirusest sõltumatul juhtimisel ei arvestata viiteid loogikalülitustes endis , kuid võetakse arvesse viiteid , mis tekivad signaalide levikul ühendusliinides . <arv>. Andmete kaheliiniline kodeerimine . Kimbustatud andmeid kasutav siirdeprotokoll . a. Andmete kaheliinilisel kodeerimisel kasutatakse iga kahendmuutuja edastamiseks kahte liini . Meetod võimaldab edastada nii muutujat ennast kui ka läbi viia signaalide ajastamist . b . Kimbustatud andmete kasutamisel edastatakse iga kahendmuutuja individuaalse liini kaudu . Kahendmuutujate liinidele lisandub aga veel eraldi ajastuse liin . <arv>. Nivookodeerimine . Siirekodeerimine . a. Nivootundlikes lülitustes esitatakse kahendmuutuja loogikalist väärtust “ <arv> ” tavaliselt kõrge pingenivooga ja loogikalist väärtust “ <arv> ” madala pingenivooga . b . Siirekodeerimisel eristatakse kahendmuutujate loogikalisi väärtusi signaalide nivoomuutuste kaudu . Kõige sagedamini kasutatakse andmete edastamiseks asünkroonsetes süsteemides kaheliinilist kodeerimist koos kahendmuutujatele vastavate signaalide siirekodeerimisega . Meetod võimaldab kasutada küll lihtsama struktuuriga loogikalülitusi , kuid samas tarbivad lülitused märkimisväärselt palju energiat . Kuidas toimub andmeedastus kimbustatud andmete siirekodeerimist rakendavate asünkroonsete lülituste vahel , on näidatud joonisel <arv>.  Joonis <arv>. Kimbustatud andmete edastamine siirdeprotokolliga Toodud näites rakendatakse asünkroonsel infoedastusel <arv>-faasilist kimbustatud andmete edastusprotokolli . Info , mis edastatakse saatjalt vastuvõtjale , kantakse üle andmekimbuna siini Andmed liinides . Andmevahetust ohjatakse kahe juhtliini RQ ja ACK abil . Kui andmed on valmis saatjast väljastamiseks , siis väljastab saatja vastuvõtja tarvis nõudesignaali RQ . Signaal annab vastuvõtjale õiguse andmesiinil Andmed olev andmesõna vastu võtta . Kui vastuvõtja on edastatud andmesõna vastu võtnud , siis informeerib ta sellest saatjat kinnitussignaaliga ACK . Pärast vastussignaali ACK registreerimist võib saatja siinilt Andmed edastamisele kuulunud andmesõna maha võtta ja alustada uut andmeedastust eeldusel , et saatja on selleks valmis . <arv>.<arv>. ASÜNKROONSETE LOOGIKALÜLITUSTE EELISED VÕRRELDES SÜNKROONSETEGA Võrreldes sünkroonsete loogikalülitustega omavad asünkroonsed mitmeid olulisi eeliseid , eriti tuleks tähelepanu pöörata järgmistele momentidele : <arv>. Talitluskiirus ja jõudlus Erinevalt sünkroonsetest süsteemidest ei ole asünkroonsetes süsteemides loogikalülituste talitluskiirus jäigalt seotud süsteemi aeglaseima lülituse toimekiirusega . Näiteks sünkroonses konveieris määrab takteerimise kiiruse konveieri kõige madalama kiirusega talitlev aste . Seega , kui sünkroonsetes süsteemides püütakse optimeerida kõige aeglasemaid ( madalama jõudlusega ) loogikalülitusi , siis asünkroonsetes süsteemides on rõhk tüüplülituste ( keskmise jõudlusega ) optimeerimisel . <arv>. Energiatarve Mikrolülituste keerukuse aste ja energiatarve on aasta-aastalt suurenenud , eriti ilmekalt avaldub see mikroprotsessorlülituste juures . Nähtusel on omad objektiivsed põhjused - tehnoloogia täiustumise tulemusena on pidevalt vähenenud mikrolülituste topoloogiliste elementide joonmõõtmed , mis võimaldab baaskristalli pinnaühikule moodustada ikka rohkem ja rohkem loogikalülitusi . Mida rohkem kristallil asuvaid loogikalülitusi on üheaegselt aktiivses olekus , seda suuremaks kasvab nende poolt tarbitava elektrienergia kogus . Põhiliselt valmistatakse moodsad mikroprotsessorlülitused CMOS-tehnoloogias . CMOS lülitusest eraldub talitluse käigus , sõltuvalt aktiivrežiimis olevate transistoride arvust , küllaltki märkimisväärses koguses soojusenergiat . Ühe ja sama infoteisenduse läbiviimisel eralduva soojuse kogus sõltub aga sellest , kas infotöötlus toimub sünkroonselt või asünkroonselt talitlevas keskkonnas . Asünkroonses süsteemis teevad tööd vaid need lülitused , mis on otseselt seotud antud infoteisendustega , sünkroonses süsteemis aktiveeritakse lisaks infot otseselt töötlevaile loogikalülitustele läbi takteerimisahelate ka teisi lülitusi . Nii “ neelavad ” väga suure hulga energiat sünkroonsetes süsteemides taktigeneraatoriga ühendatud taktsignaalide võimenduslülitused , mis iga taktsignaali korral pidevalt ümber lülituvad . Keerukate mikrolülituste , eeskätt protsessorlülituste jõudsalt kasvav energiavajadus on tõstatanud kaks olulist probleemi : <arv>. Kuidas mikrolülitustest kiiresti ära juhtida liigset soojust , mis võib ohustada lülituse korrektset funktsioneerimist või - mis veelgi halvem-- kahjustada kristalli sisestruktuuri ? <arv>. Kuidas saavutada , et võimsate portatiivsete arvutite ( sülearvutite ) autonoomsed energiavarustuse süsteemid oleksid piisavalt pika tööeaga , jäädes samas aga mõistlike gabariitide ja massi piiresse ? Neile küsimustele vastuste leidmisel võiks lähtuda sellest , et CMOS-tehnoloogias valmistatud lülitustes esineb kolm energia dissipatsiooniallikat : <arv>. Lülituses esinevad dünaamilised voolud ( tekivad mahtuvuslike komponentide laadumise ja tühjenemise tulemusena ) . <arv>. Lülitustes esinevad lühisvoolud . <arv>. Lülitustes esinevad lekkevoolud . Viimased kaks etendavad mikrolülituste energiabilansis suhteliselt tagasihoidlikku osa , mistõttu võib ligikaudsetes arvutustes piirduda vaid dünaamiliste voolude arvestamisega . CMOS-lülituste dünaamiline energiatarve Edon määratud seosega , kus V cc on lülituse toitepinge , C i - sõlme i summaarne mahtuvus , n i - mõõteperioodi jooksul sõlmes i sooritatud ümberlülituste arv , m - lülituse sõlmede arv . Mida rohkem on lülituses vaadeldaval ajahetkel ümberlülituvaid sõlmi ja mida sagedamini nad ümber lülituvad , seda suuremaks kujuneb tarbitava elektrienergia kogus . Näiteks kui vanemate sünkroonsete mikroprotsessorkiipide energiatarve ulatus <arv>-<arv> vatini , siis uute kiirete mikroprotsessorlülituste energiatarve on mitmeid kordi suurem . Nii tarbib mikroprotsessor Athlon ( K<arv> ) taktsagedusel <arv> MHz <arv> vatti , sama taktsagedusega töötav Alpha <arv> tarbib <arv> vatti ning Alpha <arv> ( taktsagedusel <arv> GHz ) juba <arv> vatti . Kui kõrvaldada protsessorsüsteemist globaalne takteerimine , st. minna üle asünkroonsele talitlusele , siis õnnestuks oluliselt vähendada kiipide energiatarvet , sest neis tarbivad energiat vaid vajalikku tööd tegevad lülitused . <arv>. Struktuursed muudatused Üleminekul sünkroonsetelt (protsessor)süsteemidelt asünkroonsetele muutub hõlpsamaks ka keerukate lülituste dekomponeerimine lihtsamateks allsüsteemideks . Kergem on optimeerida üksikute lülituste struktuuri ja leida sobivaid lahendusi nn. “ kriitilistele ” sõlmedele ning lülitustele , mille jõudlus mõjutab kõige rohkem kogu süsteemi ( protsessori ) jõudlust . Pole vajadust tegeleda aeganõudvate ja keerukate sünkroniseerimisprobleemide lahendamisega . Kokkuvõtteks loetleme asünkroonsete juhtimisprintsiipide ja asünkroonsete loogikalülituste rakendamise eelised protsessorkiipide valmistamisel . <arv>. Asünkroonsed protsessorkiibid tarbivad <arv>- <arv>% vähem energiat kui analoogilised sünkroonsed kiibid . <arv>. Oluliselt pikeneb autonoomse toitega arvutisüsteemide ( süle- ja teised portatiivsed arvutid ) tööaeg autonoomsel toitel . <arv>. Et puuduvad globaalselt toimivad takteerimissignaalid , siis on häkkeritel raskem dekrüptida arvuteis töödeldavat informatsiooni . <arv>. Väheneb protsessorite sisemine müratase , kergem on võidelda neis tekkivate müradega . See on eriti oluline omadus hübriidlülituste , näiteks signaali- ja meediumiprotsessorite korral . Samas ei tohiks ka alahinnata asünkroonselt talitlevaile protsessoreile omaseid puudusi . <arv>. Tõsiseks probleemiks on nn tupikolukordade tekkimine , kus ressursside vastastikuse sõltuvuse tõttu võib kogu süsteemi töö peatuda . Selliste olukordade ennetamiseks viiakse asünkroonsetesse protsessoritesse sisse täiendavaid loogikalülitusi ning täiustatakse nende tarkvara . <arv>. Suureneb juhtimislülituste maht , eriti kui rakendatakse informatsiooni konveiertöötlust . Täiendavad juhtimisega seotud loogikalülitused nõuavad protsessorkristallides rohkem kristallipinda , mistõttu suurenevad kristallide mõõtmed ja maksumus . <arv>. Võrreldes sünkroonsete protsessoritega on asünkroonsete protsessorite projekteerimine , tootmine ja ekspluatatsioon keerukam . <arv>. Tööstuse areng on senini toetanud sünkroonsete (mikro)protsessorite arendamist . Praegu napib spetsialiste , kes oleksid suutelised projekteerima keerukaid asünkroonprotsessoreid , samuti pole piisaval tasemel sobivaid projekteerimisvahendeid . Kvalifitseeritud spetsialistide ettevalmistamine ja vastavate projekteerimisvahendite loomine nõuab aga suuremahulisi investeeringuid . <arv>. KÄSUKONVEIERID <arv>.<arv>. SÜNKROONNE JA ASÜNKROONNE KONVEIER Üheks põhiprintsiibiks , mida rakendatakse protsessorlülitustes piisava jõudluse saavutamiseks , on informatsiooni konveiertöötlus . Konveiertöötlus on hädavajalik ka asünkroonseis protsessoreis . Tulenevalt asünkroonsete protsessorite juhtimise olemusest , ei saa neis automaatselt kasutusele võtta sünkroonsete protsessorite konveierite struktuurseid lahendusi .  Joonis <arv>. Lineaarsete sünkroonsete ja asünkroonsete konveierite mudelid Joonisel <arv>a on toodud lihtsa neljaastmelise ( astmed A , B , C ja D ) lineaarse sünkroonse konveieri mudel . Vaadeldava konveieri koosseisu kuuluvad lukkregistrid ( L ) ja infoteisendusi sooritavad funktsionaallülitused ( FU ) . Konveieri lukkregistrite talitlust koordineerib ühtne globaalne taktsignaal ( Clk ) , st. informatsioon salvestatakse sünkroonselt kõikidesse registritesse pärast seda , kui andmete ( Data ) töötlus konveieri funktsionaalsetes üksustes on lõppenud . Samasuguse neljaastmelise konveieri võib tööle panna ka asünkroonsel printsiibil , kuid sel juhul tuleb ümber korraldada andmeliiklus konveieri üksikute astmete vahel ( joonis <arv>b ) . Ka asünkroonse konveieri koosseisu kuuluvad lukkregistrid ( L ) ja funktsionaalsed üksused ( FU ) , kuid neile lisanduvad veel täiendavad juhtlülitused ( LC ) ja signaalide viiteelemendid ( D ) . Andmetöötluse efektiivseks korraldamiseks rakendatakse asünkroonses konveieris üksikute astmete vahel nn. sisemisi lukustamisi . Lukustamisoperatsioone juhitakse juhtsignaalide RQ ja ACK abil . Nõudlussignaali RQ väljastamist konveieri järgmisse astmesse tuleb viivitada ajavahemiku t võrra , mis on vajalik selleks , et konveieri antud astme funktsionaalüksus jõuaks korrektselt sooritada ettenähtud infoteisenduse . Nõudlussignaali ajaliseks hilistamiseks võib kasutada kas viiteelemente , nagu on näidatud joonisel <arv>b , või lülitusi , mis tuvastavad funktsionaalüksuses andmeteisenduse lõppemise . Viimased on oma struktuurilt küll keerukamad kui viitelülitused , aga funktsionaalselt paindlikumad . Konveieri mingi astme juhtlülitus , saanud talle eelnevast astmest nõudlussignaali RQ , avab antud astme lukkregistri ning lubab eelneva astme funktsionaalüksuses formeerunud tulemi salvestada lukkregistrisse . Sellest , et andmed on lukkregistrisse salvestatud , teavitab juhtlülitus talle eelnevat astet vastussignaaliga ACK . Ühtlasi suletakse lukkregister ning võib käivituda infoteisendus antud astme funktsionaalüksuses . Mikroprotsessorite töökiiruse tõus , mis on toimunud eriti intensiivselt just viimastel aastatel , sunnib mikroprotsessorlülituste projekteerijaid otsima veelgi efektiivsemaid käsukonveierite struktuure . Eriti teravaks on muutunud probleemid sünkroonsete konveierite korral - neis genereeritavad mürad , aga ka dünaamiline energiatarve kasvavad väga kiiresti . Et hoida lülituste energiatarvet ja mürataset lubatavais piires , on sünkroonseis protsessorlülitustes hakatud järjest sagedamini kasutama käsukonveierite lokaalset juhtimist , st. sünkroonseis käsukonveiereis rakendatakse lahendusi , mis on iseloomulikud asünkroonsetele konveieritele . Nii on püütud asünkroonsete konveierite sisemise lukustamise printsiipi üle kanda ka sünkroonsetesse konveieritesse . Selleks võetakse sünkroonsetes konveierites kasutusele valiidsus- ehk kehtivussignaal . Valiidsus- signaaliga määratakse kindlaks , kas konveieriastmes kasutatavad andmed on töötluseks valmis või mitte . Kui andmed ei ole veel valmis , siis blokeeritakse sünkroonse konveieri antud astet juhtiv taktsignaal üheks taktiks , st. andmed selle takti jooksul konveieris edasi ei liigu . Kui valiidsus- signaal viia kõigisse sünkroonse konveieri astmetesse , siis võib seda signaali vaadelda kui asünkroonse konveieri RQ-signaali analoogi . Vältimaks sünkroonses konveieris tühitaktide ( mullide ) tekkimist , viiakse neisse kas täiendavaid puhverastmeid või võetakse kasutusele elastsed sünkroonsed konveierid . Asünkroonsete ( käsu ) konveierite , eriti keerukamate projekteerimine ei ole lihtne ülesanne . See nõuab väga hoolikat lülituste loogilise struktuuri ja ajastuse läbitöötamist . Et asünkroonsete konveierite projekteerimine on aeganõudev ja kulukas protsess , siis sageli võetakse kasutusele nn. iseajastuvad ( self-timed ) asünkroonsed lülitused , sh. ka konveierid . Joonisel <arv>c on esitatud iseajastuva lineaarse asünkroonse konveieri mudel . Konveieri iga aste koosneb kolmest lülitusest : <arv>. Juhtlülitusest ( Ci ) , mis käivitab andmetöötluse konveieri i-ndas astmes . <arv>. Lülitusest ( Di ) , mis tuvastab i-ndas astmes andmetöötluse lõppemise . <arv>. Funktsionaalsest üksusest ( FUi ) , mis sooritab andmetöötlust i-ndas astmes . Iseajastuva konveieri kõik funktsionaalsed lülitused saavad igal ajahetkel olla vaid ühes kolmest lubatavast olekust : <arv>. Lähtestus e. olek R - funktsionaalne üksus ootab käivitussignaali juhtlülituselt . Pärast käivitussignaali saabumist alustatakse konveieri antud astmes andmetöötlust . <arv>. Andmetöötlus e. olek E - funktsionaalne üksus sooritab sisendandmete funktsionaalse teisenduse vastavalt ettenähtud töötlusalgoritmile . <arv>. Hoie e. olek H - andmetöötlus funktsionaalses üksuses on lõppenud ja saadud tulem on valmis väljastamiseks konveieri järgmisesse astmesse . Joonisel <arv>c kujutatud konveieri mudelis käivitatakse konveieri esimeses astmes ( astmes A ) andmetöötlus siis , kui lülitus Di tuvastab , et sisendandmed on konveierisse sisestamiseks valmis . Vastav loasignaal edastatakse juhtlülitusse Ca , mis käivitab andmeteisenduse funktsionaalses üksuses FUa . Kui FUa on andmetöötluse lõpetanud , siis selle tuvastab lülitus Da , mis seejärel edastab loasignaali juhtlülitusele Cb . Viimane omakorda käivitab funktsionaalse üksuse FUb . Lülitus FUa siirdub samaaegselt aga hoideolekusse . Kui andmetöötlus lõpeb üksuses FUb , siis teavitab Db sellest juhtlülitust Cc ning viimane võib nüüd käivitada andmetöötluse FUc-s . Ühtlasi siirdub FUa lähteolekusse ja FUb hoideolekusse . Lähteolekus olev FUa on valmis vastu võtma töödeldavaid sisendandmeid . Parema ülevaate saamiseks iseajastuva asünkroonse konveieri talitlusest on tabelis <arv> näidatud , kuidas toimub olekute vaheldumine neljaastmelise konveieri üksikuis astmeis . Tabel <arv> Iseajastuva asünkroonse konveieri talitlus  Iseajastuvate asünkroonsete konveierite eeliseks tuleb lugeda nende projekteerimise lihtsust , lülituste vähest energiatarvet ja madalat mürataset , kuid teisalt peab arvestama ka selliste lülituste juhtimisel rakendatavate lülituste riistvaramahukust . Lihtsa asünkroonse konveieri jõudlus võib ületada analoogilise sünkroonse konveieri jõudlust tänu järgmistele asjaoludele . <arv>. Juhul kui andmete töötluseks kuluv aeg konveieris ei sõltu andmete iseloomust , siis mõjutavad andmete edasiliikumise kiirust vaid viited konveieri üksikuis töötlusastmeis . Sünkroonse konveieri takteerimiskiiruse määramisel tuleb võtta aluseks aga konveieri kõige aeglasema astme töökiirus . <arv>. Sünkroonses konveieris on vaja arvestada veel ka signaalide võimalikke hilistumisi ( viimased on ajaliselt muutuvad suurused , sõltudes mikrolülituste toitepingest , ümbritseva keskkonna temperatuurist ja töödeldava protsessi iseloomust ) . Signaalidevahelised hilistumised piiravad veelgi konveieri maksimaalset takteerimissagedust . Teisalt aga , erinevalt sünkroonseist konveiereist ei ole asünkroonsete konveierite projekteerimisel võimalik eriti täpselt prognoosida , millise tegeliku jõudluse konveier saavutab . See ongi põhjuseks , miks sageli lähtutakse jõudluse prognoosimisel nn. ad hoc põhimõttest , ning saadud jõudlushinnangud on tihti ebatäpsed . Kahjuks pole eriti abi ka olemasolevaist asünkroonsete süsteemide projekteerimiseks ettenähtud raalprojekteerimissüsteemidest . Eespool vaadeldud mudelid esindasid lihtsaid lineaarkonveiereid , kuid reaalsetes protsessorlülitustes kasutatakse järjest enam keerukaid mittelineaarseid konveiereid . Mittelineaarsete konveierite struktuuris võivad esineda nii tagasisided , andmete otseedastusteed või ka mõlemad korraga . Andmete otseedastusteed kiirendavad andmete liikumist konveieris , võimaldades vahele jätta konveieri neid astmeid , mida andmetöötluse algoritmi seisukohalt ei vajata . Tagasisideahelaid sisaldavas konveieris saab andmeid suunata korduvalt sama andmeteisendust sooritavasse astmesse . Joonisel <arv>a kujutatud sünkroonse mittelineaarse konveieri mudelis saab astmesse B suunata andmeid kas astmest A või C , otseedastusteid konveier ei sisalda . Nii lineaarse asünkroonse konveieri kui ka mittelineaarse asünkroonse konveieri juhtimislülitused on keeruka struktuuriga .  Joonis <arv>. Mittelineaarsete sünkroonsete ja asünkroonsete konveierite mudelid Joonisel <arv>b kujutatud mittelineaarse asünkroonse konveieri mudelis formeeruvad tulemid konveieri astmetes A ja C erinevatel ajahetkedel , seetõttu on vaja eriti hoolikalt jälgida , et astmesse B suunatavad andmed oleksid kasutuskõlblikud . Vaadeldava konveieri juhtimis- ahelatesse on selleks lisatud Mulleri C-elemendid ( C ) , mis viivad läbi konveieri astmetest A ja C saabuvate nõudlussignaalide ( RQ ) arbitraaži . Et konveieris esinevad veelgi mõningad ajalised piirangud , siis on asünkroonse mittelineaarse konveieri jõudlus üldjuhul madalam kui lineaarsel asünkroonsel konveieril , samas on mittelineaarse konveieri funktsionaalsuse aste kõrgem . Eriti keerukas on konveieri töö korraldamine superskalaarses protsessoris , kus samaaegselt talitlevad mitmed ( käsu ) konveierid . Sünkroonsetes superskalaarprotsessoreis rakendatakse väga keerukaid lülitusi , mis korraldavad ja sünkroniseerivad erinevais konveiereis saadud tulemite kasutamist kogu protsessori ulatuses . Asendades superskalaarseis protsessoreis sünkroonse talitlusprintsiibi aga asünkroonsega , õnnestuks vältida mitmeid kitsaskohti protsesside töötluse juhtimisel ja lihtsustada protsessori riistvara struktuuri . <arv>.<arv>. MIKROKONVEIER <arv>. aastal esitas Ivan Sutherland mikrokonveieri ( micropipeline ) kontseptsiooni , kus sünkroonses süsteemis rakendatakse andmeedastusel kimbustatud andmeid koos siirekodeeritud ristkviteerimise protokolliga . Joonisel <arv> kujutatud infoedastussüsteemi fragmenti võib vaadelda ka kui mikrokonveieri üht astet . Mikrokonveier on sisuliselt sündmusjuhitav elastne konveier . Ka eelnevalt vaadeldud asünkroonsed konveierid on sündmusjuhitavad , kus konveieri üksikud astmed talitlevad üksteisest sõltumatult ning nende talitlust ( sh. infovahetust ) juhivad üksnes lokaalselt toimuvad sündmused . Mikrokonveierid kuuluvad elastsete konveierite klassi , sest neis töödeldavate andmete hulk on varieeruv . Mikrokonveierisse andmete sisenemise kiirus ja sellest andmete ( tulemite ) väljumise kiirus ei pruugi olla võrdne ( erinevalt jäikadest sünkroonsetest konveieritest ) . Samuti pole elastse konveieri astmete arv jäigalt fikseeritud , see sõltub igal ajahetkel aktiivsete ( infoteisendusi teostavate ) astmete arvust . Kui mikrokonveierist eemaldada aga infoteisendusi sooritavad lülitused ( FU-d ) , siis muutub mikrokonveier tavaliseks asünkroonselt talitlevaks FIFO-ks . Üheks esimeseks protsessoriks , kus realiseeriti mikrokonveieri talitlusprintsiip , oli projekti AMULET raames välja töötatud asünkroonne mikroprotsessor AMULET<arv> . <arv>. NÄITEID ASÜNKROONSEIST PROTSESSOREIST Alates möödunud sajandi <arv>. aastate algusest on välja töötatud mitmeid eksperimentaalseid asünkroonseid protsessorlülitusi . Põhiliselt on tegemist ülikoolide juures uurimuslikul eesmärgil loodud mikrolülitustega , mida võiks tinglikult jagada kahte klassi : <arv>. Lihtsa arhitektuuri ja ajastusprobleemidele konservatiivse lähenemisega asünkroonsed protsessorlülitused , nagu California Tehnoloogiainstituudis <arv>. aastal valminud CAP või Tokio Tehnoloogiainstituudi TITAC ( <arv> ) . <arv>. Arenenud arhitektuuri ja protsesside juhtimisel vabamaid ajastamise põhimõtteid kasutavad asünkroonsed protsessorid , nagu Stanfordi ülikoolis <arv>. aastal valminud STRIP , Utah' ülikoolis <arv>. aastal projekteeritud Fred , Suurbritannias Hertfordi ülikoolis loodud Hades ( <arv> ) või Austraalias Adelaide'i ülikooli ESCTAC ( <arv> ) . Aastal <arv> valmis Manchesteri ülikoolis ( Suurbritannia ) ka esimene asünkroonne superskalaarne protsessor SCALP . Üks huvitavamaid ja arendatumaid asünkroonsete protsessorite peresid on mikroprotsessorid AMULET , mille projekteerimisel lähtuti mikroprotsessori ARM-mikroarhitektuursest lahendusest . Hoolimata transistoride tagasihoidlikust arvust ( <arv> <arv> ) arendas see protsessor piisavalt kõrget jõudlust ning tarbis vähe elektrienergiat . Ka oma arhitektuurse lahenduse poolest on ARM-protsessor mitmeti originaalne ja huvipakkuv . <arv>.<arv>. PROTSESSOR ARM Mikroprotsessor ARM projekteeriti aastatel <arv>-<arv> firmas Acorn Computers Ltd . ( Suurbritannia ) . Tegemist oli ühega esimestest kommertseesmärkidel loodud RISC-arhitektuuriga mikroprotsessoreist . Kuigi ARM'i arhitektuuris on palju RISC-protsessoritele iseloomulikke jooni , võib sealt leida ka mitmeid olulisi kõrvalekaldumisi klassikalise RISC-arhitektuuri põhimõtetest . Kuigi ARM-protsessoris tuginetakse selgesti laade-salvestusarhitektuuri iseloomulikele lahendustele ( kasutatakse <arv>-bitiseid fikseeritud pikkusega <arv>-aadressilisi käske , käskude kattuvtöötlust , mahukat registrikogumit jms. ) , on samas hüljatud RISC-arhitektuuris tihti kasutatavad registriaknad , ei rakendata viidatud hargnemiskäske , kuid mis eriti oluline - loobutud on ka püüdest täita kõiki käske ühe taktiga . Mikroprotsessori ARM lihtsustatud struktuurimudel on toodud joonisel <arv>.  Joonis <arv>. Protsessori ARM struktuurimudel Kuigi protsessori registrikogumis ei moodustata kattuvaid registriaknaid , on registrikogum varustatud mitmete sõltumatult talitlevate sisend- ja väljundportidega , mis tagavad kiire andmevahetuse protsessori teiste põhiüksustega . Töötlusüksusesse saab registrikogumist andmeid väljastada rööpselt läbi kahe väljundpordi ( o<arv> ja o<arv> ) . Andmetöötluse tulemus salvestatakse registrikogumis ettenähtud registrisse läbi sisendpordi w<arv> . Teist sisendporti ( w<arv> ) kasutatakse andmete sisestamisel mälust , kolmas port ( w<arv> ) võimaldab käsuloendurit ( r<arv> ) ohjata kui tavalist registrit . Protsessori autonoomselt talitlev aadressiüksus tegeleb aadressitöötlusega , vajades töötlusüksuse toetust vaid juhul , kui käsuvoos on vaja muuta käskude järgnevust . Mälust saabuv informatsioon jaotatakse eraldi käsu- ja andmevoogudeks , mida siis konveieris töödeldakse . ARM-protsessori töötlusüksuse sisestruktuuris rakendatakse samu põhimõtteid , mis hiljem leidsid kasutamist ka Sutherlandi mikrokonveieris . Tegelikult võib ARM-protsessorit tervikuna vaadelda kui üht suurt elastset mikrokonveierit , mis võtab vastu käsu- ja andmevooge ning väljastab tulemi- ja aadressivooge . <arv>.<arv>. PROTSESSORID AMULET Manchesteri ülikoolis käivitati <arv>. aasta lõpus projekt Amulet , mille eesmärgiks oli uurida võimalusi kõrgjõudlusega protsessorite energiatarbe vähendamiseks asünkroonse infotöötluse rakendamise abil . Kui asünkroonsete protsessorite talitluse üksikküsimustega oldi teoreetilisel tasandil ka varem tegeldud , siis nüüd seati eesmärgiks probleemide kompleksne läbitöötamine ja reaalselt töötava mikroprotsessorkiibi prototüübi valmistamine . <arv>. aastal valmiski asünkroonselt talitlev protsessorlülitus , mida nüüd teatakse kui mikroprotsessorit AMULET<arv> . Tegemist oli esimese asünkroonse ISA-arhitektuurile ( ISA - Industry Standard Architecture ) tugineva protsessoriga . <arv> Protsessorkiibi valmistamisega tõestati veenvalt , et kõiki infotöötlusega seotud operatsioone on tänapäeva mikroprotsessorites võimalik sooritada asünkroonselt . Protsessori AMULET<arv> koosseisu kuulusid mitmed rööpselt talitlevad üksused : <arv>. Aadressiüksus , mis autonoomselt genereerib käsuvõtte ja vahendab töötlusüksusest saabuvaid andmenõudlusi . <arv>. Registrikogum , mis varustab töötlusüksust vajalike operandidega . Kogumis säilitatakse ka töötluse tulemeid . <arv>. Töötlusüksus , mille koosseisu kuuluvad eraldi korruti- ja nihutilülitused ning aritmeetika-loogikaseade . <arv>. Andmeliides , mis sooritab üksikute baitide valikut ja joondamist . Liidese koosseisu kuulub veel käskude ennetusvõtupuhver ja lülitus käskude dekodeerimiseks . Kõik nimetatud üksused talitlesid üksteisest sõltumatult , kooskõlastades vaid andmevahetusi . Nagu märgitud , on AMULET<arv> oma struktuurselt lahenduselt lähedane eelnevalt kirjeldatud ARM-protsessorile . AMULET<arv>'s kasutati <arv>-faasilisi kimbustatud andmeid . Infotöötlus toimus protsessoris <arv>-astmelises käsukonveieris . Käskude töötlemisel rakendati konveieris sisemisi lukustusi . Käsu liikumine peatati konveieris seniks , kuni eelnev käsk oli lõpetanud andmete ettevalmistamise antud käsu tarvis . Tavapärasest erinevalt oli lahendatud siirdekäskude töötlemine . Pärast käsuvõttu tuli neil läbida kas <arv> konveieri- või FIFO-astet enne , kui siirdeaadress formeerus lõplikult . Siirdekäskude selline töötlusviis tekitas konveieri sagedasi mullistumisi , mistõttu sageli tuli konveierist kõrvaldada palju ennetuslikult võetud käske . See oli üks põhjusi , miks protsessori käsukonveieri jõudlus jäi madalaks , isegi hoolimata sellest , et laadekäske võis lõpetada ka käsujärjekorra väliselt . Asünkroonse mikroprotsessori AMULET<arv> jõudlus moodustas ligikaudu <arv>% sünkroonse <arv>-MHz taktsagedusel töötava mikroprotsessori ARM<arv> jõudlusest . Protsessorkiipide energiatarve oli ligikaudu ühesugune , kuid näitaja , mille poolest AMULET<arv> oma konkurenti ületas , oli jõudlus korrutamisoperatsioonide sooritamisel . Tabelis <arv> on toodud nimetatud mikroprotsessorite kohta olulisemaid põhinäitajaid . Võiks veel lisada , et tarkvaraliselt oli AMULET<arv> ühilduv ARM<arv>-ga , AMULET<arv>-l sai käitada ARM<arv> tarvis loodud tarkvara . Tabel <arv> Protsessorite AMULET<arv> ja ARM<arv> parameetrid  AMULET<arv> ARM<arv> CMOS-tehnoloogia <arv>,<arv> Üm <arv>,<arv> Üm Kristalli pindala ( mm<arv>) <arv>,<arv> x <arv>,<arv> <arv>,<arv> x <arv>,<arv> Transistoride arv kristallil <arv> <arv> Jõudlus ( kDhry ) <arv>,<arv> <arv> Korrutuslülituse kiirus ( ns/bit ) <arv>,<arv> <arv> Toitepinge ( V ) / taktsagedus ( MHz ) <arv> / - <arv> / <arv> Võimsustarve ( mW ) <arv> <arv> Erijõudlus ( MIPS/W ) <arv> <arv> <arv>. aastal valmis AMULET-sarja järgmine esindaja , <arv>-bitine asünkroonne mikroprotsessor AMULET<arv> . Mikroprotsessori arhitektuurse lahenduse väljatöötamisel peeti silmas , et lülitust saaks kasutada sardsüsteemides . Selleks lisati protsessorkiipi <arv>-kilobaidine mälulülitus , mida võis kasutada kas tavalise muutmäluna või vahemäluna . Mälu oli korraldatud nelja <arv>-kilobaidise mäluplokina , iga mäluploki koosseisu kuuluvad muutmälu ( ehk nagu seda vahemäludes nimetatakse - andmemälu ) ja assotsiatiivmälu ( sildimälu ) lülitused . Protsessorkiibi AMULET <arv> olulisemate tunnustena tuleks esile tõsta järgmisi : <arv>. Protsessoris kasutatakse neljaastmelist konveierit . <arv>. Konveieris kasutatavad lukkregisterlülitused on väga väikese energiatarbega . <arv>. Käsukonveieris rakendatakse programsete hargnemiste prognoosimist . <arv>. Protsessorkiibi saab soovi korral viia minimaalse energiatarbega nn. suikerežiimi . <arv>. Suhtlus kiibiväliste ( standardsete ) mälulülitustega toimub läbi eriliidese . <arv>. Protsessori välissiini laius on dünaamiliselt muudetav , vastavalt kas <arv>- , <arv>- või <arv>-bitiseks . <arv>. Protsessorkiip on valmistatud <arv>,<arv> -Üm CMOS-tehnoloogias , kasutatakse kolme metallisatsiooni- kihti . <arv>. Protsessorkristallil , mõõtmetega <arv>,<arv> x <arv>,<arv> mm , asub <arv> <arv> transistori .  Joonis <arv>. Mikroprotsessori AMULET<arv> struktuurimudel Joonisel <arv> on näidatud protsessori struktuurne korraldus . Kui seda võrrelda ARM-protsessori omaga , siis torkab jällegi silma protsessorite struktuursete lahenduste sarnasus . Võrreldes protsessoriga AMULET<arv> oli AMULET<arv> ligi <arv>,<arv> korda kiirem . Kuid AMULET<arv> jõudlus , võrrelduna näiteks tööstuslikult toodetava mikroprotsessoriga ARM<arv> ( taktsagedus <arv> MHz ) , moodustab viimase jõudlusest kõigest <arv>% . AMULET-sarja viimane esindaja AMULET<arv> valmis aastal <arv> DRACO-kiibina . Selle protsessori jõudlus küünib juba <arv> MIPS'ini , parameetritelt on lülitus võrreldav mikroprotsessoriga ARM<arv>TDM<arv> . DRACO-kiibis ( DECT Radio Communications Controller ) , mida kasutatakse kontrollerlülitusena kaugandmeside korraldamisel , on ühendatud asünkroonselt talitlev protsessortuum AMULET<arv>H ja sünkroonse kaugside perifeeriasüsteemi lülitused . Et tegemist on kontrollerlülitusega , siis täiendati protsessortuuma kiibisisese riistvaraga , mis lihtsustab tarkvara ettevalmistamist . Protsessori koosseisu kuulub kiire <arv>-kilobaidine muutmälu . Infovahetus mälu ja protsessori töötlusüksuste vahel toimub läbi isesünkroniseeruva siini MARBLE . Siin MARBLE toetab mitmikülema ( multimaster ) režiimi , kasutades tsentraalset arbitraažilülitust . MARBLE-siinis rakendatakse andmete jaosedastuse printsiipi , tänu millele saavutatakse <arv>-bitiste andmesõnade läbilaskevõimeks kuni <arv> miljonit sõna sekundis . <arv>.<arv>. FLEET ZERO Üht võimalikku arengusuunda asünkroonsete protsessorite arhitektuuri edasiarendamiseks tutvustas <arv>. aastal Sun Microsystems'i asepresident Ivan Sutherland , nimetades seda Fleet Zero . <arv> Firmas Sun Microsystems tegeldakse praegu intensiivselt kiirete asünkroonsete süsteemide väljatöötamisega . Mikrolülituste talitluskiiruse tõstmise üheks eelduseks on nende struktuurne lihtsus . Kui veel mõni aeg tagasi keskendusid firma spetsialistid efektiivsemate infotöötlusmeetodite otsingul vastuvoolu printsiibil töötavatele konveieritele , siis nüüd on rõhk asetatud arhitektuurile , mida nimetatakse FLEET . <arv> Nimetusega ei soovita rõhutada üksnes infotöötluse kiiruslikku ( jõudluslikku ) aspekti , vaid ka seda , et tegemist on infotöötlust sooritavate töötluselementide kogumiga . Iga taolist elementi kutsutakse SHIP'iks ( laevaks ) . Iga SHIP sooritab infoteisendusi autonoomselt , rööpselt teiste SHIP'ide suhtes . Üksikuid SHIP'e võib ühendada suuremateks üksusteks , mida nimetatakse flotillideks , viimastest võib moodustada aga juba laevastiku ( FLEET ) . SHIP'idevaheline andmeedastus toimub asünkroonse kommutatsioonivõrgu kaudu . Erilist osa süsteemi kõrge jõudluse saavutamisel etendab efektiivselt toimiv andmeside . Tänu asünkroonsele talitlusprintsiibile ei kaasne sellises süsteemis jõudluse kasvuga energiatarbe olulist tõusu , nagu see oleks paratamatu analoogilistes sünkroonsetes süsteemides . Saavutamaks andmeteede minimaalset pikkust , jaotatakse Fleet Zero arhitektuuriga protsessorkristallide pind kahemõõtmelisteks väljadeks , st. loobutakse klassikalisest lahendusest , kus protsessori mikroarhitektuuri keskseks komponendiks on tsentraalne siinstruktuur . Et minimeerida ühendusliinide arvu kristallil , on ette nähtud liinide multipleksimine . Fleet Zero arhitektuuriga protsessorkiipide testimistulemused näitavad , et neis on võimalik saavutada infoläbilaskevõimeks <arv>,<arv> miljardit andmeüksust sekundis , kuid see pole veel kaugeltki piir . KOKKUVÕTTEKS Asünkroonsed süsteemid , sh. protsessorid on praegu eriti laialdast rakendust leidnud sardsüsteemides , kus seadmetelt nõutakse kõrvuti kõrge jõudlusega ka võimalikult väikest energiatarvet . Üha enam valmistatakse hübriidsüsteeme , kus samaaegselt talitlevad nii sünkroonsed kui ka asünkroonsed lülitused . Sageli kohtab selliseid lahendusi just uuemates mikroprotsessorkiipides . Viimaste aastate uuringud on tõestanud , et on võimalik luua isegi selliseid asünkroonseid mikroprotsessorlülitusi , mille ühendamiseks traditsiooniliste välisseadmetega ei ole vaja rakendada keerukaid ja kalleid liidesstruktuure ega eritarkvara . Kuid peamised asünkroonsete mikroprotsessorsüsteemide eelised , võrreldes sünkroonsetega , seisnevad selles , et : <arv>. Asünkroonne arhitektuur soodustab moodulprojekteerimist . Iga sellise süsteemi allsüsteem või funktsionaalne üksus võib olla välja töötatud ja optimeeritud autonoomselt , ilma et seejuures tuleks arvestada nende paljude piirangutega , mis esinevad sünkroonsetes süsteemides . <arv>. Asünkroonsetes süsteemides on määrav tema komponentide keskmine jõudlus , mitte aga mingi üksiku komponendi minimaalne jõudlus . <arv>. Asünkroonsed mikroprotsessorsüsteemid võimaldavad palju säästlikumalt kasutada elektrienergiat , varustades energiaga vaid neid süsteemi komponente , mis tegelikult viivad läbi infotöötlust .  Paul Leis <arv>. IT JA ÄRIPOOLE SUHTE DÜNAAMIKA Kes minevikku ei mäleta , peab minevikus elama . George Santayana Kuigi ettevõtted sõltuvad järjest enam informatsioonist , on IT jäänud siiski paljudele vaid kulukohaks , IT olemasolu ei märgata , kui “ kõik läheb normaalselt ” . Kui aga miski viltu läheb , siis nähakse ka IT-d . Missugune peaks aga olema IT roll tänases tehnoloogilises maailmas ? IT roll ettevõttes , IT äripoole ( IT-to-business , IT<arv>B ) suhe on olnud erinev . Selleks et mõista nüüdisaja iseärasusi , on vaja mõista ka eelnevaid perioode . Alguseks vaatlemegi IT<arv>B suhet erinevatel infotehnoloogia arenguetappidel . <arv>.<arv>. ESIMENE PERIOOD ( <arv>-<arv> ) - “ IT DIKTATUUR ” Vaid kõige suuremad firmad olid võimelised endale IBMi suurarvuti muretsema . Neid suurarvuteid ümbritsesid parimates ülikondades ülikõrgete palkadega IT-gurud/teadlased , kes teadsid , mida äripoolele vaja oli . Äripoole arvamust IT kasutamise küsimustes arvestati minimaalselt . Mõned tüüpjooned sellest ajastust : Firma tippjuhid polnud teadlikud IT-probleemidest . IT-gurusid usaldati pimesi kui teadlasi-eksperte . IT suhtumine äripoolde - ülemuslik , direktiivne . Äripoole osalemine IT-põhises arenduses - olematu . IT-projektide fookus - eksperimentaalne . IT-põhiste projektide juhtimine - IT-gurud juhivad . <arv>.<arv>.TEINE PERIOOD ( <arv>ndate lõpp - <arv>ndate algus ) - “ ÄRIPOOLE ÄRKAMINE ” Juhtpositsioonid jäid endiselt IT-gurudele , kuid äripoolt hakati kaasama IT-projektidesse , tõsi küll , vaid teisejärgulises rollis . Tavaliselt jäi äripoolele nende ülesannete täitmine , mis IT-le huvi ei pakkunud - näiteks dokumenteerimine ja testimine . IT põhiülesandeks oli ärioperatsioonide automatiseerimine . IT-arendus toimus alt-üles metoodikal , vastavalt hetkevajadustele - IT-arendus oli reaktiivne , IT-arendust ei määranud organisatsiooni strateegia . Tüüpjooni sellest ajastust : IT suhtumine äripoolde - salliv , kuid direktiivne . Äripoole osalemine IT-põhises arenduses - dokumenteerimine ja testimine . IT-projektide fookus - tehnoloogiline . IT-põhiste projektide juhtimine - IT-gurud juhivad . <arv>.<arv>. KOLMAS PERIOOD ( <arv>ndad ) - “ KÄTTEMAKS = ÄRIPOOLE DIKTA- TUUR ” Edusammud tehnoloogias ( personaalarvutid , klient-server-süsteemid jne. ) , infotehnoloogiliste vahendite masskasutus tõukasid IT valitsejatroonilt , ITst sai äri tavaüksus . Sugugi tähtsusetu ei olnud see , et konkurents , samuti finantsiline ja sotsiaalne surve sundisid firmade tippjuhte hakkama ( lõpuks ) tõsiselt tegelema IT-kulutustega . Hakati huvi tundma , kuidas IT-protsessid vastavad äriprotsessidele , päevakorda tõusid investeeringute tootlikkus ( ROI , return of investment ) , klienditeenindus ja IT poolt loodav lisaväärtus . Kiiresti muutus IT “ sõltumatust kuningriigist ” vaid üheks kulukohaks , äriüksuste teenindusüksuseks . Juhtpositsiooni IT rakendamises haaras äripool , kes muutus nõudlikuks tellijaks . Tähtaegadest ja eelarvest mittekinnipidamisel rakendati IT-le sanktsioone . Kuigi suhtes äripool-IT “ olid ohjad kindlalt äripoole käes ” , polnud äripoolel tegelikult kontrolli IT-arenduste kvaliteedi üle . Lepingupõhine suhtlusvorm ( Service Level Agreement , SLA ) tekitas aga IT ja äripoole antagonismi , mis oli üheks põhjuseks IT-teenuste väljast sisseostu ( outsourcing ) üsna laialdasel levikul - “ oma IT-d ” lihtsalt ei usaldatud . Ja sageli ka õigustatult : “ oma IT ” oli eelnevatel perioodidel ära hellitatud , harjunud mugava elu ja kontrollimatusega , väljast ostetav IT-teenus oli seepärast enamasti kvaliteetsem . Tüüpjooni sellest ajastust : IT suhtumine äripoolde - antagonistlik . Äripoole osalemine IT-põhises arenduses - tagasihoidlik , kuid direktiivne . IT-projektide fookus - ärifookus . IT-põhiste projektide juhtimine - äripool on juht . <arv>.<arv>. NELJAS PERIOOD ( <arv>ndad KUNI TÄNAPÄEV ) - “ PARTNERLUS ” Lõpuks on nii äripool kui ka IT jõudnud äratundmiseni , et ainult nende asjalik koostöö , partnerlus , võimaldab edu saavutada . Tekkis uus , tehnoloogiapõhine ärimudel , milles IT on täielikult integreeritud organisatsiooni . IT<arv>B suhe määrab IT-teenuse osutamise viisid ja IT strateegilised toimed organisatsioonisse . Oma olemuselt on IT<arv>B suhe karkass , mis koosneb meetrikatest , planeerimis- ja analüüsivahenditest , mis lähendavad IT-d ärifookusele - IT on organisatsiooni strateegiline vahend konkurentsieelise saavutamisel . IT<arv>B suhe määrab IT kui organisatsiooni liidri uute ( äri ) ideede genereerimisel . Neljanda perioodi oluliseks tunnuseks on valdkondadevahelised projektimeeskonnad . Kuid uus suhtlusviis , partnerlus pole iseenesest antud/tekkiv , midagi , mis on automaatselt tagatud . Partnerluse tasemele jõudmiseks peab iga organisatsioon vaeva nägema . Mistõttu võibki kohata organisatsioone , kelle IT ja äripoole suhted vastavad suvalise eelneva perioodi suhtemallile . Veelgi enam , ka ühe firma piirides pole haruldane mitme erineva IT<arv>B suhtevormi esinemine : ühe ärivaldkonna liider mõistab ajastut , teine aga mitte . “ Uue ajastu ” mõistmiseks on vaja teadvustada mitmeid uusi tendentse organisatsioonide elus . Esiteks , suhe organisatsioon-inimene pole niisama püsiv kui eelnevatel perioodidel . Senine loosung “ hoolitse firma eest ja firma hoolitseb sinu eest ” on asendunud loosungiga “ kõigepealt hoolitse iseenda eest , seejärel võib ka firma huvisid silmas pidada ” . Põhjus on lihtne - muutunud majanduskeskkond ei taga lojaalsele töötajale turvalist tulevikku , firmad tekivad ja kaovad , juhtkonnad vahetuvad . Karjääri planeerimisel ei saa loota , et sinu ustavus tasutakse kunagi tulevikus . Kompensatsioon töö/kompetentsi eest tuleb saada kohe . Ehk pisut teisiti : nii organisatsioonid kui ka inimesed on mobiilsed , me võime rääkida tööturul oma teenuseid müüvatest agentidest . Siit järeldub muuhulgas , et firmad peavad hoolikalt kaaluma , missuguste töötajate teadmiste/oskuste omandamist kompenseerida . Et kvalifitseeritum töötaja võib leida uusi väljakutseid , on firmadel enamasti otstarbekas palgata juba vajalikku kvalifikatsiooni omavaid spetsialiste . Vabade agentide kvalifikatsiooniprobleemid tuleb agentidel endil lahendada . Teiseks , majanduse globaliseerumine , konkurents maailma ulatuses . Et nüüd on võimalik valida paljude teenuseosutajate vahel , siis “ klient on saanud ( lõpuks ) tõepoolest kuningaks ” . Kliendikesksus toob aga kaasa kõrgendatud nõuded IT-arenduste kvaliteedile ja projektide teostamise kiirusele . Niisugustes tingimustes suudavad edu saavutada vaid harmooniliselt tegutseva IT ja äripoolega firmad - edukas firmas pole IT ja äripoole antagonism enam mõeldav . Nüüdisajastu tüüpjooni : IT suhtumine äripoolde - avatud . Äripoole osalemine IT-põhises arenduses - oluline , toetav . IT-projektide fookus - täielikult määratud ärivajadustega . IT-põhiste projektide juhtimine - avatud , äripoole juhtiv roll koostöös IT-ga . <arv>. IT STRATEEGIAST Kuidas “ IT-äripoole harmoonia ” praktikasse viia ? Alustada tuleks ärieesmärkidest - eksisteerib ju IT vaid selleks , et äritegemist võimaldada/ parendada . Seega : ärieesmärkide saavutamiseks on vaja IT tuge , ärieesmärkidest tulenevad IT eesmärgid . Ärieesmärkide saavutamiseks tehakse äristrateegia ( pikaajalised plaanid , mis võimaldavad/tagavad ärieesmärkide saavutamise ) , IT eesmärkide saavutamiseks - IT strateegia . IT strateegia ei sõltu vaid IT eesmärkidest , IT strateegilised plaanid peavad vastama äristrateegiale - IT ei tohi ärist maha jääda ega ka ette tõtata ( joon . <arv> ) .  Joonis <arv> Niisugune vaade IT-äristrateegiast oli omane kolmandale perioodile “ äripoole diktaat ” . Nüüdisajal tuleb arvesse võtta infotehnoloogia mõju nii ärieesmärkide püstitamisele kui ka nende elluviimise strateegiale . Enamasti on juba firma ärieesmärgidki ka IT-põhiseid , näiteks : “ ... ja e-tehnoloogia evitamine ... ” ( joon . <arv> ) .  Joonis <arv> Seetõttu võime rääkida äri ja IT lähenemisest , nende integratsioonist . Veel enamgi , tänapäeval IT ongi äri : IT on äri karkass ( framework ) paljud IT-protsessid ( enamik ? ) on äriprotsessid - pole haruldane , et firmal pole ainsatki IT toeta protsessi , IT häiretega kaasneb äri seiskumine , IT-ta pole äri üldse mõeldav , ( eriti uued ) tooted on IT-põhised IT kulud/maksumus on oluliseks konkurentsivõime näitajaks IT kulud on enam kui <arv>% firma käibest . <arv>.<arv>. STRATEEGIA KOMPONENDID IT eesmärgid dekomponeeruvad kolmeks alameesmärgiks ehk komponendiks ( joon . <arv> ) : eesmärgid inimeste ja organisatsiooni vallas - peopleware development eesmärgid tehnoloogia vallas eesmärgid metoodika vallas . Selgitus : inimesed , kasutades tehnoloogiaid kui tööriistu ning järgides töövõtteid ( toimivad vastavalt metoodikale ) , saavutavad strateegilised eesmärgid .  Joonis <arv> <arv>.<arv>.<arv>. Tehnoloogia IT strateegiliste eesmärkide saavutamine on enamasti seotud kas uute tehnoloogiate kasutuselevõtuga või siis olemasolevate täiendamise ja edasiarendamisega . Nii näiteks võib e-äri ajamiseks vaja olla evitada J<arv>EE tehnoloogiat , sõnumipõhist vahevara ( Message Oriented Middleware , MOM ) , andmehoidlaid ( Data Warehouse ) , kliendisuhte haldust ( Customer Relationship Management , CRM ) jne. <arv>.<arv>.<arv>. Metoodikad Uute tehnoloogiate rakendamine või olemasolevate rakendamine uutes tingimustes ( nt. <arv> × <arv> ) tingib ka uute või täiendatud metoodikate rakendamise . On selge , et organisatsioon , mis peab tagama kõrgvalmiduse , ei saa töötada samamoodi kui mittekriitiliste protsessidega organisatsioon . Kuigi CMM<arv>pole tänapäeval kaugeltki ainus organisatsiooni küpsuse ( ja metoodika tehnoloogilistele tingimustele vastavuse ) kriteerium , võib nt. Gartner Group ile toetudes väita , et <arv> × <arv> käideldavuse tagamiseks on vaja <arv>. taseme organisatsiooni . <arv>.<arv>.<arv>. Inimesed ja organisatsioon Inimestel peab olema kompetentsus ja kvalifikatsioon nii strateegilistes eesmärkides fikseeritud tehnoloogiates kui ka neid tagavates protsessides . Seega on vaja planeerida spetsialistide koolitus ja treening nii tehnoloogiates kui ka metoodikates . Organisatsiooni struktuuri ja toimimise planeerimine on üks tülikamaid tegevusi : “ ideaalorganisatsioon ” pole enamasti eelarve piirides planeeritav . Äärmiselt oluline on IT ja äripoole suhte kindlaksmääramine . Varasema IT ja äripoole eraldatuse asemel on järjest enam kasutusel mitmesugused agiilse suhtluse vormid , mis vastavad paremini tänapäeva kiiresti muutuvate ärivajaduste rahuldamisele . <arv>.<arv>.<arv>. Strateegia teostamine Strateegilise plaani realiseerimine seisneb “ punktist A ( kus me asume ) punkti B ( kuhu tahame jõuda ) liikumise planeerimises ” . Selleks vajame : lähteseisundi täielikku inventuuri : infrastruktuur ( riistvara , opsüsteemid , baasihaldesüsteemid , tööjaamad , seire , talitluspidevus , turvadirektiivid ja protseduurid jms. ) , arendusmetoodikad , ülalhoid , andmeturve - " punkt A " võimalikult konkreetset iseloomustust “ uuest ” , saavutatavast infrastruktuurist , arendusmetoodikatest , ülalhoiust , andmeturbest - " punkt B " plaani , kuidas kõikides mainitud komponentides punktist A punkti B jõuda . <arv>.<arv>.<arv>. Programmipõhine arendus Punktist A punkti B liikumist on vaja planeerida mitmetes lõigetes . Eeldatakse projektipõhist arendust . Iga lõige ( aspekt ) realiseeritakse iseseisva projektina - kuid need projektid peavad olema kooskõlas . Siit : strateegilisi eesmärke realiseeritakse projektide kimpudena , programmina , mida vastavalt organisatsioonile Program Management Institute's Project Management Body of Knowledge ( PMBOK ) defineeritakse kui “ koordineeritud projektide kogumit , mis annavad tulemi , mida nende projektide eraldi teostamisel pole võimalik saavutada ” . Pisut teisiti : firmadele on programmid vajalikud strateegia teostamiseks . Programm on : kogum projekte , mida teostatakse sama metoodika järgi kogum projekte , mille tulemusena saavutatakse strateegiline ärieesmärk . Seega mõjutab programm organisatsiooni kõiki aspekte : struktuuri , poliitikaid , protsesse , protseduure ja tehnoloogiat . Seevastu projekt : annab tulemiks üksiku toote või teenuse , mis on programmi osaks on määratud konkreetse algus- ja lõpptähtajaga ja realiseerib mingit osa strateegilisest eesmärgist , projekti teostatakse organisatsiooni taktika tasandil . <arv>.<arv>. PISUT KA IT ARHITEKTUURIST IT strateegia teostamisel on üheks olulisemaks teguriks IT arhitektuur . Otstarbekas IT arhitektuur teeb hõlpsamaks IT strateegiliste eesmärkide saavutamise , mistõttu IT arhitektuuri probleemid on kesksed IT strateegilise plaani teostamisel . IT arhitektuuri komponentideks on : Informatsiooni arhitektuur tehniline arhitektuur rakenduste arhitektuur . On loomulik , et firma IT arhitektuur on määratud firma äriarhitektuuriga , mis on omakorda määratud firma ärivisiooni ja -eesmärkidega ( joon . <arv> ) .  Joonis <arv> Äriarhitektuur on firma äritegevuse formaalne mudel IT poolt vaadatuna . Informatsiooni arhitektuur on firma äriarhitektuuri kirjeldus IT mõistetes . Tehnilise arhitektuuri moodustavad IT infrastruktuur , operatsioonid ja protsessid . Rakenduste arhitektuur määrab rakenduste struktuuri , nende elutsükli protsessid ja suhted tehnilise ja informatsiooniarhitektuuriga . IT-arhitektuuri kirjeldamiseks on ka mitmeid standardeid/mudeleid ( Zachman Framework , Rational <arv>+<arv> , ISO RM-ODP , OMG Model Driven Architecture ( MDA ) ) . Näiteks Reference Model for Open Distributed Processing ( RM-ODP ) [ ISO <arv> ] määrab viis olulist vaadet ( vaadete hulk pole suletud ) IT-süsteemide arhitektuuri modelleerimiseks : ettevõtte vaade ( Enterprise Viewpoint ) - äri eesmärgid , skoop , poliitikad informatsioonivaade ( Information Viewpoint ) - infomudelid komponentvaade ( Computational Viewpoint ) - komponendid ja liidesed tehniline vaade ( Engineering Viewpoint ) - tehniline realisatsioon tehnoloogiavaade ( Technology Viewpoint ) - tehnoloogia(te) valik . Need vaated peaksid piisavalt määrama loodava infosüsteemi . On ka detailsemaid käsitlusi , näiteks Zachman Framework , kus Framework ( karkass ) esitatakse maatriksina , mille read esindavad erinevate osaliste ( players ) vaateid süsteemi arendusprotsessist ja veerud esitavad protsessi erinevaid dimensioone . Maatriksi ( karkassi ) read : eesmärk/skoop ( Scope or ballpark view ) ärimudel ( omaniku vaade , Owner's view ) infosüsteemi mudel ( Designer's view ) tehnoloogiamudel ( Builder's view ) detailne kavand ( Detailed view ) töötav süsteem ( Operational view ) ja veerud : andmed ( mis ) funktsioon ( kuidas ) arvutivõrk ( kus ) inimesed ( kes ) aeg ( millal ) motivatsioon ( miks ) . Maatriksi lahtritesse kirjutatakse ( ka joonistatakse ) mingile vaatele ja dimensioonile vastavad tulemid/dokumendid . Näiteks rea Ärimudel ja veeru Andmed lõikekohal on objekt-suhte- diagramm ( entity relational diagram ) . IT arhitektuuri arendus on iteratiivne protsess : esmalt tuleb määrata kindlaks firma IT arhitektuur antud hetkel ( punkt A ) , seejärel leida esimene lähend IT arhitektuurile ( punkti B esimene lähend ) , mis tagab ärieesmärkide saavutamise , siis teine lähend jne. IT arhitektuuri vaatleme A &amp; A järgnevates numbrites , siinkohal mainime vaid , et IT arhitektuuri probleemid omandavad järjest suuremat tähtsust - IT-süsteemide keerukuse kasvades on suurema tähtsusega süsteemi kui terviku arukas planeerimine ja teostamine . META Group illustreerib artiklis vaadeldud põhiliste mõistete ( strateegia , programmijuhtimine ja arhitektuur ) seoseid järgmiselt ( joon . <arv> ) :  Joonis <arv> <arv>. KOKKUVÕTE Globaalne konkurents , järjest kasvavad arendustempod , IT-süsteemide ja nende haldamise keerukus on muutnud IT ja äripoole suhte antagonismist partnerluseks : IT ongi äri . <arv> P. Leis . Agiilmetoodikad , A &amp; A , ( <arv> ) <arv>. Uudised kogus Uuno Vallner , Majandus- ja kommunikatsiooniministeeriumi riigi infosüsteemide osakonna juhtivspetsialist AADRESSI <email> KASUTAMINE ID-KAARDI OMANIKELE LIHTSUSTUS Iga ID-kaardi peal olevas isiku tuvastamise sertifikaadis on kirjas e-posti aadress kujul <email> , kus NNNN on neli juhuslikku numbrit . Seega on igal ID-kaardi kasutajal olemas oma personaalne riigi poolt antudmeiliaadress . Eesti on esimene riik maailmas , kes sellise võimaluse oma kodanikele on andnud . Me saame nüüd ID-kaardi abil lihtsalt oma e-kirju digitaalselt allkirjastada ja salastada ehk krüpteerida . Tulevikus hakkab see aadress toimima riigi ja isiku vahelise ametliku suhtluskanalina , kuhu riik hakkab saatma ametlikke teateid ja muud isikut puudutavat personaalset infot . Aadressiga <email> on seotud ümbersuunav postiserver , mis suunab isiku <email> aadressile tulnud kirjad ümber isiku mõnele tegelikule meiliaadressile . Seega ei saa <email> kirju lugeda “ otse ” , kuid need saab ümber suunata näiteks oma hot.ee , mail.ee aadressile või hoopis tööga seotud meiliaadressile . Suunata võib kuni viiele aadressile korraga . Kuigi nimetatud postiaadressi on olnud võimalik kasutada peaaegu aasta , on selle kasutamine olnud üsna tülikas . Majandus- ja Kommunikatsiooniministeeriumi riigi infosüsteemide osakond koostöös Kodakondsus- ja Migratsiooniametiga on nüüdseks loonud selleks turvalisema ja kodanikule lihtsama keskkonna . Ehkki kodanikul on <email> aadress kirjutatud ID-kaardile , peab kodanik oma konto aktiveerima . Selleks peaks ta asetama oma ID-kaardi kaardilugejasse ja valima brauseris aadressi <hyperlink> Kodanik näeb nüüd ekraanil oma isikuandmeid ja <email> aadressi . Nüüd peaks ta valima meiliaadressid , kuhu ta soovib edastada aadressile <email> saabuvad e-kirjad . Allkirjastatud ja salakirjastatud e-kirjade saatmiseks peab kodanik oma meileri ümber häälestama . Aadressilt <hyperlink> on näpunäited ka kolme populaarseima meileri häälestamiseks : Microsoft Outlook Express <arv>.<arv> Microsoft Outlook <arv> Netscape Messenger RISO AVAS KODANIKU TEABEPORTAALI Majandus- ja Kommunikatsiooniministeeriumi riigi infosüsteemide osakond ( RISO ) avas veebruaris kodaniku teabeportaali aadressil <hyperlink> Internetivärava eesmärgiks on anda kodanikele praktilist infot nende õiguste ja kohustuste kohta Eesti riigis , samuti näpunäiteid asjaajamiseks Eesti riigiasutustega . Teabeportaalist saab lugeda , kuidas registreerida lapse sündi , taotleda riigi käest toetust , viiteid seadustele ja kasulikele kodulehtedele , asjakohaseid telefoninumbreid ja e-teenuseid . Teabeportaal on omamoodi täienduseks ja jätkuks varem riigi infosüsteemide osakonna poolt initsieeritud e-riigi portaalile <hyperlink> , otsedemokraatia leheküljele <hyperlink> , riigi infosüsteemi andmevahetuskihile <hyperlink> Teabeportaal on osa e-kodaniku projektist , mis kujutab endast kodaniku virtuaalset kontorit asjaajamiseks riigi , kolmanda sektori ja erasektori asutustega . Portaali sisu pole veel täielik , kuid seda täiendatakse pidevalt .  Värava tehniline teostus on arvutifirmalt BCS , sisu planeerimisel osales Tallinna Pedagoogikaülikooli infoteaduste osakond . Teabeportaali sisu eest hakkab edaspidi vastutama Eesti Informaatikakeskus . KMA ON VÄLJASTANUD ÜLE <arv> <arv> ID-KAARDI Kodakondsus- ja Migratsiooniamet ( KMA ) on jaanuari lõpu seisuga väljastanud <arv> <arv> ID-kaarti ja <arv> <arv> uue põlvkonna passi . Esimeste ID-kaartide ja uute passide väljaandmine algas mullu veebruaris . ID-kaart on kohustuslik riigisisene isikut tõendav dokument kõikidele Eesti elanikele alates <arv>. eluaastast . Alates <arv>. aastast on pass vajalik vaid juhul , kui reisitakse Eestist välja . Möödunud aasta <arv>. detsembril andis KMA kätte <arv> <arv>. ID-kaardi . Käesoleval aastal annab KMA prognooside kohaselt välja <arv> <arv> uut ID-kaarti . EESTI INTERNETI-ÕPPE PROGRAMM LAIENEB KA MUJALE EUROOPASSE Infoajastu uued kontseptsioonid on jõudnud ka Eesti koolidesse . Internetis toimiv õpikeskkond “ Miksike ” on toonud traditsiooniliste õpikute kõrvale uusi võimalusi paindlikuks ja õpilasekeskseks õppeks . Nüüd kavatseb “ Miksike ” laieneda mujalegi Euroopasse , pakkudes Interneti vahendusel Eestis väljatöötatud õppematerjale ka teistes Euroopa keeltes . Eestis tegutseb juba mitmeid aastaid Internetis õppematerjale ning suhtlust pakkuv õpikeskkond “ Miksike ” . “ Miksikese ” õpisüsteem Learning Folders on loonud õppetöö paremat ja paindlikumat korraldamist võimaldava tarkvaralahenduse , mis on äratanud huvi erinevates Euroopa riikides . Eesti koolides haarasid “ Miksikese ” poolt pakutud õpivõimalustest kinni nii õpetajad , õpilased kui ka lapsevanemad . “ Miksikese ” Learning Folders' i projekt viiakse koostöös Bremeni ja Viini Ülikooliga Austria , Saksamaa , Itaalia , Sloveenia ja Rootsi koolinoorteni . Projekti rahaline maht on umbes kaheksa miljonit krooni , sellest kolmveerand tuleb Euroopa Komisjonilt läbi Sokratese-Minerva-programmi , projektile oodatakse sada tuhat kasutajat erinevatest Euroopa riikidest . ELEKTROONILINE KRIMINAALTOIMIK VALMIB LÄHIAASTAIL Justiitsministeeriumi infotehnoloogiaspetsialistid juurutavad elektroonilist kriminaaltoimikute süsteemi , mida <arv>. aastal võiksid kasutama hakata politseinikud , prokurörid ja kohtunikud . Uut süsteemi juurutatakse politseiregistri “ Police ” baasil . Pilootprojektina katsetatakse Rapla maakonnas praegu ka elektroonilist kriminaalmenetluse registrit . Niisuguse registri kaudu saab edaspidi jälgida toimiku ja kriminaalasja liikumist igas arenguetapis , alates kuriteo registreerimisest kuni kohtuotsuse jõustumiseni . Kui ühendada sellega veel vangide register , saab inimesel silma peal hoida kuni vanglast vabanemiseni ja ka pärast seda . ILMUS AASTARAAMAT “ INFOTEHNOLOOGIA AVALIKUS SEKTORIS ” Arvo Ott iseloomustab aastaraamatus ITK olukorda riigis : “ Tehnoloogia arengust tingitud mõjud on seotud ennekõike veebitehnoloogia kiire arenguga , mis on andnud uusi võimalusi ja toonud kaasa rakenduste suurema tsentraliseerimise . Võib ehk paralleele tuua isegi mainframe-ajastuga , kuigi tehnoloogiliselt on olukord oluliselt erinev . See , et infosüsteem paikneb ise tsentraalselt , klientideks on aga praktiliselt kõik internetiühendust omavad arvutid , on loonud ka organisatsioonile ja õigusraamistikule uue olukorra . Käesoleva aasta Rahvusvahelisel Haldusinfosüsteemide Nõukogu ( ICA ) aastakonverentsil Singapuris jõutigi arusaamisele , et praktiliselt kogu maailmas liigub riigi infosüsteemide koordineerimise korraldus suurema tsentraliseerimise poole . Sama on toimumas ka Eestis , kus koos Teede- ja Sideministeeriumi ning Majandusministeeriumi ühinemisega on päevakorras riigi infosüsteemide koordineerimise funktsioonide ja organisatsiooni korrastamine , kusjuures selles protsessis nähakse ette struktuuri tugevdamist ning mitmete tegevuste suuremat tsentraliseerimist . ” Aastaraamat annab hea ülevaate infotehnoloogia projektidest ja probleemidest avalikus sektoris eelmisel aastal . Aastaraamat on veebis aadressil <hyperlink> MUUDETI ANDMEKOGUDE SEADUST Andmekogude seaduse muudatus lihtsustas e-teenuste kasutamist ja täpsustas nn. kindlustavaid süsteeme , milleks on klassifikaatorite süsteem ; geodeetiline süsteem ; aadressandmete süsteem ; infosüsteemide turvameetmete süsteem ; infosüsteemide andmevahetuskiht . Asjaomaste andmekogude pidamist kindlustavate süsteemide kasutamine on kohustuslik kõigi riigi ja kohaliku omavalitsuse andmekogude pidamisel . Margus Ernits , ITK üliõpilane , Tannar Esna , ITK üliõpilane Käesolevas artiklis kirjeldame Eesti Infotehnoloogia Kolledži üliõpilaste kogemust , mis saadi robootikaprojekti käigus . Ühte eriala tutvustavasse loengusse tuli õppejõud dr. Maarja Kruusmaa , kes rääkis põnevalt robotitest , täpsemalt , nende kasutamisest erinevatel aladel . Pole tavaline , et üliõpilastel tekib loengul vastupandamatu soov tegelda sellega , millest lektor räägib . Esialgu oli plaanis roboteid ainult oma lõbuks ehitada , kuid selgus , et antud projekti saab käsitada ka õppeainena - kolledžipraktika-projektina . See on õppeaine , mille raames saab realiseerida üliõpilaste omal initsiatiivil tekkinud erialaseid projekte . Kokku tuli kaks rühma esmakursuslasi , kes üksteist sisuliselt ei tundnud . Esimeste nädalatega arenes rühmatöö ja selginesid plaanid . Kursuse käigus tekkis vajadus täiendada ennast elektroonika , programmeerimise , mehhaanika , projektijuhtimise ja meeskonnatöö alal . Oluline on see , et õppimisvajadus tulenes praktilistest probleemidest ega olnud seotud kontrolltööde või muude õppejõupoolsete nõuetega . Projektile lisas huvi ja motivatsiooni võistlusmoment , sest lõpptulemusena pidid rühmade poolt loodud robotid osalema ROBOTEX OPEN <arv> võistlusel . PROJEKTI EESMÄ RK : LUUA ROBOT Robotex Open <arv> ülesandeks oli ehitada robot , mis valget värvi võistluspolügoonil liikudes korjaks kokku musti palle . Pallid oli vaja toimetada polügooni mustaks värvitud nurka . Põnevuse suurendamiseks oli polügoonil mustade pallide seas ka valgeid , mis “ pessa ” sattumisel meeskonnale miinuspunkte tõid . VALMISLAHENDUS EI TEKKINUD KOHE Esimeseks ülesandeks oli ehitada Mecano-konstruktorist sobilik roboti kere , mis oleks mahutanud kõik vajalikud komponendid , kuid samas oleks olnud piisavalt väike ja tugeva konstruktsiooniga . Otsustasime kaherattalise kere kasuks , sest liikumine ja pööramine muutuvad lihtsamaks ning selline konstruktsioon võimaldab ka kohapeal ringi pöörata . Mehaanilise osa olulisim probleem oli pallide “ haaramise ” mehhanismi realiseerimine . Kuidas saada palli seina äärest ja nurgast kätte ? Esialgne mõte oli kasutada kühvlit , kuid selle ehitamine oleks olnud liiga keeruline ja arvatavasti oleks ta pallid üleskorjamise asemel hoopis eemale lükanud . Teine arvestatav idee oli kasutada pöörlevat harja , mis pallid roboti sisemusse pühiks . Selle süsteemiga on võimalik palle ka seina äärest ja nurgast kätte saada . Harjased peaksid kerged ja pikad olema , et nad palle minema ei lööks . Kõige paremini vastas sellele nõudele antistaatiline tolmupühkimishari , mis välistas ühtlasi CMOS-elektroonikale ohtliku staatilise elektrilaengu kogunemise roboti konstruktsiooni . Kui robot liikuma saadi , olid järgmiseks probleemiks takistused , mille vastu robot sõitis . Monteerisime robotile puuteandurid , mille eesmärk oli takistusest informeerimine . Puuteandurid , mis on tegelikult tavalised elektrilülitid , osutusid meie suureks üllatuseks üheks kõige keerukamaks probleemiks . Tööstuslikud lülitid tagavad töökindluse , s.t. lüliti ei jää sisse/kinni ega anna valehäiret . Kuid tööstuslike lülitite halvaks küljeks oli vähene tundlikkus . Robot on võimeline liikuma igas suunas ja kogu robotikere välisring peab tajuma takistuste vastu põrkamist . Loobusime standardsete lülitite kasutamisest , sest kogu kere katvat lülitit tundus lihtsam andurrõngaid läbivast traadist ise teha . Esialgne lahendus õnnestus ja näis olevat usaldusväärne . Kirjutasime programmi , mis reageeris puuteanduritele ja sundis robotit takistustest mööduma . Reaalse testi käigus selgus , et kaks kokkupuutuvat elektrijuhti ei anna ühendust ~<arv>% juhtudel . Lisaks oli andur valmistatud liiga pehmest traadist ja kippus kinni jääma , andes juhtskeemile püsivalt eksitavat infot . Asendasime anduri materjali jäigema ning elastsema traadiga , mis välistas kinnikiilumise , ja anduri otsa monteerisime parema elektrijuhi . Konstruktsioon töötas ! Robotile oli vaja lisada intelligentne juhtimissüsteem . Selleks kasutasime mikroprotsessor- süsteemi Handyboard , mis juhib robotit vastavalt puuteanduritelt tulnud infole . Protsessor- süsteemi ja programmiga varustatud robot suutis sõita , mööduda takistustest ning koguda juhuslikult teele jäänud palle , kuid tegi seda kõike pimesi . Pallide tuvastamiseks otsustasime kasutada videokaamerat ja kirjutada programmi , mis töötleb kaameralt saadud informatsiooni ning juhib robotit . Kahjuks on Handyboard varustatud vaid <arv>MHz taktsagedusega mikrokontrolleriga , mis on reaalajas toimuva pilditöötluse jaoks liiga aeglane . Otsustasime lahendada pilditöötluse eraldi asuva PC abil . Kaamera paigutasime roboti konstruktsioonis võimalikult kõrgele , et oleks hea ülevaade võistluspolügoonist . Kaamerast saadud videopilt saadetakse PC-arvutisse turvasüsteemidest tuntud <arv>GHz saatja abil . Kahjuks võimaldab antud saatja ainult ühepoolset ühendust ja edastab vaid videovoogu . PC töötleb robotist saadud pilti , määrates nurga pallini ja nurga pesani , kui pesa on kaamera vaateväljas . Töödeldud informatsiooni saatmiseks robotile ühendasime omavahel Handyboard'i ja PC RS<arv> jadaliidesed pika kaabliga . Robot leidis palle ja suutis neid kokku korjata , kuid kaabliühendus arvutiga oli siiski häirivalt mitteautonoomne lahendus . Lisasime teise raadioühenduse , mis realiseeris RS<arv> funktsionaalsuse , PC-lt robotile . Kui pallide leidmine ja korjamine oli lahendatud , siis võistlusülesande täitmiseks jäi veel üle korjatu “ pessa ” viia . Pesa on polügooni tumedaks värvitud nurk , millel on ka tume põrandapind . Suuna pesani saab robot PC-lt , kuid kohalejõudmist meie pilditöötluse programm ei tuvastanud . Lahenduseks oli tumeda põrandapinna äratundmine , milleks lisasime <arv> infrapunaandurit . Kui robot sattus tumeda pinna peale , siis pööras ta end otse tumedale alale , jäi seisma ja pani harja teistpidi pöörlema , et pallid oma sisemusest välja pühkida .  LÕ PLIK LAHENDUS FAKTIDES ROBOT Mikroprotsessorsü steem Handyboard , mis on varustatud Motorola M<arv>HC<arv> <arv>bit mikrokontrolleriga , RS<arv> liidese , infrapunaliidese ( Sony protokoll ) , analoog- ja digitaalsisenditega . Puuteandurid on ühendatud digitaalsisenditesse . Pesatuvastuse andurid on infrapunaandurid , mis on ühendatud Handyboard'i analoogsisenditesse . Kaamera ja videolink pärinevad turvasüsteemides kasutatavast komplektist . Ajam - samm-mootorid , koos UNC<arv> draiveri ja impulssgeneraatoriga , mis vabastab mootorite pideva pöörlemise puhul mikroprotsessorsüsteemi andmetöötlusressursi . Programmeerimisel kasutasime InteractiveC keelt ja keskkonda [ <arv> ] . PC-ARVUTI Eraldi asuvat PC-d kasutame pallide ja pesa leidmisel vajaliku videopildi töötluseks . Videosisendiga kaart - WinTV framegrabber bt<arv> kiibiga Teegid ja draiverid - Video<arv>linux [ <arv> ] , SDL e Simple DirectMedia Layer [ <arv> ] , bttv framegrabber draiverid [ <arv> ] Programmeerimisel kasutasime GNU C kompilaatorit gcc [ <arv> ] . Operatsioonisü steem . Valisime Linux'i [ <arv> ] , sest erinevate pilditöötluse teekide ja videotarkvara testimise järel tundusid SDL ja Video for Linux lahendusena , mille abil saame luua sobiva platvormi pilditöötluse tarkvara loomiseks . VÕ ISTLUSEST Õ PPISIME Kahe semestri jooksul toimunud põnev tegevus lõppes võistlusega , mis oli tugev elamus kõigile ja mitmetele meist ka aasta meeldejäävaim sündmus . Teiste meeskondade lahenduste nägemine , oskuste vahetamine ja silmaringi laiendamine andis väga positiivse impulsi . Meie edu seisnes mõlema rühma tihedas koostöös ja programmitekstide jagamises , korduvkasutuses ja testimises . Tegime otsuse , et “ külmutame ” programmikoodi ega paranda leitud pisivigu võistluse eel ja ajal. Teiste koolide roboteid vaadates tekkis küll vastupandamatu soov teha programme veidi paremaks , kuid suutsime kiusatustest hoiduda ja tulime auga välja lahendusega , mida olime erinevates tingimustes piisavalt testinud . KOKKUVÕ T E Projekti käigus arenesime ise ning paranes enesehinnang . Kogutud teadmised ei ole ainult “ potentsiaalne pagas ” , mis ootab meie lõpetamist ja tööleasumist IT-spetsialistidena , vaid on dünaamiline ja täienev “ pall ” , mis sisaldab motivatsiooni jätkata ja paisuda . Pärast projekti lõppu soovib enamik meist jätkata eneseharimist neil paljudel aladel , mis on seotud meile meeldivate “ mänguasjadega ” . Kui üliõpilane tõstab õppejõudu kuulates kõrvad kikki ja ütleb “ Vau ! ” , siis on see märk sellest , et üliõpilast võib kergesti motiveerida häid tulemusi saavutama . Mitmed inimesed on küsinud , kas sellel robotil mõni praktiline eesmärk ka on . Vastus on tegelikult jah . Praktiline eesmärk on teadmiste omandamine meetodil , mis sisaldab parasjagu põnevust . LINKE [ <arv> ] Meie robotitest detailsemalt <hyperlink> [ <arv> ] Pildid ITK robotitest <hyperlink> [ <arv> ] Video<arv>linux <hyperlink> [ <arv> ] Simple DirectMedia Layer <hyperlink> [ <arv> ] bttv framegrabber draiverid Linux'i operatsioonisüsteemile <hyperlink> [ <arv> ] IC InteractiveC [ <arv> ] GNU gcc C kompilaator [ <arv> ] Operatsioonisüsteem Linux , vt. MTÜ Eesti Linux lehte <hyperlink> Kaido Kikkas , TPÜ haridustehnoloogia keskus “ Häkker ” on vist üks vastuolulisemaid sõnu IT-vallas . Vähe on teisi väljendeid , mille üle oleks nii palju diskuteeritud ja millel oleks nii palju erinevaid definitsioone ja eri arusaamu . Sõna algne tähendus on ilmselt “ puusepp ” või “ mööblitisler ” , kuid seda on kasutatud ka raadioamatööride , telefonipättide , ebaseadusliku tarkvara levitajate , programmeerijate ning ka lihtsalt oma ala asjatundjate kohta . Meedia jaoks on häkker tark , ent paha inimene , kes valdab arvutitesse sissemurdmise müstilist kunsti . BBS-kultuurist pärit küberpunkide jaoks on tegu võrguanarhistiga . Ebaseaduslikku tarkvara levitavate warez-d<arv>d'ide jaoks on häkker eelkõige isik , kes suudab koguda suure hunniku värskeimat tarkvara ja siis seda vahele jäämata levitada . Ent ilmselt kõige autoriteetsem seisukoht kuulub inimestele , kes on Interneti arengus olulisimat osa mänginud . See seltskond nimetab häkkeriks oma ala tippspetsialisti , kel on originaalne mõttemaailm , piisav kompetents ning oma arvamus igas asjas . Selline arusaam ei piira häkkeri määratlemist vaid IT-vald- konnaga , hingesugulust tajuda ja samamoodi tituleerida võidakse ka mõne teise valdkonna inimest ( olgu siis tegu muusiku või füüsikuga ) , kel olemas sarnased iseloomujooned . Eelkõige on aga häkker siiski mingitpidi arvutitega seotud tegelane . Niisiis on olemas mitmeid arvamusi , kuid siinkirjutaja lähtub eelkõige sellest viimasest seisukohast . Põhjenduseks võib tuua asjaolu , et just nimelt selle definitsiooni järgi määratletud häkkerid on enim mõjutanud IT arengut - olgu siis tegemist uute standarditega ( Ethernet ja Bob Metcalfe , veeb ja Tim Berners-Lee ) , programmeerimiskeeltega ( Perl ja Larry Wall , PHP ja Rasmus Lerdorf ) , operatsioonisüsteemidega ( Linux ja Linus Torvalds ) või revolutsiooniliste ideedega ( GNU ja Richard Stallman ) . Lõhkuda on alati lihtsam kui ehitada - ja seepärast tuleks suurte süsteemide loomist , standardite väljatöötamist ning ideoloogia kujundamist hinnata palju kõrgemalt kui kellegi tagant Windowsi näppamist , uudisegrupis pröökamist või kui tahes nutikalt sooritatud sissemurdmist . TERMINOLOOGIAST Kui defineerida häkkerit kui originaalse ellusuhtumisega ja kompetentset spetsialisti , siis kerkib kohe küsimus : kuidas eristada selle definitsiooni häkkerit ( keda võiks siis nimetada ka “ päris ” -häkkeriks ) muudest , kes kasutavad seda nimetust hoopis teistlaadi omaduste ja oskuste kohta ? Nii ongi häkkerite seas käibel järgnevad nimetused seltskonna kohta , keda vahel “ õnnistatakse ” ka kollektiivse tiitliga “ alamad eluvormid ” ( NB ! Et eestikeelne arvutisõnastik enamiku siinse seltskonna kohta vasteid ei pakkunud - ka “ kräkkerit ” ei tuntud ning “ häkkeri ” all oli leida nii häkkeri kui kräkkeri definitsioon - , siis võttis siinkirjutaja endale vabaduse ise vastav eestikeelne termin esitada : Kräkker ( cracker ) - kodanik , kes kasutab oma arvutit pahategemiseks - tüüpiliselt lubamatuks sisenemiseks teistesse süsteemidesse . Ehkki pärishäkkeri eetikakoodeks lubab sellist sisenemist õilsal otstarbel kasutada ( ja otsesõnu ei välista ka “ sportlikust huvist ” sisenemist ) , on omakasu taotlev sissemurdmine Paha Asi . Paljud häkkerid usuvad tegude vastastikmõjusse ( nagu karma ida usundites ) ega lähe juba seepärast sellisele tegevusele . Nii suhtutakse ka andekasse kräkkerisse kõigest kui noorde nolki , kes puberteediealisena tänavalaternaid puruks viskab . Mitmed kräkkerid kasvavadki lolluste east välja ning arenevad pärishäkkeriteks , mõni jääb aga puberteeti elu lõpuni . Telefonimuukija ( phreaker ) - tänaseks on see lihtsalt kräkkeri eriliik , kelle jahimaaks on telefoniliinid . Seda laadi tegevus oli arvuti algaastail sallitud ka pärishäkkerite seas , ent seda ei kasutatud kurjasti ( telefonivõrgus kolamist harrastati kui omamoodi raadioamatörismi - lihtsalt huvist kuskile huvitavasse kohta välja jõuda ) . Modemite lai levik ja nende muutumine “ suurde võrku ” lülitumise vahendiks muutis ka telefonimuukimise suunitlust - sellest sai kräkkimise eriliik , millega tõsisel häkkeril tegelda ei sobinud . Skriptijuntsu ( script kiddie ) - kräkkeri alamõõduline versioon . Erinevalt päriskräkkerist , kel enamasti olemas küllalt sügavad ( ehkki kitsalt “ erialased ” ) teadmised arvutite hingeelust , kasutavad need tüüpiliselt teismeeas poisipõnnid võrgust tõmmatud muukimisvahendeid ilma oma tegevust sügavamalt mõtestamata . “ Vallutatud ” server või veebileht soditakse enamasti lihtsalt täis stiilis “ K<arv>l D<arv>dz owned dis s<arv>rw<arv>r . U suck ! R<arv>ging F<arv>rting B<arv>dger ” , seega tihti ei põhjusta skriptijuntsud kuigi suurt kahju , tavaliselt põhjusel , et nad lihtsalt ei oska seda teha . Halvemal juhul võib aga selline rünnak lõppeda “ tühjakslastud ” kõvakettaga . Pirakutid ( warez d<arv>dz ) - seltskond võrgus tegutsevaid harakasarnaseid kodanikke , kelle kogu elumõte näib olevat tarkvara ( enamasti just sellise tarkvara , mille eest raha küsitakse ) kokkukogumine . Kasutamine on teisejärguline . Tüüp-pirakuti kõvaketta jaotus on umbes järgmine : <arv>% iga päev kasutatavat tarkvara ( veebilehitseja , tekstitöötlusvahendid ) , <arv>% kordamööda mängitavaid uusimaid mänge ( loomulikult mitte poest ostetud ) , <arv>% kõikvõimalikke ebaseaduslikult hangitud ja mitte kunagi kasutamist leidvat softi ( näiteks kõik Photoshopi versioonid ) ja ülejäänu on suvaline pahn ( igivanad mängud , pornopildid jms ) . Teadlikumad pirakutid pühendavad end uute turule ilmuvate tarkvarapakettide “ lahtimuukimisele ” ning kõige suuremaks ninaks peetakse selli , kes poodi ilmunud tarkvara samal päeval “ pirana ” välja laseb . Vahel kasutatakse “ pirakuti ” asemel ka terminit “ pirapätakas ” ( warez kiddie ) , sest suur osa selle seltskonna esindajatest pole veel passiealised ( esineb ka kattuvat seltskonda skriptijuntsudega ) . Väga iseloomulikuks jooneks on selle seltskonna juures ülimalt “ isased ” hüüdnimed ( MegaKiller , Hellraiser , Doomhammer ) , mis on enamikul juhtudel pöördvõrdelised nimeomaniku olemusega . Küberpungid ( cyberpunks ; ilmselt on “ küberpunk ” parem tõlge kui “ küberpunkar ” , sest sel seltskonnal pole ingliskeelsele nimesarnasusele vaatamata kuigi palju ühist pärispunkaritega ) - mõistele pani aluse William Gibsoni raamat “ Neuromancer ” , mis esitas omalaadse ( paljus tänu Gibsoni reaalsele ignorantsile arvutivallas ) visiooni “ küberühiskonnast ” . Raamat leidis palju järgijaid pealiskaudselt tehnoloogiahuviliste trendiinimeste seas . Pärishäkkerite suhtumine on siin kahene - ühelt poolt soositakse huvi tekitamist tehnoloogiavõhikute seas , teisalt aga ei peeta paljast huvi ilma kompetentsuseta piisavaks . Lisaks eespool kirjeldatud “ madalamatele eluvormidele ” on häkkeritega seotud veel mõned “ nõrgemad eluvormid ” . Jupid ( geeks ) - algselt tähendas “ geek ” laadal näidatavat tegelast , kes sõi elusaid kanu . Seetõttu tuli “ computer geek ” arvutivalda kui elukas , kes “ sõi puuke ” ehk kõrvaldas süsteemidest vigu . Hiljem hakkas sõna tähistama laia skaalat millegi poolest teistest erinevaid tegelasi , kelle jaoks oli oma eesmärkide saavutamine tähtsam kui ühiskonnapoolne omaksvõtt ja heakskiit ( NB ! Eestikeelne ainsus on “ jupp ” , mitte “ jupi ” ja tähistab pisemat sorti ja ülalt alla vaadatut , kuid samas jonnakat subjekti . ) Jupid on enamikus arvutitega sina peal , paljud end ise juppideks nimetavatest tegelastest on tegelikult ka pärishäkkerid . Samas on “ jupp ” üldiselt laiema tähendusega ning paljud jupid on alles arenemas häkkeriteks . Jupi üheks vähemlevinud sünonüümiks on “ propellerpea ” ( propellerhead ) , mis vastab levinud humoorikale kujutluspildile propelleriga nokkmütsi kandvast Jaan Tatika tüüpi sellist . Nohikud ( nerds ) - üldlevinud arusaama järgi isikud , kelle IQ areng on toimunud sotsiaalse lävimise arvel . Ingliskeelse vaste päritolu on ebaselge , on pakutud sõnamängu ühest <arv>. aastal ilmunud ulmeraamatust . Analoogiliselt jupiga oli ka see sõna varem kitsalt negatiivse tähendusega ( umbes “ asotsiaal ” ) ning on viimastel aastatel omandanud positiivsema , tarkust väljendava ( “ taibu ” ) aspekti . JUURED JA KUJUNEMINE Alguses olid Tõelised Programmeerijad . Et varajane tarkvara oli riistvarast üsna lahutamatu , olid Tõelised Programmeerijad enamasti elektroonikud ja füüsikud . Üheks parimaks Tõelise Programmeerija näiteks võib pidada Cray suurarvutiseeria loojat Seymour Crayd , kes ühe pealtnägija sõnade kohaselt sisestas enda loodud arvutisse enda loodud operatsioonisüsteemi - paneelitäie nupplülitite abil , kaheksandsüsteemis ja ilma ühegi veata ... Tõeliste Programmeeri- jate ajastu kestis arvuti algusaegadest kuni <arv>ndate alguseni . See oli pakett-töötluse ajajärk - arvutile anti hunnik materjali ette ja lasti see siis rahulikult läbi närida . Unixi saabumisega <arv>. aastal hakkas see periood lõpule jõudma , kuid tänasesse häkkerifolkloori on sellest ajast jõudnud mitmed elemendid , tuntuimana neist Murphy seadused . Järgmine etapp on seotud MITi arvutilaboriga , mis koondus seal <arv>. aastal käivitatud arvuti PDP-<arv> ümber . Sellest ajast pärineb ka “ hacker ” selle praeguses tähenduses . Kujunesid esimesed meililistid ja kogukonnad , hakkas kujunema omapärane “ folkloor ” . Vastavalt tollasele ARPAnetile kujunesid ka häkkerite koondumiskohad USA ida- ja läänerannikul : MIT , Stanford , UCLA . Unixi loomisega tuli põhjapanev muutus - tarkvara muutus liikuvaks ja sai omaette üksuseks . Unixi häkkerite kogukond eraldus vanemast PDP ja VAXi seltskonnast ning vanemast häkkerifolkloorist tuntud “ ususõjad ” Unixi kasutajate ja “ vana kooli meeste ” vahel toimusid just sel perioodil . Seitsmekümnendate keskel ilmus veel kolmaski rühmitus - BASICuga ( Fuhh ! Öäk ! ütlesid seepeale kõik teised ) “ töötavad ” noored häkkerid , kes kasutasid üha enam esile kerkivaid miniarvuteid . Kaheksakümnendad tõid kaasa murrangu - suur osa seni riigi toel tegutsenud projekte lõpetas töö , “ viimaseks tõeliseks häkkeriks ” ( nimetus , mis õnneks ei pidanud paika ) nimetatud Richard Stallman asutas vastukaaluks pealetungivale kommertsile vaba tarkvara fondi ( Free Software Foundation ) ja üritas jätkata vaba tarkvara loomist , keskendudes vaba Unixi ( mida ta nimetas GNU ehk Gnu's Not Unix ) loomisele . Kommerts-Unixite osas olid peamised konkurendid BSD/Sun ning AT &amp; T , mis hiljem aga üksteisele tunduvalt lähenesid . Tekkiv PC-kogukond läks kohe alguses DOS/Windows-tarkvara kaudu ühe firma diktaadi alla , välistades suure osa häkkerite osaluse selles . Näis , nagu oleks häkkerikultuur sunnitud taanduma tarkvaratööstuse ees . Mis aga sai <arv>. aastal , on teada . Esmakordselt tekkis reaalne šanss realiseerida Unixi suured võimalused tasuta tarkvarana odava ja laia levikuga riistvara peal . Lisaks Linuxile sai samal ajal alguse ka BSD Unixi vabade kloonide loomine FreeBSD , NetBSD ja OpenBSD näol . Põhjuseks , miks Linux saavutas suurema populaarsuse , on ilmselt erinevas arendusmudelis - BSD kloone arendas sarnaselt kommertsprojektidega üks kinnine , tihedalt omavahel seotud seltskond , Linux arenes aga sporaadiliselt kogu fännide kogukonna osavõtul . Linux pani reaalse aluse tervele uuele tarkvaramudelile , mida FSF oli seni suutnud vaid osaliselt välja käia - vabale tarkvarale . Ühtlasi sai uue hoo sisse <arv>ndate vaimu edasi kandev häkkerite seltskond . Kõigile üllatusena on esitatud tõsine väljakutse senistele tarkvaramaailma valitsejatele ning lähitulevik toob ilmselt kaasa hulga huvitavaid arenguid . HÄKKERINATUURIST Häkker on arenenud kassist . Või ka ümberpöördult , nagu seda ütleb Eric Raymond : häkkerid eelistavad kasse koertele , sest kassil on häkkeri loomus . Häkker on iseteadev , veidi elitaarne , kuid samas kohe ka anarhiani demokraatlik - teise inimese positsiooni määrab häkkeri jaoks üksnes tolle iseloom ja teadmised , mitte aga rikkus , välimus või sotsiaalne staatus . Säärane kompromissitus on ilmselt ka põhjuseks , miks rikkaid häkkereid on suhteliselt vähe . Häkkerid ei taotle sotsiaalset heakskiitu . Häkker on sageli üksik inimene , kuid teisalt ei välista see natuur ka perekonda ( võrgufolkloori on ilmunud sellisedki dokumendid nagu Girl's Guide to Geek Guys ) . Kindlasti ei vali meeshäkker endale kaaslaseks beibet ega rikast ärinaist . Naishäkkerite puhul kohtab välist “ üleslöömist ” üliharva - pigem meenutavad nad Sandra Bullocki mängitud politseiplikat filmist “ Miss Congeniality ” . Kõige tipuks aga selgub , et nad ei vajagi seda välist aspekti . Häkker ei armasta võimu . Väga tihti suhtuvad häkkerid otseselt negatiivselt kõigesse , mis piirab inimese vaba vaimu - olgu siis tegu riigivõimu , kiriku või massimeediaga . Häkkerid võivad omavahel tuliselt kakelda , kuid löövad mõlemad otsekohe hambad sisse neid lahutama läinud politseinikule . Häkker hindab üle kõige intellekti ja originaalsust . Temast lahtisaamiseks pole kindlamat viisi kui panna ta , lips ( mida on nimetatud ka “ kägistusseadmeks , mis takistab vere pääsemist ajju ja kutsub seeläbi esile pöördumatuid muutusi ” ) kaelas , mingisse boksikuubikusse jaburaid rutiinseid ülesandeid lahendama . Samas on loomulikus keskkonnas töötav häkker sageli oma bossi rahaveski - sellest on viimasel ajal ka igasugu suhtekorraldajad aru saanud ning ilmunud on esimesed häkkeripidamise õpetusedki . Niisiis pole vahet , mis värvi on kass . Peaasi , et ta hiiri püüab . HÄKKERI ARUSAAMADEST Eric Raymond on välja toonud viis mõtteavaldust , mis enamikku häkkereid ühendavad . Need on järgmised : <arv>. Maailm on täis imelisi probleeme , mis ootavad lahendamist . Siin on rõhutatud asjaolu , et tasemele jõudmine eeldab pingutust ja pühendumist . Nagu sportlane treenib oma keha , nii peab häkker treenima vaimu . Mõnel juhul eeldab see ka loobumist mõnest meeldivast asjast . Häkker peab uskuma oma võimetesse ja mitte põrkama tagasi esimeselt takistuselt - sammhaaval võib jõuda ka suurte probleemide lahenduseni . <arv>. Ühtki probleemi ei tuleks lahendada kaks korda . Häkkerid peavad mõtlemisvõimelist aju ressursiks , mida ei tohi asjatult raisata . Jalgratta uuesti leiutamine on viimane lollus . See käib ka teiste inimeste ajude kohta - vältimaks jalgratta uuesti leiutamist , on iga häkkeri kohuseks jagada oma teadmisi ja infot , et teised häkkerid võiksid lahendada juba uusi probleeme . Häkkerikultuur ei eelda täielikku loobumist tasu nõudmisest , ehkki kõrgeimalt hinnatud on just suurte tasuta asjade loojad . Inimene peab saama süüa , riideid ja arvuteid ning toitma perekonda , seega ei ole tasuta töötegemine mingi nõue . Ei tohiks ainult täiesti unustada oma panuse andmist häkkerikogukonda . <arv>. Igavus ja nüridus on kurjast . Igavat ja nüri korduvat tööd ei tohiks häkkerile anda , see on ressursside raiskamine . See on masinate rida , seepärast tuleks nii enda kui teiste häkkerite töö maksimaalselt automatiseerida . Erandiks on juhus , kui häkker ise valib rutiinse töö - sel juhul on tal tarvis oma ajusid puhastada . Kuid seda ei tohiks iialgi kellelegi peale sundida . <arv>. Vabadus on hea . Igasugune käsutamine segab häkkerit probleemi lahendamisel ja on seega takistav tegur . Mitte et kogu autoriteet oleks halb - lapsi tuleb kasvatada ja kaakide koht on pogris . See on aga vabatahtlik leppimine , mitte peale surutud . <arv>. Suhtumine ei asenda kompetentsi . Õige suhtumine on hea , aga ei tee kellestki häkkerit ( nagu ei saa palja suhtumisega vormel <arv> piloodiks või kosmonaudiks ) . Tühi poosetamine paistab kohe läbi , kuid häkkerid austavad tõelist kompetentsi mis tahes alal . Lisaks ei tee paha arendada kontsentratsioonivõimet ja mõtteteravust . TEHNILINE POOL Eric Raymondi järgi on häkkeriks saamise tehnilised tingimused lühidalt järgmised : <arv>. Õpi programmeerima . See on häkkeri üks põhioskusi . Algajale soovitab Raymond Pythonit või Javat , edasijõudnuile C-d , C++-i , Perli ja LISPi . Muidugi ei saa siin <arv>% retsepti anda - igaühe jaoks võib lahendus olla erinev . <arv>. Hangi üks vaba Unix ja õpi seda kasutama . Vaba Unix kui kompleksne ja samas täiesti ligipääsetav operatsioonisüsteem on häkkeri jaoks möödapääsmatu töövahend ja ühtlasi õpikeskkond . Eric võrdleb DOSi , Windowsi või Maci taga häkkeriks püüdlejat inimesega , kes üritab tantsima õppida , raudrüü seljas . Ligipääs kõigile süsteemi funktsioonidele on primaarne , lisaks on Unix ka Interneti üks alustalasid . <arv>. Õpi kasutama veebi ja kirjutama HTMLi . Enamik häkkerikultuuri elutseb nurgatagustes , mitte peatänavaäärsetes supermarketites . Veeb on üheks suureks erandiks - häkkerilooming , mida teab nüüdseks pea iga inimene . Veebilehe tegema õppimine aga aitab kujuneda mitmel heal harjumusel , mis aitavad edaspidises arengus . Üheks eriti oluliseks punktiks on oskus kirjutada head ja korrektset emakeelset teksti . KUIDAS SAADA SUUREKS Nagu paljudes ürgkultuurides , kus raha ei tuntud , rajaneb ka häkkerikultuur eelkõige reputatsioonil . Igaühe lahendusi ja saavutusi hinnatakse kaaslaste poolt ning nemad on ka ainus instants , kes määrab konkreetse inimese positsiooni kogukonnas . Antropoloogiliselt võib häkkerikultuuri nimetada ka “ kingikultuuriks ” . Staatus ja reputatsioon ei tule mitte teiste üle domineerimisest , heast väljanägemisest või ihaldusväärsete asjade omamisest , vaid asjade äraandmisest . Häkker annab teistele oma aega , loovust ja töötulemusi ning saab vastu reputatsiooni ja respekti . Näide : Linus Torvaldsi mainimisel piisab vaid eesnimest - privileeg , mida on vähestel ( muidugi aitab kaasa ka küllalt vähelevinud eesnimi ) . Enim hinnatakse viit tegevust . <arv>. Loo vaba tarkvara - loo vahendeid , mis aitavad teisi häkkereid ja üldse teisi inimesi . Kõik ei pea Linuse kombel looma uut operatsioonisüsteemi - ka väiksemaid programme ja “ jubinaid ” on vaja . <arv>. Aita vaba tarkvara testida ja siluda - kui tegemiseni jõud ei küüni , siis hinnatakse vääriliselt ka abilisi , kes annavad tööle lõpliku lihvi . Algajale on jõukohane näiteks beetatestija amet . <arv>. Avalda kasulikku infot - suurte infosaitide pidajad on pea sama hinnatud kui vaba tarkvara loojad . <arv>. Aita hooldada infrastruktuuri - keegi peab vahel ka musta tööd tegema . Tuleb hooldada meililiste ja uudisegruppe , kirjutada lihtsaid juhendeid jne. Tõeliste tegijate juures on ka need tööd hinnas , sest nende tööde tänamatus on üldiselt teada . <arv>. Teeni ja tutvusta häkkerikultuuri - siia käib tutvustamine , infomaterjalide kirjutamine , akadeemiline tegevus ja palju muud . Lühidalt võib kasutada häkkeriks saamise protsessi kirjeldamiseks järgmist jaapani zeni klassikast pärit mõtet : TEE LEIDMISEKS OTSI MEISTER JÄRGI MEISTRIT KÄI KOOS MEISTRIGA MÕISTA MEISTRIT SAA MEISTRIKS ALLIKAID Raymond E. S. “ How To Become A Hacker ” . <hyperlink> Raymond E. S. “ A Brief History of Hackerdom ” . <hyperlink> The Jargon File v. <arv>.<arv>.<arv> <hyperlink> Stevenson , J. “ Hacker Culture ” . <hyperlink> Nerdiness , Geeks and Hacker Culture . <hyperlink> History of the OSI . <hyperlink> Löwgren , J. “ Hacker Culture(s) ” . <hyperlink> Leo Võhandu , Emeriitprofessor Kõigi muude ametite kõrval on maailmas olemas ka selline amet , mida võiks ristida nii : elukutse - mängude leiutaja . Uute mängude väljamõtlemine pole just kerge töö . Ülemaailmselt on tuntumad ehk sellised nimed nagu Robert Abbott ja Sid Sackson , kelle sulest on ilmunud mitmeid uute mängude raamatuid . Hea mäng tahab aastaid lihvimist , alles siis on ta korralikult turuküps . Mängudest teeme juttu eeskätt seepärast , et A &amp; A vastlanumbris peaks ikka olema midagi lõbusamat tõsisemate ja otseselt kasulike lugude kõrval . Mängud teritavad mõistust ja on head matemaatilise mõtteviisi arendajad . Mänge on igasuguseid , sest inimfantaasia on ju piiritu . Geomeetriliste kujundite osavalt ja eesmärgistatult kombineerimise oskust arendab näiteks väga hästi klassikaline mäng Tangram , kus ruudu seitsmeks tükiks jagamise järel saab tükkidest ehitada suure hulga erinevaid kujundeid . Olekski viimane aeg , et keegi Tangrami-mängimise kunsti jälle Eestiski käivitaks . Meie tänaseks teemaks on aga hoopis uuem mäng nimega Tantrix . Tantrixi mõtles <arv>. aastal välja endine Uus-Meremaa Backgammoni ( Nardõ ) meister Mike McManaway . IBMi arvutimehest sai elukutseline mängulevitaja . Tantrixi erinevaid variante on müüdud juba mitmeid miljoneid . Toimuvad isegi maailmameistrivõistlused ja avatud on mitmed Interneti-leheküljed , kust vaimutoitu leiab nii algaja kui maailmameister . Alustame mängu kirjeldamist kõige lihtsamast variandist , mida soovitatakse kõikidele lastele vanuses <arv> kuni <arv> aastat ! Nii et tegu on tõesti sobiliku vastlamänguga . Minu praktika näitab , et lapsed õpivad selle mängu kiiremini selgeks kui täiskasvanud . AVASTUS-TANTRIX Muide , see kümnenupuline Tantrixi variant on üpris vastne ja leiutati alles <arv>. aastal . Mängukomplektis on kümme kuusnurkset nuppu , millest igaühele joonistatud kolme eri värvi joonejupid . Meie kasutame siin joonte eristamiseks valget , halli ja musta värvi . Kuusnurkne nupu kuju on tasandi tihedaks katmiseks kõige sobivam . Mesilaskärje pesa pole ilmaasjata just kuusnurkne , aga sellest räägime juba mõni teine kord . Aadressilt <hyperlink> saab kümne nupu pildid siia kopeerida ! Mängu eesmärgiks on luua nendest nuppudest erinevaid mustreid . Mustrite loomine arendab tähelepanu , kombineerimisoskust ja strateegilist planeerimist . Mängu propageerijad arvavad , et juba kolmeaastane laps on võimeline üksi või koos teistega seda mängu mängima . Põhiliselt on laste puhul tegemist kahe mänguvariandiga . <arv>. Vaba mäng . Laps proovib ehitada võimalikult pikka ühevärvilist ahelat . Väga hea oleks , kui ta lõpuks jõuaks iga värviga omaette tulemuseni , kus kõik <arv> nuppu moodustavad ühtse pideva rivi . Praktika on näidanud , et taoline mäng on vägagi kasulik ja arendav ka erivajadustega laste jaoks . Loomulikult võib laps ise ka muid mustreid luua , kui ta vaid neid kirjeldada oskab . Nähtava pildi ( kujundi ) kirjeldamine on oluline oskus , mida peab harjutama . ( Tulemuse selgitamine pole alati sugugi lihtne töö ! ) <arv>. Kujundimäng Mängu korraldaja palub , et mängijad teeksid nuppudest etteantud kujundeid . See sunnib mängijaid otsima ja klapitama sobilikke nuppe . Alustuseks võib ja tuleb ülesandeks anda lihtsate kujundite loomise . Näiteks silmus , tee jne. Toome asja kohta paar näidet , siis on asi kohe selgem .  Väike silmus Väike silmus  Raudtee Raudtee pildil on on pidev must joon raudtee , mis kulgeb sildade alt läbi ja vahel sõidab ka maanteest üle . ( Siin on lapse käest paras küsida , et kuidas ta aru saab , kumb joon kummast üle läheb ! ) Toome veel peotäie kujundeid :  Ringjoon Madu-uss  Auguga silmus Armastav süda Nuppude tüüpe on ainult neli : paar , sild , lott ja kolmik .  Kujundite loomisel tuleb kohe sisse tuua korrektne punktiarvestus , mis kehtib ka keerukamate sportmängude korral . Iga nupp pikas rivis annab mängijale ühe punkti , iga nupp pikas kinnises silmuses annab kaks punkti ! Silmus on seega topelthinnaga . Iga lauale loodud kujundi puhul annab punkte ainult kõige kallima ahela või silmuse väärtus . Lisan omalt poolt , et kümnenupulise mänguvariandi puhul on kinnise silmuse loomise aeg keskmiselt <arv> minutit ( iga värvi puhul ! ) . TANTRIX INTERNETIS Kõige mõistlikum on muidugi algusest peale mängida Internetis . Täpsemini öeldes saab Inglis- maalt kopeerida proovi-CD lihtsa variandi suurusega <arv>,<arv> megabaiti . Selleks tuleb minna aadressile <hyperlink> ja ketas laadida enda arvutisse . Mäng installeerub automaatselt Windows/Program Files/Games kausta , nii et on mõnusalt kätte- saadav . Alustada soovitame demonstratsioonist ja siis asuda ise proovima , st. lihtsaid ülesandeid lahendama . Nupul klõpsamine paneb selle pöörlema ja kohalevedu on tavaline hiirega töö ! MÄNGU ÜLDISTUSED Siin kirjeldatud mängu variant on kõige lihtsam . Selles on ainult <arv> nuppu , aga algajale ( nagu minagi ! ) jätkub keerukust küllaga . Täielikus sportmängus on <arv> nuppu . Ometi ei muutu sisuliselt eriti midagi , sest igal nupul on parajasti kolm värvi ( üks värv on alati igal nupul puudu ! ) ja nupul olevate joonte paigutus on alati ühesugune . ( Nupp annab muidugi pöörata . ) Võrgus märksõna tantrix all ringi kolistades leiab suure hulga probleeme ( puzzles ) , mille keerukusaste on vägagi erinev . On probleeme , mille lahenduse leidmine võttis mitu aastat aega , ja on isegi selliseid probleeme , mille lahendust veel ei teatagi . Võrgus on üpris palju turniire ja interaktiivse mängimise võimalusi . Peamised mängumaad on Uus-Meremaa , Ungari , Austraalia , Soome , Inglismaa , Holland , Slovakkia , Rootsi , Prantsusmaa . Isegi Venemaal on väga hästi kirjutatud veebilehekülg olemas . Kes kavatseb sportliku mänguvariandiga jõudu katsuda , sellel soovitaksingi kõigepealt alustada aadressilt <hyperlink> Autor on sportmängu reeglid väga selgelt ja üheselt kirja pannud . LÕPETUSEKS Nendele , kes soovivad veidi pikemat metoodilist juhendit mängu kohta , ja eriti nendele , kes püüavad seda mängu kasutada hariduslike erivajadustega laste arendamiseks , soovitame eespool nimetatud veebileheküljelt <hyperlink> laadida enda arvutisse kõik kolm varianti . Koolivariandis on hea metoodiline juhend , kuidas hakata strateegiliselt mõtlema . Erivajadustega laste osas on ilusad eesmärkpildid , mida on paras ülesanneteks anda .